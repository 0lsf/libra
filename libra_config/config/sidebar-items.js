initSidebarItems({"constant":[["DEFAULT_JSON_RPC_PORT",""],["HANDSHAKE_VERSION","Current supported protocol negotiation handshake version."]],"enum":[["ConsensusProposerType",""],["DiscoveryMethod",""],["ExecutionCorrectnessService","Defines how execution correctness should be run"],["Identity",""],["RoleType",""],["SafetyRulesService","Defines how safety rules should be executed"],["SecureBackend",""],["Token","Tokens can either be directly within this config or stored somewhere on disk."],["WaypointConfig",""]],"struct":[["AdmissionControlConfig",""],["BaseConfig",""],["ConsensusConfig",""],["DebugInterfaceConfig",""],["ExecutionConfig",""],["GitHubConfig",""],["IdentityFromConfig","The identity is stored within the config."],["IdentityFromStorage","This represents an identity in a secure-storage as defined in NodeConfig::secure."],["KeyManagerConfig",""],["LeaderReputationConfig",""],["LoggerConfig",""],["MempoolConfig",""],["MetricsConfig",""],["NetworkConfig",""],["NetworkPeerInfo",""],["NetworkPeersConfig",""],["NodeConfig","Config pulls in configuration information from the config file. This is used to set up the nodes and configure various parameters. The config file is broken up into sections for each module so that only that module can be passed around"],["OnDiskStorageConfig",""],["ParseRoleError",""],["PeerNetworkId","Identifier of a node, represented as (network_id, peer_id)"],["RemoteExecutionService",""],["RemoteService",""],["RootPath",""],["RpcConfig",""],["SafetyRulesConfig",""],["SeedPeersConfig",""],["StateSyncConfig",""],["StorageConfig",""],["TestConfig",""],["TokenFromConfig",""],["TokenFromDisk",""],["UpstreamConfig",""],["VaultConfig",""]],"trait":[["PersistableConfig",""]],"type":[["UpstreamNetworkId","In general, a network ID is a PeerId that this node uses to uniquely identify a network it belongs to. This is equivalent to the `peer_id` field in the NetworkConfig of this NodeConfig"]]});