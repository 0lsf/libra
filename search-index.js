var searchIndex={};
searchIndex["accumulator"] = {"doc":"This module provides algorithms for accessing and updating…","i":[[3,"MerkleAccumulator","accumulator","In this live Merkle Accumulator algorithms.",null,null],[8,"HashReader","","Defines the interface between `MerkleAccumulator` and…",null,null],[10,"get","","Return `HashValue` carried by the node at `Position`.",0,[[["position"],["self"]],[["hashvalue"],["result",["hashvalue"]]]]],[11,"append","","Given an existing Merkle Accumulator (represented by…",1,[[["leafcount"],["r"]],["result"]]],[11,"get_proof","","Get proof of inclusion of the leaf at `leaf_index` in this…",1,[[["leafcount"],["r"],["u64"]],[["accumulatorproof"],["result",["accumulatorproof"]]]]],[11,"get_consistency_proof","","Gets a proof that shows the full accumulator is consistent…",1,[[["leafcount"],["r"]],[["accumulatorconsistencyproof"],["result",["accumulatorconsistencyproof"]]]]],[11,"get_range_proof","","Gets a proof that shows a range of leaves are part of the…",1,[[["leafcount"],["option",["u64"]],["r"],["u64"]],[["accumulatorrangeproof"],["result",["accumulatorrangeproof"]]]]],[11,"get_frozen_subtree_hashes","","From left to right, gets frozen subtree root hashes of the…",1,[[["leafcount"],["r"]],[["vec",["hashvalue"]],["result",["vec"]]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]]],"p":[[8,"HashReader"],[3,"MerkleAccumulator"]]};
searchIndex["admission_control_proto"] = {"doc":"","i":[[3,"SubmitTransactionResponse","admission_control_proto","Rust structure for SubmitTransactionResponse protobuf…",null,null],[12,"ac_status","","AC status returned to client if any - it can be one of:…",0,null],[12,"mempool_error","","Mempool error status if any.",0,null],[12,"vm_error","","VM error status if any.",0,null],[12,"validator_id","","The id of validator associated with this AC.",0,null],[4,"AdmissionControlStatus","","AC response status of submit_transaction to clients.",null,null],[13,"Accepted","","Validator accepted the transaction.",1,null],[13,"Blacklisted","","The sender is blacklisted.",1,null],[13,"Rejected","","The transaction is rejected, e.g. due to incorrect…",1,null],[0,"proto","","",null,null],[3,"AdmissionControlClientBlocking","admission_control_proto::proto","",null,null],[3,"AdmissionControlClientAsync","","",null,null],[0,"admission_control","","",null,null],[3,"AdmissionControlMsg","admission_control_proto::proto::admission_control","The request for submitting a transaction to an upstream…",null,null],[12,"message","","",2,null],[3,"SubmitTransactionRequest","","…",null,null],[12,"transaction","","Transaction submitted by user.",3,null],[3,"AdmissionControlStatus","","AC response status containing code and optionally an error…",null,null],[12,"code","","",4,null],[12,"message","","",4,null],[3,"SubmitTransactionResponse","","The response for transaction submission.",null,null],[12,"validator_id","","Public key(id) of the validator that processed this…",5,null],[12,"status","","The status of a transaction submission can either be a VM…",5,null],[4,"AdmissionControlStatusCode","","Additional statuses that are possible from admission…",null,null],[13,"Accepted","","Validator accepted the transaction.",6,null],[13,"Blacklisted","","The sender is blacklisted.",6,null],[13,"Rejected","","The transaction is rejected, e.g. due to incorrect…",6,null],[0,"admission_control_msg","","",null,null],[4,"Message","admission_control_proto::proto::admission_control::admission_control_msg","",null,null],[13,"SubmitTransactionRequest","","",7,null],[13,"SubmitTransactionResponse","","",7,null],[11,"encode","","",7,[[["self"],["b"]]]],[11,"merge","","",7,[[["u32"],["wiretype"],["b"],["option"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",7,[[["self"]],["usize"]]],[0,"submit_transaction_response","admission_control_proto::proto::admission_control","",null,null],[4,"Status","admission_control_proto::proto::admission_control::submit_transaction_response","The status of a transaction submission can either be a VM…",null,null],[13,"VmStatus","","",8,null],[13,"AcStatus","","",8,null],[13,"MempoolStatus","","",8,null],[11,"encode","","",8,[[["self"],["b"]]]],[11,"merge","","",8,[[["u32"],["wiretype"],["b"],["option"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",8,[[["self"]],["usize"]]],[0,"admission_control_client","admission_control_proto::proto::admission_control","Generated client implementations.",null,null],[3,"AdmissionControlClient","admission_control_proto::proto::admission_control::admission_control_client","…",null,null],[11,"connect","","Attempt to create a new client by connecting to a given…",9,[[["d"]]]],[11,"new","","",9,[[["t"]],["self"]]],[11,"with_interceptor","","",9,[[["t"]],["self"]]],[11,"submit_transaction","","Public API to submit transaction to a validator.",9,[[["self"]]]],[11,"update_to_latest_ledger","","This API is used to update the client to the latest ledger…",9,[[["self"]]]],[0,"admission_control_server","admission_control_proto::proto::admission_control","Generated server implementations.",null,null],[8,"AdmissionControl","admission_control_proto::proto::admission_control::admission_control_server","Generated trait containing gRPC methods that should be…",null,null],[10,"submit_transaction","","Public API to submit transaction to a validator.",10,[[["self"],["submittransactionrequest"],["request",["submittransactionrequest"]]],[["box",["future"]],["pin",["box"]]]]],[10,"update_to_latest_ledger","","This API is used to update the client to the latest ledger…",10,[[["request",["updatetolatestledgerrequest"]],["self"],["updatetolatestledgerrequest"]],[["box",["future"]],["pin",["box"]]]]],[11,"code","admission_control_proto::proto::admission_control","Returns the enum value of `code`, or the default if the…",4,[[["self"]],["admissioncontrolstatuscode"]]],[11,"set_code","","Sets `code` to the provided enum value.",4,[[["self"],["admissioncontrolstatuscode"]]]],[11,"is_valid","","Returns `true` if `value` is a variant of…",6,[[["i32"]],["bool"]]],[11,"from_i32","","Converts an `i32` to a `AdmissionControlStatusCode`, or…",6,[[["i32"]],[["admissioncontrolstatuscode"],["option",["admissioncontrolstatuscode"]]]]],[11,"new","admission_control_proto::proto","",11,[[["str"],["asref",["str"]],["u16"]],["self"]]],[11,"submit_transaction","","",11,[[["submittransactionrequest"],["self"]],[["result",["submittransactionresponse","status"]],["submittransactionresponse"],["status"]]]],[11,"update_to_latest_ledger","","",11,[[["self"],["updatetolatestledgerrequest"]],[["result",["updatetolatestledgerresponse","status"]],["status"],["updatetolatestledgerresponse"]]]],[11,"new","","",12,[[["str"],["asref",["str"]],["u16"]],["self"]]],[11,"submit_transaction","","",12,[[["submittransactionrequest"],["self"]]]],[11,"update_to_latest_ledger","","",12,[[["updatetolatestledgerrequest"],["self"]]]],[11,"from","admission_control_proto","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"into_request","","",0,[[],["request"]]],[11,"equivalent","","",0,[[["k"],["self"]],["bool"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"into_request","","",1,[[],["request"]]],[11,"equivalent","","",1,[[["k"],["self"]],["bool"]]],[11,"from","admission_control_proto::proto","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"into_request","","",11,[[],["request"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"into_request","","",12,[[],["request"]]],[11,"from","admission_control_proto::proto::admission_control","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"clear","","",2,[[["self"]]]],[11,"initialize","","",2,[[]]],[11,"into_request","","",2,[[],["request"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"clear","","",3,[[["self"]]]],[11,"initialize","","",3,[[]]],[11,"into_request","","",3,[[],["request"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"clear","","",4,[[["self"]]]],[11,"initialize","","",4,[[]]],[11,"into_request","","",4,[[],["request"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"clear","","",5,[[["self"]]]],[11,"initialize","","",5,[[]]],[11,"into_request","","",5,[[],["request"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"clear","","",6,[[["self"]]]],[11,"initialize","","",6,[[]]],[11,"into_request","","",6,[[],["request"]]],[11,"equivalent","","",6,[[["k"],["self"]],["bool"]]],[11,"from","admission_control_proto::proto::admission_control::admission_control_msg","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"into_request","","",7,[[],["request"]]],[11,"from","admission_control_proto::proto::admission_control::submit_transaction_response","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"into_request","","",8,[[],["request"]]],[11,"from","admission_control_proto::proto::admission_control::admission_control_client","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"into_request","","",9,[[],["request"]]],[11,"from","admission_control_proto::proto::admission_control","",4,[[["admissioncontrolstatus"]],["self"]]],[11,"from","","",5,[[["submittransactionresponse"]],["self"]]],[11,"clone","","",2,[[["self"]],["admissioncontrolmsg"]]],[11,"clone","admission_control_proto::proto::admission_control::admission_control_msg","",7,[[["self"]],["message"]]],[11,"clone","admission_control_proto::proto::admission_control","",3,[[["self"]],["submittransactionrequest"]]],[11,"clone","","",4,[[["self"]],["admissioncontrolstatus"]]],[11,"clone","","",5,[[["self"]],["submittransactionresponse"]]],[11,"clone","admission_control_proto::proto::admission_control::submit_transaction_response","",8,[[["self"]],["status"]]],[11,"clone","admission_control_proto::proto::admission_control","",6,[[["self"]],["admissioncontrolstatuscode"]]],[11,"clone","admission_control_proto::proto::admission_control::admission_control_client","",9,[[["self"]],["self"]]],[11,"clone","admission_control_proto::proto","",12,[[["self"]],["admissioncontrolclientasync"]]],[11,"clone","admission_control_proto","",1,[[["self"]],["admissioncontrolstatus"]]],[11,"clone","","",0,[[["self"]],["submittransactionresponse"]]],[11,"default","admission_control_proto::proto::admission_control","",2,[[],["admissioncontrolmsg"]]],[11,"default","","",3,[[],["submittransactionrequest"]]],[11,"default","","",4,[[],["admissioncontrolstatus"]]],[11,"default","","",5,[[],["submittransactionresponse"]]],[11,"default","","",6,[[],["admissioncontrolstatuscode"]]],[11,"cmp","","",6,[[["self"],["admissioncontrolstatuscode"]],["ordering"]]],[11,"eq","","",2,[[["admissioncontrolmsg"],["self"]],["bool"]]],[11,"ne","","",2,[[["admissioncontrolmsg"],["self"]],["bool"]]],[11,"eq","admission_control_proto::proto::admission_control::admission_control_msg","",7,[[["message"],["self"]],["bool"]]],[11,"ne","","",7,[[["message"],["self"]],["bool"]]],[11,"eq","admission_control_proto::proto::admission_control","",3,[[["submittransactionrequest"],["self"]],["bool"]]],[11,"ne","","",3,[[["submittransactionrequest"],["self"]],["bool"]]],[11,"eq","","",4,[[["self"],["admissioncontrolstatus"]],["bool"]]],[11,"ne","","",4,[[["self"],["admissioncontrolstatus"]],["bool"]]],[11,"eq","","",5,[[["submittransactionresponse"],["self"]],["bool"]]],[11,"ne","","",5,[[["submittransactionresponse"],["self"]],["bool"]]],[11,"eq","admission_control_proto::proto::admission_control::submit_transaction_response","",8,[[["self"],["status"]],["bool"]]],[11,"ne","","",8,[[["self"],["status"]],["bool"]]],[11,"eq","admission_control_proto::proto::admission_control","",6,[[["self"],["admissioncontrolstatuscode"]],["bool"]]],[11,"eq","admission_control_proto","",1,[[["admissioncontrolstatus"],["self"]],["bool"]]],[11,"ne","","",1,[[["admissioncontrolstatus"],["self"]],["bool"]]],[11,"eq","","",0,[[["submittransactionresponse"],["self"]],["bool"]]],[11,"ne","","",0,[[["submittransactionresponse"],["self"]],["bool"]]],[11,"partial_cmp","admission_control_proto::proto::admission_control","",6,[[["self"],["admissioncontrolstatuscode"]],[["option",["ordering"]],["ordering"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","admission_control_proto::proto::admission_control::admission_control_msg","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","admission_control_proto::proto::admission_control","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","admission_control_proto::proto::admission_control::submit_transaction_response","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","admission_control_proto::proto::admission_control","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","admission_control_proto::proto::admission_control::admission_control_client","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","admission_control_proto","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"hash","admission_control_proto::proto::admission_control","",6,[[["self"],["__h"]]]],[11,"try_from","admission_control_proto","",1,[[["admissioncontrolstatus"]],["result"]]],[11,"try_from","","",0,[[["submittransactionresponse"]],["result"]]],[11,"encode_raw","admission_control_proto::proto::admission_control","",2,[[["self"],["b"]]]],[11,"merge_field","","",2,[[["u32"],["wiretype"],["b"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",2,[[["self"]],["usize"]]],[11,"clear","","",2,[[["self"]]]],[11,"encode_raw","","",3,[[["self"],["b"]]]],[11,"merge_field","","",3,[[["u32"],["wiretype"],["b"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",3,[[["self"]],["usize"]]],[11,"clear","","",3,[[["self"]]]],[11,"encode_raw","","",4,[[["self"],["b"]]]],[11,"merge_field","","",4,[[["u32"],["wiretype"],["b"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",4,[[["self"]],["usize"]]],[11,"clear","","",4,[[["self"]]]],[11,"encode_raw","","",5,[[["self"],["b"]]]],[11,"merge_field","","",5,[[["u32"],["wiretype"],["b"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",5,[[["self"]],["usize"]]],[11,"clear","","",5,[[["self"]]]]],"p":[[3,"SubmitTransactionResponse"],[4,"AdmissionControlStatus"],[3,"AdmissionControlMsg"],[3,"SubmitTransactionRequest"],[3,"AdmissionControlStatus"],[3,"SubmitTransactionResponse"],[4,"AdmissionControlStatusCode"],[4,"Message"],[4,"Status"],[3,"AdmissionControlClient"],[8,"AdmissionControl"],[3,"AdmissionControlClientBlocking"],[3,"AdmissionControlClientAsync"]]};
searchIndex["admission_control_service"] = {"doc":"Admission Control","i":[[0,"admission_control_service","admission_control_service","AC gRPC service. Admission Control (AC) is a module acting…",null,null],[3,"AdmissionControlService","admission_control_service::admission_control_service","Struct implementing trait (service handle)…",null,null],[11,"new","","Constructs a new AdmissionControlService instance.",0,[[["mempoolclientsender"],["arc",["dbreader"]],["dbreader"]],["self"]]],[11,"bootstrap","","Creates and spins up AdmissionControlService on runtime…",0,[[["nodeconfig"],["arc",["dbreader"]],["mempoolclientsender"],["dbreader"]],["runtime"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"into_request","","",0,[[],["request"]]],[11,"clone","","",0,[[["self"]],["admissioncontrolservice"]]],[11,"submit_transaction","","Submit a transaction to the validator this AC instance…",0,[[["request",["submittransactionrequest"]],["self"],["submittransactionrequest"]],[["pin",["box"]],["box",["future"]]]]],[11,"update_to_latest_ledger","","This API is used to update the client to the latest ledger…",0,[[["request",["updatetolatestledgerrequest"]],["self"],["updatetolatestledgerrequest"]],[["box",["future"]],["pin",["box"]]]]]],"p":[[3,"AdmissionControlService"]]};
searchIndex["backup_restore"] = {"doc":"","i":[[5,"backup_account_state","backup_restore","",null,[[["storagereadserviceclient"],["usize"],["version"]]]],[0,"adapter","","",null,null],[0,"local_storage","backup_restore::adapter","",null,null],[3,"LocalStorage","backup_restore::adapter::local_storage","A storage backend that stores everything in a local…",null,null],[11,"new","","",0,[[["pathbuf"]],["self"]]],[8,"Adapter","backup_restore::adapter","`Adapter` defines the interfaces of the storage backend we…",null,null],[10,"write_new_file","","Writes the content of the file to the storage backend and…",1,[[["self"]],[["pin",["box"]],["box",["future"]]]]],[10,"read_file_content","","Returns the content of the file in a stream.",1,[[["filehandle"]],[["result",["vec"]],["boxstream",["result"]]]]],[6,"FileHandle","backup_restore","",null,null],[11,"from","backup_restore::adapter::local_storage","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"into_request","","",0,[[],["request"]]],[11,"write_new_file","","",0,[[["self"]],[["pin",["box"]],["box",["future"]]]]],[11,"read_file_content","","",0,[[["filehandle"]],[["result",["vec"]],["boxstream",["result"]]]]]],"p":[[3,"LocalStorage"],[8,"Adapter"]]};
searchIndex["borrow_graph"] = {"doc":"","i":[[0,"graph","borrow_graph","",null,null],[3,"BorrowGraph","borrow_graph::graph","",null,null],[11,"new","","creates an empty borrow graph",0,[[],["self"]]],[11,"is_mutable","","checks if the given reference is mutable or not",0,[[["refid"],["self"]],["bool"]]],[11,"new_ref","","Adds a new reference to the borrow graph Fails if the id…",0,[[["self"],["refid"],["bool"]]]],[11,"borrowed_by","","Return the references borrowing the `id` reference The…",0,[[["refid"],["self"]]]],[11,"between_edges","","Return the edges between parent and child",0,[[["refid"],["self"]],["vec"]]],[11,"out_edges","","Return the outgoing edges from id",0,[[["refid"],["self"]],["vec"]]],[11,"in_edges","","Return the incoming edges into id",0,[[["refid"],["self"]],["vec"]]],[11,"add_strong_borrow","","Add a strong (exact) epsilon borrow from `parent_id` to…",0,[[["self"],["refid"],["loc"]]]],[11,"add_strong_field_borrow","","Add a strong (exact) field borrow from `parent_id` to…",0,[[["lbl"],["self"],["refid"],["loc"]]]],[11,"add_weak_borrow","","Add a weak (prefix) epsilon borrow from `parent_id` to…",0,[[["self"],["refid"],["loc"]]]],[11,"add_weak_field_borrow","","Add a weak (prefix) field borrow from `parent_id` to…",0,[[["lbl"],["self"],["refid"],["loc"]]]],[11,"release","","Remove reference `id` from the graph Fixes any transitive…",0,[[["self"],["refid"]]]],[11,"leq","","checks if `self` covers `other`",0,[[["self"]],["bool"]]],[11,"remap_refs","","Utility for remapping the reference ids according the…",0,[[["self"],["btreemap"]]]],[11,"join","","Joins other into self It adds only 'unmatched' edges from…",0,[[["self"]],["self"]]],[11,"contains_id","","Checks if the current reference is in the graph",0,[[["refid"],["self"]],["bool"]]],[11,"all_refs","","Returns all ref ids in the map",0,[[["self"]],[["refid"],["btreeset",["refid"]]]]],[11,"display","","Prints out a view of the borrow graph",0,[[["self"]]]],[0,"references","borrow_graph","",null,null],[3,"RefID","borrow_graph::references","Unique identifier for the reference",null,null],[11,"new","","Creates a new reference id from the given number",1,[[["usize"]],["self"]]],[11,"from","borrow_graph::graph","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","borrow_graph::references","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"clone","borrow_graph::graph","",0,[[["self"]],["borrowgraph"]]],[11,"clone","borrow_graph::references","",1,[[["self"]],["refid"]]],[11,"default","borrow_graph::graph","",0,[[],["borrowgraph"]]],[11,"cmp","borrow_graph::references","",1,[[["self"],["refid"]],["ordering"]]],[11,"eq","borrow_graph::graph","",0,[[["borrowgraph"],["self"]],["bool"]]],[11,"ne","","",0,[[["borrowgraph"],["self"]],["bool"]]],[11,"eq","borrow_graph::references","",1,[[["self"],["refid"]],["bool"]]],[11,"ne","","",1,[[["self"],["refid"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["refid"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",1,[[["self"],["refid"]],["bool"]]],[11,"le","","",1,[[["self"],["refid"]],["bool"]]],[11,"gt","","",1,[[["self"],["refid"]],["bool"]]],[11,"ge","","",1,[[["self"],["refid"]],["bool"]]],[11,"fmt","borrow_graph::graph","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","borrow_graph::references","",1,[[["formatter"],["self"]],["result"]]]],"p":[[3,"BorrowGraph"],[3,"RefID"]]};
searchIndex["bounded_executor"] = {"doc":"A bounded tokio [`Handle`]. Only a bounded number of tasks…","i":[[3,"BoundedExecutor","bounded_executor","",null,null],[11,"new","","Create a new `BoundedExecutor` from an existing tokio…",0,[[["usize"],["handle"]],["self"]]],[11,"spawn","","Spawn a [`Future`] on the `BoundedExecutor`. This function…",0,[[["self"],["f"]]]],[11,"try_spawn","","Try to spawn a [`Future`] on the `BoundedExecutor`. If the…",0,[[["self"],["f"]],[["joinhandle"],["result",["joinhandle"]]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["boundedexecutor"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[3,"BoundedExecutor"]]};
searchIndex["bytecode_source_map"] = {"doc":"","i":[[0,"mapping","bytecode_source_map","",null,null],[3,"SourceMapping","bytecode_source_map::mapping","An object that associates source code with compiled…",null,null],[12,"bytecode","","",0,null],[12,"source_map","","",0,null],[12,"source_code","","",0,null],[12,"marks","","",0,null],[11,"new","","",0,[[["sourcemap"],["compiledmodule"]],["self"]]],[11,"new_from_script","","",0,[[["sourcemap"],["compiledscript"]],["self"]]],[11,"with_marks","","",0,[[["self"],["markedsourcemapping"]]]],[11,"with_source_code","","",0,[[["self"]]]],[0,"marking","bytecode_source_map","",null,null],[3,"FunctionMarking","bytecode_source_map::marking","A data structure used to track any markings or extra…",null,null],[12,"code_offsets","","",1,null],[12,"type_param_offsets","","",1,null],[3,"StructMarking","","A data structure used to track any markings or extra…",null,null],[12,"fields","","",2,null],[12,"type_param_offsets","","",2,null],[3,"MarkedSourceMapping","","A data structure that contains markings for both functions…",null,null],[11,"new","","",1,[[],["self"]]],[11,"code_offset","","",1,[[["self"],["codeoffset"],["string"]]]],[11,"type_param","","",1,[[["self"],["usize"],["string"]]]],[11,"new","","",2,[[],["self"]]],[11,"field","","",2,[[["self"],["membercount"],["string"]]]],[11,"type_param","","",2,[[["self"],["usize"],["string"]]]],[11,"new","","",3,[[],["self"]]],[11,"mark_code_offset","","",3,[[["functiondefinitionindex"],["codeoffset"],["self"],["string"]]]],[11,"mark_function_type_param","","",3,[[["functiondefinitionindex"],["usize"],["self"],["string"]]]],[11,"mark_struct_field","","",3,[[["structdefinitionindex"],["self"],["membercount"],["string"]]]],[11,"mark_struct_type_param","","",3,[[["structdefinitionindex"],["usize"],["self"],["string"]]]],[0,"source_map","bytecode_source_map","",null,null],[3,"StructSourceMap","bytecode_source_map::source_map","",null,null],[12,"decl_location","","The source declaration location of the struct",4,null],[12,"type_parameters","","Important: type parameters need to be added in the order…",4,null],[12,"fields","","Note that fields to a struct source map need to be added…",4,null],[3,"FunctionSourceMap","","",null,null],[12,"decl_location","","The source location for the definition of this entire…",5,null],[12,"type_parameters","","Note that type parameters need to be added in the order of…",5,null],[12,"parameters","","",5,null],[12,"locals","","The index into the vector is the locals index. The…",5,null],[12,"nops","","A map to the code offset for a corresponding nop. Nop's…",5,null],[12,"code_map","","The source location map for the function body.",5,null],[3,"SourceMap","","",null,null],[12,"module_name_opt","","The name <address.module_name> for module that this source…",6,null],[5,"remap_locations_source_name","","",null,[[["sourcename"],["clone"],["eq"]],[["clone"],["sourcename"],["eq"]]]],[5,"remap_locations_source_map","","",null,[[["vec",["sourcemap"]],["sourcemap"]],[["sourcemap"],["vec",["sourcemap"]]]]],[6,"SourceName","","",null,null],[11,"new","","",4,[[["location"]],["self"]]],[11,"add_type_parameter","","",4,[[["self"],["sourcename"]]]],[11,"get_type_parameter_name","","",4,[[["self"],["usize"]],[["option",["sourcename"]],["sourcename"]]]],[11,"add_field_location","","",4,[[["self"],["location"]]]],[11,"get_field_location","","",4,[[["membercount"],["self"]],["option"]]],[11,"dummy_struct_map","","",4,[[["compiledmodule"],["location"],["self"],["structdefinition"]],["result"]]],[11,"remap_locations","","",4,[[],[["clone"],["eq"],["structsourcemap"]]]],[11,"new","","",5,[[["location"]],["self"]]],[11,"add_type_parameter","","",5,[[["self"],["sourcename"]]]],[11,"get_type_parameter_name","","",5,[[["self"],["usize"]],[["option",["sourcename"]],["sourcename"]]]],[11,"add_code_mapping","","A single source-level instruction may possibly map to a…",5,[[["self"],["codeoffset"],["location"]]]],[11,"add_nop_mapping","","Record the code offset for an Nop label",5,[[["self"],["noplabel"],["codeoffset"]]]],[11,"add_local_mapping","","",5,[[["self"],["sourcename"]]]],[11,"add_parameter_mapping","","",5,[[["self"],["sourcename"]]]],[11,"get_code_location","","Recall that we are using a segment tree. We therefore…",5,[[["self"],["codeoffset"]],["option"]]],[11,"get_parameter_or_local_name","","",5,[[["self"],["u64"]],[["option",["sourcename"]],["sourcename"]]]],[11,"make_local_name_to_index_map","","",5,[[["self"]],[["string"],["btreemap",["string","localindex"]],["localindex"]]]],[11,"dummy_function_map","","",5,[[["compiledmodule"],["location"],["functiondefinition"],["self"]],["result"]]],[11,"remap_locations","","",5,[[],[["functionsourcemap"],["clone"],["eq"]]]],[11,"new","","",6,[[["option",["qualifiedmoduleident"]],["qualifiedmoduleident"]],["self"]]],[11,"add_top_level_function_mapping","","",6,[[["self"],["functiondefinitionindex"],["location"]],["result"]]],[11,"add_function_type_parameter_mapping","","",6,[[["self"],["functiondefinitionindex"],["sourcename"]],["result"]]],[11,"get_function_type_parameter_name","","",6,[[["functiondefinitionindex"],["self"],["usize"]],[["sourcename"],["result",["sourcename"]]]]],[11,"add_code_mapping","","",6,[[["functiondefinitionindex"],["codeoffset"],["location"],["self"]],["result"]]],[11,"add_nop_mapping","","",6,[[["functiondefinitionindex"],["noplabel"],["codeoffset"],["self"]],["result"]]],[11,"get_code_location","","Given a function definition and a code offset within that…",6,[[["functiondefinitionindex"],["self"],["codeoffset"]],["result"]]],[11,"add_local_mapping","","",6,[[["self"],["functiondefinitionindex"],["sourcename"]],["result"]]],[11,"add_parameter_mapping","","",6,[[["self"],["functiondefinitionindex"],["sourcename"]],["result"]]],[11,"get_parameter_or_local_name","","",6,[[["functiondefinitionindex"],["self"],["u64"]],[["sourcename"],["result",["sourcename"]]]]],[11,"add_top_level_struct_mapping","","",6,[[["self"],["structdefinitionindex"],["location"]],["result"]]],[11,"add_struct_field_mapping","","",6,[[["self"],["structdefinitionindex"],["location"]],["result"]]],[11,"get_struct_field_name","","",6,[[["structdefinitionindex"],["self"],["membercount"]],["option"]]],[11,"add_struct_type_parameter_mapping","","",6,[[["self"],["structdefinitionindex"],["sourcename"]],["result"]]],[11,"get_struct_type_parameter_name","","",6,[[["structdefinitionindex"],["self"],["usize"]],[["sourcename"],["result",["sourcename"]]]]],[11,"get_function_source_map","","",6,[[["functiondefinitionindex"],["self"]],[["functionsourcemap"],["result",["functionsourcemap"]]]]],[11,"get_struct_source_map","","",6,[[["structdefinitionindex"],["self"]],[["result",["structsourcemap"]],["structsourcemap"]]]],[11,"dummy_from_module","","Create a 'dummy' source map for a compiled module. This is…",6,[[["compiledmodule"],["location"]],["result"]]],[11,"dummy_from_script","","",6,[[["compiledscript"],["location"]],["result"]]],[11,"remap_locations","","",6,[[],[["sourcemap"],["clone"],["eq"]]]],[0,"utils","bytecode_source_map","",null,null],[3,"OwnedLoc","bytecode_source_map::utils","",null,null],[5,"source_map_from_file","","",null,[[["path"]],[["sourcemap"],["result",["sourcemap"]]]]],[5,"render_errors","","",null,[[["sourcemapping"],["errors"]],["result"]]],[5,"create_diagnostic","","",null,[[["fileid"],["error"]],["diagnostic"]]],[5,"remap_owned_loc_to_loc","","",null,[[["sourcemap",["ownedloc"]],["ownedloc"]],[["loc"],["sourcemap",["loc"]]]]],[6,"Error","","",null,null],[6,"Errors","","",null,null],[11,"from","bytecode_source_map::mapping","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","bytecode_source_map::marking","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"clear","","",1,[[["self"]]]],[11,"initialize","","",1,[[]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"clear","","",2,[[["self"]]]],[11,"initialize","","",2,[[]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"clear","","",3,[[["self"]]]],[11,"initialize","","",3,[[]]],[11,"from","bytecode_source_map::source_map","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"test_only_hash","","",4,[[["self"]],["hashvalue"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"test_only_hash","","",5,[[["self"]],["hashvalue"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"test_only_hash","","",6,[[["self"]],["hashvalue"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","bytecode_source_map::utils","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"test_only_hash","","",7,[[["self"]],["hashvalue"]]],[11,"vzip","","",7,[[],["v"]]],[11,"clear","","",7,[[["self"]]]],[11,"initialize","","",7,[[]]],[11,"clone","bytecode_source_map::source_map","",4,[[["self"]],["structsourcemap"]]],[11,"clone","","",5,[[["self"]],["functionsourcemap"]]],[11,"clone","","",6,[[["self"]],["sourcemap"]]],[11,"clone","bytecode_source_map::utils","",7,[[["self"]],["ownedloc"]]],[11,"default","bytecode_source_map::marking","",1,[[],["functionmarking"]]],[11,"default","","",2,[[],["structmarking"]]],[11,"default","","",3,[[],["markedsourcemapping"]]],[11,"default","bytecode_source_map::utils","",7,[[],["ownedloc"]]],[11,"eq","","",7,[[["ownedloc"],["self"]],["bool"]]],[11,"ne","","",7,[[["ownedloc"],["self"]],["bool"]]],[11,"fmt","bytecode_source_map::mapping","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","bytecode_source_map::marking","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","bytecode_source_map::source_map","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","bytecode_source_map::utils","",7,[[["formatter"],["self"]],["result"]]],[11,"deserialize","bytecode_source_map::source_map","",4,[[["__d"]],["result"]]],[11,"deserialize","","",5,[[["__d"]],["result"]]],[11,"deserialize","","",6,[[["__d"]],["result"]]],[11,"deserialize","bytecode_source_map::utils","",7,[[["__d"]],["result"]]],[11,"serialize","bytecode_source_map::source_map","",4,[[["self"],["__s"]],["result"]]],[11,"serialize","","",5,[[["self"],["__s"]],["result"]]],[11,"serialize","","",6,[[["self"],["__s"]],["result"]]],[11,"serialize","bytecode_source_map::utils","",7,[[["self"],["__s"]],["result"]]]],"p":[[3,"SourceMapping"],[3,"FunctionMarking"],[3,"StructMarking"],[3,"MarkedSourceMapping"],[3,"StructSourceMap"],[3,"FunctionSourceMap"],[3,"SourceMap"],[3,"OwnedLoc"]]};
searchIndex["bytecode_verifier"] = {"doc":"Verifies bytecode sanity.","i":[[0,"absint","bytecode_verifier","",null,null],[3,"BlockInvariant","bytecode_verifier::absint","",null,null],[12,"pre","","Precondition of the block",0,null],[12,"post","","Postcondition of the block",0,null],[4,"JoinResult","","",null,null],[13,"Changed","","",1,null],[13,"Unchanged","","",1,null],[4,"BlockPostcondition","","",null,null],[13,"Unprocessed","","Block not yet analyzed",2,null],[13,"Success","","Analyzing block was successful TODO might carry post state…",2,null],[13,"Error","","Analyzing block resulted in an error",2,null],[6,"InvariantMap","","A map from block id's to the pre/post of each block after…",null,null],[8,"AbstractDomain","","Trait for finite-height abstract domains. Infinite height…",null,null],[10,"join","","",3,[[["self"],["self"]],["joinresult"]]],[8,"TransferFunctions","","Take a pre-state + instruction and mutate it to produce a…",null,null],[16,"State","","",4,null],[16,"AnalysisError","","",4,null],[10,"execute","","Execute local@instr found at index local@index in the…",4,[[["bytecode"],["usize"],["self"]],["result"]]],[8,"AbstractInterpreter","","",null,null],[11,"analyze_function","","Analyze procedure local@function_view starting from…",5,[[["functiondefinitionview"],["controlflowgraph"],["self"]],["invariantmap"]]],[11,"execute_block","","",5,[[["blockid"],["controlflowgraph"],["self"],["codeunit"]],["result"]]],[0,"acquires_list_verifier","bytecode_verifier","This module implements a checker for verifying properties…",null,null],[3,"AcquiresVerifier","bytecode_verifier::acquires_list_verifier","",null,null],[11,"verify","","",6,[[["functiondefinition"],["compiledmodule"]],["vmresult"]]],[0,"check_duplication","bytecode_verifier","This module implements a checker for verifying that each…",null,null],[3,"DuplicationChecker","bytecode_verifier::check_duplication","",null,null],[11,"new","","",7,[[["compiledmodule"]],["self"]]],[11,"verify","","",7,[[],["vmresult"]]],[0,"code_unit_verifier","bytecode_verifier","This module implements the checker for verifying…",null,null],[3,"CodeUnitVerifier","bytecode_verifier::code_unit_verifier","",null,null],[11,"verify","","",8,[[["compiledmodule"]],["vmresult"]]],[0,"constants","bytecode_verifier","This module implements a checker for verifying that - a…",null,null],[3,"ConstantsChecker","bytecode_verifier::constants","",null,null],[11,"new","","",9,[[["compiledmodule"]],["self"]]],[11,"verify","","",9,[[],["vmresult"]]],[11,"verify_constant","","",9,[[["constant"],["self"],["usize"]],["vmresult"]]],[11,"verify_constant_type","","",9,[[["signaturetoken"],["self"],["usize"]],["vmresult"]]],[11,"verify_constant_data","","",9,[[["constant"],["self"],["usize"]],["vmresult"]]],[0,"control_flow","bytecode_verifier","This module implements a checker for verifies control…",null,null],[5,"verify","bytecode_verifier::control_flow","",null,[[["compiledmodule"],["functiondefinition"]],["vmresult"]]],[0,"control_flow_graph","bytecode_verifier","This module defines the control-flow graph uses for…",null,null],[3,"VMControlFlowGraph","bytecode_verifier::control_flow_graph","The control flow graph that we build from the bytecode.",null,null],[6,"BlockId","","",null,null],[8,"ControlFlowGraph","","A trait that specifies the basic requirements for a CFG",null,null],[10,"block_start","","Start index of the block ID in the bytecode vector",10,[[["blockid"],["self"]],["codeoffset"]]],[10,"block_end","","End index of the block ID in the bytecode vector",10,[[["blockid"],["self"]],["codeoffset"]]],[10,"successors","","Successors of the block ID in the bytecode vector",10,[[["blockid"],["self"]],["vec"]]],[10,"instr_indexes","","Iterator over the indexes of instructions in this block",10,[[["blockid"],["self"]],[["box",["iterator"]],["iterator"]]]],[10,"blocks","","Return an iterator over the blocks of the CFG",10,[[["self"]],[["vec",["blockid"]],["blockid"]]]],[10,"num_blocks","","Return the number of blocks (vertices) in the control flow…",10,[[["self"]],["u16"]]],[10,"entry_block_id","","Return the id of the entry block for this control-flow…",10,[[["self"]],["blockid"]]],[11,"new","","",11,[[],["self"]]],[11,"display","","",11,[[["self"]]]],[11,"reachable_from","","",11,[[["blockid"],["self"]],[["vec",["blockid"]],["blockid"]]]],[0,"instantiation_loops","bytecode_verifier","This implements an algorithm that detects loops during the…",null,null],[3,"InstantiationLoopChecker","bytecode_verifier::instantiation_loops","",null,null],[11,"new","","",12,[[["compiledmodule"]],["self"]]],[11,"verify","","",12,[[],["vmresult"]]],[0,"locals_safety","bytecode_verifier","This module defines the transfer functions for verifying…",null,null],[5,"verify","bytecode_verifier::locals_safety","",null,[[["compiledmodule"],["functiondefinition"],["vmcontrolflowgraph"]],["vmresult"]]],[0,"reference_safety","bytecode_verifier","This module defines the transfer functions for verifying…",null,null],[5,"verify","bytecode_verifier::reference_safety","",null,[[["compiledmodule"],["functiondefinition"],["vmcontrolflowgraph"]],["vmresult"]]],[0,"resolver","bytecode_verifier","This module implements a resolver for importing a…",null,null],[3,"Resolver","bytecode_verifier::resolver","Resolution context for importing types",null,null],[11,"new","","create a new instance of Resolver for module",13,[[],["self"]]],[11,"import_signature_token","","given a signature token in dependency, construct an…",13,[[["signaturetoken"],["self"]],[["signaturetoken"],["vmstatus"],["result",["signaturetoken","vmstatus"]]]]],[11,"import_signature","","",13,[[["signature"],["self"]],[["vmstatus"],["result",["signature","vmstatus"]],["signature"]]]],[11,"compare_cross_module_signatures","","",13,[[["signature"],["self"]],[["result",["vmstatus"]],["vmstatus"]]]],[0,"resources","bytecode_verifier","This module implements a checker for verifying that a…",null,null],[3,"ResourceTransitiveChecker","bytecode_verifier::resources","",null,null],[11,"new","","",14,[[["compiledmodule"]],["self"]]],[11,"verify","","",14,[[],["vmresult"]]],[0,"signature","bytecode_verifier","This module implements a checker for verifying signature…",null,null],[3,"SignatureChecker","bytecode_verifier::signature","",null,null],[11,"new","","",15,[[["compiledmodule"]],["self"]]],[11,"verify","","",15,[[],["vmresult"]]],[0,"stack_usage_verifier","bytecode_verifier","This module implements a checker for verifying that basic…",null,null],[3,"StackUsageVerifier","bytecode_verifier::stack_usage_verifier","",null,null],[11,"verify","","",16,[[["vmcontrolflowgraph"],["functiondefinition"],["compiledmodule"]],["vmresult"]]],[0,"struct_defs","bytecode_verifier","This module provides a checker for verifing that struct…",null,null],[3,"RecursiveStructDefChecker","bytecode_verifier::struct_defs","",null,null],[3,"StructDefGraphBuilder","","Given a module, build a graph of struct definitions. This…",null,null],[11,"new","","",17,[[["compiledmodule"]],["self"]]],[11,"verify","","",17,[[],["vmresult"]]],[11,"new","","",18,[[["compiledmodule"]],["self"]]],[11,"build","","",18,[[],[["digraphmap",["structdefinitionindex"]],["vmresult",["digraphmap"]]]]],[0,"type_safety","bytecode_verifier","This module defines the transfer functions for verifying…",null,null],[5,"verify","bytecode_verifier::type_safety","",null,[[["compiledmodule"],["functiondefinition"],["vmcontrolflowgraph"]],["vmresult"]]],[0,"unused_entries","bytecode_verifier","",null,null],[3,"UnusedEntryChecker","bytecode_verifier::unused_entries","",null,null],[11,"new","","",19,[[["compiledmodule"]],["self"]]],[11,"verify","","",19,[[],[["vmstatus"],["vec",["vmstatus"]]]]],[0,"verifier","bytecode_verifier","This module contains the public APIs supported by the…",null,null],[3,"VerifiedModule","bytecode_verifier::verifier","A module that has been verified for internal consistency.",null,null],[3,"VerifiedScript","","A script that has been verified for internal consistency.",null,null],[5,"verify_main_signature","","This function checks the extra requirements on the…",null,[[["compiledscript"]],["vmresult"]]],[5,"verify_module_dependencies","","Verification of a module in isolation (using…",null,[[["verifiedmodule"]],["vmresult"]]],[5,"verify_dependencies","","",null,[[["verifiedmodule"],["btreemap"]],["vmresult"]]],[5,"verify_script_dependencies","","Verifying the dependencies of a script follows the same…",null,[[["verifiedscript"]],["vmresult"]]],[5,"verify_script_dependency_map","","",null,[[["btreemap"],["verifiedscript"]],["vmresult"]]],[5,"batch_verify_modules","","Batch verify a list of modules and panic on any error. The…",null,[[["vec",["compiledmodule"]],["compiledmodule"]],[["vec",["verifiedmodule"]],["verifiedmodule"]]]],[11,"new","","Verifies this `CompiledModule`, returning a…",20,[[["compiledmodule"]],["result"]]],[11,"serialize","","Serializes this module into the provided buffer.",20,[[["vec"],["self"]],[["error"],["result",["error"]]]]],[11,"as_inner","","Returns a reference to the `CompiledModule` within.",20,[[["self"]],["compiledmodule"]]],[11,"into_inner","","Returns the `CompiledModule` within. Conversion back to…",20,[[],["compiledmodule"]]],[11,"new","","Verifies this `CompiledScript`, returning a…",21,[[["compiledscript"]],["result"]]],[11,"into_module","","Returns the corresponding `VerifiedModule` for this script.",21,[[]]],[11,"serialize","","Serializes this script into the provided buffer.",21,[[["vec"],["self"]],[["error"],["result",["error"]]]]],[11,"as_inner","","Returns a reference to the `CompiledScript` within.",21,[[["self"]],["compiledscript"]]],[11,"into_inner","","Returns the `CompiledScript` within. Conversion back to…",21,[[],["compiledscript"]]],[11,"from","bytecode_verifier::absint","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","bytecode_verifier::acquires_list_verifier","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","bytecode_verifier::check_duplication","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","bytecode_verifier::code_unit_verifier","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","bytecode_verifier::constants","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","bytecode_verifier::control_flow_graph","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","bytecode_verifier::instantiation_loops","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","bytecode_verifier::resolver","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","bytecode_verifier::resources","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","bytecode_verifier::signature","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","bytecode_verifier::stack_usage_verifier","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","bytecode_verifier::struct_defs","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"vzip","","",18,[[],["v"]]],[11,"from","bytecode_verifier::unused_entries","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"vzip","","",19,[[],["v"]]],[11,"from","bytecode_verifier::verifier","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"vzip","","",20,[[],["v"]]],[11,"equivalent","","",20,[[["k"],["self"]],["bool"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"vzip","","",21,[[],["v"]]],[11,"equivalent","","",21,[[["k"],["self"]],["bool"]]],[11,"block_start","bytecode_verifier::control_flow_graph","",11,[[["blockid"],["self"]],["codeoffset"]]],[11,"block_end","","",11,[[["blockid"],["self"]],["codeoffset"]]],[11,"successors","","",11,[[["blockid"],["self"]],["vec"]]],[11,"blocks","","",11,[[["self"]],[["vec",["blockid"]],["blockid"]]]],[11,"instr_indexes","","",11,[[["blockid"],["self"]],[["box",["iterator"]],["iterator"]]]],[11,"num_blocks","","",11,[[["self"]],["u16"]]],[11,"entry_block_id","","",11,[[["self"]],["blockid"]]],[11,"clone","bytecode_verifier::absint","",2,[[["self"]],["blockpostcondition"]]],[11,"clone","","",0,[[["self"]],["blockinvariant"]]],[11,"clone","bytecode_verifier::verifier","",20,[[["self"]],["verifiedmodule"]]],[11,"clone","","",21,[[["self"]],["verifiedscript"]]],[11,"eq","","",20,[[["verifiedmodule"],["self"]],["bool"]]],[11,"ne","","",20,[[["verifiedmodule"],["self"]],["bool"]]],[11,"eq","","",21,[[["self"],["verifiedscript"]],["bool"]]],[11,"ne","","",21,[[["self"],["verifiedscript"]],["bool"]]],[11,"fmt","bytecode_verifier::absint","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","bytecode_verifier::verifier","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"as_module","","",20,[[["self"]],["compiledmodule"]]],[11,"as_script","","",21,[[["self"]],["compiledscript"]]]],"p":[[3,"BlockInvariant"],[4,"JoinResult"],[4,"BlockPostcondition"],[8,"AbstractDomain"],[8,"TransferFunctions"],[8,"AbstractInterpreter"],[3,"AcquiresVerifier"],[3,"DuplicationChecker"],[3,"CodeUnitVerifier"],[3,"ConstantsChecker"],[8,"ControlFlowGraph"],[3,"VMControlFlowGraph"],[3,"InstantiationLoopChecker"],[3,"Resolver"],[3,"ResourceTransitiveChecker"],[3,"SignatureChecker"],[3,"StackUsageVerifier"],[3,"RecursiveStructDefChecker"],[3,"StructDefGraphBuilder"],[3,"UnusedEntryChecker"],[3,"VerifiedModule"],[3,"VerifiedScript"]]};
searchIndex["bytecode_verifier_tests"] = {"doc":"","i":[],"p":[]};
searchIndex["channel"] = {"doc":"Provides an mpsc (multi-producer single-consumer) channel…","i":[[3,"WithEntryTimestamp","channel","Wrapper around a value with an entry timestamp It is used…",null,null],[3,"Sender","","Similar to `mpsc::Sender`, but with an `IntGauge`",null,null],[3,"Receiver","","Similar to `mpsc::Receiver`, but with an `IntGauge`",null,null],[5,"new","","Similar to `mpsc::channel`, `new` creates a pair of…",null,[[["intgauge"],["usize"]]]],[5,"new_with_timeout","","",null,[[["intgauge"],["usize"],["duration"]]]],[5,"new_test","","",null,[[["usize"]]]],[5,"new_test_with_timeout","","",null,[[["usize"],["duration"]]]],[0,"libra_channel","","libra_channel provides an mpsc channel which has two ends…",null,null],[3,"Sender","channel::libra_channel","The sending end of the libra_channel.",null,null],[3,"Receiver","","The receiving end of the libra_channel.",null,null],[4,"ElementStatus","","The status of an element inserted into a libra_channel. If…",null,null],[13,"Dequeued","","",0,null],[13,"Dropped","","",0,null],[5,"new","","Create a new Libra Channel and returns the two ends of the…",null,[[["intcountervec"],["nonzerousize"],["queuestyle"],["option",["intcountervec"]]]]],[11,"push","","This adds the message into the internal queue data…",1,[[["self"],["k"],["m"]],["result"]]],[11,"push_with_feedback","","Same as `push`, but this function also accepts a…",1,[[["sender",["elementstatus"]],["option",["sender"]],["self"],["k"],["m"]],["result"]]],[11,"clear","","Removes all the previously sent transactions that have not…",2,[[["self"]]]],[0,"message_queues","channel","",null,null],[4,"QueueStyle","channel::message_queues","QueueStyle is an enum which can be used as a configuration…",null,null],[13,"LIFO","","",3,null],[13,"FIFO","","",3,null],[13,"KLAST","","",3,null],[7,"TEST_COUNTER","channel","",null,null],[11,"try_send","","",4,[[["self"],["t"]],[["result",["senderror"]],["senderror"]]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"try_poll_next","","",6,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","channel::libra_channel","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"try_poll_next","","",2,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","channel::message_queues","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"drop","channel::libra_channel","",1,[[["self"]]]],[11,"drop","","",2,[[["self"]]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone","channel::message_queues","",3,[[["self"]],["queuestyle"]]],[11,"clone","channel","",4,[[["self"]],["self"]]],[11,"eq","channel::libra_channel","",0,[[["self"],["elementstatus"]],["bool"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","channel::message_queues","",3,[[["formatter"],["self"]],["result"]]],[11,"poll_ready","channel","",4,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"start_send","","",4,[[["pin"],["self"],["t"]],["result"]]],[11,"poll_flush","","",4,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","",4,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"is_terminated","channel::libra_channel","",2,[[["self"]],["bool"]]],[11,"is_terminated","channel","",6,[[["self"]],["bool"]]],[11,"poll_next","channel::libra_channel","poll_next checks whether there is something ready for…",2,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","channel","",6,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]]],"p":[[4,"ElementStatus"],[3,"Sender"],[3,"Receiver"],[4,"QueueStyle"],[3,"Sender"],[3,"WithEntryTimestamp"],[3,"Receiver"]]};
searchIndex["cli"] = {"doc":"Libra Client","i":[[3,"AccountData","cli","Struct used to store data for each created account. We…",null,null],[12,"address","","Address of the account.",0,null],[12,"authentication_key","","Authentication key of the account.",0,null],[12,"key_pair","","(private_key, public_key) pair if the account is not…",0,null],[12,"sequence_number","","Latest sequence number maintained by client, it can be…",0,null],[12,"status","","Whether the account is initialized on chain, cached local…",0,null],[4,"AccountStatus","","Enum used to represent account status.",null,null],[13,"Local","","Account exists only in local cache, it is not persisted on…",1,null],[13,"Persisted","","Account is persisted on chain.",1,null],[13,"Unknown","","Not able to check account status, probably because client…",1,null],[0,"client_proxy","","Main instance of client holding corresponding information,…",null,null],[3,"AddressAndIndex","cli::client_proxy","Account data is stored in a map and referenced by an index.",null,null],[12,"address","","Address of the account.",2,null],[12,"index","","The account_ref_id of this account in client.",2,null],[3,"IndexAndSequence","","Used to return the sequence and sender account index…",null,null],[12,"account_index","","Index/key of the account in TestClient::accounts vector.",3,null],[12,"sequence_number","","Sequence number of the account.",3,null],[3,"ClientProxy","","Proxy handling CLI commands/inputs.",null,null],[12,"client","","client for admission control interface.",4,null],[12,"accounts","","Created accounts.",4,null],[12,"faucet_account","","Account used for mint operations.",4,null],[4,"AccountEntry","","Account is represented either as an entry into accounts…",null,null],[13,"Index","","Index into client.accounts",5,null],[13,"Address","","Address of the account",5,null],[11,"new","","Construct a new TestClient.",4,[[["str"],["string"],["option",["string"]],["waypoint"],["bool"]],["result"]]],[11,"create_next_account","","Returns the account index that should be used by user to…",4,[[["self"],["bool"]],[["result",["addressandindex"]],["addressandindex"]]]],[11,"latest_epoch_change_li","","Returns the ledger info corresonding to the latest epoch…",4,[[["self"]],[["option",["ledgerinfowithsignatures"]],["ledgerinfowithsignatures"]]]],[11,"print_all_accounts","","Print index and address of all accounts.",4,[[["self"]]]],[11,"set_accounts","","Set the account of this client instance.",4,[[["vec",["accountdata"]],["self"],["accountdata"]],[["addressandindex"],["vec",["addressandindex"]]]]],[11,"get_balances","","Get balance from validator for the account specified.",4,[[["self"]],[["result",["vec"]],["vec",["string"]]]]],[11,"get_sequence_number","","Get the latest sequence number from validator for the…",4,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"mint_coins","","Mints coins for the receiver specified.",4,[[["self"],["bool"]],["result"]]],[11,"enable_custom_script","","Allow executing arbitrary script in the network.",4,[[["self"],["bool"]],["result"]]],[11,"disable_custom_script","","Only allow executing predefined script in the Move…",4,[[["self"],["bool"]],["result"]]],[11,"remove_validator","","Remove a existing validator.",4,[[["self"],["bool"]],["result"]]],[11,"add_validator","","Add a new validator.",4,[[["self"],["bool"]],["result"]]],[11,"register_validator","","Register an account as validator candidate with…",4,[[["self"],["bool"]],["result"]]],[11,"wait_for_transaction","","Waits for the next transaction for a specific address and…",4,[[["self"],["accountaddress"],["u64"]]]],[11,"transfer_coins_int","","Transfer num_coins from sender account to receiver. If…",4,[[["vec",["u8"]],["u64"],["bool"],["option",["u64"]],["usize"],["self"],["accountaddress"],["u8"]],[["result",["indexandsequence"]],["indexandsequence"]]]],[11,"prepare_transfer_coins","","Prepare a transfer transaction: return the unsigned raw…",4,[[["vec",["u8"]],["u8"],["option",["u64"]],["self"],["accountaddress"],["u64"]],[["rawtransaction"],["result",["rawtransaction"]]]]],[11,"transfer_coins","","Transfers coins from sender to receiver.",4,[[["self"],["bool"]],[["result",["indexandsequence"]],["indexandsequence"]]]],[11,"compile_program","","Compile Move program",4,[[["self"]],[["result",["vec"]],["vec",["string"]]]]],[11,"submit_signed_transaction","","Submit a transaction to the network given the unsigned raw…",4,[[["rawtransaction"],["ed25519publickey"],["self"],["ed25519signature"]],["result"]]],[11,"publish_module","","Publish Move module",4,[[["self"]],["result"]]],[11,"execute_script","","Execute custom script",4,[[["self"]],["result"]]],[11,"get_latest_account_state","","Get the latest account state from validator.",4,[[["self"]],["result"]]],[11,"get_latest_account_resources","","Get the latest annotated account resources from validator.",4,[[["self"]],["result"]]],[11,"get_committed_txn_by_acc_seq","","Get committed txn by account and sequence number.",4,[[["self"]],[["result",["option"]],["option",["transactionview"]]]]],[11,"get_committed_txn_by_range","","Get committed txn by account and sequence number",4,[[["self"]],[["vec",["transactionview"]],["result",["vec"]]]]],[11,"get_account_address_from_parameter","","Get account address and (if applicable) authentication key…",4,[[["str"],["self"]],["result"]]],[11,"get_events_by_account_and_type","","Get events by account and event type with start sequence…",4,[[["self"]],["result"]]],[11,"write_recovery","","Write mnemonic recover to the file specified.",4,[[["self"]],["result"]]],[11,"recover_wallet_accounts","","Recover wallet accounts from command 'recover ' and return…",4,[[["self"]],[["result",["vec"]],["vec",["addressandindex"]]]]],[11,"recover_accounts_in_wallet","","Recover accounts in wallets and sync state if…",4,[[["self"]],[["result",["vec"]],["vec",["addressandindex"]]]]],[11,"insert_account_data","","Insert the account data to Client::accounts and return its…",4,[[["self"],["accountdata"]],["addressandindex"]]],[11,"test_validator_connection","","Test JSON RPC client connection with validator.",4,[[["self"]],[["result",["blockmetadata"]],["blockmetadata"]]]],[11,"test_trusted_connection","","Test client's connection to validator with proof.",4,[[["self"]],["result"]]],[11,"convert_to_micro_libras","","convert number of Libras (main unit) given as string to…",4,[[["str"]],[["result",["u64"]],["u64"]]]],[0,"commands","cli","Command struct to interact with client.",null,null],[5,"report_error","cli::commands","Print the error and bump up error counter.",null,[[["str"],["error"]]]],[5,"blocking_cmd","","Check whether a command is blocking.",null,[[["str"]],["bool"]]],[5,"debug_format_cmd","","Check whether a command is debugging command.",null,[[["str"]],["bool"]]],[5,"is_address","","Check whether the input string is a valid libra address.",null,[[["str"]],["bool"]]],[5,"is_authentication_key","","Check whether the input string is a valid libra…",null,[[["str"]],["bool"]]],[5,"get_commands","","Returns all the commands available, as well as the reverse…",null,[[["bool"]]]],[5,"parse_cmd","","Parse a cmd string, the first element in the returned…",null,[[["str"]],[["str"],["vec",["str"]]]]],[5,"print_subcommand_help","","Print the help message for all sub commands.",null,[[["str"]]]],[5,"subcommand_execute","","Execute sub command.",null,[[["str"],["vec",["box"]],["box",["command"]],["clientproxy"]]]],[8,"Command","","Trait to perform client operations.",null,null],[10,"get_aliases","","all commands and aliases this command support.",6,[[["self"]],[["str"],["vec",["str"]]]]],[11,"get_params_help","","string that describes params.",6,[[["self"]],["str"]]],[10,"get_description","","string that describes what the command does.",6,[[["self"]],["str"]]],[10,"execute","","code to execute.",6,[[["clientproxy"],["self"]]]],[11,"keypair_as_string","cli","Serialize account keypair if exists.",0,[[["self"]],["option"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"test_only_hash","","",0,[[["self"]],["hashvalue"]]],[11,"vzip","","",0,[[],["v"]]],[11,"into_request","","",0,[[],["request"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"test_only_hash","","",1,[[["self"]],["hashvalue"]]],[11,"vzip","","",1,[[],["v"]]],[11,"into_request","","",1,[[],["request"]]],[11,"from","cli::client_proxy","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"into_request","","",2,[[],["request"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"into_request","","",3,[[],["request"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"into_request","","",4,[[],["request"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"into_request","","",5,[[],["request"]]],[11,"clone","cli","",1,[[["self"]],["accountstatus"]]],[11,"eq","","",0,[[["self"],["accountdata"]],["bool"]]],[11,"ne","","",0,[[["self"],["accountdata"]],["bool"]]],[11,"eq","","",1,[[["accountstatus"],["self"]],["bool"]]],[11,"fmt","cli::client_proxy","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","cli","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","cli::client_proxy","",5,[[["formatter"],["self"]],["result"]]],[11,"deserialize","cli","",0,[[["__d"]],["result"]]],[11,"deserialize","","",1,[[["__d"]],["result"]]],[11,"serialize","","",0,[[["self"],["__s"]],["result"]]],[11,"serialize","","",1,[[["self"],["__s"]],["result"]]]],"p":[[3,"AccountData"],[4,"AccountStatus"],[3,"AddressAndIndex"],[3,"IndexAndSequence"],[3,"ClientProxy"],[4,"AccountEntry"],[8,"Command"]]};
searchIndex["cluster_test"] = {"doc":"","i":[[0,"aws","cluster_test","",null,null],[5,"set_asg_size","cluster_test::aws","set_asg_size sets the size of the given autoscaling group",null,[[["i64"],["f64"],["str"],["bool"]]]],[0,"cluster","cluster_test","",null,null],[3,"Cluster","cluster_test::cluster","",null,null],[11,"from_host_port","","",0,[[["vec"],["str"]],["self"]]],[11,"new_k8s","","",0,[[["instance"],["vec",["instance"]]],["result"]]],[11,"random_validator_instance","","",0,[[["self"]],["instance"]]],[11,"validator_instances","","",0,[[["self"]]]],[11,"fullnode_instances","","",0,[[["self"]]]],[11,"all_instances","","",0,[[["self"]]]],[11,"into_validator_instances","","",0,[[],[["instance"],["vec",["instance"]]]]],[11,"into_fullnode_instances","","",0,[[],[["instance"],["vec",["instance"]]]]],[11,"prometheus_ip","","",0,[[["self"]],[["string"],["option",["string"]]]]],[11,"mint_key_pair","","",0,[[["self"]],["keypair"]]],[11,"get_validator_instance","","",0,[[["str"],["self"]],[["option",["instance"]],["instance"]]]],[11,"split_n_validators_random","","Splits this cluster into two",0,[[["self"],["usize"]]]],[11,"split_n_fullnodes_random","","",0,[[["self"],["usize"]]]],[11,"validator_sub_cluster","","",0,[[["vec",["string"]],["self"],["string"]],["cluster"]]],[0,"cluster_swarm","cluster_test","",null,null],[0,"cluster_swarm_kube","cluster_test::cluster_swarm","",null,null],[3,"ClusterSwarmKube","cluster_test::cluster_swarm::cluster_swarm_kube","",null,null],[11,"new","","",1,[[]]],[11,"get_workspace","","",1,[[["self"]]]],[8,"ClusterSwarm","cluster_test::cluster_swarm","",null,null],[10,"remove_all_network_effects","","",2,[[["self"]],[["pin",["box"]],["box",["future"]]]]],[10,"run","","Runs the given command in a container against the given…",2,[[["str"],["self"],["instance"],["str"],["string"]],[["pin",["box"]],["box",["future"]]]]],[10,"validator_instances","","",2,[[["self"]],[["box",["future"]],["pin",["box"]]]]],[10,"fullnode_instances","","",2,[[["self"]],[["box",["future"]],["pin",["box"]]]]],[10,"upsert_node","","Inserts an into the ClusterSwarm if it doesn't exist. If…",2,[[["bool"],["self"],["instanceconfig"]],[["pin",["box"]],["box",["future"]]]]],[10,"delete_node","","Deletes a node from the ClusterSwarm",2,[[["self"],["instanceconfig"]],[["pin",["box"]],["box",["future"]]]]],[11,"create_validator_set","","Creates a set of validators with the given `image_tag`",2,[[["string"],["self"],["u32"],["vec",["string"]],["bool"],["str"]],[["pin",["box"]],["box",["future"]]]]],[11,"create_fullnode_set","","Creates a set of fullnodes with the given `image_tag`",2,[[["string"],["self"],["u32"],["vec",["string"]],["bool"],["str"]],[["pin",["box"]],["box",["future"]]]]],[11,"create_validator_and_fullnode_set","","Creates a set of validators and fullnodes with the given…",2,[[["bool"],["self"],["u32"],["str"]],[["box",["future"]],["pin",["box"]]]]],[10,"delete_all","","Deletes all validators and fullnodes in this cluster",2,[[["self"]],[["pin",["box"]],["box",["future"]]]]],[10,"get_grafana_baseurl","","",2,[[["self"]],[["pin",["box"]],["box",["future"]]]]],[0,"experiments","cluster_test","",null,null],[3,"PacketLossRandomValidators","cluster_test::experiments","",null,null],[3,"PacketLossRandomValidatorsParams","","",null,null],[3,"PerformanceBenchmark","","",null,null],[3,"PerformanceBenchmarkParams","","",null,null],[12,"percent_nodes_down","","",3,null],[12,"trace","","",3,null],[12,"duration","","",3,null],[3,"PerformanceBenchmarkThreeRegionSimulation","","",null,null],[3,"PerformanceBenchmarkThreeRegionSimulationParams","","",null,null],[3,"RebootRandomValidators","","",null,null],[3,"RebootRandomValidatorsParams","","",null,null],[12,"count","","",4,null],[3,"RecoveryTime","","",null,null],[3,"RecoveryTimeParams","","",null,null],[12,"num_accounts_to_mint","","",5,null],[3,"CpuFlamegraph","","",null,null],[3,"CpuFlamegraphParams","","",null,null],[12,"duration_secs","","",6,null],[3,"Context","","",null,null],[12,"tx_emitter","","",7,null],[12,"trace_tail","","",7,null],[12,"prometheus","","",7,null],[12,"cluster","","",7,null],[12,"report","","",7,null],[12,"global_emit_job_request","","",7,null],[12,"emit_to_validator","","",7,null],[12,"cluster_swarm","","",7,null],[5,"get_experiment","","Given an experiment name and its flags, it constructs an…",null,[[["str"],["cluster"]],[["box",["experiment"]],["experiment"]]]],[11,"new_nodes_down","","",3,[[["usize"]],["self"]]],[8,"Experiment","","",null,null],[11,"affected_validators","","",8,[[["self"]],[["hashset",["string"]],["string"]]]],[10,"run","","",8,[[["self"],["context"]],[["pin",["box"]],["box",["future"]]]]],[10,"deadline","","",8,[[["self"]],["duration"]]],[8,"ExperimentParam","","",null,null],[16,"E","","",9,null],[10,"build","","",9,[[["cluster"]]]],[11,"new","","",7,[[["tracetail"],["txemitter"],["clusterswarmkube"],["cluster"],["prometheus"],["bool"],["option"],["suitereport"]],["self"]]],[0,"github","cluster_test","",null,null],[3,"CommitInfo","cluster_test::github","",null,null],[12,"sha","","",10,null],[12,"commit","","",10,null],[3,"GitCommitInfo","","",null,null],[12,"author","","",11,null],[12,"message","","",11,null],[3,"Author","","",null,null],[12,"name","","",12,null],[12,"email","","",12,null],[3,"GitHub","","",null,null],[11,"new","","",13,[[],["github"]]],[11,"get_commits","","repo in format owner/repo_name sha can be long or short…",13,[[["str"],["self"]],[["vec",["commitinfo"]],["result",["vec"]]]]],[0,"health","cluster_test","",null,null],[3,"CommitHistoryHealthCheck","cluster_test::health","Verifies that commit history produced by validators is…",null,null],[3,"DebugPortLogThread","","",null,null],[3,"LivenessHealthCheck","","",null,null],[3,"LogTail","","",null,null],[12,"event_receiver","","",14,null],[12,"pending_messages","","",14,null],[3,"TraceTail","","",null,null],[12,"trace_receiver","","",15,null],[12,"trace_enabled","","",15,null],[3,"Commit","","",null,null],[3,"ValidatorEvent","","",null,null],[3,"HealthCheckRunner","","",null,null],[3,"HealthCheckContext","","",null,null],[3,"HealthCheckError","","",null,null],[12,"validator","","",16,null],[12,"message","","",16,null],[4,"Event","","",null,null],[13,"Commit","","",17,null],[13,"ConsensusStarted","","",17,null],[4,"PrintFailures","","",null,null],[13,"None","","",18,null],[13,"UnexpectedOnly","","",18,null],[13,"All","","",18,null],[11,"new","","",19,[[],["self"]]],[11,"spawn_new","","",20,[[["cluster"]]]],[11,"run","","",20,[[]]],[11,"new","","",21,[[["cluster"]],["self"]]],[11,"recv_all_until_deadline","","",14,[[["self"],["instant"]],[["vec",["validatorevent"]],["validatorevent"]]]],[11,"recv_all","","",14,[[["self"]],[["vec",["validatorevent"]],["validatorevent"]]]],[11,"capture_trace","","",15,[[["self"],["duration"]]]],[8,"HealthCheck","","",null,null],[10,"on_event","","Verify specific event",22,[[["self"],["validatorevent"],["healthcheckcontext"]]]],[11,"verify","","Periodic verification (happens even if when no events…",22,[[["self"],["healthcheckcontext"]]]],[11,"invalidate","","Optionally marks validator as failed, requiring waiting…",22,[[["str"],["self"]]]],[11,"clear","","Clean is invoked when cluster is wiped This means that…",22,[[["self"]]]],[10,"name","","",22,[[["self"]],["str"]]],[11,"new","","",23,[[["box",["healthcheck"]],["vec",["box"]],["cluster"]],["self"]]],[11,"new_all","","",23,[[["cluster"]],["self"]]],[11,"run","","Takes a list of affected_validators. If there are…",23,[[["hashset"],["self"],["printfailures"]],[["vec",["string"]],["result",["vec"]]]]],[11,"invalidate","","",23,[[["str"],["self"]]]],[11,"clear","","",23,[[["self"]]]],[11,"new","","",24,[[],["self"]]],[11,"now","","",24,[[["self"]],["duration"]]],[11,"report_failure","","",24,[[["self"],["string"]]]],[0,"instance","cluster_test","",null,null],[3,"ValidatorConfig","cluster_test::instance","",null,null],[12,"index","","",25,null],[12,"num_validators","","",25,null],[12,"num_fullnodes","","",25,null],[12,"image_tag","","",25,null],[12,"config_overrides","","",25,null],[3,"FullnodeConfig","","",null,null],[12,"fullnode_index","","",26,null],[12,"num_fullnodes_per_validator","","",26,null],[12,"validator_index","","",26,null],[12,"num_validators","","",26,null],[12,"image_tag","","",26,null],[12,"config_overrides","","",26,null],[3,"Instance","","",null,null],[4,"InstanceConfig","","",null,null],[13,"Validator","","",27,null],[13,"Fullnode","","",27,null],[5,"instancelist_to_set","","",null,[[],[["hashset",["string"]],["string"]]]],[5,"instance_configs","","",null,[[],[["result",["vec"]],["vec",["instanceconfig"]]]]],[11,"new","","",28,[[["u32"],["string"]],["instance"]]],[11,"new_k8s","","",28,[[["instanceconfig"],["u32"],["option",["string"]],["string"]],["instance"]]],[11,"run_cmd_tee_err","","",28,[[["self"],["i"]]]],[11,"run_cmd","","",28,[[["self"],["i"]]]],[11,"run_cmd_inner","","",28,[[["self"],["i"],["bool"]]]],[11,"scp","","",28,[[["self"],["str"]]]],[11,"counter","","",28,[[["str"],["self"]],[["f64"],["result",["f64"]]]]],[11,"is_up","","",28,[[["self"]],["bool"]]],[11,"peer_name","","",28,[[["self"]],["string"]]],[11,"validator_index","","",28,[[["self"]],["string"]]],[11,"ip","","",28,[[["self"]],["string"]]],[11,"ac_port","","",28,[[["self"]],["u32"]]],[11,"k8s_node","","",28,[[["self"]],[["string"],["option",["string"]]]]],[11,"instance_config","","",28,[[["self"]],[["option",["instanceconfig"]],["instanceconfig"]]]],[0,"prometheus","cluster_test","",null,null],[3,"Prometheus","cluster_test::prometheus","",null,null],[3,"MatrixResponse","","",null,null],[3,"TimeSeries","","",null,null],[11,"new","","",29,[[["str"],["string"]],["self"]]],[11,"link_to_dashboard","","",29,[[["self"],["duration"]],["string"]]],[11,"query_range_avg","","",29,[[["u64"],["duration"],["self"],["string"]],[["f64"],["result",["f64"]]]]],[11,"avg","","",30,[[["self"]],[["f64"],["option",["f64"]]]]],[11,"get","","",31,[[["self"]]]],[11,"avg","","",31,[[["self"]],[["f64"],["option",["f64"]]]]],[0,"report","cluster_test","",null,null],[3,"SuiteReport","cluster_test::report","",null,null],[3,"ReportedMetric","","",null,null],[12,"experiment","","",32,null],[12,"metric","","",32,null],[12,"value","","",32,null],[11,"new","","",33,[[],["self"]]],[11,"report_metric","","",33,[[["self"],["tostring"],["f64"]]]],[11,"report_text","","",33,[[["self"],["string"]]]],[0,"slack","cluster_test","",null,null],[3,"SlackClient","cluster_test::slack","",null,null],[11,"new","","",34,[[],["self"]]],[11,"send_message","","",34,[[["str"],["url"],["self"]],["result"]]],[0,"stats","cluster_test","",null,null],[5,"avg_tps","cluster_test::stats","",null,[[["prometheus"],["duration"]],[["f64"],["result",["f64"]]]]],[5,"avg_txns_per_block","","",null,[[["prometheus"],["duration"]],[["f64"],["result",["f64"]]]]],[5,"avg_latency","","",null,[[["prometheus"],["duration"]],[["f64"],["result",["f64"]]]]],[5,"txn_stats","","",null,[[["prometheus"],["duration"]],["result"]]],[0,"suite","cluster_test","",null,null],[3,"ExperimentSuite","cluster_test::suite","",null,null],[12,"experiments","","",35,null],[11,"new_pre_release","","",35,[[["cluster"]],["self"]]],[11,"new_perf_suite","","",35,[[["cluster"]],["self"]]],[0,"tx_emitter","cluster_test","",null,null],[3,"TxEmitter","cluster_test::tx_emitter","",null,null],[3,"EmitJob","","",null,null],[3,"TxStats","","",null,null],[12,"submitted","","",36,null],[12,"committed","","",36,null],[12,"expired","","",36,null],[3,"TxStatsRate","","",null,null],[12,"submitted","","",37,null],[12,"committed","","",37,null],[12,"expired","","",37,null],[3,"EmitThreadParams","","",null,null],[12,"wait_millis","","",38,null],[12,"wait_committed","","",38,null],[3,"EmitJobRequest","","",null,null],[12,"instances","","",39,null],[12,"accounts_per_client","","",39,null],[12,"workers_per_ac","","",39,null],[12,"thread_params","","",39,null],[3,"AccountData","","",null,null],[12,"address","","",40,null],[12,"key_pair","","",40,null],[12,"sequence_number","","",40,null],[11,"for_instances","","",39,[[["option"],["instance"],["vec",["instance"]]],["self"]]],[11,"new","","",41,[[["cluster"]],["self"]]],[11,"clear","","",41,[[["self"]]]],[11,"submit_single_transaction","","",41,[[["instance"],["self"],["accountdata"]]]],[11,"start_job","","",41,[[["emitjobrequest"],["self"]]]],[11,"load_faucet_account","","",41,[[["instance"],["self"]]]],[11,"mint_accounts","","",41,[[["emitjobrequest"],["usize"],["self"]]]],[11,"peek_job_stats","","",41,[[["emitjob"],["self"]],["txstats"]]],[11,"stop_job","","",41,[[["self"],["emitjob"]],["txstats"]]],[11,"emit_txn_for","","",41,[[["duration"],["emitjobrequest"],["self"]]]],[11,"query_sequence_numbers","","",41,[[["instance"],["self"],["accountaddress"]]]],[11,"auth_key_prefix","","",40,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"rate","","",36,[[["self"],["duration"]],["txstatsrate"]]],[0,"util","cluster_test","",null,null],[5,"unix_timestamp_now","cluster_test::util","",null,[[],["duration"]]],[11,"from","cluster_test::cluster","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"into_request","","",0,[[],["request"]]],[11,"from","cluster_test::cluster_swarm::cluster_swarm_kube","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"into_request","","",1,[[],["request"]]],[11,"from","cluster_test::experiments","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_string","","",42,[[["self"]],["string"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"vzip","","",42,[[],["v"]]],[11,"into_request","","",42,[[],["request"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"vzip","","",43,[[],["v"]]],[11,"into_request","","",43,[[],["request"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_string","","",44,[[["self"]],["string"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"vzip","","",44,[[],["v"]]],[11,"into_request","","",44,[[],["request"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"into_request","","",3,[[],["request"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_string","","",45,[[["self"]],["string"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"vzip","","",45,[[],["v"]]],[11,"into_request","","",45,[[],["request"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"vzip","","",46,[[],["v"]]],[11,"into_request","","",46,[[],["request"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_string","","",47,[[["self"]],["string"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"vzip","","",47,[[],["v"]]],[11,"into_request","","",47,[[],["request"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"into_request","","",4,[[],["request"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_string","","",48,[[["self"]],["string"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"vzip","","",48,[[],["v"]]],[11,"into_request","","",48,[[],["request"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"into_request","","",5,[[],["request"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_string","","",49,[[["self"]],["string"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"vzip","","",49,[[],["v"]]],[11,"into_request","","",49,[[],["request"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"into_request","","",6,[[],["request"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"into_request","","",7,[[],["request"]]],[11,"from","cluster_test::github","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"into_request","","",10,[[],["request"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"into_request","","",11,[[],["request"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"into_request","","",12,[[],["request"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"clear","","",13,[[["self"]]]],[11,"initialize","","",13,[[]]],[11,"into_request","","",13,[[],["request"]]],[11,"from","cluster_test::health","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"vzip","","",19,[[],["v"]]],[11,"clear","","",19,[[["self"]]]],[11,"initialize","","",19,[[]]],[11,"into_request","","",19,[[],["request"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"vzip","","",20,[[],["v"]]],[11,"into_request","","",20,[[],["request"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"vzip","","",21,[[],["v"]]],[11,"into_request","","",21,[[],["request"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"into_request","","",14,[[],["request"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"into_request","","",15,[[],["request"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"vzip","","",50,[[],["v"]]],[11,"into_request","","",50,[[],["request"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"vzip","","",51,[[],["v"]]],[11,"into_request","","",51,[[],["request"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"vzip","","",23,[[],["v"]]],[11,"into_request","","",23,[[],["request"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"vzip","","",24,[[],["v"]]],[11,"clear","","",24,[[["self"]]]],[11,"initialize","","",24,[[]]],[11,"into_request","","",24,[[],["request"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"into_request","","",16,[[],["request"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"into_request","","",17,[[],["request"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"vzip","","",18,[[],["v"]]],[11,"into_request","","",18,[[],["request"]]],[11,"from","cluster_test::instance","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"equivalent","","",25,[[["k"],["self"]],["bool"]]],[11,"vzip","","",25,[[],["v"]]],[11,"into_request","","",25,[[],["request"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"equivalent","","",26,[[["k"],["self"]],["bool"]]],[11,"vzip","","",26,[[],["v"]]],[11,"into_request","","",26,[[],["request"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"to_string","","",28,[[["self"]],["string"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"vzip","","",28,[[],["v"]]],[11,"into_request","","",28,[[],["request"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"equivalent","","",27,[[["k"],["self"]],["bool"]]],[11,"vzip","","",27,[[],["v"]]],[11,"into_request","","",27,[[],["request"]]],[11,"from","cluster_test::prometheus","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"vzip","","",29,[[],["v"]]],[11,"into_request","","",29,[[],["request"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"vzip","","",30,[[],["v"]]],[11,"into_request","","",30,[[],["request"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"vzip","","",31,[[],["v"]]],[11,"into_request","","",31,[[],["request"]]],[11,"from","cluster_test::report","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_string","","",33,[[["self"]],["string"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"vzip","","",33,[[],["v"]]],[11,"test_only_hash","","",33,[[["self"]],["hashvalue"]]],[11,"clear","","",33,[[["self"]]]],[11,"initialize","","",33,[[]]],[11,"into_request","","",33,[[],["request"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"vzip","","",32,[[],["v"]]],[11,"test_only_hash","","",32,[[["self"]],["hashvalue"]]],[11,"into_request","","",32,[[],["request"]]],[11,"from","cluster_test::slack","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"vzip","","",34,[[],["v"]]],[11,"clear","","",34,[[["self"]]]],[11,"initialize","","",34,[[]]],[11,"into_request","","",34,[[],["request"]]],[11,"from","cluster_test::suite","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"vzip","","",35,[[],["v"]]],[11,"into_request","","",35,[[],["request"]]],[11,"from","cluster_test::tx_emitter","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"vzip","","",41,[[],["v"]]],[11,"into_request","","",41,[[],["request"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"vzip","","",52,[[],["v"]]],[11,"into_request","","",52,[[],["request"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_string","","",36,[[["self"]],["string"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"vzip","","",36,[[],["v"]]],[11,"clear","","",36,[[["self"]]]],[11,"initialize","","",36,[[]]],[11,"into_request","","",36,[[],["request"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_string","","",37,[[["self"]],["string"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"vzip","","",37,[[],["v"]]],[11,"clear","","",37,[[["self"]]]],[11,"initialize","","",37,[[]]],[11,"into_request","","",37,[[],["request"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"vzip","","",38,[[],["v"]]],[11,"clear","","",38,[[["self"]]]],[11,"initialize","","",38,[[]]],[11,"into_request","","",38,[[],["request"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"vzip","","",39,[[],["v"]]],[11,"into_request","","",39,[[],["request"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"vzip","","",40,[[],["v"]]],[11,"into_request","","",40,[[],["request"]]],[11,"build","cluster_test::experiments","",6,[[["cluster"]]]],[11,"build","","",43,[[["cluster"]]]],[11,"build","","",3,[[["cluster"]]]],[11,"build","","",46,[[["cluster"]]]],[11,"build","","",4,[[["cluster"]]]],[11,"build","","",5,[[["cluster"]]]],[11,"on_event","cluster_test::health","",19,[[["self"],["validatorevent"],["healthcheckcontext"]]]],[11,"clear","","",19,[[["self"]]]],[11,"name","","",19,[[["self"]],["str"]]],[11,"on_event","","",21,[[["self"],["validatorevent"],["healthcheckcontext"]]]],[11,"verify","","",21,[[["self"],["healthcheckcontext"]]]],[11,"invalidate","","",21,[[["str"],["self"]]]],[11,"name","","",21,[[["self"]],["str"]]],[11,"remove_all_network_effects","cluster_test::cluster_swarm::cluster_swarm_kube","",1,[[["self"]],[["pin",["box"]],["box",["future"]]]]],[11,"run","","",1,[[["str"],["self"],["instance"],["str"],["string"]],[["pin",["box"]],["box",["future"]]]]],[11,"validator_instances","","",1,[[["self"]],[["box",["future"]],["pin",["box"]]]]],[11,"fullnode_instances","","",1,[[["self"]],[["box",["future"]],["pin",["box"]]]]],[11,"upsert_node","","",1,[[["bool"],["self"],["instanceconfig"]],[["pin",["box"]],["box",["future"]]]]],[11,"delete_node","","",1,[[["self"],["instanceconfig"]],[["pin",["box"]],["box",["future"]]]]],[11,"delete_all","","",1,[[["self"]],[["pin",["box"]],["box",["future"]]]]],[11,"get_grafana_baseurl","","",1,[[["self"]],[["pin",["box"]],["box",["future"]]]]],[11,"affected_validators","cluster_test::experiments","",49,[[["self"]],[["hashset",["string"]],["string"]]]],[11,"run","","",49,[[["self"],["context"]],[["pin",["box"]],["box",["future"]]]]],[11,"deadline","","",49,[[["self"]],["duration"]]],[11,"run","","",42,[[["self"],["context"]],[["pin",["box"]],["box",["future"]]]]],[11,"deadline","","",42,[[["self"]],["duration"]]],[11,"affected_validators","","",44,[[["self"]],[["hashset",["string"]],["string"]]]],[11,"run","","",44,[[["self"],["context"]],[["pin",["box"]],["box",["future"]]]]],[11,"deadline","","",44,[[["self"]],["duration"]]],[11,"run","","",45,[[["self"],["context"]],[["pin",["box"]],["box",["future"]]]]],[11,"deadline","","",45,[[["self"]],["duration"]]],[11,"affected_validators","","",47,[[["self"]],[["hashset",["string"]],["string"]]]],[11,"run","","",47,[[["self"],["context"]],[["pin",["box"]],["box",["future"]]]]],[11,"deadline","","",47,[[["self"]],["duration"]]],[11,"affected_validators","","",48,[[["self"]],[["hashset",["string"]],["string"]]]],[11,"run","","",48,[[["self"],["context"]],[["pin",["box"]],["box",["future"]]]]],[11,"deadline","","",48,[[["self"]],["duration"]]],[11,"clone","cluster_test::cluster","",0,[[["self"]],["cluster"]]],[11,"clone","cluster_test::health","",50,[[["self"]],["commit"]]],[11,"clone","","",17,[[["self"]],["event"]]],[11,"clone","","",51,[[["self"]],["validatorevent"]]],[11,"clone","cluster_test::instance","",27,[[["self"]],["instanceconfig"]]],[11,"clone","","",25,[[["self"]],["validatorconfig"]]],[11,"clone","","",26,[[["self"]],["fullnodeconfig"]]],[11,"clone","","",28,[[["self"]],["instance"]]],[11,"clone","cluster_test::prometheus","",29,[[["self"]],["prometheus"]]],[11,"clone","cluster_test::tx_emitter","",38,[[["self"]],["emitthreadparams"]]],[11,"clone","","",39,[[["self"]],["emitjobrequest"]]],[11,"clone","","",40,[[["self"]],["accountdata"]]],[11,"default","cluster_test::github","",13,[[],["self"]]],[11,"default","cluster_test::health","",19,[[],["commithistoryhealthcheck"]]],[11,"default","","",24,[[],["self"]]],[11,"default","cluster_test::report","",33,[[],["suitereport"]]],[11,"default","cluster_test::slack","",34,[[],["self"]]],[11,"default","cluster_test::tx_emitter","",36,[[],["txstats"]]],[11,"default","","",37,[[],["txstatsrate"]]],[11,"default","","",38,[[],["self"]]],[11,"eq","cluster_test::instance","",27,[[["self"],["instanceconfig"]],["bool"]]],[11,"ne","","",27,[[["self"],["instanceconfig"]],["bool"]]],[11,"eq","","",25,[[["validatorconfig"],["self"]],["bool"]]],[11,"ne","","",25,[[["validatorconfig"],["self"]],["bool"]]],[11,"eq","","",26,[[["fullnodeconfig"],["self"]],["bool"]]],[11,"ne","","",26,[[["fullnodeconfig"],["self"]],["bool"]]],[11,"fmt","cluster_test::experiments","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","cluster_test::github","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","cluster_test::health","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","cluster_test::instance","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","cluster_test::tx_emitter","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","cluster_test::experiments","",49,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",45,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","cluster_test::instance","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","cluster_test::report","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","cluster_test::tx_emitter","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"hash","cluster_test::instance","",27,[[["self"],["__h"]]]],[11,"hash","","",25,[[["self"],["__h"]]]],[11,"hash","","",26,[[["self"],["__h"]]]],[11,"serialize","cluster_test::report","",33,[[["self"],["__s"]],["result"]]],[11,"serialize","","",32,[[["self"],["__s"]],["result"]]],[11,"deserialize","cluster_test::github","",10,[[["__d"]],["result"]]],[11,"deserialize","","",11,[[["__d"]],["result"]]],[11,"deserialize","","",12,[[["__d"]],["result"]]],[11,"clap","cluster_test::experiments","",6,[[],["app"]]],[11,"from_clap","","",6,[[["argmatches"]],["self"]]],[11,"clap","","",43,[[],["app"]]],[11,"from_clap","","",43,[[["argmatches"]],["self"]]],[11,"clap","","",3,[[],["app"]]],[11,"from_clap","","",3,[[["argmatches"]],["self"]]],[11,"clap","","",46,[[],["app"]]],[11,"from_clap","","",46,[[["argmatches"]],["self"]]],[11,"clap","","",4,[[],["app"]]],[11,"from_clap","","",4,[[["argmatches"]],["self"]]],[11,"clap","","",5,[[],["app"]]],[11,"from_clap","","",5,[[["argmatches"]],["self"]]],[11,"augment_clap","","",6,[[["app"]],["app"]]],[11,"is_subcommand","","",6,[[],["bool"]]],[11,"augment_clap","","",43,[[["app"]],["app"]]],[11,"is_subcommand","","",43,[[],["bool"]]],[11,"augment_clap","","",3,[[["app"]],["app"]]],[11,"is_subcommand","","",3,[[],["bool"]]],[11,"augment_clap","","",46,[[["app"]],["app"]]],[11,"is_subcommand","","",46,[[],["bool"]]],[11,"augment_clap","","",4,[[["app"]],["app"]]],[11,"is_subcommand","","",4,[[],["bool"]]],[11,"augment_clap","","",5,[[["app"]],["app"]]],[11,"is_subcommand","","",5,[[],["bool"]]]],"p":[[3,"Cluster"],[3,"ClusterSwarmKube"],[8,"ClusterSwarm"],[3,"PerformanceBenchmarkParams"],[3,"RebootRandomValidatorsParams"],[3,"RecoveryTimeParams"],[3,"CpuFlamegraphParams"],[3,"Context"],[8,"Experiment"],[8,"ExperimentParam"],[3,"CommitInfo"],[3,"GitCommitInfo"],[3,"Author"],[3,"GitHub"],[3,"LogTail"],[3,"TraceTail"],[3,"HealthCheckError"],[4,"Event"],[4,"PrintFailures"],[3,"CommitHistoryHealthCheck"],[3,"DebugPortLogThread"],[3,"LivenessHealthCheck"],[8,"HealthCheck"],[3,"HealthCheckRunner"],[3,"HealthCheckContext"],[3,"ValidatorConfig"],[3,"FullnodeConfig"],[4,"InstanceConfig"],[3,"Instance"],[3,"Prometheus"],[3,"MatrixResponse"],[3,"TimeSeries"],[3,"ReportedMetric"],[3,"SuiteReport"],[3,"SlackClient"],[3,"ExperimentSuite"],[3,"TxStats"],[3,"TxStatsRate"],[3,"EmitThreadParams"],[3,"EmitJobRequest"],[3,"AccountData"],[3,"TxEmitter"],[3,"PacketLossRandomValidators"],[3,"PacketLossRandomValidatorsParams"],[3,"PerformanceBenchmark"],[3,"PerformanceBenchmarkThreeRegionSimulation"],[3,"PerformanceBenchmarkThreeRegionSimulationParams"],[3,"RebootRandomValidators"],[3,"RecoveryTime"],[3,"CpuFlamegraph"],[3,"Commit"],[3,"ValidatorEvent"],[3,"EmitJob"]]};
searchIndex["compiler"] = {"doc":"","i":[[3,"Compiler","compiler","An API for the compiler. Supports setting custom options.",null,null],[12,"address","","The address used as the sender for the compiler.",0,null],[12,"skip_stdlib_deps","","Skip stdlib dependencies if true.",0,null],[12,"extra_deps","","Extra dependencies to compile with.",0,null],[0,"util","","",null,null],[5,"do_compile_module","compiler::util","",null,[[["path"],["accountaddress"]]]],[11,"into_compiled_script_and_source_map","compiler","Compiles into a `CompiledScript` where the bytecode hasn't…",0,[[["str"]],["result"]]],[11,"into_script_blob","","Compiles the script into a serialized form.",0,[[["str"]],[["result",["vec"]],["vec",["u8"]]]]],[11,"into_compiled_module","","Compiles the module.",0,[[["str"]],[["compiledmodule"],["result",["compiledmodule"]]]]],[11,"into_module_blob","","Compiles the module into a serialized form.",0,[[["str"]],[["result",["vec"]],["vec",["u8"]]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"clear","","",0,[[["self"]]]],[11,"initialize","","",0,[[]]],[11,"clone","","",0,[[["self"]],["compiler"]]],[11,"default","","",0,[[],["compiler"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[3,"Compiler"]]};
searchIndex["config_builder"] = {"doc":"","i":[[3,"FullNodeConfig","config_builder","",null,null],[3,"SwarmConfig","","",null,null],[12,"config_files","","",0,null],[12,"faucet_key_path","","",0,null],[12,"waypoint","","",0,null],[3,"ValidatorConfig","","",null,null],[4,"Error","","",null,null],[13,"IndexError","","",1,null],[12,"index","config_builder::Error","",2,null],[12,"nodes","","",2,null],[13,"InvalidSafetyRulesBackend","config_builder","",1,null],[13,"MissingConfigs","","",1,null],[12,"found","config_builder::Error","",3,null],[13,"MissingFullNodeNetwork","config_builder","",1,null],[13,"MissingNetworkKeyPairs","","",1,null],[13,"MissingSafetyRulesHost","","",1,null],[13,"MissingSafetyRulesToken","","",1,null],[13,"MissingValidatorNetwork","","",1,null],[13,"NoConfigs","","",1,null],[13,"NonZeroNetwork","","",1,null],[5,"test_config","","",null,[[]]],[11,"new","","",4,[[],["self"]]],[11,"advertised","","",4,[[["self"],["networkaddress"]],["self"]]],[11,"bootstrap","","",4,[[["self"],["networkaddress"]],["self"]]],[11,"full_node_index","","",4,[[["self"],["usize"]],["self"]]],[11,"full_nodes","","",4,[[["self"],["usize"]],["self"]]],[11,"full_node_seed","","",4,[[["self"]],["self"]]],[11,"genesis","","",4,[[["self"],["transaction"]],["self"]]],[11,"listen","","",4,[[["self"],["networkaddress"]],["self"]]],[11,"validators","","",4,[[["self"],["usize"]],["self"]]],[11,"enable_remote_authentication","","",4,[[["self"]],["self"]]],[11,"public","","",4,[[["self"]],["self"]]],[11,"seed","","",4,[[["self"]],["self"]]],[11,"template","","",4,[[["nodeconfig"],["self"]],["self"]]],[11,"build","","",4,[[["self"]],[["nodeconfig"],["result",["nodeconfig"]]]]],[11,"extend_validator","","",4,[[["self"],["nodeconfig"]],["result"]]],[11,"extend","","",4,[[["self"],["nodeconfig"]],["result"]]],[11,"build","","",0,[[["t"],["pathbuf"]],["result"]]],[11,"new","","",5,[[],["self"]]],[11,"advertised","","",5,[[["self"],["networkaddress"]],["self"]]],[11,"bootstrap","","",5,[[["self"],["networkaddress"]],["self"]]],[11,"build_waypoint","","",5,[[["self"],["bool"]],["self"]]],[11,"validator_index","","",5,[[["self"],["usize"]],["self"]]],[11,"listen","","",5,[[["self"],["networkaddress"]],["self"]]],[11,"validators","","",5,[[["self"],["usize"]],["self"]]],[11,"validators_in_genesis","","",5,[[["self"],["usize"],["option",["usize"]]],["self"]]],[11,"safety_rules_addr","","",5,[[["option",["socketaddr"]],["self"],["socketaddr"]],["self"]]],[11,"safety_rules_backend","","",5,[[["self"],["option",["string"]],["string"]],["self"]]],[11,"safety_rules_host","","",5,[[["self"],["option",["string"]],["string"]],["self"]]],[11,"safety_rules_namespace","","",5,[[["self"],["option",["string"]],["string"]],["self"]]],[11,"safety_rules_token","","",5,[[["self"],["option",["string"]],["string"]],["self"]]],[11,"seed","","",5,[[["self"]],["self"]]],[11,"template","","",5,[[["nodeconfig"],["self"]],["self"]]],[11,"build","","",5,[[["self"]],[["nodeconfig"],["result",["nodeconfig"]]]]],[11,"build_set","","",5,[[["self"]],[["vec",["nodeconfig"]],["result",["vec"]]]]],[11,"build_faucet_client","","",5,[[["self"]],["result"]]],[11,"build_common","","",5,[[["self"],["bool"]],["result"]]],[11,"build_faucet_key","","",5,[[["self"]]]],[8,"BuildSwarm","","",null,null],[10,"build_swarm","","Generate the configs for a swarm",6,[[["self"]],["result"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"clear","","",4,[[["self"]]]],[11,"initialize","","",4,[[]]],[11,"into_request","","",4,[[],["request"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"into_request","","",0,[[],["request"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"clear","","",5,[[["self"]]]],[11,"initialize","","",5,[[]]],[11,"into_request","","",5,[[],["request"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"into_request","","",1,[[],["request"]]],[11,"build_swarm","","",4,[[["self"]],["result"]]],[11,"build_swarm","","",5,[[["self"]],["result"]]],[11,"default","","",4,[[],["self"]]],[11,"default","","",5,[[],["self"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]]],"p":[[3,"SwarmConfig"],[4,"Error"],[13,"IndexError"],[13,"MissingConfigs"],[3,"FullNodeConfig"],[3,"ValidatorConfig"],[8,"BuildSwarm"]]};
searchIndex["consensus"] = {"doc":"Consensus for the Libra Core blockchain","i":[[0,"consensus_provider","consensus","LibraBFT implementation",null,null],[5,"start_consensus","consensus::consensus_provider","Helper function to start consensus based on configuration…",null,[[["arc",["statesyncclient"]],["vec",["signedtransaction"]],["statesyncclient"],["consensusrequest"],["sender",["consensusrequest"]],["consensusnetworksender",["vec"]],["dbreader"],["onchainconfigpayload"],["receiver",["onchainconfigpayload"]],["nodeconfig"],["arc",["dbreader"]],["consensusnetworkevents",["vec"]]],["runtime"]]],[0,"network_interface","consensus","LibraNet interface. Interface between Consensus and…",null,null],[3,"ConsensusNetworkSender","consensus::network_interface","The interface from Consensus to Networking layer.",null,null],[4,"ConsensusMsg","","Network type for consensus",null,null],[13,"BlockRetrievalRequest","","RPC to get a chain of block of the given length starting…",0,null],[13,"BlockRetrievalResponse","","Carries the returned blocks and the retrieval status.",0,null],[13,"EpochRetrievalRequest","","Request to get a EpochChangeProof from current_epoch to…",0,null],[13,"ProposalMsg","","ProposalMsg contains the required information for the…",0,null],[13,"SyncInfo","","This struct describes basic synchronization metadata.",0,null],[13,"EpochChangeProof","","A vector of LedgerInfo with contiguous increasing epoch…",0,null],[13,"VoteMsg","","VoteMsg is the struct that is ultimately sent by the voter…",0,null],[5,"add_to_network","","Create a new Sender that only sends for the…",null,[[["networkbuilder"]]]],[6,"ConsensusNetworkEvents","","The interface from Network to Consensus layer.",null,null],[11,"new","","Returns a Sender that only sends for the…",1,[[["peermanagerrequestsender"],["connectionrequestsender"],["connectivityrequest"],["sender",["connectivityrequest"]]],["self"]]],[11,"send_to","","Send a single message to the destination peer using the…",1,[[["self"],["consensusmsg"],["peerid"]],[["networkerror"],["result",["networkerror"]]]]],[11,"send_to_many","","Send a single message to the destination peers using the…",1,[[["self"],["consensusmsg"]],[["networkerror"],["result",["networkerror"]]]]],[11,"send_rpc","","Send a RPC to the destination peer using the…",1,[[["self"],["duration"],["consensusmsg"],["peerid"]]]],[11,"update_eligible_nodes","","Update set of nodes eligible to join the network. In the…",1,[[["vec",["validatorinfo"]],["validatorinfo"],["self"]]]],[0,"event_processor_fuzzing","consensus","",null,null],[5,"generate_corpus_proposal","consensus::event_processor_fuzzing","",null,[[],[["vec",["u8"]],["u8"]]]],[5,"fuzz_proposal","","",null,[[]]],[11,"from","consensus::network_interface","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"into_request","","",1,[[],["request"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"test_only_hash","","",0,[[["self"]],["hashvalue"]]],[11,"vzip","","",0,[[],["v"]]],[11,"into_request","","",0,[[],["request"]]],[11,"clone","","",0,[[["self"]],["consensusmsg"]]],[11,"clone","","",1,[[["self"]],["consensusnetworksender"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"deserialize","","",0,[[["__d"]],["result"]]],[11,"serialize","","",0,[[["self"],["__s"]],["result"]]]],"p":[[4,"ConsensusMsg"],[3,"ConsensusNetworkSender"]]};
searchIndex["consensus_types"] = {"doc":"","i":[[0,"accumulator_extension_proof","consensus_types","",null,null],[3,"AccumulatorExtensionProof","consensus_types::accumulator_extension_proof","A proof that first verifies that establishes correct…",null,null],[11,"new","","",0,[[["vec",["hashvalue"]],["leafcount"],["hashvalue"]],["self"]]],[11,"verify","","",0,[[["self"],["hashvalue"]],[["inmemoryaccumulator"],["result",["inmemoryaccumulator"]]]]],[0,"block","consensus_types","",null,null],[3,"Block","consensus_types::block","Block has the core data of a consensus block that should…",null,null],[0,"block_test_utils","","",null,null],[5,"new_proposal","consensus_types::block::block_test_utils","This strategy is a swiss-army tool to produce a low-level…",null,[[["hashvalue"],["quorumcert"]]]],[5,"genesis_strategy","","This produces the genesis block",null,[[]]],[5,"unmoored_block","","This produces an unmoored block, with arbitrary parent &…",null,[[]]],[5,"leaf_strategy","","Offers the genesis block.",null,[[]]],[5,"fake_id","","This produces a block with an invalid id (and therefore…",null,[[]]],[5,"some_round","","This produces a round that is often higher than the…",null,[[["round"]]]],[5,"block_forest_and_its_keys","","This returns keys and a block forest created from them",null,[[["u32"],["usize"]]]],[5,"get_current_timestamp","","",null,[[],["duration"]]],[5,"placeholder_ledger_info","","",null,[[],["ledgerinfo"]]],[5,"gen_test_certificate","","",null,[[["blockinfo"],["vec",["validatorsigner"]],["validatorsigner"],["option",["blockinfo"]]],["quorumcert"]]],[5,"placeholder_certificate_for_block","","",null,[[["hashvalue"],["vec",["validatorsigner"]],["validatorsigner"],["u64"]],["quorumcert"]]],[5,"certificate_for_genesis","","",null,[[],["quorumcert"]]],[11,"author","consensus_types::block","",1,[[["self"]],[["option",["author"]],["author"]]]],[11,"epoch","","",1,[[["self"]],["u64"]]],[11,"id","","",1,[[["self"]],["hashvalue"]]],[11,"parent_id","","",1,[[["self"]],["hashvalue"]]],[11,"payload","","",1,[[["self"]],[["t"],["option"]]]],[11,"quorum_cert","","",1,[[["self"]],["quorumcert"]]],[11,"round","","",1,[[["self"]],["round"]]],[11,"signature","","",1,[[["self"]],[["ed25519signature"],["option",["ed25519signature"]]]]],[11,"timestamp_usecs","","",1,[[["self"]],["u64"]]],[11,"gen_block_info","","",1,[[["version"],["hashvalue"],["option",["epochinfo"]],["self"],["epochinfo"]],["blockinfo"]]],[11,"is_genesis_block","","",1,[[["self"]],["bool"]]],[11,"is_nil_block","","",1,[[["self"]],["bool"]]],[11,"make_genesis_block","","",1,[[],["self"]]],[11,"make_genesis_block_from_ledger_info","","Construct new genesis block for next epoch…",1,[[["ledgerinfo"]],["self"]]],[11,"new_nil","","The NIL blocks are special: they're not carrying any real…",1,[[["round"],["quorumcert"]],["self"]]],[11,"new_proposal","","",1,[[["round"],["validatorsigner"],["quorumcert"],["t"],["u64"]],["self"]]],[11,"new_proposal_from_block_data","","",1,[[["validatorsigner"],["blockdata"]],["self"]]],[11,"validate_signatures","","Verifies that the proposal and the QC are correctly…",1,[[["self"],["validatorverifier"]],["result"]]],[11,"verify_well_formed","","Makes sure that the proposal makes sense, independently of…",1,[[["self"]],["result"]]],[0,"block_data","consensus_types","",null,null],[3,"BlockData","consensus_types::block_data","Block has the core data of a consensus block that should…",null,null],[3,"BlockDataHasher","","",null,null],[4,"BlockType","","",null,null],[13,"Proposal","","",2,null],[12,"payload","consensus_types::block_data::BlockType","T of the block (e.g. one or more transaction(s)",3,null],[12,"author","","Author of the block that can be validated by the author's…",3,null],[13,"NilBlock","consensus_types::block_data","NIL blocks don't have authors or signatures: they're…",2,null],[13,"Genesis","","A genesis block is the first committed block in any epoch…",2,null],[11,"author","","",4,[[["self"]],[["option",["author"]],["author"]]]],[11,"block_type","","",4,[[["self"]],["blocktype"]]],[11,"epoch","","",4,[[["self"]],["u64"]]],[11,"parent_id","","",4,[[["self"]],["hashvalue"]]],[11,"payload","","",4,[[["self"]],[["t"],["option"]]]],[11,"round","","",4,[[["self"]],["round"]]],[11,"timestamp_usecs","","",4,[[["self"]],["u64"]]],[11,"quorum_cert","","",4,[[["self"]],["quorumcert"]]],[11,"is_genesis_block","","",4,[[["self"]],["bool"]]],[11,"is_nil_block","","",4,[[["self"]],["bool"]]],[11,"new_genesis_from_ledger_info","","",4,[[["ledgerinfo"]],["self"]]],[11,"new_genesis","","",4,[[["quorumcert"],["u64"]],["self"]]],[11,"new_nil","","",4,[[["round"],["quorumcert"]],["self"]]],[11,"new_proposal","","",4,[[["round"],["author"],["quorumcert"],["t"],["u64"]],["self"]]],[0,"block_retrieval","consensus_types","",null,null],[3,"BlockRetrievalRequest","consensus_types::block_retrieval","RPC to get a chain of block of the given length starting…",null,null],[3,"BlockRetrievalResponse","","Carries the returned blocks and the retrieval status.",null,null],[4,"BlockRetrievalStatus","","",null,null],[13,"Succeeded","","",5,null],[13,"IdNotFound","","",5,null],[13,"NotEnoughBlocks","","",5,null],[11,"new","","",6,[[["hashvalue"],["u64"]],["self"]]],[11,"block_id","","",6,[[["self"]],["hashvalue"]]],[11,"num_blocks","","",6,[[["self"]],["u64"]]],[11,"new","","",7,[[["blockretrievalstatus"],["block"],["vec",["block"]]],["self"]]],[11,"status","","",7,[[["self"]],["blockretrievalstatus"]]],[11,"blocks","","",7,[[["self"]],["vec"]]],[11,"verify","","",7,[[["hashvalue"],["validatorverifier"],["u64"],["self"]],["result"]]],[0,"common","consensus_types","",null,null],[6,"Round","consensus_types::common","The round of a block is a consensus-internal counter,…",null,null],[6,"Author","","Author refers to the author's account address",null,null],[8,"Payload","","Trait alias for the Block Payload.",null,null],[0,"epoch_retrieval","consensus_types","",null,null],[3,"EpochRetrievalRequest","consensus_types::epoch_retrieval","Request to get a EpochChangeProof from current_epoch to…",null,null],[12,"start_epoch","","",8,null],[12,"end_epoch","","",8,null],[0,"executed_block","consensus_types","",null,null],[3,"ExecutedBlock","consensus_types::executed_block","ExecutedBlocks are managed in a speculative tree, the…",null,null],[11,"new","","",9,[[["block"],["statecomputeresult"]],["self"]]],[11,"block","","",9,[[["self"]],["block"]]],[11,"root_hash","","",9,[[["self"]],["hashvalue"]]],[11,"epoch","","",9,[[["self"]],["u64"]]],[11,"id","","",9,[[["self"]],["hashvalue"]]],[11,"payload","","",9,[[["self"]],[["t"],["option"]]]],[11,"parent_id","","",9,[[["self"]],["hashvalue"]]],[11,"quorum_cert","","",9,[[["self"]],["quorumcert"]]],[11,"round","","",9,[[["self"]],["round"]]],[11,"timestamp_usecs","","",9,[[["self"]],["u64"]]],[11,"compute_result","","",9,[[["self"]],["statecomputeresult"]]],[11,"block_info","","",9,[[["self"]],["blockinfo"]]],[11,"is_nil_block","","",9,[[["self"]],["bool"]]],[0,"proposal_msg","consensus_types","",null,null],[3,"ProposalMsg","consensus_types::proposal_msg","ProposalMsg contains the required information for the…",null,null],[11,"new","","Creates a new proposal.",10,[[["block"],["syncinfo"]],["self"]]],[11,"epoch","","",10,[[["self"]],["u64"]]],[11,"verify_well_formed","","Verifies that the ProposalMsg is well-formed.",10,[[["self"]],["result"]]],[11,"verify","","",10,[[["self"],["validatorverifier"]],["result"]]],[11,"proposal","","",10,[[["self"]],["block"]]],[11,"take_proposal","","",10,[[],["block"]]],[11,"sync_info","","",10,[[["self"]],["syncinfo"]]],[11,"round","","",10,[[["self"]],["round"]]],[11,"proposer","","",10,[[["self"]],["author"]]],[0,"quorum_cert","consensus_types","",null,null],[3,"QuorumCert","consensus_types::quorum_cert","",null,null],[11,"new","","",11,[[["votedata"],["ledgerinfowithsignatures"]],["self"]]],[11,"vote_data","","",11,[[["self"]],["votedata"]]],[11,"certified_block","","",11,[[["self"]],["blockinfo"]]],[11,"parent_block","","",11,[[["self"]],["blockinfo"]]],[11,"ledger_info","","",11,[[["self"]],["ledgerinfowithsignatures"]]],[11,"commit_info","","",11,[[["self"]],["blockinfo"]]],[11,"ends_epoch","","If the QC commits reconfiguration and starts a new epoch",11,[[["self"]],["bool"]]],[11,"certificate_for_genesis_from_ledger_info","","QuorumCert for the genesis block deterministically…",11,[[["ledgerinfo"],["hashvalue"]],["quorumcert"]]],[11,"verify","","",11,[[["self"],["validatorverifier"]],["result"]]],[0,"sync_info","consensus_types","",null,null],[3,"SyncInfo","consensus_types::sync_info","This struct describes basic synchronization metadata.",null,null],[11,"new","","",12,[[["quorumcert"],["option",["timeoutcertificate"]],["timeoutcertificate"]],["self"]]],[11,"highest_quorum_cert","","Highest quorum certificate",12,[[["self"]],["quorumcert"]]],[11,"highest_commit_cert","","Highest ledger info",12,[[["self"]],["quorumcert"]]],[11,"highest_timeout_certificate","","Highest timeout certificate if available",12,[[["self"]],[["timeoutcertificate"],["option",["timeoutcertificate"]]]]],[11,"highest_certified_round","","",12,[[["self"]],["round"]]],[11,"highest_timeout_round","","",12,[[["self"]],["round"]]],[11,"highest_commit_round","","",12,[[["self"]],["round"]]],[11,"highest_round","","The highest round the SyncInfo carries.",12,[[["self"]],["round"]]],[11,"verify","","",12,[[["self"],["validatorverifier"]],["result"]]],[11,"epoch","","",12,[[["self"]],["u64"]]],[11,"is_stale","","",12,[[["self"],["syncinfo"]],["bool"]]],[0,"timeout","consensus_types","",null,null],[3,"Timeout","consensus_types::timeout","This structure contains all the information necessary to…",null,null],[3,"TimeoutHasher","","",null,null],[11,"new","","",13,[[["round"],["u64"]],["self"]]],[11,"from_block","","",13,[[["block"]],["self"]]],[11,"epoch","","",13,[[["self"]],["u64"]]],[11,"round","","",13,[[["self"]],["round"]]],[11,"sign","","",13,[[["validatorsigner"],["self"]],["ed25519signature"]]],[0,"timeout_certificate","consensus_types","",null,null],[3,"TimeoutCertificate","consensus_types::timeout_certificate","TimeoutCertificate is a proof that 2f+1 participants in…",null,null],[11,"new","","Creates new TimeoutCertificate",14,[[["timeout"]],["self"]]],[11,"verify","","Verifies the signatures for the round",14,[[["self"],["validatorverifier"]],["result"]]],[11,"epoch","","Returns the epoch of the timeout certificate",14,[[["self"]],["u64"]]],[11,"round","","Returns the round of the timeout certificate",14,[[["self"]],["round"]]],[11,"signatures","","Returns the signatures certifying the round",14,[[["self"]],["btreemap"]]],[11,"add_signature","","",14,[[["self"],["author"],["ed25519signature"]]]],[11,"remove_signature","","",14,[[["self"],["author"]]]],[0,"vote","consensus_types","",null,null],[3,"Vote","consensus_types::vote","Vote is the struct that is ultimately sent by the voter in…",null,null],[11,"new","","Generates a new Vote corresponding to the \"fast-vote\" path…",15,[[["ledgerinfo"],["votedata"],["author"],["validatorsigner"]],["self"]]],[11,"add_timeout_signature","","Generates a round signature, which can then be used for…",15,[[["self"],["ed25519signature"]]]],[11,"vote_data","","",15,[[["self"]],["votedata"]]],[11,"author","","Return the author of the vote",15,[[["self"]],["author"]]],[11,"ledger_info","","Return the LedgerInfo associated with this vote",15,[[["self"]],["ledgerinfo"]]],[11,"signature","","Return the signature of the vote",15,[[["self"]],["ed25519signature"]]],[11,"timeout","","Returns the hash of the data represent by a timeout proposal",15,[[["self"]],["timeout"]]],[11,"epoch","","Return the epoch of the vote",15,[[["self"]],["u64"]]],[11,"timeout_signature","","Returns the signature for the…",15,[[["self"]],[["ed25519signature"],["option",["ed25519signature"]]]]],[11,"is_timeout","","The vote message is considered a timeout vote message if…",15,[[["self"]],["bool"]]],[11,"verify","","Verifies that the consensus data hash of LedgerInfo…",15,[[["self"],["validatorverifier"]],["result"]]],[0,"vote_data","consensus_types","",null,null],[3,"VoteData","consensus_types::vote_data","VoteData keeps the information about the block, and its…",null,null],[3,"VoteDataHasher","","",null,null],[11,"new","","",16,[[["blockinfo"]],["self"]]],[11,"parent","","Contains all the block information needed for voting for…",16,[[["self"]],["blockinfo"]]],[11,"proposed","","Contains all the block information for the parent for the…",16,[[["self"]],["blockinfo"]]],[11,"verify","","",16,[[["self"]],["result"]]],[0,"vote_msg","consensus_types","",null,null],[3,"VoteMsg","consensus_types::vote_msg","VoteMsg is the struct that is ultimately sent by the voter…",null,null],[11,"new","","",17,[[["syncinfo"],["vote"]],["self"]]],[11,"vote","","Container for actual voting material",17,[[["self"]],["vote"]]],[11,"sync_info","","SyncInfo of the given vote message",17,[[["self"]],["syncinfo"]]],[11,"epoch","","",17,[[["self"]],["u64"]]],[11,"proposed_block_id","","",17,[[["self"]],["hashvalue"]]],[11,"verify","","",17,[[["self"],["validatorverifier"]],["result"]]],[0,"vote_proposal","consensus_types","",null,null],[3,"VoteProposal","consensus_types::vote_proposal","This structure contains all the information needed by…",null,null],[11,"new","","",18,[[["block"],["transactionaccumulatorhasher"],["option",["epochinfo"]],["accumulatorextensionproof",["transactionaccumulatorhasher"]],["epochinfo"]],["self"]]],[11,"accumulator_extension_proof","","",18,[[["self"]],["accumulatorextensionproof"]]],[11,"block","","",18,[[["self"]],["block"]]],[11,"next_epoch_info","","",18,[[["self"]],[["epochinfo"],["option",["epochinfo"]]]]],[11,"from","consensus_types::accumulator_extension_proof","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"test_only_hash","","",0,[[["self"]],["hashvalue"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","consensus_types::block","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"test_only_hash","","",1,[[["self"]],["hashvalue"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","consensus_types::block_data","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"test_only_hash","","",4,[[["self"]],["hashvalue"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"vzip","","",19,[[],["v"]]],[11,"clear","","",19,[[["self"]]]],[11,"initialize","","",19,[[]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"test_only_hash","","",2,[[["self"]],["hashvalue"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","consensus_types::block_retrieval","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"test_only_hash","","",6,[[["self"]],["hashvalue"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"test_only_hash","","",7,[[["self"]],["hashvalue"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"test_only_hash","","",5,[[["self"]],["hashvalue"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","consensus_types::epoch_retrieval","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"test_only_hash","","",8,[[["self"]],["hashvalue"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","consensus_types::executed_block","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","consensus_types::proposal_msg","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"test_only_hash","","",10,[[["self"]],["hashvalue"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","consensus_types::quorum_cert","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"test_only_hash","","",11,[[["self"]],["hashvalue"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","consensus_types::sync_info","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"test_only_hash","","",12,[[["self"]],["hashvalue"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","consensus_types::timeout","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"test_only_hash","","",13,[[["self"]],["hashvalue"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"vzip","","",20,[[],["v"]]],[11,"clear","","",20,[[["self"]]]],[11,"initialize","","",20,[[]]],[11,"from","consensus_types::timeout_certificate","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"to_string","","",14,[[["self"]],["string"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"test_only_hash","","",14,[[["self"]],["hashvalue"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","consensus_types::vote","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"to_string","","",15,[[["self"]],["string"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"test_only_hash","","",15,[[["self"]],["hashvalue"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","consensus_types::vote_data","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"to_string","","",16,[[["self"]],["string"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"test_only_hash","","",16,[[["self"]],["hashvalue"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"vzip","","",21,[[],["v"]]],[11,"clear","","",21,[[["self"]]]],[11,"initialize","","",21,[[]]],[11,"from","consensus_types::vote_msg","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"to_string","","",17,[[["self"]],["string"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"test_only_hash","","",17,[[["self"]],["hashvalue"]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","consensus_types::vote_proposal","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"to_string","","",18,[[["self"]],["string"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"test_only_hash","","",18,[[["self"]],["hashvalue"]]],[11,"vzip","","",18,[[],["v"]]],[11,"clone","consensus_types::accumulator_extension_proof","",0,[[["self"]],["accumulatorextensionproof"]]],[11,"clone","consensus_types::block","",1,[[["self"]],["block"]]],[11,"clone","consensus_types::block_data","",2,[[["self"]],["blocktype"]]],[11,"clone","","",4,[[["self"]],["blockdata"]]],[11,"clone","","",19,[[["self"]],["blockdatahasher"]]],[11,"clone","consensus_types::block_retrieval","",6,[[["self"]],["blockretrievalrequest"]]],[11,"clone","","",5,[[["self"]],["blockretrievalstatus"]]],[11,"clone","","",7,[[["self"]],["blockretrievalresponse"]]],[11,"clone","consensus_types::epoch_retrieval","",8,[[["self"]],["epochretrievalrequest"]]],[11,"clone","consensus_types::executed_block","",9,[[["self"]],["executedblock"]]],[11,"clone","consensus_types::proposal_msg","",10,[[["self"]],["proposalmsg"]]],[11,"clone","consensus_types::quorum_cert","",11,[[["self"]],["quorumcert"]]],[11,"clone","consensus_types::sync_info","",12,[[["self"]],["syncinfo"]]],[11,"clone","consensus_types::timeout","",13,[[["self"]],["timeout"]]],[11,"clone","","",20,[[["self"]],["timeouthasher"]]],[11,"clone","consensus_types::timeout_certificate","",14,[[["self"]],["timeoutcertificate"]]],[11,"clone","consensus_types::vote","",15,[[["self"]],["vote"]]],[11,"clone","consensus_types::vote_data","",16,[[["self"]],["votedata"]]],[11,"clone","","",21,[[["self"]],["votedatahasher"]]],[11,"clone","consensus_types::vote_msg","",17,[[["self"]],["votemsg"]]],[11,"clone","consensus_types::vote_proposal","",18,[[["self"]],["voteproposal"]]],[11,"default","consensus_types::block_data","",19,[[],["self"]]],[11,"default","consensus_types::timeout","",20,[[],["self"]]],[11,"default","consensus_types::vote_data","",21,[[],["self"]]],[11,"eq","consensus_types::block","",1,[[["self"],["block"]],["bool"]]],[11,"ne","","",1,[[["self"],["block"]],["bool"]]],[11,"eq","consensus_types::block_data","",2,[[["self"],["blocktype"]],["bool"]]],[11,"ne","","",2,[[["self"],["blocktype"]],["bool"]]],[11,"eq","","",4,[[["blockdata"],["self"]],["bool"]]],[11,"ne","","",4,[[["blockdata"],["self"]],["bool"]]],[11,"eq","consensus_types::block_retrieval","",6,[[["self"],["blockretrievalrequest"]],["bool"]]],[11,"ne","","",6,[[["self"],["blockretrievalrequest"]],["bool"]]],[11,"eq","","",5,[[["self"],["blockretrievalstatus"]],["bool"]]],[11,"eq","","",7,[[["blockretrievalresponse"],["self"]],["bool"]]],[11,"ne","","",7,[[["blockretrievalresponse"],["self"]],["bool"]]],[11,"eq","consensus_types::executed_block","",9,[[["executedblock"],["self"]],["bool"]]],[11,"ne","","",9,[[["executedblock"],["self"]],["bool"]]],[11,"eq","consensus_types::proposal_msg","",10,[[["proposalmsg"],["self"]],["bool"]]],[11,"ne","","",10,[[["proposalmsg"],["self"]],["bool"]]],[11,"eq","consensus_types::quorum_cert","",11,[[["quorumcert"],["self"]],["bool"]]],[11,"ne","","",11,[[["quorumcert"],["self"]],["bool"]]],[11,"eq","consensus_types::sync_info","",12,[[["self"],["syncinfo"]],["bool"]]],[11,"ne","","",12,[[["self"],["syncinfo"]],["bool"]]],[11,"eq","consensus_types::timeout","",13,[[["self"],["timeout"]],["bool"]]],[11,"ne","","",13,[[["self"],["timeout"]],["bool"]]],[11,"eq","consensus_types::timeout_certificate","",14,[[["timeoutcertificate"],["self"]],["bool"]]],[11,"ne","","",14,[[["timeoutcertificate"],["self"]],["bool"]]],[11,"eq","consensus_types::vote","",15,[[["self"],["vote"]],["bool"]]],[11,"ne","","",15,[[["self"],["vote"]],["bool"]]],[11,"eq","consensus_types::vote_data","",16,[[["votedata"],["self"]],["bool"]]],[11,"ne","","",16,[[["votedata"],["self"]],["bool"]]],[11,"eq","consensus_types::vote_msg","",17,[[["votemsg"],["self"]],["bool"]]],[11,"ne","","",17,[[["votemsg"],["self"]],["bool"]]],[11,"fmt","consensus_types::accumulator_extension_proof","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","consensus_types::block","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","consensus_types::block_data","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","consensus_types::block_retrieval","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","consensus_types::epoch_retrieval","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","consensus_types::executed_block","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","consensus_types::proposal_msg","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","consensus_types::quorum_cert","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","consensus_types::sync_info","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","consensus_types::timeout","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","consensus_types::timeout_certificate","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","consensus_types::vote","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","consensus_types::vote_data","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","consensus_types::vote_msg","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","consensus_types::block","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","consensus_types::block_retrieval","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","consensus_types::executed_block","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","consensus_types::proposal_msg","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","consensus_types::quorum_cert","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","consensus_types::sync_info","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","consensus_types::timeout","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","consensus_types::timeout_certificate","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","consensus_types::vote","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","consensus_types::vote_data","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","consensus_types::vote_msg","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","consensus_types::vote_proposal","",18,[[["formatter"],["self"]],["result"]]],[11,"deserialize","consensus_types::accumulator_extension_proof","",0,[[["__d"]],["result"]]],[11,"deserialize","consensus_types::block","",1,[[["d"]],["result"]]],[11,"deserialize","consensus_types::block_data","",2,[[["__d"]],["result"]]],[11,"deserialize","","",4,[[["__d"]],["result"]]],[11,"deserialize","consensus_types::block_retrieval","",6,[[["__d"]],["result"]]],[11,"deserialize","","",5,[[["__d"]],["result"]]],[11,"deserialize","","",7,[[["__d"]],["result"]]],[11,"deserialize","consensus_types::epoch_retrieval","",8,[[["__d"]],["result"]]],[11,"deserialize","consensus_types::proposal_msg","",10,[[["__d"]],["result"]]],[11,"deserialize","consensus_types::quorum_cert","",11,[[["__d"]],["result"]]],[11,"deserialize","consensus_types::sync_info","",12,[[["__d"]],["result"]]],[11,"deserialize","consensus_types::timeout","",13,[[["__d"]],["result"]]],[11,"deserialize","consensus_types::timeout_certificate","",14,[[["__d"]],["result"]]],[11,"deserialize","consensus_types::vote","",15,[[["__d"]],["result"]]],[11,"deserialize","consensus_types::vote_data","",16,[[["__d"]],["result"]]],[11,"deserialize","consensus_types::vote_msg","",17,[[["__d"]],["result"]]],[11,"deserialize","consensus_types::vote_proposal","",18,[[["__d"]],["result"]]],[11,"serialize","consensus_types::accumulator_extension_proof","",0,[[["self"],["__s"]],["result"]]],[11,"serialize","consensus_types::block","",1,[[["self"],["__s"]],["result"]]],[11,"serialize","consensus_types::block_data","",2,[[["self"],["__s"]],["result"]]],[11,"serialize","","",4,[[["self"],["__s"]],["result"]]],[11,"serialize","consensus_types::block_retrieval","",6,[[["self"],["__s"]],["result"]]],[11,"serialize","","",5,[[["self"],["__s"]],["result"]]],[11,"serialize","","",7,[[["self"],["__s"]],["result"]]],[11,"serialize","consensus_types::epoch_retrieval","",8,[[["self"],["__s"]],["result"]]],[11,"serialize","consensus_types::proposal_msg","",10,[[["self"],["__s"]],["result"]]],[11,"serialize","consensus_types::quorum_cert","",11,[[["self"],["__s"]],["result"]]],[11,"serialize","consensus_types::sync_info","",12,[[["self"],["__s"]],["result"]]],[11,"serialize","consensus_types::timeout","",13,[[["self"],["__s"]],["result"]]],[11,"serialize","consensus_types::timeout_certificate","",14,[[["self"],["__s"]],["result"]]],[11,"serialize","consensus_types::vote","",15,[[["self"],["__s"]],["result"]]],[11,"serialize","consensus_types::vote_data","",16,[[["self"],["__s"]],["result"]]],[11,"serialize","consensus_types::vote_msg","",17,[[["self"],["__s"]],["result"]]],[11,"serialize","consensus_types::vote_proposal","",18,[[["self"],["__s"]],["result"]]],[11,"hash","consensus_types::block_data","",4,[[["self"]],["hashvalue"]]],[11,"hash","consensus_types::timeout","",13,[[["self"]],["hashvalue"]]],[11,"hash","consensus_types::vote_data","",16,[[["self"]],["hashvalue"]]],[11,"finish","consensus_types::block_data","",19,[[],["hashvalue"]]],[11,"write","","",19,[[["self"]],["self"]]],[11,"finish","consensus_types::timeout","",20,[[],["hashvalue"]]],[11,"write","","",20,[[["self"]],["self"]]],[11,"finish","consensus_types::vote_data","",21,[[],["hashvalue"]]],[11,"write","","",21,[[["self"]],["self"]]]],"p":[[3,"AccumulatorExtensionProof"],[3,"Block"],[4,"BlockType"],[13,"Proposal"],[3,"BlockData"],[4,"BlockRetrievalStatus"],[3,"BlockRetrievalRequest"],[3,"BlockRetrievalResponse"],[3,"EpochRetrievalRequest"],[3,"ExecutedBlock"],[3,"ProposalMsg"],[3,"QuorumCert"],[3,"SyncInfo"],[3,"Timeout"],[3,"TimeoutCertificate"],[3,"Vote"],[3,"VoteData"],[3,"VoteMsg"],[3,"VoteProposal"],[3,"BlockDataHasher"],[3,"TimeoutHasher"],[3,"VoteDataHasher"]]};
searchIndex["crash_handler"] = {"doc":"","i":[[3,"CrashInfo","crash_handler","",null,null],[5,"setup_panic_handler","","Invoke to ensure process exits on a thread panic.",null,[[]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"serialize","","",0,[[["self"],["__s"]],["result"]]]],"p":[[3,"CrashInfo"]]};
searchIndex["datatest_stable"] = {"doc":"`datatest-stable` is a very simple test harness intended…","i":[[3,"Requirements","datatest_stable","",null,null],[5,"runner","","",null,[[]]],[11,"new","","",0,[[["string"]],["self"]]],[0,"utils","","",null,null],[5,"iterate_directory","datatest_stable::utils","Helper function to iterate through all the files in the…",null,[[["path"]]]],[5,"derive_test_name","","",null,[[["str"],["path"]],["string"]]],[6,"Result","datatest_stable","",null,null],[14,"harness","","`datatest-stable` test harness entry point. Should be…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]]],"p":[[3,"Requirements"]]};
searchIndex["debug_interface"] = {"doc":"","i":[[3,"NodeDebugClient","debug_interface","Implement default utility client for NodeDebugInterface",null,null],[0,"proto","","",null,null],[3,"GetNodeDetailsRequest","debug_interface::proto","",null,null],[3,"GetNodeDetailsResponse","","",null,null],[12,"stats","","",0,null],[3,"GetEventsRequest","","",null,null],[3,"GetEventsResponse","","",null,null],[12,"events","","",1,null],[3,"Event","","",null,null],[12,"name","","",2,null],[12,"timestamp","","",2,null],[12,"json","","",2,null],[0,"node_debug_interface_client","","Generated client implementations.",null,null],[3,"NodeDebugInterfaceClient","debug_interface::proto::node_debug_interface_client","",null,null],[11,"connect","","Attempt to create a new client by connecting to a given…",3,[[["d"]]]],[11,"new","","",3,[[["t"]],["self"]]],[11,"with_interceptor","","",3,[[["t"]],["self"]]],[11,"get_node_details","","Returns debug information about node",3,[[["self"]]]],[11,"get_events","","Returns recent events generated by event! macro",3,[[["self"]]]],[0,"node_debug_interface_server","debug_interface::proto","Generated server implementations.",null,null],[8,"NodeDebugInterface","debug_interface::proto::node_debug_interface_server","Generated trait containing gRPC methods that should be…",null,null],[10,"get_node_details","","Returns debug information about node",4,[[["getnodedetailsrequest"],["self"],["request",["getnodedetailsrequest"]]],[["box",["future"]],["pin",["box"]]]]],[10,"get_events","","Returns recent events generated by event! macro",4,[[["self"],["request",["geteventsrequest"]],["geteventsrequest"]],[["pin",["box"]],["box",["future"]]]]],[0,"json_log","debug_interface","",null,null],[3,"JsonLogEntry","debug_interface::json_log","",null,null],[12,"name","","",5,null],[12,"timestamp","","",5,null],[12,"json","","",5,null],[5,"send_json_log","","Sends event to event stream.",null,[[["jsonlogentry"]]]],[5,"pop_last_entries","","Get up to MAX_EVENTS_IN_QUEUE last events and clears the…",null,[[],[["jsonlogentry"],["vec",["jsonlogentry"]]]]],[11,"new","","",5,[[["str"],["value"]],["self"]]],[0,"libra_trace","debug_interface","",null,null],[3,"TraceBlockGuard","debug_interface::libra_trace","",null,null],[5,"random_node","","",null,[[["str"]],[["option",["string"]],["string"]]]],[5,"trace_node","","",null,[[["str"]]]],[17,"TRACE_EVENT","","",null,null],[17,"TRACE_EDGE","","",null,null],[11,"new_entered","","",6,[[["str"],["string"]],["traceblockguard"]]],[0,"node_debug_service","debug_interface","Debug interface to access information in a specific node.",null,null],[3,"NodeDebugService","debug_interface::node_debug_service","",null,null],[5,"parse_events","","",null,[[["event"],["vec",["event"]]],[["jsonlogentry"],["vec",["jsonlogentry"]]]]],[5,"parse_event","","",null,[[["event"]],["jsonlogentry"]]],[11,"new","","",7,[[],["self"]]],[0,"prelude","debug_interface","",null,null],[11,"new","","Create NodeDebugInterfaceClient from a valid socket address.",8,[[["str"],["asref",["str"]],["u16"]],["self"]]],[11,"get_node_metric","","",8,[[["str"],["self"],["asref",["str"]]],[["result",["option"]],["option",["i64"]]]]],[11,"get_node_metrics","","",8,[[["self"]],[["hashmap",["string","i64"]],["result",["hashmap"]]]]],[11,"get_events","","",8,[[["self"]],[["geteventsresponse"],["result",["geteventsresponse"]]]]],[14,"event","","Writes event to event stream Example: event!(\"committed\",…",null,null],[14,"trace_event","","",null,null],[14,"trace_code_block","","",null,null],[14,"end_trace","","",null,null],[14,"trace_edge","","",null,null],[14,"format_node","","",null,null],[14,"__trace_fmt_gen","","",null,null],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"into_request","","",8,[[],["request"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","debug_interface::proto","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"into_request","","",9,[[],["request"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"into_request","","",0,[[],["request"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"into_request","","",10,[[],["request"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"into_request","","",1,[[],["request"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"into_request","","",2,[[],["request"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","debug_interface::proto::node_debug_interface_client","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"into_request","","",3,[[],["request"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","debug_interface::json_log","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"into_request","","",5,[[],["request"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","debug_interface::libra_trace","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"into_request","","",6,[[],["request"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","debug_interface::node_debug_service","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"into_request","","",7,[[],["request"]]],[11,"vzip","","",7,[[],["v"]]],[11,"get_node_details","","",7,[[["request",["getnodedetailsrequest"]],["self"],["getnodedetailsrequest"]],[["box",["future"]],["pin",["box"]]]]],[11,"get_events","","",7,[[["self"],["geteventsrequest"],["request",["geteventsrequest"]]],[["box",["future"]],["pin",["box"]]]]],[11,"drop","debug_interface::libra_trace","",6,[[["self"]]]],[11,"clone","debug_interface::proto","",9,[[["self"]],["getnodedetailsrequest"]]],[11,"clone","","",0,[[["self"]],["getnodedetailsresponse"]]],[11,"clone","","",10,[[["self"]],["geteventsrequest"]]],[11,"clone","","",1,[[["self"]],["geteventsresponse"]]],[11,"clone","","",2,[[["self"]],["event"]]],[11,"clone","debug_interface::proto::node_debug_interface_client","",3,[[["self"]],["self"]]],[11,"clone","debug_interface::node_debug_service","",7,[[["self"]],["nodedebugservice"]]],[11,"default","debug_interface::proto","",9,[[],["getnodedetailsrequest"]]],[11,"default","","",0,[[],["getnodedetailsresponse"]]],[11,"default","","",10,[[],["geteventsrequest"]]],[11,"default","","",1,[[],["geteventsresponse"]]],[11,"default","","",2,[[],["event"]]],[11,"default","debug_interface::node_debug_service","",7,[[],["nodedebugservice"]]],[11,"eq","debug_interface::proto","",9,[[["getnodedetailsrequest"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["getnodedetailsresponse"]],["bool"]]],[11,"ne","","",0,[[["self"],["getnodedetailsresponse"]],["bool"]]],[11,"eq","","",10,[[["geteventsrequest"],["self"]],["bool"]]],[11,"eq","","",1,[[["geteventsresponse"],["self"]],["bool"]]],[11,"ne","","",1,[[["geteventsresponse"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["event"]],["bool"]]],[11,"ne","","",2,[[["self"],["event"]],["bool"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","debug_interface::proto::node_debug_interface_client","",3,[[["formatter"],["self"]],["result"]]],[11,"encode_raw","debug_interface::proto","",9,[[["self"],["b"]]]],[11,"merge_field","","",9,[[["u32"],["b"],["self"],["wiretype"],["decodecontext"]],[["decodeerror"],["result",["decodeerror"]]]]],[11,"encoded_len","","",9,[[["self"]],["usize"]]],[11,"clear","","",9,[[["self"]]]],[11,"encode_raw","","",0,[[["self"],["b"]]]],[11,"merge_field","","",0,[[["u32"],["b"],["self"],["wiretype"],["decodecontext"]],[["decodeerror"],["result",["decodeerror"]]]]],[11,"encoded_len","","",0,[[["self"]],["usize"]]],[11,"clear","","",0,[[["self"]]]],[11,"encode_raw","","",10,[[["self"],["b"]]]],[11,"merge_field","","",10,[[["u32"],["b"],["self"],["wiretype"],["decodecontext"]],[["decodeerror"],["result",["decodeerror"]]]]],[11,"encoded_len","","",10,[[["self"]],["usize"]]],[11,"clear","","",10,[[["self"]]]],[11,"encode_raw","","",1,[[["self"],["b"]]]],[11,"merge_field","","",1,[[["u32"],["b"],["self"],["wiretype"],["decodecontext"]],[["decodeerror"],["result",["decodeerror"]]]]],[11,"encoded_len","","",1,[[["self"]],["usize"]]],[11,"clear","","",1,[[["self"]]]],[11,"encode_raw","","",2,[[["self"],["b"]]]],[11,"merge_field","","",2,[[["u32"],["b"],["self"],["wiretype"],["decodecontext"]],[["decodeerror"],["result",["decodeerror"]]]]],[11,"encoded_len","","",2,[[["self"]],["usize"]]],[11,"clear","","",2,[[["self"]]]]],"p":[[3,"GetNodeDetailsResponse"],[3,"GetEventsResponse"],[3,"Event"],[3,"NodeDebugInterfaceClient"],[8,"NodeDebugInterface"],[3,"JsonLogEntry"],[3,"TraceBlockGuard"],[3,"NodeDebugService"],[3,"NodeDebugClient"],[3,"GetNodeDetailsRequest"],[3,"GetEventsRequest"]]};
searchIndex["disassembler"] = {"doc":"","i":[[0,"disassembler","disassembler","",null,null],[3,"DisassemblerOptions","disassembler::disassembler","Holds the various options that we support while…",null,null],[12,"only_public","","Only print public functions",0,null],[12,"print_code","","Print the bytecode for the instructions within the function.",0,null],[12,"print_basic_blocks","","Print the basic blocks of the bytecode.",0,null],[12,"print_locals","","Print the locals inside each function body.",0,null],[3,"Disassembler","","",null,null],[11,"new","","",0,[[],["self"]]],[11,"new","","",1,[[["sourcemapping"],["disassembleroptions"]],["self"]]],[11,"add_coverage_map","","",1,[[["self"],["coveragemap"]]]],[11,"disassemble_function_def","","",1,[[["self"],["functiondefinitionindex"]],[["result",["string"]],["string"]]]],[11,"disassemble_struct_def","","",1,[[["structdefinitionindex"],["self"]],[["result",["string"]],["string"]]]],[11,"disassemble","","",1,[[["self"]],[["result",["string"]],["string"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"clear","","",0,[[["self"]]]],[11,"initialize","","",0,[[]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"default","","",0,[[],["disassembleroptions"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[3,"DisassemblerOptions"],[3,"Disassembler"]]};
searchIndex["execution_correctness"] = {"doc":"","i":[[3,"ExecutionCorrectnessManager","execution_correctness","",null,null],[3,"Process","","",null,null],[11,"new","","",0,[[["nodeconfig"]],["self"]]],[11,"new_local","","",0,[[["socketaddr"]],["self"]]],[11,"new_process","","",0,[[["socketaddr"]],["self"]]],[11,"new_serializer","","",0,[[["socketaddr"]],["self"]]],[11,"new_spawned_process","","",0,[[["nodeconfig"]],["self"]]],[11,"new_thread","","",0,[[["socketaddr"]],["self"]]],[11,"client","","",0,[[["self"]],[["blockexecutor"],["box",["blockexecutor"]]]]],[11,"new","","",1,[[["nodeconfig"]],["self"]]],[11,"start","","",1,[[["self"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"into_request","","",0,[[],["request"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"into_request","","",1,[[],["request"]]]],"p":[[3,"ExecutionCorrectnessManager"],[3,"Process"]]};
searchIndex["executor"] = {"doc":"","i":[[3,"Executor","executor","`Executor` implements all functionalities the execution…",null,null],[0,"db_bootstrapper","","",null,null],[3,"GenesisCommitter","executor::db_bootstrapper","",null,null],[5,"bootstrap_db_if_empty","","",null,[[["transaction"],["dbreaderwriter"]],[["result",["option"]],["option",["waypoint"]]]]],[5,"calculate_genesis","","",null,[[["treestate"],["transaction"],["dbreaderwriter"]],[["result",["genesiscommitter"]],["genesiscommitter"]]]],[11,"new","","",0,[[["executor"],["ledgerinfowithsignatures"]],["result"]]],[11,"ledger_info_with_sigs","","",0,[[["self"]],["ledgerinfowithsignatures"]]],[11,"waypoint","","",0,[[["self"]],["waypoint"]]],[11,"commit","","",0,[[],["result"]]],[11,"committed_block_id","executor","",1,[[["self"]],["hashvalue"]]],[11,"new","","Constructs an `Executor`.",1,[[["dbreaderwriter"]],["self"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"into_request","","",1,[[],["request"]]],[11,"from","executor::db_bootstrapper","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"into_request","","",0,[[],["request"]]],[11,"execute_and_commit_chunk","executor","",1,[[["option",["ledgerinfowithsignatures"]],["self"],["transactionlistwithproof"],["ledgerinfowithsignatures"]],[["vec",["contractevent"]],["result",["vec"]]]]],[11,"committed_block_id","","",1,[[["self"]],[["hashvalue"],["error"],["result",["hashvalue","error"]]]]],[11,"reset","","",1,[[["self"]],[["result",["error"]],["error"]]]],[11,"execute_block","","",1,[[["hashvalue"],["self"]],[["error"],["result",["statecomputeresult","error"]],["statecomputeresult"]]]],[11,"commit_blocks","","",1,[[["vec",["hashvalue"]],["self"],["ledgerinfowithsignatures"],["hashvalue"]],[["result",["error"]],["error"]]]]],"p":[[3,"GenesisCommitter"],[3,"Executor"]]};
searchIndex["executor_benchmark"] = {"doc":"","i":[[5,"run_benchmark","executor_benchmark","Runs the benchmark with given parameters.",null,[[["pathbuf"],["usize"],["u64"],["option",["pathbuf"]]]]]],"p":[]};
searchIndex["executor_types"] = {"doc":"","i":[[3,"StateComputeResult","executor_types","A structure that summarizes the result of the execution…",null,null],[3,"TransactionData","","The entire set of data associated with a transaction. In…",null,null],[3,"ProcessedVMOutput","","The output of Processing the vm output of a series of…",null,null],[3,"ExecutedTrees","","A wrapper of the in-memory state sparse merkle tree and…",null,null],[3,"ProofReader","","",null,null],[4,"Error","","Different reasons for proposal rejection",null,null],[13,"BlockNotFound","","",0,null],[13,"InternalError","","",0,null],[12,"error","executor_types::Error","",1,null],[13,"SerializationError","executor_types","",0,null],[8,"ChunkExecutor","","",null,null],[10,"execute_and_commit_chunk","","Verifies the transactions based on the provided proofs and…",2,[[["option",["ledgerinfowithsignatures"]],["self"],["transactionlistwithproof"],["ledgerinfowithsignatures"]],[["result",["vec"]],["vec",["contractevent"]]]]],[8,"BlockExecutor","","",null,null],[10,"committed_block_id","","Get the latest committed block id",3,[[["self"]],[["error"],["hashvalue"],["result",["hashvalue","error"]]]]],[10,"reset","","Reset the internal state including cache with newly…",3,[[["self"]],[["error"],["result",["error"]]]]],[10,"execute_block","","Executes a block.",3,[[["self"],["hashvalue"]],[["statecomputeresult"],["error"],["result",["statecomputeresult","error"]]]]],[10,"commit_blocks","","Saves eligible blocks to persistent storage. If we have…",3,[[["vec",["hashvalue"]],["hashvalue"],["self"],["ledgerinfowithsignatures"]],[["result",["error"]],["error"]]]],[11,"new","","",4,[[["hashvalue"],["transactionstatus"],["u64"],["epochinfo"],["vec",["hashvalue"]],["vec",["transactionstatus"]],["option",["epochinfo"]]],["self"]]],[11,"version","","",4,[[["self"]],["version"]]],[11,"root_hash","","",4,[[["self"]],["hashvalue"]]],[11,"compute_status","","",4,[[["self"]],["vec"]]],[11,"epoch_info","","",4,[[["self"]],["option"]]],[11,"transaction_info_hashes","","",4,[[["self"]],["vec"]]],[11,"num_leaves","","",4,[[["self"]],["u64"]]],[11,"frozen_subtree_roots","","",4,[[["self"]],["vec"]]],[11,"has_reconfiguration","","",4,[[["self"]],["bool"]]],[11,"new","","",5,[[["inmemoryaccumulator",["eventaccumulatorhasher"]],["accountstateblob"],["hashvalue"],["arc",["inmemoryaccumulator"]],["transactionstatus"],["arc",["sparsemerkletree"]],["contractevent"],["sparsemerkletree"],["u64"],["hashmap",["accountaddress","accountstateblob"]],["option",["hashvalue"]],["accountaddress"],["vec",["contractevent"]]],["self"]]],[11,"account_blobs","","",5,[[["self"]],["hashmap"]]],[11,"events","","",5,[[["self"]]]],[11,"status","","",5,[[["self"]],["transactionstatus"]]],[11,"state_root_hash","","",5,[[["self"]],["hashvalue"]]],[11,"event_root_hash","","",5,[[["self"]],["hashvalue"]]],[11,"gas_used","","",5,[[["self"]],["u64"]]],[11,"prune_state_tree","","",5,[[["self"]]]],[11,"txn_info_hash","","",5,[[["self"]],[["option",["hashvalue"]],["hashvalue"]]]],[11,"new","","",6,[[["vec",["transactiondata"]],["epochinfo"],["option",["epochinfo"]],["transactiondata"],["executedtrees"]],["self"]]],[11,"transaction_data","","",6,[[["self"]]]],[11,"executed_trees","","",6,[[["self"]],["executedtrees"]]],[11,"accu_root","","",6,[[["self"]],["hashvalue"]]],[11,"version","","",6,[[["self"]],[["option",["version"]],["version"]]]],[11,"epoch_info","","",6,[[["self"]],["option"]]],[11,"state_compute_result","","",6,[[["self"]],["statecomputeresult"]]],[11,"new_copy","","",7,[[["inmemoryaccumulator",["transactionaccumulatorhasher"]],["arc",["inmemoryaccumulator"]],["arc",["sparsemerkletree"]],["sparsemerkletree"]],["self"]]],[11,"state_tree","","",7,[[["self"]],["arc"]]],[11,"txn_accumulator","","",7,[[["self"]],["arc"]]],[11,"version","","",7,[[["self"]],[["option",["version"]],["version"]]]],[11,"state_id","","",7,[[["self"]],["hashvalue"]]],[11,"state_root","","",7,[[["self"]],["hashvalue"]]],[11,"new","","",7,[[["vec",["hashvalue"]],["hashvalue"],["u64"]],["executedtrees"]]],[11,"new_empty","","",7,[[],["executedtrees"]]],[11,"new","","",8,[[["hashvalue"],["sparsemerkleproof"],["hashmap",["hashvalue","sparsemerkleproof"]]],["self"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"test_only_hash","","",4,[[["self"]],["hashvalue"]]],[11,"vzip","","",4,[[],["v"]]],[11,"clear","","",4,[[["self"]]]],[11,"initialize","","",4,[[]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"test_only_hash","","",0,[[["self"]],["hashvalue"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"from","","",7,[[["treestate"]],["self"]]],[11,"clone","","",4,[[["self"]],["statecomputeresult"]]],[11,"clone","","",5,[[["self"]],["transactiondata"]]],[11,"clone","","",6,[[["self"]],["processedvmoutput"]]],[11,"clone","","",7,[[["self"]],["executedtrees"]]],[11,"default","","",4,[[],["statecomputeresult"]]],[11,"eq","","",0,[[["self"],["error"]],["bool"]]],[11,"ne","","",0,[[["self"],["error"]],["bool"]]],[11,"eq","","",4,[[["self"],["statecomputeresult"]],["bool"]]],[11,"ne","","",4,[[["self"],["statecomputeresult"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"deserialize","","",0,[[["__d"]],["result"]]],[11,"deserialize","","",4,[[["__d"]],["result"]]],[11,"serialize","","",0,[[["self"],["__s"]],["result"]]],[11,"serialize","","",4,[[["self"],["__s"]],["result"]]],[11,"get_proof","","",8,[[["self"],["hashvalue"]],[["option",["sparsemerkleproof"]],["sparsemerkleproof"]]]]],"p":[[4,"Error"],[13,"InternalError"],[8,"ChunkExecutor"],[8,"BlockExecutor"],[3,"StateComputeResult"],[3,"TransactionData"],[3,"ProcessedVMOutput"],[3,"ExecutedTrees"],[3,"ProofReader"]]};
searchIndex["executor_utils"] = {"doc":"","i":[],"p":[]};
searchIndex["functional_tests"] = {"doc":"","i":[[0,"checker","functional_tests","",null,null],[0,"directives","functional_tests::checker","",null,null],[4,"Directive","functional_tests::checker::directives","Specification of an expected text pattern in the output.",null,null],[13,"Check","","",0,null],[13,"Not","","",0,null],[11,"is_positive","","Returns if the directive is a positive pattern.",0,[[["self"]],["bool"]]],[11,"is_negative","","Returns if the directive is a negative pattern.",0,[[["self"]],["bool"]]],[11,"pattern_str","","Returns the pattern of the directive.",0,[[["self"]],["str"]]],[11,"parse_line","","Parses the line and extracts one or more directives from it.",0,[[["str"]],[["result",["vec"]],["vec",["sp"]]]]],[0,"matcher","functional_tests::checker","This module implements a matcher that checks if an…",null,null],[3,"Match","functional_tests::checker::matcher","A single match consisting of the index of the log entry,…",null,null],[12,"pat_id","","",1,null],[12,"entry_id","","",1,null],[12,"start","","",1,null],[12,"end","","",1,null],[3,"MatchResult","","The result of matching the directives against the…",null,null],[12,"status","","",2,null],[12,"text","","",2,null],[12,"matches","","",2,null],[4,"MatchError","","A match error.",null,null],[13,"NegativeMatch","","",3,null],[13,"UnmatchedDirectives","","",3,null],[13,"UnmatchedErrors","","",3,null],[4,"MatchStatus","","The status of a match. Can be either success or failure…",null,null],[13,"Success","","",4,null],[13,"Failure","","",4,null],[5,"match_output","","Matches the directives against the evaluation log.",null,[[["i"],["evaluationlog"]],["matchresult"]]],[11,"is_success","","",4,[[["self"]],["bool"]]],[11,"is_failure","","",4,[[["self"]],["bool"]]],[11,"is_success","","",2,[[["self"]],["bool"]]],[11,"is_failure","","",2,[[["self"]],["bool"]]],[0,"common","functional_tests","",null,null],[3,"Sp","functional_tests::common","Wrapper of an inner object with start and end source…",null,null],[12,"inner","","",5,null],[12,"start","","",5,null],[12,"end","","",5,null],[3,"LineSp","","Wrapper of an inner object with line, start and end source…",null,null],[12,"inner","","",6,null],[12,"line","","",6,null],[12,"start","","",6,null],[12,"end","","",6,null],[5,"strip","","Checks if `s` starts with `prefix`. If yes, returns a…",null,[[["str"],["str"]],[["str"],["option",["str"]]]]],[11,"new","","",5,[[["t"],["usize"]],["self"]]],[11,"into_inner","","",5,[[],["t"]]],[11,"as_inner","","",5,[[["self"]],["t"]]],[11,"map","","",5,[[["f"]],["sp"]]],[11,"into_line_sp","","",5,[[["usize"]],["linesp"]]],[11,"new","","",6,[[["t"],["usize"]],["self"]]],[11,"as_inner","","",6,[[["self"]],["t"]]],[11,"map","","",6,[[["f"]],["linesp"]]],[0,"compiler","functional_tests","",null,null],[4,"ScriptOrModule","functional_tests::compiler","",null,null],[13,"Script","","",7,null],[13,"Module","","",7,null],[8,"Compiler","","",null,null],[10,"compile","","Compile a transaction script or module.",8,[[["fnmut"],["str"],["self"],["accountaddress"]],[["scriptormodule"],["result",["scriptormodule"]]]]],[10,"use_staged_genesis","","",8,[[["self"]],["bool"]]],[0,"config","functional_tests","",null,null],[0,"block_metadata","functional_tests::config","",null,null],[4,"Entry","functional_tests::config::block_metadata","",null,null],[13,"Proposer","","",9,null],[13,"Timestamp","","",9,null],[5,"is_new_block","","Checks whether a line denotes the start of a new…",null,[[["str"]],["bool"]]],[5,"build_block_metadata","","",null,[[["globalconfig"]],[["blockmetadata"],["result",["blockmetadata"]]]]],[11,"try_parse","","",9,[[["str"]],[["result",["option"]],["option"]]]],[0,"global","functional_tests::config","",null,null],[3,"Balance","functional_tests::config::global","",null,null],[12,"amount","","",10,null],[12,"currency_code","","",10,null],[3,"AccountDefinition","","Struct that specifies the initial setup of an account.",null,null],[12,"name","","Name of the account. The name is case insensitive.",11,null],[12,"balance","","The initial balance of the account.",11,null],[12,"sequence_number","","The initial sequence number of the account.",11,null],[12,"role","","Special role this account has in the system (if any)",11,null],[12,"account_type_specifier","","Specifier on what type of account this is. Default is VASP.",11,null],[3,"Config","","A table of options either shared by all transactions or…",null,null],[12,"accounts","","A map from account names to account data",12,null],[12,"genesis_accounts","","",12,null],[12,"validator_accounts","","The validator set after genesis",12,null],[4,"Role","","",null,null],[13,"Validator","","Means that the account is a current validator; its address…",13,null],[4,"Entry","","A raw entry extracted from the input. Used to build the…",null,null],[13,"AccountDefinition","","Defines an account that can be used in tests.",14,null],[11,"is_validator","","",14,[[["self"]],["bool"]]],[11,"build","","",12,[[],["result"]]],[11,"get_account_for_name","","",12,[[["str"],["self"]],[["result",["account"]],["account"]]]],[0,"transaction","functional_tests::config","",null,null],[3,"Config","functional_tests::config::transaction","A table of options specific to one transaction, fine…",null,null],[12,"disabled_stages","","",15,null],[12,"sender","","",15,null],[12,"ty_args","","",15,null],[12,"args","","",15,null],[12,"max_gas","","",15,null],[12,"gas_price","","",15,null],[12,"sequence_number","","",15,null],[12,"expiration_time","","",15,null],[4,"Argument","","A partially parsed transaction argument.",null,null],[13,"AddressOf","","",16,null],[13,"SelfContained","","",16,null],[4,"Entry","","A raw entry extracted from the input. Used to build a…",null,null],[13,"DisableStages","","",17,null],[13,"Sender","","",17,null],[13,"TypeArguments","","",17,null],[13,"Arguments","","",17,null],[13,"MaxGas","","",17,null],[13,"GasPrice","","",17,null],[13,"SequenceNumber","","",17,null],[13,"ExpirationTime","","",17,null],[5,"is_new_transaction","","Checks whether a line denotes the start of a new…",null,[[["str"]],["bool"]]],[11,"try_parse","","",17,[[["str"]],[["result",["option"]],["option"]]]],[11,"build","","Builds a transaction config table from raw entries.",15,[[["globalconfig"]],["result"]]],[11,"is_stage_disabled","","",15,[[["self"],["stage"]],["bool"]]],[0,"errors","functional_tests","",null,null],[14,"anyhow","functional_tests::errors","Construct an ad-hoc error from a string.",null,null],[14,"bail","","Return early with an error.",null,null],[14,"format_err","","Construct an ad-hoc error from a string.",null,null],[3,"Error","","The `Error` type, a wrapper around a dynamic error type.",null,null],[6,"Result","","`Result<T, Error>`",null,null],[4,"ErrorKind","","Defines all errors in this crate.",null,null],[13,"VMExecutionFailure","","",18,null],[13,"DiscardedTransaction","","",18,null],[13,"CheckerFailure","","",18,null],[13,"VerificationError","","",18,null],[13,"Other","","",18,null],[0,"evaluator","functional_tests","",null,null],[3,"Transaction","functional_tests::evaluator","A transaction to be evaluated by the testing infra.…",null,null],[12,"config","","",19,null],[12,"input","","",19,null],[3,"EvaluationLog","","A log consisting of outputs from all stages and the final…",null,null],[12,"outputs","","",20,null],[4,"Command","","Commands that drives the operation of LibraVM. Such as: 1.…",null,null],[13,"Transaction","","",21,null],[13,"BlockMetadata","","",21,null],[4,"Stage","","Indicates one step in the pipeline the given move…",null,null],[13,"Compiler","","",22,null],[13,"Verifier","","",22,null],[13,"Serializer","","",22,null],[13,"Runtime","","",22,null],[4,"Status","","Evaluation status: success or failure.",null,null],[13,"Success","","",23,null],[13,"Failure","","",23,null],[4,"OutputType","","",null,null],[13,"CompiledModule","","",24,null],[13,"CompiledScript","","",24,null],[13,"CompilerLog","","",24,null],[13,"TransactionOutput","","",24,null],[4,"EvaluationOutput","","An entry in the `EvaluationLog`.",null,null],[13,"Transaction","","",25,null],[13,"Stage","","",25,null],[13,"Output","","",25,null],[13,"Error","","",25,null],[13,"Status","","",25,null],[5,"verify_script","","Verify a script with its dependencies.",null,[[["compiledscript"]],[["vmstatus"],["result",["verifiedscript","vmstatus"]],["verifiedscript"]]]],[5,"verify_module","","Verify a module with its dependencies.",null,[[["compiledmodule"]],[["vmstatus"],["result",["verifiedmodule","vmstatus"]],["verifiedmodule"]]]],[5,"eval_block_metadata","","",null,[[["fakeexecutor"],["blockmetadata"],["evaluationlog"]],[["status"],["result",["status"]]]]],[5,"eval","","Feeds all given transactions through the pipeline and…",null,[[["globalconfig"],["compiler"]],[["evaluationlog"],["result",["evaluationlog"]]]]],[6,"TransactionId","","",null,null],[11,"to_check_string","","",24,[[["self"]],["string"]]],[11,"is_error","","",25,[[["self"]],["bool"]]],[11,"new","","",20,[[],["self"]]],[11,"get_failed_transactions","","",20,[[["self"]],["vec"]]],[11,"append","","",20,[[["self"],["evaluationoutput"]]]],[0,"preprocessor","functional_tests","",null,null],[3,"RawTransactionInput","functional_tests::preprocessor","",null,null],[12,"config_entries","","",26,null],[12,"text","","",26,null],[4,"RawCommand","","",null,null],[13,"Transaction","","",27,null],[13,"BlockMetadata","","",27,null],[5,"substitute_addresses","","Substitutes the placeholders (account names in double…",null,[[["globalconfig"],["str"]],["string"]]],[5,"split_input","","Parses the input string into three parts: a global config,…",null,[[],["result"]]],[5,"build_transactions","","",null,[[["globalconfig"]],[["vec",["command"]],["result",["vec"]]]]],[0,"testsuite","functional_tests","",null,null],[5,"functional_tests","functional_tests::testsuite","",null,[[["path"],["compiler"]],["result"]]],[17,"PRETTY","","",null,null],[11,"from","functional_tests::checker::directives","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"equivalent","","",0,[[["k"],["self"]],["bool"]]],[11,"into_request","","",0,[[],["request"]]],[11,"from","functional_tests::checker::matcher","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"into_request","","",1,[[],["request"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"into_request","","",2,[[],["request"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"into_request","","",3,[[],["request"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"into_request","","",4,[[],["request"]]],[11,"from","functional_tests::common","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"encode_hex","","",5,[[["self"]],["u"]]],[11,"encode_hex_upper","","",5,[[["self"]],["u"]]],[11,"into_request","","",5,[[],["request"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"encode_hex","","",6,[[["self"]],["u"]]],[11,"encode_hex_upper","","",6,[[["self"]],["u"]]],[11,"into_request","","",6,[[],["request"]]],[11,"from","functional_tests::compiler","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"into_request","","",7,[[],["request"]]],[11,"from","functional_tests::config::block_metadata","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"into_request","","",9,[[],["request"]]],[11,"from","functional_tests::config::global","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"into_request","","",10,[[],["request"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"into_request","","",11,[[],["request"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"into_request","","",12,[[],["request"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"into_request","","",13,[[],["request"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"into_request","","",14,[[],["request"]]],[11,"from","functional_tests::config::transaction","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"into_request","","",15,[[],["request"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"into_request","","",16,[[],["request"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"into_request","","",17,[[],["request"]]],[11,"from","functional_tests::errors","",28,[[],["t"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_string","","",28,[[["self"]],["string"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"vzip","","",28,[[],["v"]]],[11,"into_request","","",28,[[],["request"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"to_string","","",18,[[["self"]],["string"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"vzip","","",18,[[],["v"]]],[11,"into_request","","",18,[[],["request"]]],[11,"from","functional_tests::evaluator","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"vzip","","",19,[[],["v"]]],[11,"into_request","","",19,[[],["request"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_string","","",20,[[["self"]],["string"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"vzip","","",20,[[],["v"]]],[11,"clear","","",20,[[["self"]]]],[11,"initialize","","",20,[[]]],[11,"into_request","","",20,[[],["request"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"vzip","","",21,[[],["v"]]],[11,"into_request","","",21,[[],["request"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"vzip","","",22,[[],["v"]]],[11,"equivalent","","",22,[[["k"],["self"]],["bool"]]],[11,"into_request","","",22,[[],["request"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"vzip","","",23,[[],["v"]]],[11,"equivalent","","",23,[[["k"],["self"]],["bool"]]],[11,"into_request","","",23,[[],["request"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"to_string","","",24,[[["self"]],["string"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"vzip","","",24,[[],["v"]]],[11,"into_request","","",24,[[],["request"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_string","","",25,[[["self"]],["string"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"vzip","","",25,[[],["v"]]],[11,"into_request","","",25,[[],["request"]]],[11,"from","functional_tests::preprocessor","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"vzip","","",26,[[],["v"]]],[11,"into_request","","",26,[[],["request"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"vzip","","",27,[[],["v"]]],[11,"into_request","","",27,[[],["request"]]],[11,"fmt","functional_tests::errors","",28,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",28,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"drop","","",28,[[["self"]]]],[11,"deref_mut","","",28,[[["self"]]]],[11,"from","","",28,[[["e"]],["error"]]],[11,"deref","","",28,[[["self"]]]],[11,"as_ref","","",28,[[["self"]],["error"]]],[11,"as_ref","","",28,[[["self"]],["error"]]],[11,"as_ref","functional_tests::checker::directives","",0,[[["self"]],["directive"]]],[11,"as_ref","functional_tests::common","",5,[[["self"]],["t"]]],[11,"as_ref","","",6,[[["self"]],["t"]]],[11,"clone","functional_tests::config::global","",10,[[["self"]],["balance"]]],[11,"clone","functional_tests::errors","",18,[[["self"]],["errorkind"]]],[11,"clone","functional_tests::evaluator","",22,[[["self"]],["stage"]]],[11,"clone","","",23,[[["self"]],["status"]]],[11,"clone","","",24,[[["self"]],["outputtype"]]],[11,"default","","",20,[[],["evaluationlog"]]],[11,"cmp","","",22,[[["self"],["stage"]],["ordering"]]],[11,"eq","functional_tests::checker::directives","",0,[[["directive"],["self"]],["bool"]]],[11,"ne","","",0,[[["directive"],["self"]],["bool"]]],[11,"eq","functional_tests::evaluator","",22,[[["self"],["stage"]],["bool"]]],[11,"eq","","",23,[[["self"],["status"]],["bool"]]],[11,"partial_cmp","","",22,[[["self"],["stage"]],[["option",["ordering"]],["ordering"]]]],[11,"fmt","functional_tests::checker::directives","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","functional_tests::checker::matcher","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","functional_tests::common","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","functional_tests::config::block_metadata","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","functional_tests::config::global","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","functional_tests::config::transaction","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","functional_tests::errors","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","functional_tests::evaluator","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","functional_tests::errors","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","functional_tests::evaluator","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"from_str","functional_tests::config::block_metadata","",9,[[["str"]],["result"]]],[11,"from_str","functional_tests::config::global","",10,[[["str"]],["result"]]],[11,"from_str","","",13,[[["str"]],["result"]]],[11,"from_str","","",14,[[["str"]],["result"]]],[11,"from_str","functional_tests::config::transaction","",16,[[["str"]],["result"]]],[11,"from_str","","",17,[[["str"]],["result"]]],[11,"from_str","functional_tests::evaluator","",22,[[["str"]],["result"]]],[11,"new","functional_tests::errors","Create a new error object from any error type.",28,[[["e"]],["error"]]],[11,"msg","","Create a new error object from a printable error message.",28,[[["m"]],["error"]]],[11,"context","","Wrap the error value with additional context.",28,[[["c"]],["error"]]],[11,"backtrace","","Get the backtrace for this Error.",28,[[["self"]],["backtrace"]]],[11,"chain","","An iterator of the chain of source errors contained by…",28,[[["self"]],["chain"]]],[11,"root_cause","","The lowest level cause of this error — this error's…",28,[[["self"]],["error"]]],[11,"is","","Returns true if `E` is the type held by this error object.",28,[[["self"]],["bool"]]],[11,"downcast","","Attempt to downcast the error object to a concrete type.",28,[[],[["error"],["result",["error"]]]]],[11,"downcast_ref","","Downcast this error object by reference.",28,[[["self"]],[["option"],["e"]]]],[11,"downcast_mut","","Downcast this error object by mutable reference.",28,[[["self"]],[["option"],["e"]]]]],"p":[[4,"Directive"],[3,"Match"],[3,"MatchResult"],[4,"MatchError"],[4,"MatchStatus"],[3,"Sp"],[3,"LineSp"],[4,"ScriptOrModule"],[8,"Compiler"],[4,"Entry"],[3,"Balance"],[3,"AccountDefinition"],[3,"Config"],[4,"Role"],[4,"Entry"],[3,"Config"],[4,"Argument"],[4,"Entry"],[4,"ErrorKind"],[3,"Transaction"],[3,"EvaluationLog"],[4,"Command"],[4,"Stage"],[4,"Status"],[4,"OutputType"],[4,"EvaluationOutput"],[3,"RawTransactionInput"],[4,"RawCommand"],[3,"Error"]]};
searchIndex["futures_semaphore"] = {"doc":"`Semaphore` holds a set of permits. Permits are used to…","i":[[3,"Semaphore","futures_semaphore","A futures-aware semaphore.",null,null],[3,"Permit","","A permit acquired from a semaphore, allowing access to a…",null,null],[11,"new","","Create a new semaphore with `capacity` number of available…",0,[[["usize"]],["self"]]],[11,"capacity","","",0,[[["self"]],["usize"]]],[11,"available_permits","","",0,[[["self"]],["usize"]]],[11,"is_idle","","",0,[[["self"]],["bool"]]],[11,"is_full","","",0,[[["self"]],["bool"]]],[11,"add_permits","","",0,[[["self"],["usize"]]]],[11,"acquire","","Acquire an available permit from the semaphore.",0,[[["self"]]]],[11,"into_permit","","Acquire an available permit from an owned semaphore.",0,[[]]],[11,"try_acquire","","Try to acquire an available permit from the semaphore. If…",0,[[["self"]],[["option",["permit"]],["permit"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"drop","","",1,[[["self"]]]],[11,"clone","","",0,[[["self"]],["semaphore"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]]],"p":[[3,"Semaphore"],[3,"Permit"]]};
searchIndex["generate_format"] = {"doc":"How and where to record the Serde format of interesting…","i":[[4,"Corpus","generate_format","A corpus of Rust types to trace, and optionally record on…",null,null],[13,"Libra","","",0,null],[13,"Consensus","","",0,null],[13,"Network","","",0,null],[11,"variants","","",0,[[]]],[11,"values","","All corpuses.",0,[[],[["vec",["corpus"]],["corpus"]]]],[11,"get_registry","","Compute the registry of formats.",0,[[],["registry"]]],[11,"output_file","","Where to record this corpus on disk.",0,[[],[["option",["str"]],["str"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"into_request","","",0,[[],["request"]]],[11,"clone","","",0,[[["self"]],["corpus"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",0,[[["str"]],["result"]]],[11,"clap","","",0,[[],["app"]]],[11,"from_clap","","",0,[[["argmatches"]],["self"]]],[11,"augment_clap","","",0,[[["app"]],["app"]]],[11,"from_subcommand","","",0,[[],["option"]]],[11,"is_subcommand","","",0,[[],["bool"]]]],"p":[[4,"Corpus"]]};
searchIndex["generate_key"] = {"doc":"","i":[[5,"generate_key","generate_key","",null,[[],["ed25519privatekey"]]],[5,"generate_and_save_key","","",null,[[["path"],["asref",["path"]]],["ed25519privatekey"]]],[5,"save_key","","",null,[[["asref",["path"]],["path"],["ed25519privatekey"]],["ed25519privatekey"]]],[5,"load_key","","",null,[[["path"],["asref",["path"]]],["ed25519privatekey"]]]],"p":[]};
searchIndex["invalid_mutations"] = {"doc":"","i":[[0,"bounds","invalid_mutations","",null,null],[3,"ApplyCodeUnitBoundsContext","invalid_mutations::bounds","",null,null],[3,"CodeUnitBoundsMutation","","Represents a single mutation onto a code unit to make it…",null,null],[3,"OutOfBoundsMutation","","Represents a single mutation to a `CompiledModule` to…",null,null],[3,"ApplyOutOfBoundsContext","","",null,null],[4,"PointerKind","","Represents the number of pointers that exist out from a…",null,null],[13,"One","","Exactly one pointer out with this index kind as its…",0,null],[13,"Optional","","Zero or one pointer out with this index kind as its…",0,null],[13,"Star","","Zero or more pointers out with this index kind as its…",0,null],[11,"strategy","","",1,[[]]],[11,"new","","",2,[[["vec",["codeunitboundsmutation"]],["compiledmodulemut"],["codeunitboundsmutation"]],["self"]]],[11,"apply","","",2,[[],[["vec",["vmstatus"]],["vmstatus"]]]],[7,"VALID_POINTER_SRCS","","",null,null],[11,"pointers_from","","A list of what pointers (indexes) exist out from a…",0,[[["indexkind"]]]],[11,"to_index_kind","","",0,[[],["indexkind"]]],[11,"strategy","","",3,[[]]],[11,"new","","",4,[[["outofboundsmutation"],["vec",["outofboundsmutation"]],["compiledmodule"]],["self"]]],[11,"apply","","",4,[[]]],[0,"signature","invalid_mutations","",null,null],[3,"SignatureRefMutation","invalid_mutations::signature","",null,null],[3,"FieldRefMutation","","Context for applying a list of `FieldRefMutation` instances.",null,null],[11,"new","","",5,[[["vec"],["compiledmodulemut"]],["self"]]],[11,"apply","","",5,[[],["bool"]]],[11,"new","","",6,[[["vec"],["compiledmodulemut"]],["self"]]],[11,"apply","","",6,[[],["bool"]]],[11,"from","invalid_mutations::bounds","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","invalid_mutations::signature","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"as_ref","invalid_mutations::bounds","",1,[[["self"]],["propindex"]]],[11,"as_ref","","",3,[[["self"]],["propindex"]]],[11,"clone","","",0,[[["self"]],["pointerkind"]]],[11,"eq","","",0,[[["pointerkind"],["self"]],["bool"]]],[11,"ne","","",0,[[["pointerkind"],["self"]],["bool"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"hash","","",0,[[["self"],["__h"]]]]],"p":[[4,"PointerKind"],[3,"CodeUnitBoundsMutation"],[3,"ApplyCodeUnitBoundsContext"],[3,"OutOfBoundsMutation"],[3,"ApplyOutOfBoundsContext"],[3,"SignatureRefMutation"],[3,"FieldRefMutation"]]};
searchIndex["ir_to_bytecode"] = {"doc":"","i":[[0,"compiler","ir_to_bytecode","",null,null],[5,"compile_script","ir_to_bytecode::compiler","Compile a transaction script.",null,[[["accountaddress"],["option",["accountaddress"]],["script"]],["result"]]],[5,"compile_module","","Compile a module.",null,[[["accountaddress"],["moduledefinition"]],["result"]]],[0,"errors","ir_to_bytecode","",null,null],[4,"InternalCompilerError","ir_to_bytecode::errors","",null,null],[13,"BoundsCheckErrors","","",0,null],[0,"parser","ir_to_bytecode","",null,null],[5,"is_permitted_printable_char","ir_to_bytecode::parser","Determine if a character is an allowed eye-visible…",null,[[["char"]],["bool"]]],[5,"is_permitted_newline_char","","Determine if a character is a permitted newline character.",null,[[["char"]],["bool"]]],[5,"is_permitted_char","","Determine if a character is permitted character.",null,[[["char"]],["bool"]]],[5,"parse_script_or_module","","Given the raw input of a file, creates a `ScriptOrModule`…",null,[[["str"]],[["scriptormodule"],["result",["scriptormodule"]]]]],[5,"parse_script","","Given the raw input of a file, creates a `Script` struct…",null,[[["str"]],[["result",["script"]],["script"]]]],[5,"parse_module","","Given the raw input of a file, creates a single…",null,[[["str"]],[["moduledefinition"],["result",["moduledefinition"]]]]],[5,"parse_cmd_","","Given the raw input of a file, creates a single `Cmd_`…",null,[[["str"],["accountaddress"]],[["cmd_"],["result",["cmd_"]]]]],[11,"from","ir_to_bytecode::errors","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"clone","","",0,[[["self"]],["internalcompilererror"]]],[11,"cmp","","",0,[[["internalcompilererror"],["self"]],["ordering"]]],[11,"eq","","",0,[[["internalcompilererror"],["self"]],["bool"]]],[11,"ne","","",0,[[["internalcompilererror"],["self"]],["bool"]]],[11,"partial_cmp","","",0,[[["internalcompilererror"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["internalcompilererror"],["self"]],["bool"]]],[11,"le","","",0,[[["internalcompilererror"],["self"]],["bool"]]],[11,"gt","","",0,[[["internalcompilererror"],["self"]],["bool"]]],[11,"ge","","",0,[[["internalcompilererror"],["self"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[4,"InternalCompilerError"]]};
searchIndex["ir_to_bytecode_syntax"] = {"doc":"Grammar ## Identifiers `text f ∈ FieldName //…","i":[[0,"syntax","ir_to_bytecode_syntax","",null,null],[4,"ParseError","ir_to_bytecode_syntax::syntax","",null,null],[13,"InvalidToken","","",0,null],[12,"location","ir_to_bytecode_syntax::syntax::ParseError","",1,null],[13,"User","ir_to_bytecode_syntax::syntax","",0,null],[12,"error","ir_to_bytecode_syntax::syntax::ParseError","",2,null],[5,"parse_cmd_string","ir_to_bytecode_syntax::syntax","",null,[[["str"]],[["result",["cmd_","parseerror"]],["parseerror",["loc","error"]],["cmd_"]]]],[5,"parse_module_string","","",null,[[["str"]],[["parseerror",["loc","error"]],["result",["moduledefinition","parseerror"]],["moduledefinition"]]]],[5,"parse_script_string","","",null,[[["str"]],[["result",["script","parseerror"]],["script"],["parseerror",["loc","error"]]]]],[5,"parse_script_or_module_string","","",null,[[["str"]],[["result",["scriptormodule","parseerror"]],["scriptormodule"],["parseerror",["loc","error"]]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"clone","","",0,[[["self"]],["parseerror"]]],[11,"cmp","","",0,[[["self"],["parseerror"]],["ordering"]]],[11,"eq","","",0,[[["self"],["parseerror"]],["bool"]]],[11,"ne","","",0,[[["self"],["parseerror"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["parseerror"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["self"],["parseerror"]],["bool"]]],[11,"le","","",0,[[["self"],["parseerror"]],["bool"]]],[11,"gt","","",0,[[["self"],["parseerror"]],["bool"]]],[11,"ge","","",0,[[["self"],["parseerror"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[4,"ParseError"],[13,"InvalidToken"],[13,"User"]]};
searchIndex["jellyfish_merkle"] = {"doc":"This module implements [`JellyfishMerkleTree`] backed by…","i":[[3,"StaleNodeIndex","jellyfish_merkle","Indicates a node becomes stale since `stale_since_version`.",null,null],[12,"stale_since_version","","The version since when the node is overwritten and becomes…",0,null],[12,"node_key","","The `NodeKey` identifying the node associated with this…",0,null],[3,"TreeUpdateBatch","","This is a wrapper of `NodeBatch`, `StaleNodeIndexBatch`…",null,null],[12,"node_batch","","",1,null],[12,"stale_node_index_batch","","",1,null],[12,"num_new_leaves","","",1,null],[12,"num_stale_leaves","","",1,null],[3,"JellyfishMerkleTree","","The Jellyfish Merkle tree data structure. See [`crate`]…",null,null],[0,"iterator","","This module implements `JellyfishMerkleIterator`.…",null,null],[3,"JellyfishMerkleIterator","jellyfish_merkle::iterator","The `JellyfishMerkleIterator` implementation.",null,null],[11,"new","","Constructs a new iterator. This puts the internal state in…",2,[[["arc"],["version"],["hashvalue"]],["result"]]],[0,"node_type","jellyfish_merkle","Node types of `JellyfishMerkleTree`",null,null],[3,"NodeKey","jellyfish_merkle::node_type","The unique key of each node.",null,null],[3,"Child","","Each child of [`InternalNode`] encapsulates a nibble…",null,null],[12,"hash","","",3,null],[12,"version","","",3,null],[12,"is_leaf","","",3,null],[3,"InternalNode","","Represents a 4-level subtree with 16 children at the…",null,null],[3,"InternalNodeHasher","","",null,null],[3,"LeafNode","","Represents an account.",null,null],[3,"LeafNodeHasher","","",null,null],[4,"Node","","The concrete node type of `JellyfishMerkleTree`.",null,null],[13,"Null","","Represents `null`.",4,null],[13,"Internal","","A wrapper of [`InternalNode`].",4,null],[13,"Leaf","","A wrapper of [`LeafNode`].",4,null],[4,"NodeDecodeError","","Error thrown when a [`Node`] fails to be deserialized out…",null,null],[13,"EmptyInput","","Input is empty.",5,null],[13,"UnknownTag","","The first byte of the input is not a known tag…",5,null],[12,"unknown_tag","jellyfish_merkle::node_type::NodeDecodeError","",6,null],[13,"NoChildren","jellyfish_merkle::node_type","No children found in internal node",5,null],[13,"ExtraLeaves","","Extra leaf bits set",5,null],[12,"existing","jellyfish_merkle::node_type::NodeDecodeError","",7,null],[12,"leaves","","",7,null],[11,"new","jellyfish_merkle::node_type","Creates a new `NodeKey`.",8,[[["version"],["nibblepath"]],["self"]]],[11,"new_empty_path","","A shortcut to generate a node key consisting of a version…",8,[[["version"]],["self"]]],[11,"version","","Gets the version.",8,[[["self"]],["version"]]],[11,"nibble_path","","Gets the nibble path.",8,[[["self"]],["nibblepath"]]],[11,"gen_child_node_key","","Generates a child node key based on this node key.",8,[[["nibble"],["self"],["version"]],["self"]]],[11,"gen_parent_node_key","","Generates parent node key at the same version based on…",8,[[["self"]],["self"]]],[11,"set_version","","Sets the version to the given version.",8,[[["self"],["version"]]]],[11,"encode","","Serializes to bytes for physical storage enforcing the…",8,[[["self"]],[["result",["vec"]],["vec",["u8"]]]]],[11,"decode","","Recovers from serialized bytes in physical storage.",8,[[],[["result",["nodekey"]],["nodekey"]]]],[11,"new","","",3,[[["bool"],["hashvalue"],["version"]],["self"]]],[11,"new","","Creates a new Internal node.",9,[[["nibble"],["hashmap",["nibble","child"]],["child"]],["self"]]],[11,"serialize","","",9,[[["vec"],["self"]],["result"]]],[11,"deserialize","","",9,[[],["result"]]],[11,"child","","Gets the `n`-th child.",9,[[["self"],["nibble"]],[["child"],["option",["child"]]]]],[11,"num_children","","Return the total number of existing children.",9,[[["self"]],["usize"]]],[11,"generate_bitmaps","","Generates `existence_bitmap` and `leaf_bitmap` as a pair…",9,[[["self"]]]],[11,"get_child_with_siblings","","Gets the child and its corresponding siblings that are…",9,[[["nodekey"],["self"],["nibble"]]]],[11,"new","","Creates a new leaf node.",10,[[["hashvalue"],["accountstateblob"]],["self"]]],[11,"account_key","","Gets the account key, the hashed account address.",10,[[["self"]],["hashvalue"]]],[11,"blob_hash","","Gets the hash of associated blob.",10,[[["self"]],["hashvalue"]]],[11,"blob","","Gets the associated blob itself.",10,[[["self"]],["accountstateblob"]]],[11,"new_null","","Creates the `Null` variant.",4,[[],["self"]]],[11,"new_internal","","Creates the `Internal` variant.",4,[[["nibble"],["hashmap",["nibble","child"]],["child"]],["self"]]],[11,"new_leaf","","Creates the `Leaf` variant.",4,[[["hashvalue"],["accountstateblob"]],["self"]]],[11,"is_leaf","","Returns `true` if the node is a leaf node.",4,[[["self"]],["bool"]]],[11,"encode","","Serializes to bytes for physical storage.",4,[[["self"]],[["result",["vec"]],["vec",["u8"]]]]],[11,"hash","","Computes the hash of nodes.",4,[[["self"]],["hashvalue"]]],[11,"decode","","Recovers from serialized bytes in physical storage.",4,[[],[["node"],["result",["node"]]]]],[0,"restore","jellyfish_merkle","This module implements the functionality to restore a…",null,null],[3,"JellyfishMerkleRestore","jellyfish_merkle::restore","",null,null],[11,"new","","",11,[[["hashvalue"],["s"],["version"]],["result"]]],[11,"add_chunk","","Restores a chunk of accounts. This function will verify…",11,[[["sparsemerklerangeproof"],["vec"],["self"]],["result"]]],[11,"finish","","Finishes the restoration process. This tells the code that…",11,[[],["result"]]],[6,"NodeBatch","jellyfish_merkle","Node batch that will be written into db atomically with…",null,null],[6,"StaleNodeIndexBatch","","`StaleNodeIndex` batch that will be written into db…",null,null],[17,"ROOT_NIBBLE_HEIGHT","","The hardcoded maximum height of a [`JellyfishMerkleTree`]…",null,null],[8,"TreeReader","","`TreeReader` defines the interface between…",null,null],[11,"get_node","","Gets node given a node key. Returns error if the node does…",12,[[["nodekey"],["self"]],[["node"],["result",["node"]]]]],[10,"get_node_option","","Gets node given a node key. Returns `None` if the node…",12,[[["nodekey"],["self"]],[["option",["node"]],["result",["option"]]]]],[10,"get_rightmost_leaf","","Gets the rightmost leaf. Note that this assumes we are in…",12,[[["self"]],[["option"],["result",["option"]]]]],[8,"TreeWriter","","",null,null],[10,"write_node_batch","","Writes a node batch into storage.",13,[[["self"],["nodebatch"]],["result"]]],[11,"new","","Creates a `JellyfishMerkleTree` backed by the given…",14,[[["r"]],["self"]]],[11,"put_blob_sets","","Returns the new nodes and account state blobs in a batch…",14,[[["vec",["vec"]],["version"],["vec"],["self"]],["result"]]],[11,"get_with_proof","","Returns the account state blob (if applicable) and the…",14,[[["version"],["self"],["hashvalue"]],["result"]]],[11,"get_range_proof","","Gets the proof that shows a list of keys up to…",14,[[["version"],["self"],["hashvalue"]],[["sparsemerklerangeproof"],["result",["sparsemerklerangeproof"]]]]],[11,"get_root_hash","","",14,[[["self"],["version"]],[["hashvalue"],["result",["hashvalue"]]]]],[11,"get_root_hash_option","","",14,[[["self"],["version"]],[["result",["option"]],["option",["hashvalue"]]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"clear","","",1,[[["self"]]]],[11,"initialize","","",1,[[]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","jellyfish_merkle::iterator","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","jellyfish_merkle::node_type","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"clear","","",15,[[["self"]]]],[11,"initialize","","",15,[[]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"test_only_hash","","",10,[[["self"]],["hashvalue"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"clear","","",16,[[["self"]]]],[11,"initialize","","",16,[[]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","jellyfish_merkle::restore","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","jellyfish_merkle::node_type","",4,[[["internalnode"]],["self"]]],[11,"from","","",4,[[["leafnode"]],["self"]]],[11,"next","jellyfish_merkle::iterator","",2,[[["self"]],["option"]]],[11,"clone","jellyfish_merkle::node_type","",8,[[["self"]],["nodekey"]]],[11,"clone","","",3,[[["self"]],["child"]]],[11,"clone","","",9,[[["self"]],["internalnode"]]],[11,"clone","","",15,[[["self"]],["internalnodehasher"]]],[11,"clone","","",10,[[["self"]],["leafnode"]]],[11,"clone","","",16,[[["self"]],["leafnodehasher"]]],[11,"clone","","",4,[[["self"]],["node"]]],[11,"clone","jellyfish_merkle","",0,[[["self"]],["stalenodeindex"]]],[11,"clone","","",1,[[["self"]],["treeupdatebatch"]]],[11,"default","jellyfish_merkle::node_type","",15,[[],["self"]]],[11,"default","","",16,[[],["self"]]],[11,"default","jellyfish_merkle","",1,[[],["treeupdatebatch"]]],[11,"cmp","jellyfish_merkle::node_type","",8,[[["nodekey"],["self"]],["ordering"]]],[11,"cmp","jellyfish_merkle","",0,[[["stalenodeindex"],["self"]],["ordering"]]],[11,"eq","jellyfish_merkle::node_type","",8,[[["nodekey"],["self"]],["bool"]]],[11,"ne","","",8,[[["nodekey"],["self"]],["bool"]]],[11,"eq","","",3,[[["child"],["self"]],["bool"]]],[11,"ne","","",3,[[["child"],["self"]],["bool"]]],[11,"eq","","",9,[[["internalnode"],["self"]],["bool"]]],[11,"ne","","",9,[[["internalnode"],["self"]],["bool"]]],[11,"eq","","",10,[[["self"],["leafnode"]],["bool"]]],[11,"ne","","",10,[[["self"],["leafnode"]],["bool"]]],[11,"eq","","",4,[[["self"],["node"]],["bool"]]],[11,"ne","","",4,[[["self"],["node"]],["bool"]]],[11,"eq","","",5,[[["self"],["nodedecodeerror"]],["bool"]]],[11,"ne","","",5,[[["self"],["nodedecodeerror"]],["bool"]]],[11,"eq","jellyfish_merkle","",0,[[["stalenodeindex"],["self"]],["bool"]]],[11,"ne","","",0,[[["stalenodeindex"],["self"]],["bool"]]],[11,"eq","","",1,[[["treeupdatebatch"],["self"]],["bool"]]],[11,"ne","","",1,[[["treeupdatebatch"],["self"]],["bool"]]],[11,"partial_cmp","jellyfish_merkle::node_type","",8,[[["nodekey"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",8,[[["nodekey"],["self"]],["bool"]]],[11,"le","","",8,[[["nodekey"],["self"]],["bool"]]],[11,"gt","","",8,[[["nodekey"],["self"]],["bool"]]],[11,"ge","","",8,[[["nodekey"],["self"]],["bool"]]],[11,"partial_cmp","jellyfish_merkle","",0,[[["stalenodeindex"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["stalenodeindex"],["self"]],["bool"]]],[11,"le","","",0,[[["stalenodeindex"],["self"]],["bool"]]],[11,"gt","","",0,[[["stalenodeindex"],["self"]],["bool"]]],[11,"ge","","",0,[[["stalenodeindex"],["self"]],["bool"]]],[11,"fmt","jellyfish_merkle::node_type","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","jellyfish_merkle","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","jellyfish_merkle::node_type","",5,[[["formatter"],["self"]],["result"]]],[11,"hash","","",8,[[["self"],["__h"]]]],[11,"hash","jellyfish_merkle","",0,[[["self"],["__h"]]]],[11,"deserialize","jellyfish_merkle::node_type","",10,[[["__d"]],["result"]]],[11,"serialize","","",10,[[["self"],["__s"]],["result"]]],[11,"arbitrary_with","","",8,[[]]],[11,"arbitrary_with","","",3,[[]]],[11,"arbitrary_with","","",9,[[]]],[11,"arbitrary_with","jellyfish_merkle","",0,[[]]],[11,"hash","jellyfish_merkle::node_type","",9,[[["self"]],["hashvalue"]]],[11,"hash","","",10,[[["self"]],["hashvalue"]]],[11,"finish","","",15,[[],["hashvalue"]]],[11,"write","","",15,[[["self"]],["self"]]],[11,"finish","","",16,[[],["hashvalue"]]],[11,"write","","",16,[[["self"]],["self"]]]],"p":[[3,"StaleNodeIndex"],[3,"TreeUpdateBatch"],[3,"JellyfishMerkleIterator"],[3,"Child"],[4,"Node"],[4,"NodeDecodeError"],[13,"UnknownTag"],[13,"ExtraLeaves"],[3,"NodeKey"],[3,"InternalNode"],[3,"LeafNode"],[3,"JellyfishMerkleRestore"],[8,"TreeReader"],[8,"TreeWriter"],[3,"JellyfishMerkleTree"],[3,"InternalNodeHasher"],[3,"LeafNodeHasher"]]};
searchIndex["language_benchmarks"] = {"doc":"","i":[[0,"move_vm","language_benchmarks","",null,null],[5,"bench","language_benchmarks::move_vm","Entry point for the bench, provide a function name to…",null,[[["str"],["criterion"]]]],[0,"transactions","language_benchmarks","",null,null],[3,"TransactionBencher","language_benchmarks::transactions","Benchmarking support for transactions.",null,null],[18,"DEFAULT_NUM_ACCOUNTS","","The number of accounts created by default.",0,null],[18,"DEFAULT_NUM_TRANSACTIONS","","The number of transactions created by default.",0,null],[11,"new","","Creates a new transaction bencher with default settings.",0,[[["s"]],["self"]]],[11,"num_accounts","","Sets a custom number of accounts.",0,[[["self"],["usize"]],["self"]]],[11,"num_transactions","","Sets a custom number of transactions.",0,[[["self"],["usize"]],["self"]]],[11,"bench","","Runs the bencher.",0,[[["self"],["bencher"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"into_request","","",0,[[],["request"]]],[11,"clone","","",0,[[["self"]],["transactionbencher"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[3,"TransactionBencher"]]};
searchIndex["language_e2e_tests"] = {"doc":"Test infrastructure for the Libra VM.","i":[[5,"assert_status_eq","language_e2e_tests","",null,[[["vmstatus"]],["bool"]]],[5,"transaction_status_eq","","",null,[[["transactionstatus"]],["bool"]]],[0,"account","","Test infrastructure for modeling Libra accounts.",null,null],[3,"Account","language_e2e_tests::account","Details about a Libra account.",null,null],[12,"privkey","","The current private key for this account.",0,null],[12,"pubkey","","The current public key for this account.",0,null],[3,"Balance","","Struct that represents an account balance resource for…",null,null],[3,"AccountType","","Struct that represents an account type for testing.",null,null],[3,"EventHandleGenerator","","Struct that represents the event generator resource stored…",null,null],[3,"AccountData","","Represents an account along with initial state about it.",null,null],[4,"AccountTypeSpecifier","","",null,null],[13,"Empty","","",1,null],[13,"Vasp","","",1,null],[13,"Unhosted","","",1,null],[5,"lbr_currency_code","","",null,[[],["identifier"]]],[17,"DEFAULT_EXPIRATION_TIME","","",null,null],[11,"new","","Creates a new account in memory.",0,[[],["self"]]],[11,"with_keypair","","Creates a new account with the given keypair.",0,[[["ed25519privatekey"],["ed25519publickey"]],["self"]]],[11,"new_genesis_account","","Creates a new account in memory representing an account…",0,[[["accountaddress"]],["self"]]],[11,"new_association","","Creates a new account representing the association in…",0,[[],["self"]]],[11,"address","","Returns the address of the account. This is a hash of the…",0,[[["self"]],["accountaddress"]]],[11,"make_account_access_path","","Returns the AccessPath that describes the Account resource…",0,[[["self"]],["accesspath"]]],[11,"make_event_generator_access_path","","Returns the AccessPath that describes the…",0,[[["self"]],["accesspath"]]],[11,"make_balance_access_path","","Returns the AccessPath that describes the Account balance…",0,[[["self"],["identifier"]],["accesspath"]]],[11,"make_account_type_access_path","","Returns the AccessPath that describes the Account type…",0,[[["self"],["accounttypespecifier"]],["accesspath"]]],[11,"rotate_key","","Changes the keys for this account to the provided ones.",0,[[["self"],["ed25519privatekey"],["ed25519publickey"]]]],[11,"auth_key","","Computes the authentication key for this account, as…",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"auth_key_prefix","","Return the first 16 bytes of the account's auth key",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"create_user_txn","","Returns a [`SignedTransaction`] with a payload and this…",0,[[["transactionpayload"],["u64"],["self"]],["signedtransaction"]]],[11,"create_raw_user_txn","","",0,[[["transactionpayload"],["u64"],["accountaddress"]],["rawtransaction"]]],[11,"create_signed_txn_with_args","","Returns a [`SignedTransaction`] with the arguments defined…",0,[[["vec",["transactionargument"]],["self"],["u8"],["u64"],["transactionargument"],["typetag"],["vec",["u8"]],["vec",["typetag"]]],["signedtransaction"]]],[11,"create_raw_txn_with_args","","",0,[[["vec",["transactionargument"]],["accountaddress"],["u8"],["u64"],["transactionargument"],["typetag"],["vec",["u8"]],["vec",["typetag"]]],["rawtransaction"]]],[11,"create_signed_txn_with_args_and_sender","","Returns a [`SignedTransaction`] with the arguments defined…",0,[[["vec",["typetag"]],["vec",["transactionargument"]],["vec",["u8"]],["self"],["u64"],["transactionargument"],["typetag"],["accountaddress"],["u8"]],["signedtransaction"]]],[11,"create_raw_txn_with_args_and_sender","","",0,[[["vec",["transactionargument"]],["accountaddress"],["u8"],["u64"],["transactionargument"],["typetag"],["vec",["u8"]],["vec",["typetag"]]],["rawtransaction"]]],[11,"create_signed_txn_impl","","Returns a [`SignedTransaction`] with the arguments defined…",0,[[["accountaddress"],["u64"],["transactionpayload"],["self"]],["signedtransaction"]]],[11,"signed_script_txn","","Create a transaction containing `script` signed by…",0,[[["u64"],["self"],["script"]],["signedtransaction"]]],[11,"create_raw_txn_impl","","",0,[[["transactionpayload"],["u64"],["accountaddress"]],["rawtransaction"]]],[11,"new","","Create a new balance with amount `balance`",2,[[["u64"]],["self"]]],[11,"coin","","Retrieve the balance inside of this",2,[[["self"]],["u64"]]],[11,"to_value","","Returns the Move Value for the account balance",2,[[["self"]],["value"]]],[11,"type_","","Returns the value layout for the account balance",2,[[],["fatstructtype"]]],[11,"new","","Create a new AccountType testing account.",3,[[["accountaddress"],["accounttypespecifier"]],["self"]]],[11,"account_specifier","","",3,[[["self"]],["accounttypespecifier"]]],[11,"to_value","","Returns the Move Value representation of the AccountType.",3,[[["self"]],["value"]]],[11,"type_","","",3,[[["accounttypespecifier"]],["fatstructtype"]]],[11,"new","","",4,[[["accountaddress"]],["self"]]],[11,"new_with_event_count","","",4,[[["accountaddress"],["u64"]],["self"]]],[11,"to_value","","",4,[[["self"]],["value"]]],[11,"type_","","",4,[[],["fatstructtype"]]],[11,"new","","Creates a new `AccountData` with a new account.",5,[[["u64"]],["self"]]],[11,"new_empty","","",5,[[],["self"]]],[11,"with_account","","Creates a new `AccountData` with the provided account.",5,[[["account"],["identifier"],["u64"],["accounttypespecifier"]],["self"]]],[11,"with_keypair","","Creates a new `AccountData` with the provided account.",5,[[["ed25519publickey"],["identifier"],["ed25519privatekey"],["u64"],["accounttypespecifier"]],["self"]]],[11,"with_account_and_event_counts","","Creates a new `AccountData` with custom parameters.",5,[[["account"],["accounttypespecifier"],["identifier"],["u64"],["bool"]],["self"]]],[11,"set_balance_currency","","Changes the balance held by this account to the one…",5,[[["self"],["identifier"]]]],[11,"rotate_key","","Changes the keys for this account to the provided ones.",5,[[["self"],["ed25519privatekey"],["ed25519publickey"]]]],[11,"sent_payment_event_type","","",5,[[],["fatstructtype"]]],[11,"received_payment_event_type","","",5,[[],["fatstructtype"]]],[11,"event_handle_type","","",5,[[["fattype"]],["fatstructtype"]]],[11,"type_","","Returns the (Move value) layout of the LibraAccount::T…",5,[[],["fatstructtype"]]],[11,"account_type","","Returns whether the underlying account is an an empty…",5,[[["self"]],["accounttypespecifier"]]],[11,"to_value","","Creates and returns the top-level resources to be…",5,[[["self"]]]],[11,"make_account_access_path","","Returns the AccessPath that describes the Account resource…",5,[[["self"]],["accesspath"]]],[11,"make_balance_access_path","","Returns the AccessPath that describes the Account balance…",5,[[["self"]],["accesspath"]]],[11,"make_event_generator_access_path","","Returns the AccessPath that describes the…",5,[[["self"]],["accesspath"]]],[11,"make_account_type_access_path","","Returns the AccessPath that describes the Account balance…",5,[[["self"],["accounttypespecifier"]],["accesspath"]]],[11,"to_writeset","","Creates a writeset that contains the account data and can…",5,[[["self"]],["writeset"]]],[11,"address","","Returns the address of the account. This is a hash of the…",5,[[["self"]],["accountaddress"]]],[11,"account","","Returns the underlying [`Account`] instance.",5,[[["self"]],["account"]]],[11,"into_account","","Converts this data into an `Account` instance.",5,[[],["account"]]],[11,"balance","","Returns the initial balance.",5,[[["self"]],["u64"]]],[11,"sequence_number","","Returns the initial sequence number.",5,[[["self"]],["u64"]]],[11,"sent_events_key","","Returns the unique key for this sent events stream.",5,[[["self"]]]],[11,"sent_events_count","","Returns the initial sent events count.",5,[[["self"]],["u64"]]],[11,"received_events_key","","Returns the unique key for this received events stream.",5,[[["self"]]]],[11,"received_events_count","","Returns the initial received events count.",5,[[["self"]],["u64"]]],[11,"balance_currency_code","","",5,[[["self"]],["identstr"]]],[0,"account_universe","language_e2e_tests","A model to test properties of common Libra transactions.",null,null],[3,"CreateAccountGen","language_e2e_tests::account_universe","Represents a create-account transaction performed in the…",null,null],[3,"CreateExistingAccountGen","","Represents a create-account transaction in the account…",null,null],[3,"P2PTransferGen","","Represents a peer-to-peer transaction performed in the…",null,null],[3,"P2PNewReceiverGen","","Represents a peer-to-peer transaction performed in the…",null,null],[3,"RotateKeyGen","","Represents a rotate-key transaction performed in the…",null,null],[3,"AccountUniverseGen","","A set of accounts which can be used to construct an…",null,null],[3,"AccountUniverse","","A set of accounts that has been set up and can now be used…",null,null],[3,"AccountPairGen","","Allows pairs of accounts to be uniformly randomly selected…",null,null],[3,"AccountPair","","Mutable references to a pair of distinct accounts picked…",null,null],[12,"idx_1","","The index of the first account picked.",6,null],[12,"idx_2","","The index of the second account picked.",6,null],[12,"account_1","","A mutable reference to the first account picked.",6,null],[12,"account_2","","A mutable reference to the second account picked.",6,null],[3,"AccountCurrent","","Represents the current state of account in a universe,…",null,null],[4,"AccountPickStyle","","Determines the sampling algorithm used to pick accounts…",null,null],[13,"Unlimited","","An account may be picked as many times as possible.",7,null],[13,"Limited","","An account may only be picked these many times.",7,null],[5,"txn_one_account_result","","Computes the result for running a transfer out of one…",null,[[["accountcurrent"],["u64"]]]],[5,"log_balance_strategy","","Returns a [`Strategy`] that provides a variety of balances…",null,[[["u64"]]]],[11,"strategy","","Returns a [`Strategy`] that generates a universe of…",8,[[]]],[11,"success_strategy","","Returns a [`Strategy`] that generates a universe of…",8,[[["usize"]]]],[11,"set_pick_style","","Sets the pick style used by this account universe.",8,[[["self"],["accountpickstyle"]],["self"]]],[11,"num_accounts","","Returns the number of accounts in this account universe.",8,[[["self"]],["usize"]]],[11,"setup","","Returns an [`AccountUniverse`] with the initial state…",8,[[["fakeexecutor"]],["accountuniverse"]]],[11,"setup_gas_cost_stability","","Returns an [`AccountUniverse`] with the initial state…",8,[[["fakeexecutor"]],["accountuniverse"]]],[11,"num_accounts","","Returns the number of accounts currently in this universe.",9,[[["self"]],["usize"]]],[11,"accounts","","Returns the accounts currently in this universe.",9,[[["self"]]]],[11,"add_account","","Adds an account to the universe so that future…",9,[[["accountdata"],["self"]]]],[11,"pick","","Picks an account using the provided `Index` as a source of…",9,[[["index"],["self"]]]],[11,"pick","","Picks two accounts uniformly randomly from this universe…",10,[[["self"],["accountuniverse"]],["accountpair"]]],[8,"AUTransactionGen","","Represents any sort of transaction that can be done in an…",null,null],[10,"apply","","Applies this transaction onto the universe, updating…",11,[[["accountuniverse"],["self"]]]],[11,"arced","","Creates an arced version of this transaction, suitable for…",11,[[],[["autransactiongen"],["arc",["autransactiongen"]]]]],[11,"account","","Returns the underlying account.",12,[[["self"]],["account"]]],[11,"rotate_key","","Rotates the key in this account.",12,[[["self"],["ed25519privatekey"],["ed25519publickey"]]]],[11,"balance","","Returns the current balance for this account, assuming all…",12,[[["self"]],["u64"]]],[11,"sequence_number","","Returns the current sequence number for this account,…",12,[[["self"]],["u64"]]],[11,"sent_events_count","","Returns the current sent events count for this account,…",12,[[["self"]],["u64"]]],[11,"received_events_count","","Returns the current received events count for this…",12,[[["self"]],["u64"]]],[11,"create_account_gas_cost","","Returns the gas cost of a create-account transaction.",12,[[["self"]],["u64"]]],[11,"create_account_low_balance_gas_cost","","Returns the gas cost of a create-account transaction where…",12,[[["self"]],["u64"]]],[11,"create_existing_account_gas_cost","","Returns the gas cost of a create-account transaction where…",12,[[["self"]],["u64"]]],[11,"peer_to_peer_gas_cost","","Returns the gas cost of a peer-to-peer transaction.",12,[[["self"]],["u64"]]],[11,"peer_to_peer_too_low_gas_cost","","Returns the gas cost of a peer-to-peer transaction with an…",12,[[["self"]],["u64"]]],[11,"peer_to_peer_new_receiver_gas_cost","","Returns the gas cost of a create-account transaction where…",12,[[["self"]],["u64"]]],[11,"peer_to_peer_new_receiver_too_low_gas_cost","","Returns the gas cost of a create-account transaction where…",12,[[["self"]],["u64"]]],[11,"rotate_key_gas_cost","","Returns the gas cost of a peer-to-peer transaction with an…",12,[[["self"]],["u64"]]],[0,"common_transactions","language_e2e_tests","Support for encoding transactions for common situations.",null,null],[5,"add_validator_txn","language_e2e_tests::common_transactions","Returns a transaction to add a new validator",null,[[["u64"],["account"]],["signedtransaction"]]],[5,"create_account_txn","","Returns a transaction to create a new account with the…",null,[[["u64"],["account"]],["signedtransaction"]]],[5,"peer_to_peer_txn","","Returns a transaction to transfer coin from one account to…",null,[[["u64"],["account"]],["signedtransaction"]]],[5,"register_validator_txn","","Returns a transaction to register the sender as a…",null,[[["account"],["u64"],["vec",["u8"]],["u8"]],["signedtransaction"]]],[5,"rotate_key_txn","","Returns a transaction to change the keys for the given…",null,[[["account"],["u64"],["vec",["u8"]],["u8"]],["signedtransaction"]]],[5,"raw_rotate_key_txn","","Returns a transaction to change the keys for the given…",null,[[["vec",["u8"]],["u64"],["accountaddress"],["u8"]],["rawtransaction"]]],[5,"rotate_consensus_pubkey_txn","","Returns a transaction to change the keys for the given…",null,[[["account"],["u64"],["vec",["u8"]],["u8"]],["signedtransaction"]]],[5,"mint_txn","","Returns a transaction to mint new funds with the given…",null,[[["u64"],["account"]],["signedtransaction"]]],[0,"compile","language_e2e_tests","Support for compiling scripts and modules in tests.",null,null],[5,"compile_module_with_address","language_e2e_tests::compile","Compile the provided Move code into a blob which can be…",null,[[["str"],["accountaddress"]],["transactionpayload"]]],[0,"data_store","language_e2e_tests","Support for mocking the Libra data store.",null,null],[3,"FakeDataStore","language_e2e_tests::data_store","An in-memory implementation of [`StateView`] and…",null,null],[7,"GENESIS_CHANGE_SET","","Dummy genesis ChangeSet for testing",null,null],[7,"GENESIS_CHANGE_SET_FRESH","","",null,null],[11,"new","","Creates a new `FakeDataStore` with the provided initial…",13,[[["hashmap",["accesspath","vec"]],["accesspath"],["vec",["u8"]]],["self"]]],[11,"add_write_set","","Adds a [`WriteSet`] to this data store.",13,[[["writeset"],["self"]]]],[11,"set","","Sets a (key, value) pair within this data store.",13,[[["accesspath"],["self"],["vec",["u8"]],["u8"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"remove","","Deletes a key from this data store.",13,[[["self"],["accesspath"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"add_account_data","","Adds an [`AccountData`] to this data store.",13,[[["self"],["accountdata"]]]],[11,"add_module","","Adds a [`CompiledModule`] to this data store.",13,[[["moduleid"],["self"],["compiledmodule"]]]],[0,"executor","language_e2e_tests","Support for running the VM to execute and verify…",null,null],[3,"FakeExecutor","language_e2e_tests::executor","Provides an environment to run a VM instance.",null,null],[11,"from_genesis","","Creates an executor from a genesis [`WriteSet`].",14,[[["writeset"]],["self"]]],[11,"from_genesis_file","","Creates an executor from the genesis file…",14,[[],["self"]]],[11,"from_fresh_genesis","","Creates an executor using the standard genesis.",14,[[],["self"]]],[11,"whitelist_genesis","","",14,[[],["self"]]],[11,"from_genesis_with_options","","Creates an executor from the genesis file…",14,[[["vmpublishingoption"]],["self"]]],[11,"no_genesis","","Creates an executor in which no genesis state has been…",14,[[],["self"]]],[11,"custom_genesis","","Creates fresh genesis from the stdlib modules passed in.",14,[[["vec",["verifiedmodule"]],["usize"],["option",["usize"]],["vmpublishingoption"],["verifiedmodule"]],["self"]]],[11,"create_accounts","","Creates a number of [`Account`] instances all with the…",14,[[["usize"],["self"],["u64"]],[["account"],["vec",["account"]]]]],[11,"apply_write_set","","Applies a [`WriteSet`] to this executor's data store.",14,[[["writeset"],["self"]]]],[11,"add_account_data","","Adds an account to this executor's data store.",14,[[["self"],["accountdata"]]]],[11,"add_module","","Adds a module to this executor's data store.",14,[[["moduleid"],["self"],["compiledmodule"]]]],[11,"read_account_resource","","Reads the resource [`Value`] for an account from this…",14,[[["self"],["account"]],[["option",["accountresource"]],["accountresource"]]]],[11,"read_balance_resource","","Reads the balance resource value for an account from this…",14,[[["self"],["account"]],[["balanceresource"],["option",["balanceresource"]]]]],[11,"read_account_info","","Reads the AccountResource and BalanceResource for this…",14,[[["self"],["account"]],["option"]]],[11,"execute_block","","Executes the given block of transactions.",14,[[["vec",["signedtransaction"]],["signedtransaction"],["self"]],[["vec",["transactionoutput"]],["result",["vec","vmstatus"]],["vmstatus"]]]],[11,"execute_and_apply","","Executes the transaction as a singleton block and applies…",14,[[["self"],["signedtransaction"]],["transactionoutput"]]],[11,"execute_transaction_block","","",14,[[["vec",["transaction"]],["self"],["transaction"]],[["vec",["transactionoutput"]],["result",["vec","vmstatus"]],["vmstatus"]]]],[11,"execute_transaction","","",14,[[["signedtransaction"],["self"]],["transactionoutput"]]],[11,"read_from_access_path","","Get the blob for the associated AccessPath",14,[[["self"],["accesspath"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"verify_transaction","","Verifies the given transaction by running it through the…",14,[[["signedtransaction"],["self"]],["vmvalidatorresult"]]],[11,"get_state_view","","",14,[[["self"]],["fakedatastore"]]],[11,"new_block","","",14,[[["self"]]]],[0,"gas_costs","language_e2e_tests","Gas costs for common transactions.",null,null],[7,"CREATE_ACCOUNT_FIRST","language_e2e_tests::gas_costs","The gas cost of a first time create-account transaction.",null,null],[7,"CREATE_ACCOUNT_NEXT","","The gas cost of a create-account transaction.",null,null],[7,"CREATE_ACCOUNT_TOO_LOW_FIRST","","The gas cost of a create-account transaction where the…",null,null],[7,"CREATE_ACCOUNT_TOO_LOW_NEXT","","The gas cost of a create-account transaction where the…",null,null],[7,"CREATE_EXISTING_ACCOUNT_FIRST","","The gas cost of a create-account transaction where the…",null,null],[7,"CREATE_EXISTING_ACCOUNT_NEXT","","The gas cost of a create-account transaction where the…",null,null],[7,"PEER_TO_PEER","","The gas cost of a peer-to-peer transaction.",null,null],[7,"PEER_TO_PEER_TOO_LOW","","The gas cost of a peer-to-peer transaction with an…",null,null],[7,"PEER_TO_PEER_NEW_RECEIVER_FIRST","","The gas cost of a peer-to-peer transaction that creates a…",null,null],[7,"PEER_TO_PEER_NEW_RECEIVER_NEXT","","The gas cost of a peer-to-peer transaction that creates a…",null,null],[7,"PEER_TO_PEER_NEW_RECEIVER_TOO_LOW_FIRST","","The gas cost of a peer-to-peer transaction that tries to…",null,null],[7,"PEER_TO_PEER_NEW_RECEIVER_TOO_LOW_NEXT","","The gas cost of a peer-to-peer transaction that tries to…",null,null],[7,"ROTATE_KEY","","The gas cost of a rotate-key transaction.",null,null],[17,"TXN_RESERVED","","The gas each transaction is configured to reserve. If the…",null,null],[0,"keygen","language_e2e_tests","",null,null],[3,"KeyGen","language_e2e_tests::keygen","Ed25519 key generator.",null,null],[11,"from_seed","","Constructs a key generator with a specific seed.",15,[[],["self"]]],[11,"from_os_rng","","Constructs a key generator with a random seed. The random…",15,[[],["self"]]],[11,"generate_keypair","","Generate an Ed25519 key pair.",15,[[["self"]]]],[11,"strategy","language_e2e_tests::account","Returns a [`Strategy`] that creates `AccountData` instances.",5,[[]]],[14,"assert_prologue_parity","language_e2e_tests","",null,null],[14,"assert_prologue_disparity","","",null,null],[11,"from","language_e2e_tests::account","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"clear","","",0,[[["self"]]]],[11,"initialize","","",0,[[]]],[11,"equivalent","","",0,[[["k"],["self"]],["bool"]]],[11,"into_request","","",0,[[],["request"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"equivalent","","",2,[[["k"],["self"]],["bool"]]],[11,"into_request","","",2,[[],["request"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"equivalent","","",3,[[["k"],["self"]],["bool"]]],[11,"into_request","","",3,[[],["request"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"equivalent","","",4,[[["k"],["self"]],["bool"]]],[11,"into_request","","",4,[[],["request"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"equivalent","","",5,[[["k"],["self"]],["bool"]]],[11,"into_request","","",5,[[],["request"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"clear","","",1,[[["self"]]]],[11,"initialize","","",1,[[]]],[11,"equivalent","","",1,[[["k"],["self"]],["bool"]]],[11,"into_request","","",1,[[],["request"]]],[11,"from","language_e2e_tests::account_universe","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"into_request","","",16,[[],["request"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"into_request","","",17,[[],["request"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"vzip","","",18,[[],["v"]]],[11,"into_request","","",18,[[],["request"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"vzip","","",19,[[],["v"]]],[11,"into_request","","",19,[[],["request"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"vzip","","",20,[[],["v"]]],[11,"into_request","","",20,[[],["request"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"into_request","","",8,[[],["request"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"into_request","","",9,[[],["request"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"into_request","","",10,[[],["request"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"into_request","","",6,[[],["request"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"equivalent","","",12,[[["k"],["self"]],["bool"]]],[11,"into_request","","",12,[[],["request"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"into_request","","",7,[[],["request"]]],[11,"from","language_e2e_tests::data_store","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"clear","","",13,[[["self"]]]],[11,"initialize","","",13,[[]]],[11,"into_request","","",13,[[],["request"]]],[11,"from","language_e2e_tests::executor","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"into_request","","",14,[[],["request"]]],[11,"from","language_e2e_tests::keygen","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"into_request","","",15,[[],["request"]]],[11,"apply","language_e2e_tests::account_universe","",16,[[["accountuniverse"],["self"]]]],[11,"apply","","",17,[[["accountuniverse"],["self"]]]],[11,"apply","","",18,[[["accountuniverse"],["self"]]]],[11,"apply","","",19,[[["accountuniverse"],["self"]]]],[11,"apply","","",20,[[["accountuniverse"],["self"]]]],[11,"clone","language_e2e_tests::account","",0,[[["self"]],["account"]]],[11,"clone","","",2,[[["self"]],["balance"]]],[11,"clone","","",1,[[["self"]],["accounttypespecifier"]]],[11,"clone","","",3,[[["self"]],["accounttype"]]],[11,"clone","","",4,[[["self"]],["eventhandlegenerator"]]],[11,"clone","","",5,[[["self"]],["accountdata"]]],[11,"clone","language_e2e_tests::account_universe","",16,[[["self"]],["createaccountgen"]]],[11,"clone","","",17,[[["self"]],["createexistingaccountgen"]]],[11,"clone","","",18,[[["self"]],["p2ptransfergen"]]],[11,"clone","","",19,[[["self"]],["p2pnewreceivergen"]]],[11,"clone","","",20,[[["self"]],["rotatekeygen"]]],[11,"clone","","",8,[[["self"]],["accountuniversegen"]]],[11,"clone","","",9,[[["self"]],["accountuniverse"]]],[11,"clone","","",10,[[["self"]],["accountpairgen"]]],[11,"clone","","",7,[[["self"]],["accountpickstyle"]]],[11,"clone","","",12,[[["self"]],["accountcurrent"]]],[11,"default","language_e2e_tests::account","",0,[[],["self"]]],[11,"default","","",1,[[],["self"]]],[11,"default","language_e2e_tests::data_store","",13,[[],["fakedatastore"]]],[11,"eq","language_e2e_tests::account","",0,[[["self"],["account"]],["bool"]]],[11,"ne","","",0,[[["self"],["account"]],["bool"]]],[11,"eq","","",2,[[["balance"],["self"]],["bool"]]],[11,"ne","","",2,[[["balance"],["self"]],["bool"]]],[11,"eq","","",1,[[["accounttypespecifier"],["self"]],["bool"]]],[11,"eq","","",3,[[["self"],["accounttype"]],["bool"]]],[11,"ne","","",3,[[["self"],["accounttype"]],["bool"]]],[11,"eq","","",4,[[["eventhandlegenerator"],["self"]],["bool"]]],[11,"ne","","",4,[[["eventhandlegenerator"],["self"]],["bool"]]],[11,"eq","","",5,[[["self"],["accountdata"]],["bool"]]],[11,"ne","","",5,[[["self"],["accountdata"]],["bool"]]],[11,"eq","language_e2e_tests::account_universe","",12,[[["self"],["accountcurrent"]],["bool"]]],[11,"ne","","",12,[[["self"],["accountcurrent"]],["bool"]]],[11,"fmt","language_e2e_tests::account","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","language_e2e_tests::account_universe","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","language_e2e_tests::data_store","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","language_e2e_tests::executor","",14,[[["formatter"],["self"]],["result"]]],[11,"from_str","language_e2e_tests::account","",1,[[["str"]],["result"]]],[11,"arbitrary_with","language_e2e_tests::account_universe","",16,[[]]],[11,"arbitrary_with","","",17,[[]]],[11,"arbitrary_with","","",18,[[]]],[11,"arbitrary_with","","",19,[[]]],[11,"arbitrary_with","","",20,[[]]],[11,"arbitrary_with","","",10,[[]]],[11,"arbitrary_with","language_e2e_tests::account","",0,[[]]],[11,"get","language_e2e_tests::data_store","",13,[[["self"],["accesspath"]],[["option",["vec"]],["result",["option"]]]]],[11,"multi_get","","",13,[[["self"]],[["result",["vec"]],["vec",["option"]]]]],[11,"is_genesis","","",13,[[["self"]],["bool"]]],[11,"get","","",13,[[["self"],["accesspath"]],[["vmresult",["option"]],["option",["vec"]]]]]],"p":[[3,"Account"],[4,"AccountTypeSpecifier"],[3,"Balance"],[3,"AccountType"],[3,"EventHandleGenerator"],[3,"AccountData"],[3,"AccountPair"],[4,"AccountPickStyle"],[3,"AccountUniverseGen"],[3,"AccountUniverse"],[3,"AccountPairGen"],[8,"AUTransactionGen"],[3,"AccountCurrent"],[3,"FakeDataStore"],[3,"FakeExecutor"],[3,"KeyGen"],[3,"CreateAccountGen"],[3,"CreateExistingAccountGen"],[3,"P2PTransferGen"],[3,"P2PNewReceiverGen"],[3,"RotateKeyGen"]]};
searchIndex["libra_bitvec"] = {"doc":"This library defines a BitVec struct that represents a bit…","i":[[3,"BitVec","libra_bitvec","BitVec represents a bit vector that supports 4 operations:…",null,null],[11,"set","","Sets the bit at position @pos.",0,[[["self"],["u8"]]]],[11,"is_set","","Checks if the bit at position @pos is set.",0,[[["self"],["u8"]],["bool"]]],[11,"count_ones","","Returns the number of set bits.",0,[[["self"]],["u32"]]],[11,"last_set_bit","","Returns the index of the last set bit.",0,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["bitvec"]]],[11,"default","","",0,[[],["bitvec"]]],[11,"eq","","",0,[[["self"],["bitvec"]],["bool"]]],[11,"ne","","",0,[[["self"],["bitvec"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"bitand","","Returns a new BitVec that is a bitwise AND of two BitVecs.",0,[[],["self"]]],[11,"serialize","","",0,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",0,[[["d"]],["result"]]]],"p":[[3,"BitVec"]]};
searchIndex["libra_canonical_serialization"] = {"doc":"Libra Canonical Serialization (LCS)","i":[[4,"Error","libra_canonical_serialization","",null,null],[13,"Eof","","",0,null],[13,"ExceededMaxLen","","",0,null],[13,"ExpectedBoolean","","",0,null],[13,"ExpectedMapKey","","",0,null],[13,"ExpectedMapValue","","",0,null],[13,"NonCanonicalMap","","",0,null],[13,"ExpectedOption","","",0,null],[13,"Custom","","",0,null],[13,"MissingLen","","",0,null],[13,"NotSupported","","",0,null],[13,"RemainingInput","","",0,null],[13,"Utf8","","",0,null],[13,"NonCanonicalUleb128Encoding","","",0,null],[13,"IntegerOverflowDuringUleb128Decoding","","",0,null],[5,"from_bytes","","Deserializes a `&[u8]` into a type.",null,[[],["result"]]],[5,"from_bytes_seed","","Perform a stateful deserialization from a `&[u8]` using…",null,[[["t"]],["result"]]],[5,"is_human_readable","","",null,[[],["bool"]]],[5,"to_bytes","","Serialize the given data structure as a `Vec<u8>` of LCS.",null,[[["t"]],[["vec",["u8"]],["result",["vec"]]]]],[0,"test_helpers","","",null,null],[5,"assert_canonical_encode_decode","libra_canonical_serialization::test_helpers","",null,[[["t"]]]],[6,"Result","libra_canonical_serialization","",null,null],[17,"MAX_SEQUENCE_LENGTH","","Variable length sequences in LCS are limited to max length…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["error"]]],[11,"eq","","",0,[[["self"],["error"]],["bool"]]],[11,"ne","","",0,[[["self"],["error"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"custom","","",0,[[["display"]],["self"]]],[11,"custom","","",0,[[["display"]],["self"]]]],"p":[[4,"Error"]]};
searchIndex["libra_config"] = {"doc":"","i":[[0,"config","libra_config","",null,null],[3,"AdmissionControlConfig","libra_config::config","",null,null],[12,"address","","",0,null],[12,"need_to_check_mempool_before_validation","","",0,null],[12,"max_concurrent_inbound_syncs","","",0,null],[12,"upstream_proxy_timeout","","",0,null],[3,"RpcConfig","","",null,null],[12,"address","","",1,null],[3,"ConsensusConfig","","",null,null],[12,"max_block_size","","",2,null],[12,"contiguous_rounds","","",2,null],[12,"max_pruned_blocks_in_mem","","",2,null],[12,"pacemaker_initial_timeout_ms","","",2,null],[12,"proposer_type","","",2,null],[12,"safety_rules","","",2,null],[3,"LeaderReputationConfig","","",null,null],[12,"active_weights","","",3,null],[12,"inactive_weights","","",3,null],[3,"DebugInterfaceConfig","","",null,null],[12,"admission_control_node_debug_port","","",4,null],[12,"metrics_server_port","","",4,null],[12,"public_metrics_server_port","","",4,null],[12,"address","","",4,null],[3,"ExecutionConfig","","",null,null],[12,"genesis","","",5,null],[12,"genesis_file_location","","",5,null],[12,"service","","",5,null],[3,"RemoteExecutionService","","",null,null],[12,"server_address","","",6,null],[3,"LoggerConfig","","",null,null],[12,"is_async","","",7,null],[12,"chan_size","","",7,null],[12,"level","","",7,null],[3,"MetricsConfig","","",null,null],[12,"collection_interval_ms","","",8,null],[12,"dir","","",8,null],[12,"enabled","","",8,null],[3,"MempoolConfig","","",null,null],[12,"broadcast_transactions","","",9,null],[12,"shared_mempool_tick_interval_ms","","",9,null],[12,"shared_mempool_batch_size","","",9,null],[12,"shared_mempool_max_concurrent_inbound_syncs","","",9,null],[12,"shared_mempool_min_broadcast_recipient_count","","",9,null],[12,"max_broadcasts_per_peer","","",9,null],[12,"capacity","","",9,null],[12,"capacity_per_user","","",9,null],[12,"system_transaction_timeout_secs","","",9,null],[12,"system_transaction_gc_interval_ms","","",9,null],[3,"NetworkConfig","","",null,null],[12,"peer_id","","",10,null],[12,"listen_address","","",10,null],[12,"advertised_address","","",10,null],[12,"discovery_interval_ms","","",10,null],[12,"connectivity_check_interval_ms","","",10,null],[12,"enable_noise","","",10,null],[12,"enable_remote_authentication","","",10,null],[12,"discovery_method","","",10,null],[12,"network_peers","","",10,null],[12,"network_peers_file","","",10,null],[12,"seed_peers","","",10,null],[12,"seed_peers_file","","",10,null],[12,"network_keypairs","","",10,null],[3,"SeedPeersConfig","","",null,null],[12,"seed_peers","","",11,null],[3,"NetworkKeyPairs","","",null,null],[12,"identity_keypair","","",12,null],[12,"signing_keypair","","",12,null],[3,"NetworkPeersConfig","","",null,null],[12,"peers","","",13,null],[3,"NetworkPeerInfo","","",null,null],[12,"signing_public_key","","",14,null],[12,"identity_public_key","","",14,null],[3,"SecureConfig","","",null,null],[12,"key_manager","","",15,null],[3,"KeyManagerConfig","","",null,null],[12,"rotation_period_secs","","",16,null],[12,"sleep_period_secs","","",16,null],[12,"txn_expiration_secs","","",16,null],[12,"json_rpc_endpoint","","",16,null],[12,"secure_backend","","",16,null],[3,"GitHubConfig","","",null,null],[12,"owner","","The owner or account that hosts a repository",17,null],[12,"repository","","The repository where storage will mount",17,null],[12,"token","","The authorization token for accessing the repository",17,null],[12,"namespace","","A namespace is an optional portion of the path to a key…",17,null],[3,"VaultConfig","","",null,null],[12,"namespace","","A namespace is an optional portion of the path to a key…",18,null],[12,"server","","Vault's URL, note: only HTTP is currently supported.",18,null],[12,"token","","The authorization token for access secrets",18,null],[3,"OnDiskStorageConfig","","",null,null],[12,"path","","",19,null],[12,"namespace","","A namespace is an optional portion of the path to a key…",19,null],[3,"StateSyncConfig","","",null,null],[12,"chunk_limit","","",20,null],[12,"tick_interval_ms","","",20,null],[12,"long_poll_timeout_ms","","",20,null],[12,"max_chunk_limit","","",20,null],[12,"max_timeout_ms","","",20,null],[3,"StorageConfig","","",null,null],[12,"address","","",21,null],[12,"simple_address","","Use a different address name for non-GRPC storage serivce.…",21,null],[12,"dir","","",21,null],[12,"grpc_max_receive_len","","",21,null],[12,"prune_window","","None disables pruning. The windows is in number of…",21,null],[3,"SafetyRulesConfig","","",null,null],[12,"backend","","",22,null],[12,"service","","",22,null],[3,"RemoteService","","",null,null],[12,"server_address","","",23,null],[12,"consensus_type","","",23,null],[3,"UpstreamConfig","","",null,null],[12,"primary_networks","","",24,null],[12,"upstream_peers","","",24,null],[12,"fallback_networks","","",24,null],[3,"PeerNetworkId","","Identifier of a node, represented as (network_id, peer_id)",null,null],[12,"0","","",25,null],[12,"1","","",25,null],[3,"TestConfig","","",null,null],[12,"auth_key","","",26,null],[12,"operator_keypair","","",26,null],[12,"consensus_keypair","","",26,null],[12,"initialize_storage","","",26,null],[12,"publishing_option","","",26,null],[3,"NodeConfig","","Config pulls in configuration information from the config…",null,null],[12,"admission_control","","",27,null],[12,"rpc","","",27,null],[12,"base","","",27,null],[12,"consensus","","",27,null],[12,"debug_interface","","",27,null],[12,"execution","","",27,null],[12,"full_node_networks","","",27,null],[12,"logger","","",27,null],[12,"metrics","","",27,null],[12,"mempool","","",27,null],[12,"secure","","",27,null],[12,"state_sync","","",27,null],[12,"storage","","",27,null],[12,"test","","",27,null],[12,"upstream","","",27,null],[12,"validator_network","","",27,null],[3,"BaseConfig","","",null,null],[12,"role","","",28,null],[12,"waypoint","","",28,null],[3,"ParseRoleError","","",null,null],[3,"RootPath","","",null,null],[4,"ConsensusProposerType","","",null,null],[13,"FixedProposer","","",29,null],[13,"RotatingProposer","","",29,null],[13,"MultipleOrderedProposers","","",29,null],[13,"LeaderReputation","","",29,null],[4,"ExecutionCorrectnessService","","Defines how execution correctness should be run",null,null],[13,"Local","","This runs execution correctness in the same thread as…",30,null],[13,"Process","","This is the production, separate service approach",30,null],[13,"Serializer","","This runs safety rules in the same thread as event…",30,null],[13,"SpawnedProcess","","This instructs Consensus that this is an test model, where…",30,null],[13,"Thread","","This creates a separate thread to run execution…",30,null],[4,"DiscoveryMethod","","",null,null],[13,"Gossip","","",31,null],[13,"Onchain","","",31,null],[13,"None","","",31,null],[4,"SecureBackend","","",null,null],[13,"GitHub","","",32,null],[13,"InMemoryStorage","","",32,null],[13,"Vault","","",32,null],[13,"OnDiskStorage","","",32,null],[4,"SafetyRulesService","","Defines how safety rules should be executed",null,null],[13,"Local","","This runs safety rules in the same thread as event processor",33,null],[13,"Process","","This is the production, separate service approach",33,null],[13,"Serializer","","This runs safety rules in the same thread as event…",33,null],[13,"SpawnedProcess","","This instructs Consensus that this is an test model, where…",33,null],[13,"Thread","","This creates a separate thread to run safety rules, it is…",33,null],[4,"ConsensusType","","",null,null],[13,"SignedTransactions","","",34,null],[13,"Bytes","","",34,null],[13,"Rounds","","",34,null],[4,"RoleType","","",null,null],[13,"Validator","","",35,null],[13,"FullNode","","",35,null],[11,"randomize_ports","","",0,[[["self"]]]],[11,"randomize_ports","","",1,[[["self"]]]],[11,"set_data_dir","","",2,[[["self"],["pathbuf"]]]],[11,"randomize_ports","","",4,[[["self"]]]],[11,"load","","",5,[[["self"],["rootpath"]],["result"]]],[11,"save","","",5,[[["self"],["rootpath"]],["result"]]],[11,"dir","","",8,[[["self"]],["pathbuf"]]],[11,"set_data_dir","","",8,[[["self"],["pathbuf"]]]],[11,"clone_for_template","","This clones the underlying data except for the keypair so…",10,[[["self"]],["self"]]],[11,"load","","",10,[[["roletype"],["self"],["rootpath"]],["result"]]],[11,"save","","",10,[[["self"],["rootpath"]],["result"]]],[11,"random","","",10,[[["self"],["stdrng"]]]],[11,"random_with_peer_id","","",10,[[["stdrng"],["option",["peerid"]],["self"],["peerid"]]]],[11,"load","","",12,[[["ed25519privatekey"],["privatekey"]],["self"]]],[11,"as_peer_info","","",12,[[["self"]],["networkpeerinfo"]]],[11,"path","","",19,[[["self"]],["pathbuf"]]],[11,"set_data_dir","","",19,[[["self"],["pathbuf"]]]],[11,"dir","","",21,[[["self"]],["pathbuf"]]],[11,"set_data_dir","","",21,[[["self"],["pathbuf"]]]],[11,"randomize_ports","","",21,[[["self"]]]],[11,"set_data_dir","","",22,[[["self"],["pathbuf"]]]],[11,"is_upstream_peer","","Determines whether a node `peer_id` in network…",24,[[["self"],["peernetworkid"]],["bool"]]],[11,"is_primary_upstream_peer","","",24,[[["self"],["peernetworkid"]],["bool"]]],[11,"network_id","","",25,[[["self"]],["networkid"]]],[11,"peer_id","","",25,[[["self"]],["peerid"]]],[11,"random","","",25,[[],["self"]]],[11,"open_module","","",26,[[],["self"]]],[11,"new_with_temp_dir","","",26,[[],["self"]]],[11,"random_account_key","","",26,[[["self"],["stdrng"]]]],[11,"random_consensus_key","","",26,[[["self"],["stdrng"]]]],[11,"temp_dir","","",26,[[["self"]],[["option",["path"]],["path"]]]],[6,"NetworkId","","In general, a network ID is a PeerId that this node uses…",null,null],[17,"DEFAULT_JSON_RPC_PORT","","",null,null],[8,"PersistableConfig","","",null,null],[11,"load_config","","",36,[[["path"],["asref",["path"]]],["result"]]],[11,"save_config","","",36,[[["path"],["self"],["asref",["path"]]],["result"]]],[11,"parse","","",36,[[["str"]],["result"]]],[11,"is_validator","","",35,[[],["bool"]]],[11,"as_str","","",35,[[],["str"]]],[11,"data_dir","","",27,[[["self"]],["pathbuf"]]],[11,"set_data_dir","","",27,[[["self"],["pathbuf"]]]],[11,"clone_for_template","","This clones the underlying data except for the keypair so…",27,[[["self"]],["self"]]],[11,"load","","Reads the config file and returns the configuration object…",27,[[["path"],["asref",["path"]]],["result"]]],[11,"save","","",27,[[["path"],["self"],["asref",["path"]]],["result"]]],[11,"randomize_ports","","",27,[[["self"]]]],[11,"random","","",27,[[],["self"]]],[11,"random_with_rng","","",27,[[["stdrng"]],["self"]]],[11,"random_with_template","","",27,[[["self"],["stdrng"]],["self"]]],[11,"new","","",37,[[["path"],["asref",["path"]]],["self"]]],[11,"new_path","","This function assumes that the path is already a directory",37,[[["path"],["asref",["path"]]],["self"]]],[11,"full_path","","This adds a full path when loading / storing if one is not…",37,[[["self"],["pathbuf"]],["pathbuf"]]],[0,"generator","libra_config","Convenience structs and functions for generating a random…",null,null],[3,"ValidatorSwarm","libra_config::generator","",null,null],[12,"nodes","","",38,null],[5,"validator_swarm","","",null,[[["nodeconfig"],["usize"],["bool"]],["validatorswarm"]]],[5,"validator_swarm_for_testing","","",null,[[["usize"]],["validatorswarm"]]],[0,"keys","libra_config","This file implements a KeyPair data structure.",null,null],[3,"KeyPair","libra_config::keys","A KeyPair has a private key that can only be taken once,…",null,null],[11,"load","","This transforms a private key into a keypair data structure.",39,[[["t"]],["self"]]],[11,"take_private","","Takes the key from the data structure, calling this…",39,[[["self"]],["option"]]],[11,"public_key","","Returns the public key part. This always work, even after…",39,[[["self"]]]],[0,"utils","libra_config","",null,null],[5,"get_available_port","libra_config::utils","Return an ephemeral, available port. On unix systems, the…",null,[[],["u16"]]],[5,"get_local_ip","","Extracts one local non-loopback IP address, if one exists.…",null,[[],[["option",["networkaddress"]],["networkaddress"]]]],[5,"get_available_port_in_multiaddr","","",null,[[["bool"]],["networkaddress"]]],[5,"serialize_ordered_map","","Serialize HashMaps as BTreeMaps for consistent ordering",null,[[["s"],["hashmap"]],["result"]]],[5,"get_genesis_txn","","",null,[[["nodeconfig"]],[["result",["transaction"]],["transaction"]]]],[11,"from","libra_config::config","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"test_only_hash","","",0,[[["self"]],["hashvalue"]]],[11,"clear","","",0,[[["self"]]]],[11,"initialize","","",0,[[]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"test_only_hash","","",1,[[["self"]],["hashvalue"]]],[11,"clear","","",1,[[["self"]]]],[11,"initialize","","",1,[[]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"test_only_hash","","",2,[[["self"]],["hashvalue"]]],[11,"clear","","",2,[[["self"]]]],[11,"initialize","","",2,[[]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"test_only_hash","","",3,[[["self"]],["hashvalue"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"test_only_hash","","",4,[[["self"]],["hashvalue"]]],[11,"clear","","",4,[[["self"]]]],[11,"initialize","","",4,[[]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"test_only_hash","","",5,[[["self"]],["hashvalue"]]],[11,"clear","","",5,[[["self"]]]],[11,"initialize","","",5,[[]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"test_only_hash","","",6,[[["self"]],["hashvalue"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"test_only_hash","","",7,[[["self"]],["hashvalue"]]],[11,"clear","","",7,[[["self"]]]],[11,"initialize","","",7,[[]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"test_only_hash","","",8,[[["self"]],["hashvalue"]]],[11,"clear","","",8,[[["self"]]]],[11,"initialize","","",8,[[]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"test_only_hash","","",9,[[["self"]],["hashvalue"]]],[11,"clear","","",9,[[["self"]]]],[11,"initialize","","",9,[[]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"test_only_hash","","",10,[[["self"]],["hashvalue"]]],[11,"clear","","",10,[[["self"]]]],[11,"initialize","","",10,[[]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"test_only_hash","","",11,[[["self"]],["hashvalue"]]],[11,"clear","","",11,[[["self"]]]],[11,"initialize","","",11,[[]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"test_only_hash","","",12,[[["self"]],["hashvalue"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"test_only_hash","","",13,[[["self"]],["hashvalue"]]],[11,"clear","","",13,[[["self"]]]],[11,"initialize","","",13,[[]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"test_only_hash","","",14,[[["self"]],["hashvalue"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"test_only_hash","","",15,[[["self"]],["hashvalue"]]],[11,"clear","","",15,[[["self"]]]],[11,"initialize","","",15,[[]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"test_only_hash","","",16,[[["self"]],["hashvalue"]]],[11,"clear","","",16,[[["self"]]]],[11,"initialize","","",16,[[]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"test_only_hash","","",17,[[["self"]],["hashvalue"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"vzip","","",18,[[],["v"]]],[11,"test_only_hash","","",18,[[["self"]],["hashvalue"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"vzip","","",19,[[],["v"]]],[11,"test_only_hash","","",19,[[["self"]],["hashvalue"]]],[11,"clear","","",19,[[["self"]]]],[11,"initialize","","",19,[[]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"vzip","","",20,[[],["v"]]],[11,"test_only_hash","","",20,[[["self"]],["hashvalue"]]],[11,"clear","","",20,[[["self"]]]],[11,"initialize","","",20,[[]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"vzip","","",21,[[],["v"]]],[11,"test_only_hash","","",21,[[["self"]],["hashvalue"]]],[11,"clear","","",21,[[["self"]]]],[11,"initialize","","",21,[[]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"vzip","","",22,[[],["v"]]],[11,"test_only_hash","","",22,[[["self"]],["hashvalue"]]],[11,"clear","","",22,[[["self"]]]],[11,"initialize","","",22,[[]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"vzip","","",23,[[],["v"]]],[11,"test_only_hash","","",23,[[["self"]],["hashvalue"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"vzip","","",24,[[],["v"]]],[11,"test_only_hash","","",24,[[["self"]],["hashvalue"]]],[11,"clear","","",24,[[["self"]]]],[11,"initialize","","",24,[[]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"vzip","","",25,[[],["v"]]],[11,"test_only_hash","","",25,[[["self"]],["hashvalue"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"vzip","","",26,[[],["v"]]],[11,"test_only_hash","","",26,[[["self"]],["hashvalue"]]],[11,"clear","","",26,[[["self"]]]],[11,"initialize","","",26,[[]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"vzip","","",27,[[],["v"]]],[11,"test_only_hash","","",27,[[["self"]],["hashvalue"]]],[11,"clear","","",27,[[["self"]]]],[11,"initialize","","",27,[[]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"vzip","","",28,[[],["v"]]],[11,"test_only_hash","","",28,[[["self"]],["hashvalue"]]],[11,"clear","","",28,[[["self"]]]],[11,"initialize","","",28,[[]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_string","","",40,[[["self"]],["string"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"vzip","","",40,[[],["v"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"vzip","","",37,[[],["v"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"vzip","","",29,[[],["v"]]],[11,"test_only_hash","","",29,[[["self"]],["hashvalue"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"vzip","","",30,[[],["v"]]],[11,"test_only_hash","","",30,[[["self"]],["hashvalue"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"vzip","","",31,[[],["v"]]],[11,"test_only_hash","","",31,[[["self"]],["hashvalue"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"vzip","","",32,[[],["v"]]],[11,"test_only_hash","","",32,[[["self"]],["hashvalue"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"vzip","","",33,[[],["v"]]],[11,"test_only_hash","","",33,[[["self"]],["hashvalue"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"vzip","","",34,[[],["v"]]],[11,"test_only_hash","","",34,[[["self"]],["hashvalue"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"to_string","","",35,[[["self"]],["string"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"vzip","","",35,[[],["v"]]],[11,"test_only_hash","","",35,[[["self"]],["hashvalue"]]],[11,"from","libra_config::generator","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"vzip","","",38,[[],["v"]]],[11,"from","libra_config::keys","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"vzip","","",39,[[],["v"]]],[11,"test_only_hash","","",39,[[["self"]],["hashvalue"]]],[11,"clone","libra_config::config","",0,[[["self"]],["admissioncontrolconfig"]]],[11,"clone","","",1,[[["self"]],["rpcconfig"]]],[11,"clone","","",2,[[["self"]],["consensusconfig"]]],[11,"clone","","",29,[[["self"]],["consensusproposertype"]]],[11,"clone","","",3,[[["self"]],["leaderreputationconfig"]]],[11,"clone","","",4,[[["self"]],["debuginterfaceconfig"]]],[11,"clone","","",5,[[["self"]],["executionconfig"]]],[11,"clone","","",30,[[["self"]],["executioncorrectnessservice"]]],[11,"clone","","",6,[[["self"]],["remoteexecutionservice"]]],[11,"clone","","",7,[[["self"]],["loggerconfig"]]],[11,"clone","","",8,[[["self"]],["metricsconfig"]]],[11,"clone","","",9,[[["self"]],["mempoolconfig"]]],[11,"clone","","",10,[[["self"]],["networkconfig"]]],[11,"clone","","",11,[[["self"]],["seedpeersconfig"]]],[11,"clone","","",12,[[["self"]],["networkkeypairs"]]],[11,"clone","","",13,[[["self"]],["networkpeersconfig"]]],[11,"clone","","",14,[[["self"]],["networkpeerinfo"]]],[11,"clone","","",31,[[["self"]],["discoverymethod"]]],[11,"clone","","",15,[[["self"]],["secureconfig"]]],[11,"clone","","",16,[[["self"]],["keymanagerconfig"]]],[11,"clone","","",32,[[["self"]],["securebackend"]]],[11,"clone","","",17,[[["self"]],["githubconfig"]]],[11,"clone","","",18,[[["self"]],["vaultconfig"]]],[11,"clone","","",19,[[["self"]],["ondiskstorageconfig"]]],[11,"clone","","",20,[[["self"]],["statesyncconfig"]]],[11,"clone","","",21,[[["self"]],["storageconfig"]]],[11,"clone","","",22,[[["self"]],["safetyrulesconfig"]]],[11,"clone","","",33,[[["self"]],["safetyrulesservice"]]],[11,"clone","","",23,[[["self"]],["remoteservice"]]],[11,"clone","","",34,[[["self"]],["consensustype"]]],[11,"clone","","",24,[[["self"]],["upstreamconfig"]]],[11,"clone","","",25,[[["self"]],["peernetworkid"]]],[11,"clone","","",26,[[["self"]],["self"]]],[11,"clone","","",27,[[["self"]],["nodeconfig"]]],[11,"clone","","",28,[[["self"]],["baseconfig"]]],[11,"clone","","",35,[[["self"]],["roletype"]]],[11,"clone","libra_config::keys","",39,[[["self"]],["keypair"]]],[11,"default","libra_config::config","",0,[[],["admissioncontrolconfig"]]],[11,"default","","",1,[[],["rpcconfig"]]],[11,"default","","",2,[[],["consensusconfig"]]],[11,"default","","",4,[[],["debuginterfaceconfig"]]],[11,"default","","",5,[[],["executionconfig"]]],[11,"default","","",7,[[],["loggerconfig"]]],[11,"default","","",8,[[],["metricsconfig"]]],[11,"default","","",9,[[],["mempoolconfig"]]],[11,"default","","",10,[[],["self"]]],[11,"default","","",11,[[],["seedpeersconfig"]]],[11,"default","","",13,[[],["networkpeersconfig"]]],[11,"default","","",15,[[],["secureconfig"]]],[11,"default","","",16,[[],["keymanagerconfig"]]],[11,"default","","",19,[[],["self"]]],[11,"default","","",20,[[],["self"]]],[11,"default","","",21,[[],["storageconfig"]]],[11,"default","","",22,[[],["self"]]],[11,"default","","",24,[[],["upstreamconfig"]]],[11,"default","","",26,[[],["testconfig"]]],[11,"default","","",27,[[],["nodeconfig"]]],[11,"default","","",28,[[],["baseconfig"]]],[11,"eq","","",0,[[["self"],["admissioncontrolconfig"]],["bool"]]],[11,"ne","","",0,[[["self"],["admissioncontrolconfig"]],["bool"]]],[11,"eq","","",1,[[["self"],["rpcconfig"]],["bool"]]],[11,"ne","","",1,[[["self"],["rpcconfig"]],["bool"]]],[11,"eq","","",2,[[["self"],["consensusconfig"]],["bool"]]],[11,"ne","","",2,[[["self"],["consensusconfig"]],["bool"]]],[11,"eq","","",29,[[["self"],["consensusproposertype"]],["bool"]]],[11,"ne","","",29,[[["self"],["consensusproposertype"]],["bool"]]],[11,"eq","","",3,[[["self"],["leaderreputationconfig"]],["bool"]]],[11,"ne","","",3,[[["self"],["leaderreputationconfig"]],["bool"]]],[11,"eq","","",4,[[["debuginterfaceconfig"],["self"]],["bool"]]],[11,"ne","","",4,[[["debuginterfaceconfig"],["self"]],["bool"]]],[11,"eq","","",5,[[["self"],["executionconfig"]],["bool"]]],[11,"ne","","",5,[[["self"],["executionconfig"]],["bool"]]],[11,"eq","","",30,[[["self"],["executioncorrectnessservice"]],["bool"]]],[11,"ne","","",30,[[["self"],["executioncorrectnessservice"]],["bool"]]],[11,"eq","","",6,[[["remoteexecutionservice"],["self"]],["bool"]]],[11,"ne","","",6,[[["remoteexecutionservice"],["self"]],["bool"]]],[11,"eq","","",7,[[["loggerconfig"],["self"]],["bool"]]],[11,"ne","","",7,[[["loggerconfig"],["self"]],["bool"]]],[11,"eq","","",8,[[["self"],["metricsconfig"]],["bool"]]],[11,"ne","","",8,[[["self"],["metricsconfig"]],["bool"]]],[11,"eq","","",9,[[["self"],["mempoolconfig"]],["bool"]]],[11,"ne","","",9,[[["self"],["mempoolconfig"]],["bool"]]],[11,"eq","","",10,[[["networkconfig"],["self"]],["bool"]]],[11,"ne","","",10,[[["networkconfig"],["self"]],["bool"]]],[11,"eq","","",11,[[["seedpeersconfig"],["self"]],["bool"]]],[11,"ne","","",11,[[["seedpeersconfig"],["self"]],["bool"]]],[11,"eq","","",12,[[["self"]],["bool"]]],[11,"eq","","",13,[[["self"],["networkpeersconfig"]],["bool"]]],[11,"ne","","",13,[[["self"],["networkpeersconfig"]],["bool"]]],[11,"eq","","",14,[[["self"],["networkpeerinfo"]],["bool"]]],[11,"ne","","",14,[[["self"],["networkpeerinfo"]],["bool"]]],[11,"eq","","",31,[[["discoverymethod"],["self"]],["bool"]]],[11,"eq","","",15,[[["secureconfig"],["self"]],["bool"]]],[11,"ne","","",15,[[["secureconfig"],["self"]],["bool"]]],[11,"eq","","",16,[[["self"],["keymanagerconfig"]],["bool"]]],[11,"ne","","",16,[[["self"],["keymanagerconfig"]],["bool"]]],[11,"eq","","",32,[[["securebackend"],["self"]],["bool"]]],[11,"ne","","",32,[[["securebackend"],["self"]],["bool"]]],[11,"eq","","",17,[[["self"],["githubconfig"]],["bool"]]],[11,"ne","","",17,[[["self"],["githubconfig"]],["bool"]]],[11,"eq","","",18,[[["self"],["vaultconfig"]],["bool"]]],[11,"ne","","",18,[[["self"],["vaultconfig"]],["bool"]]],[11,"eq","","",19,[[["ondiskstorageconfig"],["self"]],["bool"]]],[11,"ne","","",19,[[["ondiskstorageconfig"],["self"]],["bool"]]],[11,"eq","","",20,[[["statesyncconfig"],["self"]],["bool"]]],[11,"ne","","",20,[[["statesyncconfig"],["self"]],["bool"]]],[11,"eq","","",21,[[["self"],["storageconfig"]],["bool"]]],[11,"ne","","",21,[[["self"],["storageconfig"]],["bool"]]],[11,"eq","","",22,[[["self"],["safetyrulesconfig"]],["bool"]]],[11,"ne","","",22,[[["self"],["safetyrulesconfig"]],["bool"]]],[11,"eq","","",33,[[["self"],["safetyrulesservice"]],["bool"]]],[11,"ne","","",33,[[["self"],["safetyrulesservice"]],["bool"]]],[11,"eq","","",23,[[["remoteservice"],["self"]],["bool"]]],[11,"ne","","",23,[[["remoteservice"],["self"]],["bool"]]],[11,"eq","","",34,[[["self"],["consensustype"]],["bool"]]],[11,"eq","","",24,[[["upstreamconfig"],["self"]],["bool"]]],[11,"ne","","",24,[[["upstreamconfig"],["self"]],["bool"]]],[11,"eq","","",25,[[["self"],["peernetworkid"]],["bool"]]],[11,"ne","","",25,[[["self"],["peernetworkid"]],["bool"]]],[11,"eq","","",26,[[["self"]],["bool"]]],[11,"eq","","",27,[[["self"],["nodeconfig"]],["bool"]]],[11,"ne","","",27,[[["self"],["nodeconfig"]],["bool"]]],[11,"eq","","",28,[[["self"],["baseconfig"]],["bool"]]],[11,"ne","","",28,[[["self"],["baseconfig"]],["bool"]]],[11,"eq","","",35,[[["self"],["roletype"]],["bool"]]],[11,"eq","libra_config::keys","",39,[[["self"],["keypair"]],["bool"]]],[11,"ne","","",39,[[["self"],["keypair"]],["bool"]]],[11,"fmt","libra_config::config","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_config::keys","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_config::config","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"hash","","",25,[[["self"],["__h"]]]],[11,"from_str","","",35,[[["str"]],["result"]]],[11,"serialize","","",0,[[["self"],["__s"]],["result"]]],[11,"serialize","","",1,[[["self"],["__s"]],["result"]]],[11,"serialize","","",2,[[["self"],["__s"]],["result"]]],[11,"serialize","","",29,[[["self"],["__s"]],["result"]]],[11,"serialize","","",3,[[["self"],["__s"]],["result"]]],[11,"serialize","","",4,[[["self"],["__s"]],["result"]]],[11,"serialize","","",5,[[["self"],["__s"]],["result"]]],[11,"serialize","","",30,[[["self"],["__s"]],["result"]]],[11,"serialize","","",6,[[["self"],["__s"]],["result"]]],[11,"serialize","","",7,[[["self"],["__s"]],["result"]]],[11,"serialize","","",8,[[["self"],["__s"]],["result"]]],[11,"serialize","","",9,[[["self"],["__s"]],["result"]]],[11,"serialize","","",10,[[["self"],["__s"]],["result"]]],[11,"serialize","","",11,[[["self"],["__s"]],["result"]]],[11,"serialize","","",12,[[["self"],["__s"]],["result"]]],[11,"serialize","","",13,[[["self"],["__s"]],["result"]]],[11,"serialize","","",14,[[["self"],["__s"]],["result"]]],[11,"serialize","","",31,[[["self"],["__s"]],["result"]]],[11,"serialize","","",15,[[["self"],["__s"]],["result"]]],[11,"serialize","","",16,[[["self"],["__s"]],["result"]]],[11,"serialize","","",32,[[["self"],["__s"]],["result"]]],[11,"serialize","","",17,[[["self"],["__s"]],["result"]]],[11,"serialize","","",18,[[["self"],["__s"]],["result"]]],[11,"serialize","","",19,[[["self"],["__s"]],["result"]]],[11,"serialize","","",20,[[["self"],["__s"]],["result"]]],[11,"serialize","","",21,[[["self"],["__s"]],["result"]]],[11,"serialize","","",22,[[["self"],["__s"]],["result"]]],[11,"serialize","","",33,[[["self"],["__s"]],["result"]]],[11,"serialize","","",23,[[["self"],["__s"]],["result"]]],[11,"serialize","","",34,[[["self"],["__s"]],["result"]]],[11,"serialize","","",24,[[["self"],["__s"]],["result"]]],[11,"serialize","","",25,[[["self"],["__s"]],["result"]]],[11,"serialize","","",26,[[["self"],["__s"]],["result"]]],[11,"serialize","","",27,[[["self"],["__s"]],["result"]]],[11,"serialize","","",28,[[["self"],["__s"]],["result"]]],[11,"serialize","","",35,[[["self"],["__s"]],["result"]]],[11,"serialize","libra_config::keys","",39,[[["s"],["self"]],["result"]]],[11,"deserialize","libra_config::config","",0,[[["__d"]],["result"]]],[11,"deserialize","","",1,[[["__d"]],["result"]]],[11,"deserialize","","",2,[[["__d"]],["result"]]],[11,"deserialize","","",29,[[["__d"]],["result"]]],[11,"deserialize","","",3,[[["__d"]],["result"]]],[11,"deserialize","","",4,[[["__d"]],["result"]]],[11,"deserialize","","",5,[[["__d"]],["result"]]],[11,"deserialize","","",30,[[["__d"]],["result"]]],[11,"deserialize","","",6,[[["__d"]],["result"]]],[11,"deserialize","","",7,[[["__d"]],["result"]]],[11,"deserialize","","",8,[[["__d"]],["result"]]],[11,"deserialize","","",9,[[["__d"]],["result"]]],[11,"deserialize","","",10,[[["__d"]],["result"]]],[11,"deserialize","","",11,[[["__d"]],["result"]]],[11,"deserialize","","",12,[[["__d"]],["result"]]],[11,"deserialize","","",13,[[["__d"]],["result"]]],[11,"deserialize","","",14,[[["__d"]],["result"]]],[11,"deserialize","","",31,[[["__d"]],["result"]]],[11,"deserialize","","",15,[[["__d"]],["result"]]],[11,"deserialize","","",16,[[["__d"]],["result"]]],[11,"deserialize","","",32,[[["__d"]],["result"]]],[11,"deserialize","","",17,[[["__d"]],["result"]]],[11,"deserialize","","",18,[[["__d"]],["result"]]],[11,"deserialize","","",19,[[["__d"]],["result"]]],[11,"deserialize","","",20,[[["__d"]],["result"]]],[11,"deserialize","","",21,[[["__d"]],["result"]]],[11,"deserialize","","",22,[[["__d"]],["result"]]],[11,"deserialize","","",33,[[["__d"]],["result"]]],[11,"deserialize","","",23,[[["__d"]],["result"]]],[11,"deserialize","","",34,[[["__d"]],["result"]]],[11,"deserialize","","",24,[[["__d"]],["result"]]],[11,"deserialize","","",25,[[["__d"]],["result"]]],[11,"deserialize","","",26,[[["__d"]],["result"]]],[11,"deserialize","","",27,[[["__d"]],["result"]]],[11,"deserialize","","",28,[[["__d"]],["result"]]],[11,"deserialize","","",35,[[["__d"]],["result"]]],[11,"deserialize","libra_config::keys","",39,[[["d"]],[["result",["keypair"]],["keypair"]]]]],"p":[[3,"AdmissionControlConfig"],[3,"RpcConfig"],[3,"ConsensusConfig"],[3,"LeaderReputationConfig"],[3,"DebugInterfaceConfig"],[3,"ExecutionConfig"],[3,"RemoteExecutionService"],[3,"LoggerConfig"],[3,"MetricsConfig"],[3,"MempoolConfig"],[3,"NetworkConfig"],[3,"SeedPeersConfig"],[3,"NetworkKeyPairs"],[3,"NetworkPeersConfig"],[3,"NetworkPeerInfo"],[3,"SecureConfig"],[3,"KeyManagerConfig"],[3,"GitHubConfig"],[3,"VaultConfig"],[3,"OnDiskStorageConfig"],[3,"StateSyncConfig"],[3,"StorageConfig"],[3,"SafetyRulesConfig"],[3,"RemoteService"],[3,"UpstreamConfig"],[3,"PeerNetworkId"],[3,"TestConfig"],[3,"NodeConfig"],[3,"BaseConfig"],[4,"ConsensusProposerType"],[4,"ExecutionCorrectnessService"],[4,"DiscoveryMethod"],[4,"SecureBackend"],[4,"SafetyRulesService"],[4,"ConsensusType"],[4,"RoleType"],[8,"PersistableConfig"],[3,"RootPath"],[3,"ValidatorSwarm"],[3,"KeyPair"],[3,"ParseRoleError"]]};
searchIndex["libra_crypto"] = {"doc":"A library supplying various cryptographic primitives","i":[[0,"ed25519","libra_crypto","This module provides an API for the PureEdDSA signature…",null,null],[3,"Ed25519PrivateKey","libra_crypto::ed25519","An Ed25519 private key",null,null],[3,"Ed25519PublicKey","","An Ed25519 public key",null,null],[3,"Ed25519Signature","","An Ed25519 signature",null,null],[5,"keypair_strategy","","Produces a uniformly random ed25519 keypair from a seed",null,[[]]],[17,"ED25519_PRIVATE_KEY_LENGTH","","The length of the Ed25519PrivateKey",null,null],[17,"ED25519_PUBLIC_KEY_LENGTH","","The length of the Ed25519PublicKey",null,null],[17,"ED25519_SIGNATURE_LENGTH","","The length of the Ed25519Signature",null,null],[18,"LENGTH","","The length of the Ed25519PrivateKey",0,null],[11,"to_bytes","","Serialize an Ed25519PrivateKey.",0,[[["self"]]]],[11,"to_bytes","","Serialize an Ed25519PublicKey.",1,[[["self"]]]],[18,"LENGTH","","The length of the Ed25519Signature",2,null],[11,"to_bytes","","Serialize an Ed25519Signature.",2,[[["self"]]]],[11,"check_malleability","","Check for correct size and third-party based signature…",2,[[],[["cryptomaterialerror"],["result",["cryptomaterialerror"]]]]],[0,"error","libra_crypto","Rexport the error types needed for the various crypto traits",null,null],[14,"bail","libra_crypto::error","Return early with an error.",null,null],[3,"Error","","The `Error` type, a wrapper around a dynamic error type.",null,null],[0,"hash","libra_crypto","This module defines traits and implementations of…",null,null],[3,"HashValue","libra_crypto::hash","Output value of our hash function. Intentionally opaque…",null,null],[3,"HashValueBitIterator","","An iterator over `HashValue` that generates one bit for…",null,null],[3,"DefaultHasher","","Our preferred hashing schema, outputting [`HashValue`]s. *…",null,null],[3,"TransactionAccumulatorHasher","","The hasher used to compute the hash of an internal node in…",null,null],[3,"EventAccumulatorHasher","","The hasher used to compute the hash of an internal node in…",null,null],[3,"SparseMerkleInternalHasher","","The hasher used to compute the hash of an internal node in…",null,null],[3,"TestOnlyHasher","","The hasher used only for testing. It doesn't have a salt.",null,null],[3,"DiscoveryMsgHasher","","The hasher used to compute the hash of a DiscoveryMsg…",null,null],[7,"ACCUMULATOR_PLACEHOLDER_HASH","","Placeholder hash of `Accumulator`.",null,null],[7,"SPARSE_MERKLE_PLACEHOLDER_HASH","","Placeholder hash of `SparseMerkleTree`.",null,null],[7,"PRE_GENESIS_BLOCK_ID","","Block id reserved as the id of parent block of the genesis…",null,null],[7,"GENESIS_BLOCK_ID","","Genesis block id is used as a parent of the very first…",null,null],[8,"CryptoHash","","A type that implements `CryptoHash` can be hashed by a…",null,null],[16,"Hasher","","The associated `Hasher` type which comes with a unique…",3,null],[10,"hash","","Hashes the object and produces a `HashValue`.",3,[[["self"]],["hashvalue"]]],[8,"CryptoHasher","","A trait for generating hash from arbitrary stream of bytes.",null,null],[10,"finish","","Finish constructing the [`HashValue`].",4,[[],["hashvalue"]]],[10,"write","","Write bytes into the hasher.",4,[[["self"]],["self"]]],[11,"write_u8","","Write a single byte into the hasher.",4,[[["self"],["u8"]]]],[8,"TestOnlyHash","","Provides a test_only_hash() method that can be used in…",null,null],[10,"test_only_hash","","Generates a hash used only for tests.",5,[[["self"]],["hashvalue"]]],[18,"LENGTH","","The length of the hash in bytes.",6,null],[18,"LENGTH_IN_BITS","","The length of the hash in bits.",6,null],[18,"LENGTH_IN_NIBBLES","","The length of the hash in nibbles.",6,null],[11,"new","","Create a new [`HashValue`] from a byte array.",6,[[],["self"]]],[11,"from_slice","","Create from a slice (e.g. retrieved from storage).",6,[[],["result"]]],[11,"to_vec","","Dumps into a vector.",6,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"zero","","Creates a zero-initialized instance.",6,[[],["self"]]],[11,"is_zero","","Check if the hash value is zero.",6,[[["self"]],["bool"]]],[11,"random","","Create a cryptographically random instance.",6,[[],["self"]]],[11,"random_with_rng","","Creates a random instance with given rng. Useful in unit…",6,[[["r"]],["self"]]],[11,"from_sha3_256","","Convenience function to compute a sha3-256 HashValue of…",6,[[],["self"]]],[11,"iter_bits","","Returns a `HashValueBitIterator` over all the bits that…",6,[[["self"]],["hashvaluebititerator"]]],[11,"from_bit_iter","","Constructs a `HashValue` from an iterator of bits.",6,[[],["result"]]],[11,"common_prefix_bits_len","","Returns the length of common prefix of `self` and `other`…",6,[[["hashvalue"],["self"]],["usize"]]],[11,"common_prefix_nibbles_len","","Returns the length of common prefix of `self` and `other`…",6,[[["hashvalue"],["self"]],["usize"]]],[11,"get_nibble","","Returns the `index`-th nibble.",6,[[["self"],["usize"]],["nibble"]]],[11,"short_str","","Returns first SHORT_STRING_LENGTH bytes as String in hex",6,[[["self"]],["string"]]],[11,"to_hex","","Full hex representation of a given hash value.",6,[[["self"]],["string"]]],[11,"from_hex","","Parse a given hex string to a hash value.",6,[[["str"]],["result"]]],[11,"new_with_salt","","initialize a new hasher with a specific salt",7,[[],["self"]]],[0,"hkdf","libra_crypto","An implementation of HKDF, the HMAC-based…",null,null],[3,"Hkdf","libra_crypto::hkdf","Structure representing the HKDF, capable of HKDF-Extract…",null,null],[4,"HkdfError","","An error type for HKDF key derivation issues.",null,null],[13,"InvalidOutputLengthError","","HKDF expand output exceeds the maximum allowed or is zero.",8,null],[13,"NotSupportedHashFunctionError","","Hash function is not supported because its output is less…",8,null],[13,"WrongPseudorandomKeyError","","PRK on HKDF-Expand should not be less than the underlying…",8,null],[13,"MACKeyError","","HMAC key related error; unlikely to happen because every…",8,null],[11,"extract","","The RFC5869 HKDF-Extract operation.",9,[[["option"]],[["result",["vec","hkdferror"]],["vec",["u8"]],["hkdferror"]]]],[11,"expand","","The RFC5869 HKDF-Expand operation.",9,[[["usize"],["option"]],[["result",["vec","hkdferror"]],["vec",["u8"]],["hkdferror"]]]],[11,"extract_then_expand","","HKDF Extract then Expand operation as a single step.",9,[[["usize"],["option"]],[["result",["vec","hkdferror"]],["vec",["u8"]],["hkdferror"]]]],[0,"multi_ed25519","libra_crypto","This module provides an API for the accountable threshold…",null,null],[3,"MultiEd25519PrivateKey","libra_crypto::multi_ed25519","Vector of private keys in the multi-key Ed25519 structure…",null,null],[3,"MultiEd25519PublicKey","","Vector of public keys in the multi-key Ed25519 structure…",null,null],[3,"MultiEd25519Signature","","Vector of the multi-key signatures along with a 32bit [u8;…",null,null],[11,"new","","Construct a new MultiEd25519PrivateKey.",10,[[["u8"],["vec",["ed25519privatekey"]],["ed25519privatekey"]],[["result",["cryptomaterialerror"]],["cryptomaterialerror"]]]],[11,"to_bytes","","Serialize a MultiEd25519PrivateKey.",10,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"new","","Construct a new MultiEd25519PublicKey. --- Rules --- a)…",11,[[["u8"],["vec",["ed25519publickey"]],["ed25519publickey"]],[["result",["cryptomaterialerror"]],["cryptomaterialerror"]]]],[11,"public_keys","","Getter public_keys",11,[[["self"]],["vec"]]],[11,"threshold","","Getter threshold",11,[[["self"]],["u8"]]],[11,"to_bytes","","Serialize a MultiEd25519PublicKey.",11,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"new","","This method will also sort signatures based on index.",12,[[["vec"]],[["result",["cryptomaterialerror"]],["cryptomaterialerror"]]]],[11,"signatures","","Getter signatures.",12,[[["self"]],["vec"]]],[11,"bitmap","","Getter bitmap.",12,[[["self"]]]],[11,"to_bytes","","Serialize a MultiEd25519Signature in the form of…",12,[[["self"]],[["vec",["u8"]],["u8"]]]],[0,"noise","libra_crypto","Noise is a protocol framework which we use in Libra to…",null,null],[3,"NoiseConfig","libra_crypto::noise","A key holder structure used for both initiators and…",null,null],[3,"InitiatorHandshakeState","","Refer to the Noise protocol framework specification in…",null,null],[3,"ResponderHandshakeState","","Refer to the Noise protocol framework specification in…",null,null],[3,"NoiseSession","","A NoiseSession is produced after a successful Noise…",null,null],[4,"NoiseError","","A NoiseError enum represents the different types of error…",null,null],[13,"MsgTooShort","","the received message is too short to contain the expected…",13,null],[13,"Hkdf","","HKDF has failed (in practice there is no reason for HKDF…",13,null],[13,"Encrypt","","encryption has failed (in practice there is no reason for…",13,null],[13,"Decrypt","","could not decrypt the received data (most likely the data…",13,null],[13,"WrongPublicKeyReceived","","the public key received is of the wrong format",13,null],[13,"SessionClosed","","session was closed due to decrypt error",13,null],[13,"PayloadTooLarge","","the payload that we are trying to send is too large",13,null],[13,"ReceivedMsgTooLarge","","the message we received is too large",13,null],[13,"ResponseBufferTooSmall","","the response buffer passed as argument is too small",13,null],[5,"handshake_init_msg_len","","A handy const fn to get the size of the first handshake…",null,[[["usize"]],["usize"]]],[5,"handshake_resp_msg_len","","A handy const fn to get the size of the second handshake…",null,[[["usize"]],["usize"]]],[17,"MAX_SIZE_NOISE_MSG","","A noise message cannot be larger than 65535 bytes as per…",null,null],[17,"AES_GCM_TAGLEN","","The authentication tag length of AES-GCM.",null,null],[11,"new","","A peer must create a NoiseConfig through this function…",14,[[["privatekey"]],["self"]]],[11,"initiate_connection","","An initiator can use this function to initiate a handshake…",14,[[["publickey"],["option"],["self"]],[["result",["initiatorhandshakestate","noiseerror"]],["initiatorhandshakestate"],["noiseerror"]]]],[11,"finalize_connection","","A client can call this to finalize a connection, after…",14,[[["initiatorhandshakestate"],["self"]],[["noiseerror"],["result",["noiseerror"]]]]],[11,"parse_client_init_message","","A responder can accept a connection by first parsing an…",14,[[["self"]],[["noiseerror"],["result",["noiseerror"]]]]],[11,"respond_to_client","","A responder can respond to an initiator by calling this…",14,[[["option"],["responderhandshakestate"],["self"]],[["noisesession"],["result",["noisesession","noiseerror"]],["noiseerror"]]]],[11,"respond_to_client_and_finalize","","This function is a one-call that replaces calling the two…",14,[[["option"],["self"]],[["noiseerror"],["result",["noiseerror"]]]]],[11,"get_remote_static","","obtain remote static public key",15,[[["self"]],["publickey"]]],[11,"write_message_in_place","","encrypts a message for the other peers (post-handshake)…",15,[[["self"]],[["noiseerror"],["vec",["u8"]],["result",["vec","noiseerror"]]]]],[11,"read_message_in_place","","decrypts a message from the other peer (post-handshake)…",15,[[["self"]],[["noiseerror"],["result",["noiseerror"]]]]],[0,"test_utils","libra_crypto","Internal module containing convenience utility functions…",null,null],[3,"KeyPair","libra_crypto::test_utils","A keypair consisting of a private and public key",null,null],[12,"private_key","","the private key component",16,null],[12,"public_key","","the public key component",16,null],[5,"uniform_keypair_strategy","","Produces a uniformly random keypair from a seed",null,[[]]],[17,"TEST_SEED","","A deterministic seed for PRNGs related to keys",null,null],[0,"traits","libra_crypto","This module provides a generic set of traits for dealing…",null,null],[4,"CryptoMaterialError","libra_crypto::traits","An error type for key and signature validation issues, see…",null,null],[13,"DeserializationError","","Key or signature material does not deserialize correctly.",17,null],[13,"ValidationError","","Key or signature material deserializes, but is otherwise…",17,null],[13,"WrongLengthError","","Key, threshold or signature material does not have the…",17,null],[13,"CanonicalRepresentationError","","Part of the signature or key is not canonical resulting to…",17,null],[13,"SmallSubgroupError","","A curve point (i.e., a public key) lies on a small group.",17,null],[13,"PointNotOnCurveError","","A curve point (i.e., a public key) does not satisfy the…",17,null],[13,"BitVecError","","BitVec errors in accountable multi-sig schemes.",17,null],[8,"Length","","The serialized length of the data that enables macro…",null,null],[10,"length","","The serialized length of the data",18,[[["self"]],["usize"]]],[8,"ValidCryptoMaterial","","Key or more generally crypto material with a notion of…",null,null],[10,"to_bytes","","Convert the valid crypto material to bytes.",19,[[["self"]],[["vec",["u8"]],["u8"]]]],[8,"ValidCryptoMaterialStringExt","","An extension to to/from Strings for…",null,null],[11,"from_encoded_string","","When trying to convert from bytes, we simply decode the…",20,[[["str"]],[["result",["cryptomaterialerror"]],["cryptomaterialerror"]]]],[11,"to_encoded_string","","A function to encode into hex-string after serializing.",20,[[["self"]],[["result",["string"]],["string"]]]],[8,"PrivateKey","","A type family for key material that should remain secret…",null,null],[16,"PublicKeyMaterial","","We require public / private types to be coupled, i.e.…",21,null],[11,"public_key","","Returns the associated public key",21,[[["self"]]]],[8,"SigningKey","","A type family of valid keys that know how to sign.",null,null],[16,"VerifyingKeyMaterial","","The associated verifying key type for this signing key.",22,null],[16,"SignatureMaterial","","The associated signature type for this signing key.",22,null],[10,"sign_message","","Signs an input message.",22,[[["self"],["hashvalue"]]]],[11,"verifying_key","","Returns the associated verifying key",22,[[["self"]]]],[8,"PublicKey","","A type for key material that can be publicly shared, and…",null,null],[16,"PrivateKeyMaterial","","We require public / private types to be coupled, i.e.…",23,null],[8,"VerifyingKey","","A type family of public keys that are used for signing.",null,null],[16,"SigningKeyMaterial","","The associated signing key type for this verifying key.",24,null],[16,"SignatureMaterial","","The associated signature type for this verifying key.",24,null],[11,"verify_signature","","We provide the logical implementation which dispatches to…",24,[[["self"],["hashvalue"]],["result"]]],[11,"batch_verify_signatures","","We provide the implementation which dispatches to the…",24,[[["vec"],["hashvalue"]],["result"]]],[8,"Signature","","A type family for signature material that knows which…",null,null],[16,"VerifyingKeyMaterial","","The associated verifying key type for this signature.",25,null],[16,"SigningKeyMaterial","","The associated signing key type for this signature",25,null],[10,"verify","","The verification function.",25,[[["self"],["hashvalue"]],["result"]]],[10,"verify_arbitrary_msg","","Native verification function.",25,[[["self"]],["result"]]],[10,"to_bytes","","Convert the signature into a byte representation.",25,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"batch_verify_signatures","","The implementer can override a batch verification…",25,[[["hashvalue"],["vec"]],["result"]]],[8,"Uniform","","A type family for schemes which know how to generate key…",null,null],[10,"generate","","Generate key material from an RNG. This should generally…",26,[[["r"]],["self"]]],[11,"generate_for_testing","","Generate a random key using the shared TEST_SEED",26,[[],["self"]]],[8,"Genesis","","A type family with a by-convention notion of genesis…",null,null],[10,"genesis","","Produces the genesis private key.",27,[[],["self"]]],[0,"x25519","libra_crypto","An abstraction of x25519 elliptic curve keys required for…",null,null],[3,"PrivateKey","libra_crypto::x25519","This type should be used to deserialize a received private…",null,null],[3,"PublicKey","","This type should be used to deserialize a received public…",null,null],[17,"PRIVATE_KEY_SIZE","","Size of a X25519 private key",null,null],[17,"PUBLIC_KEY_SIZE","","Size of a X25519 public key",null,null],[17,"SHARED_SECRET_SIZE","","Size of a X25519 shared secret",null,null],[11,"public_key","","Obtain the public key part of a private key",28,[[["self"]],["publickey"]]],[11,"diffie_hellman","","To perform a key exchange with another public key",28,[[["self"],["publickey"]]]],[11,"as_slice","","Obtain a slice reference to the underlying bytearray",29,[[["self"]]]],[11,"test_only_hash","libra_crypto::ed25519","",0,[[["self"]],["hashvalue"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"test_only_hash","","",1,[[["self"]],["hashvalue"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"test_only_hash","","",2,[[["self"]],["hashvalue"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","libra_crypto::error","",30,[[],["t"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_string","","",30,[[["self"]],["string"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"vzip","","",30,[[],["v"]]],[11,"test_only_hash","libra_crypto::hash","",6,[[["self"]],["hashvalue"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"clear","","",6,[[["self"]]]],[11,"initialize","","",6,[[]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"into_iter","","",31,[[],["i"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"vzip","","",31,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"clear","","",7,[[["self"]]]],[11,"initialize","","",7,[[]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"vzip","","",32,[[],["v"]]],[11,"clear","","",32,[[["self"]]]],[11,"initialize","","",32,[[]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"vzip","","",33,[[],["v"]]],[11,"clear","","",33,[[["self"]]]],[11,"initialize","","",33,[[]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"vzip","","",34,[[],["v"]]],[11,"clear","","",34,[[["self"]]]],[11,"initialize","","",34,[[]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"vzip","","",35,[[],["v"]]],[11,"clear","","",35,[[["self"]]]],[11,"initialize","","",35,[[]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"vzip","","",36,[[],["v"]]],[11,"clear","","",36,[[["self"]]]],[11,"initialize","","",36,[[]]],[11,"from","libra_crypto::hkdf","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"test_only_hash","libra_crypto::multi_ed25519","",10,[[["self"]],["hashvalue"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"test_only_hash","","",11,[[["self"]],["hashvalue"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"test_only_hash","","",12,[[["self"]],["hashvalue"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","libra_crypto::noise","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"vzip","","",37,[[],["v"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"vzip","","",38,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"test_only_hash","libra_crypto::test_utils","",16,[[["self"]],["hashvalue"]]],[11,"from","","",16,[[],["t"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","libra_crypto::traits","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"to_string","","",17,[[["self"]],["string"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"test_only_hash","libra_crypto::x25519","",28,[[["self"]],["hashvalue"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"to_string","","",28,[[["self"]],["string"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"vzip","","",28,[[],["v"]]],[11,"test_only_hash","","",29,[[["self"]],["hashvalue"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"to_string","","",29,[[["self"]],["string"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"vzip","","",29,[[],["v"]]],[11,"clear","","",29,[[["self"]]]],[11,"initialize","","",29,[[]]],[11,"fmt","libra_crypto::error","",30,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",30,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"drop","","",30,[[["self"]]]],[11,"deref_mut","","",30,[[["self"]]]],[11,"from","","",30,[[["e"]],["error"]]],[11,"deref","","",30,[[["self"]]]],[11,"as_ref","","",30,[[["self"]],["error"]]],[11,"as_ref","","",30,[[["self"]],["error"]]],[11,"finish","libra_crypto::hash","",7,[[],["hashvalue"]]],[11,"write","","",7,[[["self"]],["self"]]],[11,"finish","","",32,[[],["hashvalue"]]],[11,"write","","",32,[[["self"]],["self"]]],[11,"finish","","",33,[[],["hashvalue"]]],[11,"write","","",33,[[["self"]],["self"]]],[11,"finish","","",34,[[],["hashvalue"]]],[11,"write","","",34,[[["self"]],["self"]]],[11,"finish","","",35,[[],["hashvalue"]]],[11,"write","","",35,[[["self"]],["self"]]],[11,"finish","","",36,[[],["hashvalue"]]],[11,"write","","",36,[[["self"]],["self"]]],[11,"length","libra_crypto::ed25519","",0,[[["self"]],["usize"]]],[11,"length","","",1,[[["self"]],["usize"]]],[11,"length","","",2,[[["self"]],["usize"]]],[11,"length","libra_crypto::multi_ed25519","",10,[[["self"]],["usize"]]],[11,"length","","",11,[[["self"]],["usize"]]],[11,"length","","",12,[[["self"]],["usize"]]],[11,"to_bytes","libra_crypto::ed25519","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"to_bytes","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"to_bytes","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"to_bytes","libra_crypto::multi_ed25519","",10,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"to_bytes","","",11,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"to_bytes","","",12,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"to_bytes","libra_crypto::x25519","",28,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"to_bytes","","",29,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"sign_message","libra_crypto::ed25519","",0,[[["self"],["hashvalue"]],["ed25519signature"]]],[11,"sign_message","libra_crypto::multi_ed25519","",10,[[["self"],["hashvalue"]],["multied25519signature"]]],[11,"verify","libra_crypto::ed25519","Checks that `self` is valid for `message` using…",2,[[["ed25519publickey"],["self"],["hashvalue"]],["result"]]],[11,"verify_arbitrary_msg","","Checks that `self` is valid for an arbitrary &[u8]…",2,[[["ed25519publickey"],["self"]],["result"]]],[11,"to_bytes","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"verify","libra_crypto::multi_ed25519","Checks that `self` is valid for `message` using…",12,[[["multied25519publickey"],["self"],["hashvalue"]],["result"]]],[11,"verify_arbitrary_msg","","Checks that `self` is valid for an arbitrary &[u8]…",12,[[["multied25519publickey"],["self"]],["result"]]],[11,"to_bytes","","",12,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"generate","libra_crypto::ed25519","",0,[[["r"]],["self"]]],[11,"generate","libra_crypto::multi_ed25519","",10,[[["r"]],["self"]]],[11,"generate","libra_crypto::test_utils","",16,[[["r"]],["self"]]],[11,"generate","libra_crypto::x25519","",28,[[["r"]],["self"]]],[11,"genesis","libra_crypto::ed25519","",0,[[],["self"]]],[11,"genesis","libra_crypto::multi_ed25519","",10,[[],["self"]]],[11,"as_ref","libra_crypto::hash","",6,[[["self"]]]],[11,"from","libra_crypto::ed25519","",1,[[["ed25519privatekey"]],["self"]]],[11,"from","libra_crypto::multi_ed25519","",10,[[["ed25519privatekey"]],["self"]]],[11,"from","","",11,[[["ed25519publickey"]],["self"]]],[11,"from","","",11,[[["multied25519privatekey"]],["self"]]],[11,"from","","",12,[[["ed25519signature"]],["self"]]],[11,"from","libra_crypto::test_utils","",16,[[["s"]],["self"]]],[11,"from","libra_crypto::x25519","",28,[[],["self"]]],[11,"from","","",29,[[["privatekey"]],["self"]]],[11,"from","","",29,[[],["self"]]],[11,"next_back","libra_crypto::hash","",31,[[["self"]],["option"]]],[11,"next","","",31,[[["self"]],["option"]]],[11,"size_hint","","",31,[[["self"]]]],[11,"clone","libra_crypto::ed25519","",0,[[["self"]],["self"]]],[11,"clone","","",1,[[["self"]],["ed25519publickey"]]],[11,"clone","","",2,[[["self"]],["ed25519signature"]]],[11,"clone","libra_crypto::hash","",6,[[["self"]],["hashvalue"]]],[11,"clone","","",7,[[["self"]],["defaulthasher"]]],[11,"clone","","",32,[[["self"]],["transactionaccumulatorhasher"]]],[11,"clone","","",33,[[["self"]],["eventaccumulatorhasher"]]],[11,"clone","","",34,[[["self"]],["sparsemerkleinternalhasher"]]],[11,"clone","","",35,[[["self"]],["testonlyhasher"]]],[11,"clone","","",36,[[["self"]],["discoverymsghasher"]]],[11,"clone","libra_crypto::hkdf","",9,[[["self"]],["hkdf"]]],[11,"clone","","",8,[[["self"]],["hkdferror"]]],[11,"clone","libra_crypto::multi_ed25519","",11,[[["self"]],["multied25519publickey"]]],[11,"clone","","",12,[[["self"]],["multied25519signature"]]],[11,"clone","libra_crypto::test_utils","",16,[[["self"]],["keypair"]]],[11,"clone","libra_crypto::traits","",17,[[["self"]],["cryptomaterialerror"]]],[11,"clone","libra_crypto::x25519","",28,[[["self"]],["privatekey"]]],[11,"clone","","",29,[[["self"]],["publickey"]]],[11,"default","libra_crypto::hash","",6,[[],["self"]]],[11,"default","","",7,[[],["self"]]],[11,"default","","",32,[[],["self"]]],[11,"default","","",33,[[],["self"]]],[11,"default","","",34,[[],["self"]]],[11,"default","","",35,[[],["self"]]],[11,"default","","",36,[[],["self"]]],[11,"default","libra_crypto::x25519","",29,[[],["publickey"]]],[11,"cmp","libra_crypto::hash","",6,[[["self"],["hashvalue"]],["ordering"]]],[11,"cmp","libra_crypto::x25519","",29,[[["self"],["publickey"]],["ordering"]]],[11,"eq","libra_crypto::ed25519","",0,[[["self"]],["bool"]]],[11,"eq","","",1,[[["ed25519publickey"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["ed25519signature"]],["bool"]]],[11,"eq","libra_crypto::hash","",6,[[["self"],["hashvalue"]],["bool"]]],[11,"ne","","",6,[[["self"],["hashvalue"]],["bool"]]],[11,"eq","libra_crypto::hkdf","",8,[[["self"],["hkdferror"]],["bool"]]],[11,"eq","libra_crypto::multi_ed25519","",10,[[["self"],["multied25519privatekey"]],["bool"]]],[11,"ne","","",10,[[["self"],["multied25519privatekey"]],["bool"]]],[11,"eq","","",11,[[["multied25519publickey"],["self"]],["bool"]]],[11,"ne","","",11,[[["multied25519publickey"],["self"]],["bool"]]],[11,"eq","","",12,[[["multied25519signature"],["self"]],["bool"]]],[11,"ne","","",12,[[["multied25519signature"],["self"]],["bool"]]],[11,"eq","libra_crypto::test_utils","",16,[[["self"],["keypair"]],["bool"]]],[11,"ne","","",16,[[["self"],["keypair"]],["bool"]]],[11,"eq","libra_crypto::traits","",17,[[["cryptomaterialerror"],["self"]],["bool"]]],[11,"ne","","",17,[[["cryptomaterialerror"],["self"]],["bool"]]],[11,"eq","libra_crypto::x25519","",29,[[["self"],["publickey"]],["bool"]]],[11,"ne","","",29,[[["self"],["publickey"]],["bool"]]],[11,"eq","","",28,[[["self"]],["bool"]]],[11,"partial_cmp","libra_crypto::hash","",6,[[["self"],["hashvalue"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",6,[[["self"],["hashvalue"]],["bool"]]],[11,"le","","",6,[[["self"],["hashvalue"]],["bool"]]],[11,"gt","","",6,[[["self"],["hashvalue"]],["bool"]]],[11,"ge","","",6,[[["self"],["hashvalue"]],["bool"]]],[11,"partial_cmp","libra_crypto::x25519","",29,[[["self"],["publickey"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",29,[[["self"],["publickey"]],["bool"]]],[11,"le","","",29,[[["self"],["publickey"]],["bool"]]],[11,"gt","","",29,[[["self"],["publickey"]],["bool"]]],[11,"ge","","",29,[[["self"],["publickey"]],["bool"]]],[11,"fmt","libra_crypto::ed25519","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_crypto::hash","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_crypto::hkdf","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_crypto::multi_ed25519","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_crypto::noise","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_crypto::test_utils","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_crypto::traits","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_crypto::x25519","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_crypto::ed25519","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_crypto::hash","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_crypto::hkdf","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_crypto::multi_ed25519","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_crypto::noise","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_crypto::traits","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_crypto::x25519","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"index","libra_crypto::hash","",6,[[["self"],["usize"]],["u8"]]],[11,"hash","libra_crypto::ed25519","",1,[[["self"],["h"]]]],[11,"hash","","",2,[[["self"],["h"]]]],[11,"hash","libra_crypto::hash","",6,[[["self"],["__h"]]]],[11,"hash","libra_crypto::multi_ed25519","",11,[[["self"],["h"]]]],[11,"hash","","",12,[[["self"],["h"]]]],[11,"hash","libra_crypto::x25519","",29,[[["self"],["__h"]]]],[11,"try_from","libra_crypto::ed25519","Deserialize an Ed25519PrivateKey. This method will also…",0,[[],[["result",["ed25519privatekey","cryptomaterialerror"]],["ed25519privatekey"],["cryptomaterialerror"]]]],[11,"try_from","","Deserialize an Ed25519PublicKey. This method will also…",1,[[],[["result",["ed25519publickey","cryptomaterialerror"]],["cryptomaterialerror"],["ed25519publickey"]]]],[11,"try_from","","",2,[[],[["ed25519signature"],["result",["ed25519signature","cryptomaterialerror"]],["cryptomaterialerror"]]]],[11,"try_from","libra_crypto::multi_ed25519","Deserialize an Ed25519PrivateKey. This method will also…",10,[[],[["cryptomaterialerror"],["result",["multied25519privatekey","cryptomaterialerror"]],["multied25519privatekey"]]]],[11,"try_from","","Deserialize a MultiEd25519PublicKey. This method will also…",11,[[],[["result",["multied25519publickey","cryptomaterialerror"]],["cryptomaterialerror"],["multied25519publickey"]]]],[11,"try_from","","Deserialize a MultiEd25519Signature. This method will also…",12,[[],[["result",["multied25519signature","cryptomaterialerror"]],["cryptomaterialerror"],["multied25519signature"]]]],[11,"try_from","libra_crypto::x25519","",28,[[],["result"]]],[11,"try_from","","",29,[[],["result"]]],[11,"fmt","libra_crypto::hash","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"arbitrary_with","libra_crypto::ed25519","",1,[[]]],[11,"arbitrary_with","libra_crypto::hash","",6,[[]]],[11,"arbitrary_with","libra_crypto::x25519","",29,[[]]],[11,"arbitrary_with","","",28,[[]]],[11,"serialize","libra_crypto::ed25519","",0,[[["s"],["self"]],["result"]]],[11,"serialize","","",1,[[["s"],["self"]],["result"]]],[11,"serialize","","",2,[[["s"],["self"]],["result"]]],[11,"serialize","libra_crypto::hash","",6,[[["s"],["self"]],["result"]]],[11,"serialize","libra_crypto::multi_ed25519","",10,[[["s"],["self"]],["result"]]],[11,"serialize","","",11,[[["s"],["self"]],["result"]]],[11,"serialize","","",12,[[["s"],["self"]],["result"]]],[11,"serialize","libra_crypto::test_utils","",16,[[["self"],["__s"]],["result"]]],[11,"serialize","libra_crypto::x25519","",28,[[["s"],["self"]],["result"]]],[11,"serialize","","",29,[[["s"],["self"]],["result"]]],[11,"deserialize","libra_crypto::ed25519","",0,[[["d"]],["result"]]],[11,"deserialize","","",1,[[["d"]],["result"]]],[11,"deserialize","","",2,[[["d"]],["result"]]],[11,"deserialize","libra_crypto::hash","",6,[[["d"]],["result"]]],[11,"deserialize","libra_crypto::multi_ed25519","",10,[[["d"]],["result"]]],[11,"deserialize","","",11,[[["d"]],["result"]]],[11,"deserialize","","",12,[[["d"]],["result"]]],[11,"deserialize","libra_crypto::test_utils","",16,[[["__d"]],["result"]]],[11,"deserialize","libra_crypto::x25519","",28,[[["d"]],["result"]]],[11,"deserialize","","",29,[[["d"]],["result"]]],[11,"new","libra_crypto::error","Create a new error object from any error type.",30,[[["e"]],["error"]]],[11,"msg","","Create a new error object from a printable error message.",30,[[["m"]],["error"]]],[11,"context","","Wrap the error value with additional context.",30,[[["c"]],["error"]]],[11,"backtrace","","Get the backtrace for this Error.",30,[[["self"]],["backtrace"]]],[11,"chain","","An iterator of the chain of source errors contained by…",30,[[["self"]],["chain"]]],[11,"root_cause","","The lowest level cause of this error — this error's…",30,[[["self"]],["error"]]],[11,"is","","Returns true if `E` is the type held by this error object.",30,[[["self"]],["bool"]]],[11,"downcast","","Attempt to downcast the error object to a concrete type.",30,[[],[["result",["error"]],["error"]]]],[11,"downcast_ref","","Downcast this error object by reference.",30,[[["self"]],[["option"],["e"]]]],[11,"downcast_mut","","Downcast this error object by mutable reference.",30,[[["self"]],[["option"],["e"]]]]],"p":[[3,"Ed25519PrivateKey"],[3,"Ed25519PublicKey"],[3,"Ed25519Signature"],[8,"CryptoHash"],[8,"CryptoHasher"],[8,"TestOnlyHash"],[3,"HashValue"],[3,"DefaultHasher"],[4,"HkdfError"],[3,"Hkdf"],[3,"MultiEd25519PrivateKey"],[3,"MultiEd25519PublicKey"],[3,"MultiEd25519Signature"],[4,"NoiseError"],[3,"NoiseConfig"],[3,"NoiseSession"],[3,"KeyPair"],[4,"CryptoMaterialError"],[8,"Length"],[8,"ValidCryptoMaterial"],[8,"ValidCryptoMaterialStringExt"],[8,"PrivateKey"],[8,"SigningKey"],[8,"PublicKey"],[8,"VerifyingKey"],[8,"Signature"],[8,"Uniform"],[8,"Genesis"],[3,"PrivateKey"],[3,"PublicKey"],[3,"Error"],[3,"HashValueBitIterator"],[3,"TransactionAccumulatorHasher"],[3,"EventAccumulatorHasher"],[3,"SparseMerkleInternalHasher"],[3,"TestOnlyHasher"],[3,"DiscoveryMsgHasher"],[3,"InitiatorHandshakeState"],[3,"ResponderHandshakeState"]]};
searchIndex["libra_crypto_derive"] = {"doc":"Derive macros for crypto operations This crate contains…","i":[[24,"SilentDisplay","libra_crypto_derive","",null,null],[24,"SilentDebug","","",null,null],[24,"DeserializeKey","","Deserialize from a human readable format where applicable",null,null],[24,"SerializeKey","","Serialize into a human readable format where applicable",null,null],[24,"Deref","","",null,null],[24,"ValidCryptoMaterial","","",null,null],[24,"PublicKey","","",null,null],[24,"PrivateKey","","",null,null],[24,"VerifyingKey","","",null,null],[24,"SigningKey","","",null,null],[24,"Signature","","",null,null],[24,"CryptoHasher","","",null,null]],"p":[]};
searchIndex["libra_dev"] = {"doc":"","i":[[0,"account","libra_dev","",null,null],[5,"libra_LibraAccountKey_from","libra_dev::account","Takes in private key in bytes and return the associated…",null,[[],["librastatus"]]],[0,"account_resource","libra_dev","",null,null],[5,"libra_LibraAccountResource_from_safe","libra_dev::account_resource","",null,[[["accountstateblob"]],[["libraaccountresource"],["librastatus"],["result",["libraaccountresource","librastatus"]]]]],[5,"libra_LibraAccountResource_from","","",null,[[["usize"]],["librastatus"]]],[0,"error","libra_dev","",null,null],[5,"update_last_error","libra_dev::error","Update the most recent error.",null,[[["string"]]]],[5,"clear_error","","Clear the most recent error.",null,[[]]],[5,"libra_strerror","","Return the most recent error string.",null,[[]]],[0,"event","libra_dev","",null,null],[5,"libra_LibraEvent_from","libra_dev::event","",null,[[["usize"]],["librastatus"]]],[5,"libra_LibraEvent_free","","",null,[[]]],[0,"transaction","libra_dev","",null,null],[5,"libra_SignedTransactionBytes_from","libra_dev::transaction","",null,[[["usize"],["u64"]],["librastatus"]]],[5,"libra_free_bytes_buffer","","",null,[[]]],[5,"libra_RawTransactionBytes_from","","",null,[[["usize"],["u64"]],["librastatus"]]],[5,"libra_RawTransaction_sign","","",null,[[["usize"]],["librastatus"]]],[5,"libra_LibraSignedTransaction_from","","",null,[[["usize"]],["librastatus"]]]],"p":[]};
searchIndex["libra_fuzzer"] = {"doc":"","i":[[3,"FuzzTarget","libra_fuzzer","A fuzz target.",null,null],[0,"commands","","",null,null],[5,"make_corpus","libra_fuzzer::commands","Generates data for this fuzz target into the output…",null,[[["path"],["usize"],["fuzztarget"],["bool"]],[["result",["usize"]],["usize"]]]],[5,"fuzz_target","","Fuzz a target by running `cargo fuzz run`.",null,[[["osstring"],["pathbuf"],["vec",["osstring"]],["fuzztarget"]],["result"]]],[5,"list_targets","","List all known fuzz targets.",null,[[["bool"]]]],[0,"fuzz_targets","libra_fuzzer","",null,null],[11,"from_env","","Get the current fuzz target from the environment.",0,[[],["result"]]],[11,"by_name","","Get a fuzz target by name.",0,[[["str"]],["option"]]],[11,"all_targets","","A list of all fuzz targets.",0,[[]]],[8,"FuzzTargetImpl","","Implementation for a particular target of a fuzz operation.",null,null],[10,"name","","The name of the fuzz target.",1,[[["self"]],["str"]]],[10,"description","","A description for this target.",1,[[["self"]],["str"]]],[10,"generate","","Generates a new example for this target to store in the…",1,[[["valuegenerator"],["self"],["usize"]],[["option",["vec"]],["vec",["u8"]]]]],[10,"fuzz","","Fuzz the target with this data. The fuzzer tests for…",1,[[["self"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"into_request","","",0,[[],["request"]]],[11,"clone","","",0,[[["self"]],["fuzztarget"]]],[11,"deref","","",0,[[["self"]]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"from_str","","",0,[[["str"]],["result"]]]],"p":[[3,"FuzzTarget"],[8,"FuzzTargetImpl"]]};
searchIndex["libra_github_client"] = {"doc":"","i":[[3,"Client","libra_github_client","Client provides a client around the restful interface to…",null,null],[4,"Error","","",null,null],[13,"HttpError","","",0,null],[13,"InternalError","","",0,null],[13,"MissingField","","",0,null],[13,"NotFound","","",0,null],[13,"SerializationError","","",0,null],[11,"new","","",1,[[["string"]],["self"]]],[11,"delete_file","","Delete a file from a GitHub repository",1,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"delete_directory","","Recursively delete all files, which as a by product will…",1,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"get_branches","","Retrieve a list of branches, this is effectively a status…",1,[[["self"]],[["result",["vec","error"]],["vec",["string"]],["error"]]]],[11,"get_directory","","Retrieve the name of contents within a given directory,…",1,[[["str"],["self"]],[["result",["vec","error"]],["vec",["string"]],["error"]]]],[11,"get_file","","Retrieve the contents of a file.",1,[[["str"],["self"]],[["string"],["error"],["result",["string","error"]]]]],[11,"put","","Create or update a file.",1,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"from","","",0,[[["response"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"eq","","",0,[[["self"],["error"]],["bool"]]],[11,"ne","","",0,[[["self"],["error"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[4,"Error"],[3,"Client"]]};
searchIndex["libra_global_constants"] = {"doc":"The purpose of this crate is to offer a single source of…","i":[[17,"ASSOCIATION_KEY","libra_global_constants","Definitions of global cryptographic keys (e.g., as held in…",null,null],[17,"CONSENSUS_KEY","","",null,null],[17,"FULLNODE_NETWORK_KEY","","",null,null],[17,"OPERATOR_KEY","","",null,null],[17,"OWNER_KEY","","",null,null],[17,"VALIDATOR_NETWORK_KEY","","",null,null],[17,"EPOCH","","Definitions of global data items (e.g., as held in secure…",null,null],[17,"LAST_VOTED_ROUND","","",null,null],[17,"PREFERRED_ROUND","","",null,null],[17,"WAYPOINT","","",null,null]],"p":[]};
searchIndex["libra_json_rpc"] = {"doc":"JSON RPC endpoint","i":[[0,"errors","libra_json_rpc","",null,null],[4,"ServerCode","libra_json_rpc::errors","Custom JSON RPC server error codes Ranges from -32000 to…",null,null],[13,"DefaultServerError","","",0,null],[13,"VmValidationError","","",0,null],[13,"VmVerificationError","","",0,null],[13,"VmInvariantViolationError","","",0,null],[13,"VmDeserializationError","","",0,null],[13,"VmExecutionError","","",0,null],[13,"VmUnknownError","","",0,null],[13,"MempoolInvalidSeqNumber","","",0,null],[13,"MempoolIsFull","","",0,null],[13,"MempoolTooManyTransactions","","",0,null],[13,"MempoolInvalidUpdate","","",0,null],[13,"MempoolVmError","","",0,null],[13,"MempoolUnknownError","","",0,null],[3,"JsonRpcError","","",null,null],[12,"code","","",1,null],[12,"message","","",1,null],[12,"data","","",1,null],[0,"views","libra_json_rpc","",null,null],[3,"AmountView","libra_json_rpc::views","",null,null],[12,"amount","","",2,null],[12,"currency","","",2,null],[3,"AccountView","","",null,null],[12,"balances","","",3,null],[12,"sequence_number","","",3,null],[12,"authentication_key","","",3,null],[12,"sent_events_key","","",3,null],[12,"received_events_key","","",3,null],[12,"delegated_key_rotation_capability","","",3,null],[12,"delegated_withdrawal_capability","","",3,null],[3,"EventView","","",null,null],[12,"key","","",4,null],[12,"sequence_number","","",4,null],[12,"transaction_version","","",4,null],[12,"data","","",4,null],[4,"EventDataView","","",null,null],[13,"Burn","","",5,null],[12,"amount","libra_json_rpc::views::EventDataView","",6,null],[12,"preburn_address","","",6,null],[13,"CancelBurn","libra_json_rpc::views","",5,null],[12,"amount","libra_json_rpc::views::EventDataView","",7,null],[12,"preburn_address","","",7,null],[13,"Mint","libra_json_rpc::views","",5,null],[12,"amount","libra_json_rpc::views::EventDataView","",8,null],[13,"Preburn","libra_json_rpc::views","",5,null],[12,"amount","libra_json_rpc::views::EventDataView","",9,null],[12,"preburn_address","","",9,null],[13,"ReceivedPayment","libra_json_rpc::views","",5,null],[12,"amount","libra_json_rpc::views::EventDataView","",10,null],[12,"sender","","",10,null],[12,"metadata","","",10,null],[13,"SentPayment","libra_json_rpc::views","",5,null],[12,"amount","libra_json_rpc::views::EventDataView","",11,null],[12,"receiver","","",11,null],[12,"metadata","","",11,null],[13,"Unknown","libra_json_rpc::views","",5,null],[3,"BlockMetadata","","",null,null],[12,"version","","",12,null],[12,"timestamp","","",12,null],[3,"BytesView","","",null,null],[12,"0","","",13,null],[3,"TransactionView","","",null,null],[12,"version","","",14,null],[12,"transaction","","",14,null],[12,"events","","",14,null],[12,"vm_status","","",14,null],[12,"gas_used","","",14,null],[4,"TransactionDataView","","",null,null],[13,"BlockMetadata","","",15,null],[12,"timestamp_usecs","libra_json_rpc::views::TransactionDataView","",16,null],[13,"WriteSet","libra_json_rpc::views","",15,null],[13,"UserTransaction","","",15,null],[12,"sender","libra_json_rpc::views::TransactionDataView","",17,null],[12,"signature_scheme","","",17,null],[12,"signature","","",17,null],[12,"public_key","","",17,null],[12,"sequence_number","","",17,null],[12,"max_gas_amount","","",17,null],[12,"gas_unit_price","","",17,null],[12,"expiration_time","","",17,null],[12,"script_hash","","",17,null],[12,"script","","",17,null],[13,"UnknownTransaction","libra_json_rpc::views","",15,null],[4,"ScriptView","","",null,null],[13,"PeerToPeer","","",18,null],[12,"receiver","libra_json_rpc::views::ScriptView","",19,null],[12,"auth_key_prefix","","",19,null],[12,"amount","","",19,null],[12,"metadata","","",19,null],[12,"metadata_signature","","",19,null],[13,"Mint","libra_json_rpc::views","",18,null],[12,"receiver","libra_json_rpc::views::ScriptView","",20,null],[12,"auth_key_prefix","","",20,null],[12,"amount","","",20,null],[13,"Unknown","libra_json_rpc::views","",18,null],[3,"CurrencyInfoView","","",null,null],[12,"code","","",21,null],[12,"scaling_factor","","",21,null],[12,"fractional_part","","",21,null],[3,"StateProofView","","",null,null],[12,"ledger_info_with_signatures","","",22,null],[12,"epoch_change_proof","","",22,null],[12,"ledger_consistency_proof","","",22,null],[3,"AccountStateWithProofView","","",null,null],[12,"version","","",23,null],[12,"blob","","",23,null],[12,"proof","","",23,null],[3,"AccountStateProofView","","",null,null],[12,"ledger_info_to_transaction_info_proof","","",24,null],[12,"transaction_info","","",24,null],[12,"transaction_info_to_account_proof","","",24,null],[5,"bootstrap","libra_json_rpc","Creates HTTP server (warp-based) that serves JSON RPC…",null,[[["arc",["dbreader"]],["dbreader"],["socketaddr"],["mempoolclientsender"]],["runtime"]]],[5,"bootstrap_from_config","","Creates JSON RPC endpoint by given node config",null,[[["arc",["dbreader"]],["dbreader"],["mempoolclientsender"],["nodeconfig"]],["runtime"]]],[0,"fuzzing","","Fuzzer for JSON RPC service",null,null],[5,"generate_corpus","libra_json_rpc::fuzzing","generate_corpus produces an arbitrary transaction to…",null,[[["valuegenerator"]],[["vec",["u8"]],["u8"]]]],[5,"fuzzer","","",null,[[]]],[11,"from","libra_json_rpc::errors","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"into_request","","",0,[[],["request"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"into_request","","",1,[[],["request"]]],[11,"vzip","","",1,[[],["v"]]],[11,"test_only_hash","","",1,[[["self"]],["hashvalue"]]],[11,"from","libra_json_rpc::views","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"into_request","","",2,[[],["request"]]],[11,"vzip","","",2,[[],["v"]]],[11,"test_only_hash","","",2,[[["self"]],["hashvalue"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"into_request","","",3,[[],["request"]]],[11,"vzip","","",3,[[],["v"]]],[11,"test_only_hash","","",3,[[["self"]],["hashvalue"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"into_request","","",4,[[],["request"]]],[11,"vzip","","",4,[[],["v"]]],[11,"test_only_hash","","",4,[[["self"]],["hashvalue"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"into_request","","",5,[[],["request"]]],[11,"vzip","","",5,[[],["v"]]],[11,"test_only_hash","","",5,[[["self"]],["hashvalue"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"into_request","","",12,[[],["request"]]],[11,"vzip","","",12,[[],["v"]]],[11,"test_only_hash","","",12,[[["self"]],["hashvalue"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"into_request","","",13,[[],["request"]]],[11,"vzip","","",13,[[],["v"]]],[11,"test_only_hash","","",13,[[["self"]],["hashvalue"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"into_request","","",14,[[],["request"]]],[11,"vzip","","",14,[[],["v"]]],[11,"test_only_hash","","",14,[[["self"]],["hashvalue"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"into_request","","",15,[[],["request"]]],[11,"vzip","","",15,[[],["v"]]],[11,"test_only_hash","","",15,[[["self"]],["hashvalue"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"into_request","","",18,[[],["request"]]],[11,"vzip","","",18,[[],["v"]]],[11,"test_only_hash","","",18,[[["self"]],["hashvalue"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"into_request","","",21,[[],["request"]]],[11,"vzip","","",21,[[],["v"]]],[11,"test_only_hash","","",21,[[["self"]],["hashvalue"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"into_request","","",22,[[],["request"]]],[11,"vzip","","",22,[[],["v"]]],[11,"test_only_hash","","",22,[[["self"]],["hashvalue"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"into_request","","",23,[[],["request"]]],[11,"vzip","","",23,[[],["v"]]],[11,"test_only_hash","","",23,[[["self"]],["hashvalue"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"into_request","","",24,[[],["request"]]],[11,"vzip","","",24,[[],["v"]]],[11,"test_only_hash","","",24,[[["self"]],["hashvalue"]]],[11,"clone","","",12,[[["self"]],["blockmetadata"]]],[11,"clone","","",5,[[["self"]],["eventdataview"]]],[11,"clone","","",23,[[["self"]],["accountstatewithproofview"]]],[11,"clone","","",13,[[["self"]],["bytesview"]]],[11,"clone","","",4,[[["self"]],["eventview"]]],[11,"clone","","",3,[[["self"]],["accountview"]]],[11,"clone","","",18,[[["self"]],["scriptview"]]],[11,"clone","","",15,[[["self"]],["transactiondataview"]]],[11,"clone","","",24,[[["self"]],["accountstateproofview"]]],[11,"clone","","",22,[[["self"]],["stateproofview"]]],[11,"clone","libra_json_rpc::errors","",1,[[["self"]],["jsonrpcerror"]]],[11,"clone","libra_json_rpc::views","",2,[[["self"]],["amountview"]]],[11,"clone","","",21,[[["self"]],["currencyinfoview"]]],[11,"clone","","",14,[[["self"]],["transactionview"]]],[11,"eq","","",13,[[["bytesview"],["self"]],["bool"]]],[11,"ne","","",13,[[["bytesview"],["self"]],["bool"]]],[11,"eq","","",4,[[["self"],["eventview"]],["bool"]]],[11,"ne","","",4,[[["self"],["eventview"]],["bool"]]],[11,"eq","","",21,[[["currencyinfoview"],["self"]],["bool"]]],[11,"ne","","",21,[[["currencyinfoview"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["amountview"]],["bool"]]],[11,"ne","","",2,[[["self"],["amountview"]],["bool"]]],[11,"eq","","",15,[[["self"],["transactiondataview"]],["bool"]]],[11,"ne","","",15,[[["self"],["transactiondataview"]],["bool"]]],[11,"eq","","",12,[[["blockmetadata"],["self"]],["bool"]]],[11,"ne","","",12,[[["blockmetadata"],["self"]],["bool"]]],[11,"eq","","",22,[[["stateproofview"],["self"]],["bool"]]],[11,"ne","","",22,[[["stateproofview"],["self"]],["bool"]]],[11,"eq","","",23,[[["self"],["accountstatewithproofview"]],["bool"]]],[11,"ne","","",23,[[["self"],["accountstatewithproofview"]],["bool"]]],[11,"eq","","",14,[[["self"],["transactionview"]],["bool"]]],[11,"ne","","",14,[[["self"],["transactionview"]],["bool"]]],[11,"eq","","",3,[[["accountview"],["self"]],["bool"]]],[11,"ne","","",3,[[["accountview"],["self"]],["bool"]]],[11,"eq","","",24,[[["accountstateproofview"],["self"]],["bool"]]],[11,"ne","","",24,[[["accountstateproofview"],["self"]],["bool"]]],[11,"eq","","",5,[[["self"],["eventdataview"]],["bool"]]],[11,"ne","","",5,[[["self"],["eventdataview"]],["bool"]]],[11,"eq","","",18,[[["self"],["scriptview"]],["bool"]]],[11,"ne","","",18,[[["self"],["scriptview"]],["bool"]]],[11,"fmt","","",12,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",14,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",22,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","libra_json_rpc::errors","",1,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","libra_json_rpc::views","",13,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",15,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",23,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",18,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",21,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",5,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",24,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"from","","Tries to convert the provided byte array into Event Key.",4,[[],["eventview"]]],[11,"from","","",18,[[["transactionpayload"]],["scriptview"]]],[11,"from","","",15,[[["transaction"]],["transactiondataview"]]],[11,"from","","",13,[[],["bytesview"]]],[11,"from","","",21,[[["currencyinforesource"]],["currencyinfoview"]]],[11,"from","","",13,[[["vec"]],["bytesview"]]],[11,"fmt","libra_json_rpc::errors","",1,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"try_from","libra_json_rpc::views","",23,[[["accountstatewithproof"]],[["error"],["result",["accountstatewithproofview","error"]],["accountstatewithproofview"]]]],[11,"try_from","","",24,[[["accountstateproof"]],[["result",["accountstateproofview","error"]],["error"],["accountstateproofview"]]]],[11,"try_from","","",22,[[],[["result",["stateproofview"]],["stateproofview"]]]],[11,"deserialize","","",23,[[["__d"]],[["accountstatewithproofview"],["result",["accountstatewithproofview"]]]]],[11,"deserialize","","",12,[[["__d"]],[["result",["blockmetadata"]],["blockmetadata"]]]],[11,"deserialize","","",5,[[["__d"]],[["result",["eventdataview"]],["eventdataview"]]]],[11,"deserialize","","",4,[[["__d"]],[["eventview"],["result",["eventview"]]]]],[11,"deserialize","","",22,[[["__d"]],[["result",["stateproofview"]],["stateproofview"]]]],[11,"deserialize","","",18,[[["__d"]],[["scriptview"],["result",["scriptview"]]]]],[11,"deserialize","","",21,[[["__d"]],[["result",["currencyinfoview"]],["currencyinfoview"]]]],[11,"deserialize","","",24,[[["__d"]],[["result",["accountstateproofview"]],["accountstateproofview"]]]],[11,"deserialize","","",2,[[["__d"]],[["result",["amountview"]],["amountview"]]]],[11,"deserialize","","",15,[[["__d"]],[["transactiondataview"],["result",["transactiondataview"]]]]],[11,"deserialize","libra_json_rpc::errors","",1,[[["__d"]],[["result",["jsonrpcerror"]],["jsonrpcerror"]]]],[11,"deserialize","libra_json_rpc::views","",14,[[["__d"]],[["result",["transactionview"]],["transactionview"]]]],[11,"deserialize","","",13,[[["__d"]],[["bytesview"],["result",["bytesview"]]]]],[11,"deserialize","","",3,[[["__d"]],[["result",["accountview"]],["accountview"]]]],[11,"serialize","libra_json_rpc::errors","",1,[[["self"],["__s"]],["result"]]],[11,"serialize","libra_json_rpc::views","",2,[[["self"],["__s"]],["result"]]],[11,"serialize","","",3,[[["self"],["__s"]],["result"]]],[11,"serialize","","",13,[[["self"],["__s"]],["result"]]],[11,"serialize","","",12,[[["self"],["__s"]],["result"]]],[11,"serialize","","",15,[[["self"],["__s"]],["result"]]],[11,"serialize","","",21,[[["self"],["__s"]],["result"]]],[11,"serialize","","",23,[[["self"],["__s"]],["result"]]],[11,"serialize","","",24,[[["self"],["__s"]],["result"]]],[11,"serialize","","",18,[[["self"],["__s"]],["result"]]],[11,"serialize","","",4,[[["self"],["__s"]],["result"]]],[11,"serialize","","",14,[[["self"],["__s"]],["result"]]],[11,"serialize","","",5,[[["self"],["__s"]],["result"]]],[11,"serialize","","",22,[[["self"],["__s"]],["result"]]],[11,"serialize","libra_json_rpc::errors","",1,[[],["value"]]],[11,"invalid_request","","",1,[[],["jsonrpcerror"]]],[11,"invalid_params","","",1,[[],["jsonrpcerror"]]],[11,"method_not_found","","",1,[[],["jsonrpcerror"]]],[11,"internal_error","","",1,[[["string"]],["jsonrpcerror"]]],[11,"mempool_error","","",1,[[["mempoolstatus"]],[["error"],["result",["jsonrpcerror","error"]],["jsonrpcerror"]]]],[11,"vm_error","","",1,[[["vmstatus"]],["jsonrpcerror"]]],[11,"get_vm_error","","",1,[[["self"]],[["option",["vmstatus"]],["vmstatus"]]]],[11,"new","libra_json_rpc::views","",3,[[["accountresource"]],["accountview"]]],[11,"into_bytes","","",13,[[],[["result",["vec","error"]],["error"],["vec",["u8"]]]]],[11,"get_transaction_name","","",14,[[["self"]],["string"]]],[11,"get_name","","",18,[[["self"]],["string"]]]],"p":[[4,"ServerCode"],[3,"JsonRpcError"],[3,"AmountView"],[3,"AccountView"],[3,"EventView"],[4,"EventDataView"],[13,"Burn"],[13,"CancelBurn"],[13,"Mint"],[13,"Preburn"],[13,"ReceivedPayment"],[13,"SentPayment"],[3,"BlockMetadata"],[3,"BytesView"],[3,"TransactionView"],[4,"TransactionDataView"],[13,"BlockMetadata"],[13,"UserTransaction"],[4,"ScriptView"],[13,"PeerToPeer"],[13,"Mint"],[3,"CurrencyInfoView"],[3,"StateProofView"],[3,"AccountStateWithProofView"],[3,"AccountStateProofView"]]};
searchIndex["libra_json_rpc_client"] = {"doc":"","i":[[0,"errors","libra_json_rpc_client","",null,null],[4,"ServerCode","libra_json_rpc_client::errors","Custom JSON RPC server error codes Ranges from -32000 to…",null,null],[13,"DefaultServerError","","",0,null],[13,"VmValidationError","","",0,null],[13,"VmVerificationError","","",0,null],[13,"VmInvariantViolationError","","",0,null],[13,"VmDeserializationError","","",0,null],[13,"VmExecutionError","","",0,null],[13,"VmUnknownError","","",0,null],[13,"MempoolInvalidSeqNumber","","",0,null],[13,"MempoolIsFull","","",0,null],[13,"MempoolTooManyTransactions","","",0,null],[13,"MempoolInvalidUpdate","","",0,null],[13,"MempoolVmError","","",0,null],[13,"MempoolUnknownError","","",0,null],[3,"JsonRpcError","","",null,null],[12,"code","","",1,null],[12,"message","","",1,null],[12,"data","","",1,null],[0,"views","libra_json_rpc_client","",null,null],[3,"AmountView","libra_json_rpc_client::views","",null,null],[12,"amount","","",2,null],[12,"currency","","",2,null],[3,"AccountView","","",null,null],[12,"balances","","",3,null],[12,"sequence_number","","",3,null],[12,"authentication_key","","",3,null],[12,"sent_events_key","","",3,null],[12,"received_events_key","","",3,null],[12,"delegated_key_rotation_capability","","",3,null],[12,"delegated_withdrawal_capability","","",3,null],[3,"EventView","","",null,null],[12,"key","","",4,null],[12,"sequence_number","","",4,null],[12,"transaction_version","","",4,null],[12,"data","","",4,null],[4,"EventDataView","","",null,null],[13,"Burn","","",5,null],[12,"amount","libra_json_rpc_client::views::EventDataView","",6,null],[12,"preburn_address","","",6,null],[13,"CancelBurn","libra_json_rpc_client::views","",5,null],[12,"amount","libra_json_rpc_client::views::EventDataView","",7,null],[12,"preburn_address","","",7,null],[13,"Mint","libra_json_rpc_client::views","",5,null],[12,"amount","libra_json_rpc_client::views::EventDataView","",8,null],[13,"Preburn","libra_json_rpc_client::views","",5,null],[12,"amount","libra_json_rpc_client::views::EventDataView","",9,null],[12,"preburn_address","","",9,null],[13,"ReceivedPayment","libra_json_rpc_client::views","",5,null],[12,"amount","libra_json_rpc_client::views::EventDataView","",10,null],[12,"sender","","",10,null],[12,"metadata","","",10,null],[13,"SentPayment","libra_json_rpc_client::views","",5,null],[12,"amount","libra_json_rpc_client::views::EventDataView","",11,null],[12,"receiver","","",11,null],[12,"metadata","","",11,null],[13,"Unknown","libra_json_rpc_client::views","",5,null],[3,"BlockMetadata","","",null,null],[12,"version","","",12,null],[12,"timestamp","","",12,null],[3,"BytesView","","",null,null],[12,"0","","",13,null],[3,"TransactionView","","",null,null],[12,"version","","",14,null],[12,"transaction","","",14,null],[12,"events","","",14,null],[12,"vm_status","","",14,null],[12,"gas_used","","",14,null],[4,"TransactionDataView","","",null,null],[13,"BlockMetadata","","",15,null],[12,"timestamp_usecs","libra_json_rpc_client::views::TransactionDataView","",16,null],[13,"WriteSet","libra_json_rpc_client::views","",15,null],[13,"UserTransaction","","",15,null],[12,"sender","libra_json_rpc_client::views::TransactionDataView","",17,null],[12,"signature_scheme","","",17,null],[12,"signature","","",17,null],[12,"public_key","","",17,null],[12,"sequence_number","","",17,null],[12,"max_gas_amount","","",17,null],[12,"gas_unit_price","","",17,null],[12,"expiration_time","","",17,null],[12,"script_hash","","",17,null],[12,"script","","",17,null],[13,"UnknownTransaction","libra_json_rpc_client::views","",15,null],[4,"ScriptView","","",null,null],[13,"PeerToPeer","","",18,null],[12,"receiver","libra_json_rpc_client::views::ScriptView","",19,null],[12,"auth_key_prefix","","",19,null],[12,"amount","","",19,null],[12,"metadata","","",19,null],[12,"metadata_signature","","",19,null],[13,"Mint","libra_json_rpc_client::views","",18,null],[12,"receiver","libra_json_rpc_client::views::ScriptView","",20,null],[12,"auth_key_prefix","","",20,null],[12,"amount","","",20,null],[13,"Unknown","libra_json_rpc_client::views","",18,null],[3,"CurrencyInfoView","","",null,null],[12,"code","","",21,null],[12,"scaling_factor","","",21,null],[12,"fractional_part","","",21,null],[3,"StateProofView","","",null,null],[12,"ledger_info_with_signatures","","",22,null],[12,"epoch_change_proof","","",22,null],[12,"ledger_consistency_proof","","",22,null],[3,"AccountStateWithProofView","","",null,null],[12,"version","","",23,null],[12,"blob","","",23,null],[12,"proof","","",23,null],[3,"AccountStateProofView","","",null,null],[12,"ledger_info_to_transaction_info_proof","","",24,null],[12,"transaction_info","","",24,null],[12,"transaction_info_to_account_proof","","",24,null],[3,"JsonRpcClient","libra_json_rpc_client","",null,null],[3,"JsonRpcAsyncClient","","",null,null],[3,"JsonRpcBatch","","",null,null],[12,"requests","","",25,null],[4,"JsonRpcResponse","","",null,null],[13,"SubmissionResponse","","",26,null],[13,"AccountResponse","","",26,null],[13,"StateProofResponse","","",26,null],[13,"AccountTransactionResponse","","",26,null],[13,"TransactionsResponse","","",26,null],[13,"EventsResponse","","",26,null],[13,"BlockMetadataResponse","","",26,null],[13,"AccountStateWithProofResponse","","",26,null],[13,"UnknownResponse","","",26,null],[5,"get_response_from_batch","","",null,[[["usize"]],[["result",["result"]],["result"]]]],[5,"process_batch_response","","Helper methods for basic payload processing ///",null,[[["vec",["value"]],["value"],["jsonrpcbatch"]],[["vec",["result"]],["result",["vec"]]]]],[11,"new","","",27,[[["url"]],["result"]]],[11,"execute","","Sends a JSON RPC batched request. Returns a vector of…",27,[[["self"],["jsonrpcbatch"]],[["vec",["result"]],["result",["vec"]]]]],[11,"send_with_retry","","",27,[[["self"],["value"]],[["response"],["result",["response"]]]]],[11,"new","","",25,[[],["self"]]],[11,"json_request","","",25,[[["self"]],["value"]]],[11,"add_request","","",25,[[["vec",["value"]],["self"],["value"],["string"]]]],[11,"add_submit_request","","",25,[[["self"],["signedtransaction"]],["result"]]],[11,"add_get_account_state_request","","",25,[[["self"],["accountaddress"]]]],[11,"add_get_metadata_request","","",25,[[["self"]]]],[11,"add_get_transactions_request","","",25,[[["self"],["u64"],["bool"]]]],[11,"add_get_account_transaction_request","","",25,[[["bool"],["self"],["accountaddress"],["u64"]]]],[11,"add_get_events_request","","",25,[[["self"],["u64"],["string"]]]],[11,"add_get_state_proof_request","","",25,[[["self"],["u64"]]]],[11,"add_get_account_state_with_proof_request","","",25,[[["option",["u64"]],["self"],["accountaddress"],["u64"]]]],[11,"new","","Pass in full url for endpoint, supports HTTPS",28,[[["url"]],["self"]]],[11,"new_with_client","","",28,[[["url"],["client"]],["self"]]],[11,"get_accounts_state","","",28,[[["self"]]]],[11,"submit_transaction","","",28,[[["self"],["signedtransaction"]]]],[11,"execute","","",28,[[["self"],["jsonrpcbatch"]]]],[8,"ResponseAsView","","For JSON RPC views that are returned as part of a…",null,null],[11,"unexpected_response_error","","",29,[[["jsonrpcresponse"]],["result"]]],[11,"from_response","","",29,[[["jsonrpcresponse"]],["result"]]],[11,"optional_from_response","","",29,[[["jsonrpcresponse"]],[["option"],["result",["option"]]]]],[11,"vec_from_response","","",29,[[["jsonrpcresponse"]],[["vec"],["result",["vec"]]]]],[11,"from","libra_json_rpc_client::errors","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"test_only_hash","","",1,[[["self"]],["hashvalue"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","libra_json_rpc_client::views","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"test_only_hash","","",2,[[["self"]],["hashvalue"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"test_only_hash","","",3,[[["self"]],["hashvalue"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"test_only_hash","","",4,[[["self"]],["hashvalue"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"test_only_hash","","",5,[[["self"]],["hashvalue"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"test_only_hash","","",12,[[["self"]],["hashvalue"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"test_only_hash","","",13,[[["self"]],["hashvalue"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"test_only_hash","","",14,[[["self"]],["hashvalue"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"test_only_hash","","",15,[[["self"]],["hashvalue"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"test_only_hash","","",18,[[["self"]],["hashvalue"]]],[11,"vzip","","",18,[[],["v"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"test_only_hash","","",21,[[["self"]],["hashvalue"]]],[11,"vzip","","",21,[[],["v"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"test_only_hash","","",22,[[["self"]],["hashvalue"]]],[11,"vzip","","",22,[[],["v"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"test_only_hash","","",23,[[["self"]],["hashvalue"]]],[11,"vzip","","",23,[[],["v"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"test_only_hash","","",24,[[["self"]],["hashvalue"]]],[11,"vzip","","",24,[[],["v"]]],[11,"from","libra_json_rpc_client","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"vzip","","",27,[[],["v"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"vzip","","",28,[[],["v"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"vzip","","",25,[[],["v"]]],[11,"clear","","",25,[[["self"]]]],[11,"initialize","","",25,[[]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"vzip","","",26,[[],["v"]]],[11,"clone","libra_json_rpc_client::views","",12,[[["self"]],["blockmetadata"]]],[11,"clone","","",5,[[["self"]],["eventdataview"]]],[11,"clone","","",23,[[["self"]],["accountstatewithproofview"]]],[11,"clone","","",13,[[["self"]],["bytesview"]]],[11,"clone","","",4,[[["self"]],["eventview"]]],[11,"clone","","",3,[[["self"]],["accountview"]]],[11,"clone","","",18,[[["self"]],["scriptview"]]],[11,"clone","","",15,[[["self"]],["transactiondataview"]]],[11,"clone","","",24,[[["self"]],["accountstateproofview"]]],[11,"clone","","",22,[[["self"]],["stateproofview"]]],[11,"clone","libra_json_rpc_client::errors","",1,[[["self"]],["jsonrpcerror"]]],[11,"clone","libra_json_rpc_client::views","",2,[[["self"]],["amountview"]]],[11,"clone","","",21,[[["self"]],["currencyinfoview"]]],[11,"clone","","",14,[[["self"]],["transactionview"]]],[11,"eq","","",13,[[["self"],["bytesview"]],["bool"]]],[11,"ne","","",13,[[["self"],["bytesview"]],["bool"]]],[11,"eq","","",4,[[["eventview"],["self"]],["bool"]]],[11,"ne","","",4,[[["eventview"],["self"]],["bool"]]],[11,"eq","","",21,[[["currencyinfoview"],["self"]],["bool"]]],[11,"ne","","",21,[[["currencyinfoview"],["self"]],["bool"]]],[11,"eq","","",2,[[["amountview"],["self"]],["bool"]]],[11,"ne","","",2,[[["amountview"],["self"]],["bool"]]],[11,"eq","","",15,[[["transactiondataview"],["self"]],["bool"]]],[11,"ne","","",15,[[["transactiondataview"],["self"]],["bool"]]],[11,"eq","","",12,[[["blockmetadata"],["self"]],["bool"]]],[11,"ne","","",12,[[["blockmetadata"],["self"]],["bool"]]],[11,"eq","","",22,[[["stateproofview"],["self"]],["bool"]]],[11,"ne","","",22,[[["stateproofview"],["self"]],["bool"]]],[11,"eq","","",23,[[["accountstatewithproofview"],["self"]],["bool"]]],[11,"ne","","",23,[[["accountstatewithproofview"],["self"]],["bool"]]],[11,"eq","","",14,[[["transactionview"],["self"]],["bool"]]],[11,"ne","","",14,[[["transactionview"],["self"]],["bool"]]],[11,"eq","","",3,[[["self"],["accountview"]],["bool"]]],[11,"ne","","",3,[[["self"],["accountview"]],["bool"]]],[11,"eq","","",24,[[["accountstateproofview"],["self"]],["bool"]]],[11,"ne","","",24,[[["accountstateproofview"],["self"]],["bool"]]],[11,"eq","","",5,[[["self"],["eventdataview"]],["bool"]]],[11,"ne","","",5,[[["self"],["eventdataview"]],["bool"]]],[11,"eq","","",18,[[["scriptview"],["self"]],["bool"]]],[11,"ne","","",18,[[["scriptview"],["self"]],["bool"]]],[11,"fmt","","",12,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",14,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",22,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","libra_json_rpc_client::errors","",1,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","libra_json_rpc_client::views","",13,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",15,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",23,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",18,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",21,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",5,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",24,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"from","","Tries to convert the provided byte array into Event Key.",4,[[],["eventview"]]],[11,"from","","",18,[[["transactionpayload"]],["scriptview"]]],[11,"from","","",15,[[["transaction"]],["transactiondataview"]]],[11,"from","","",13,[[],["bytesview"]]],[11,"from","","",21,[[["currencyinforesource"]],["currencyinfoview"]]],[11,"from","","",13,[[["vec"]],["bytesview"]]],[11,"fmt","libra_json_rpc_client::errors","",1,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"try_from","libra_json_rpc_client::views","",23,[[["accountstatewithproof"]],[["result",["accountstatewithproofview","error"]],["accountstatewithproofview"],["error"]]]],[11,"try_from","","",24,[[["accountstateproof"]],[["result",["accountstateproofview","error"]],["accountstateproofview"],["error"]]]],[11,"try_from","","",22,[[],[["result",["stateproofview"]],["stateproofview"]]]],[11,"deserialize","","",23,[[["__d"]],[["result",["accountstatewithproofview"]],["accountstatewithproofview"]]]],[11,"deserialize","","",12,[[["__d"]],[["result",["blockmetadata"]],["blockmetadata"]]]],[11,"deserialize","","",5,[[["__d"]],[["result",["eventdataview"]],["eventdataview"]]]],[11,"deserialize","","",4,[[["__d"]],[["eventview"],["result",["eventview"]]]]],[11,"deserialize","","",22,[[["__d"]],[["result",["stateproofview"]],["stateproofview"]]]],[11,"deserialize","","",18,[[["__d"]],[["result",["scriptview"]],["scriptview"]]]],[11,"deserialize","","",21,[[["__d"]],[["currencyinfoview"],["result",["currencyinfoview"]]]]],[11,"deserialize","","",24,[[["__d"]],[["accountstateproofview"],["result",["accountstateproofview"]]]]],[11,"deserialize","","",2,[[["__d"]],[["result",["amountview"]],["amountview"]]]],[11,"deserialize","","",15,[[["__d"]],[["transactiondataview"],["result",["transactiondataview"]]]]],[11,"deserialize","libra_json_rpc_client::errors","",1,[[["__d"]],[["result",["jsonrpcerror"]],["jsonrpcerror"]]]],[11,"deserialize","libra_json_rpc_client::views","",14,[[["__d"]],[["transactionview"],["result",["transactionview"]]]]],[11,"deserialize","","",13,[[["__d"]],[["result",["bytesview"]],["bytesview"]]]],[11,"deserialize","","",3,[[["__d"]],[["accountview"],["result",["accountview"]]]]],[11,"serialize","libra_json_rpc_client::errors","",1,[[["self"],["__s"]],["result"]]],[11,"serialize","libra_json_rpc_client::views","",2,[[["self"],["__s"]],["result"]]],[11,"serialize","","",3,[[["self"],["__s"]],["result"]]],[11,"serialize","","",13,[[["self"],["__s"]],["result"]]],[11,"serialize","","",12,[[["self"],["__s"]],["result"]]],[11,"serialize","","",15,[[["self"],["__s"]],["result"]]],[11,"serialize","","",21,[[["self"],["__s"]],["result"]]],[11,"serialize","","",23,[[["self"],["__s"]],["result"]]],[11,"serialize","","",24,[[["self"],["__s"]],["result"]]],[11,"serialize","","",18,[[["self"],["__s"]],["result"]]],[11,"serialize","","",4,[[["self"],["__s"]],["result"]]],[11,"serialize","","",14,[[["self"],["__s"]],["result"]]],[11,"serialize","","",5,[[["self"],["__s"]],["result"]]],[11,"serialize","","",22,[[["self"],["__s"]],["result"]]],[11,"optional_from_response","","",3,[[["jsonrpcresponse"]],[["option"],["result",["option"]]]]],[11,"vec_from_response","","",4,[[["jsonrpcresponse"]],[["vec"],["result",["vec"]]]]],[11,"from_response","","",12,[[["jsonrpcresponse"]],["result"]]],[11,"optional_from_response","","",14,[[["jsonrpcresponse"]],[["option"],["result",["option"]]]]],[11,"vec_from_response","","",14,[[["jsonrpcresponse"]],[["vec"],["result",["vec"]]]]],[11,"from_response","","",22,[[["jsonrpcresponse"]],["result"]]],[11,"from_response","","",23,[[["jsonrpcresponse"]],["result"]]],[11,"clone","libra_json_rpc_client","",25,[[["self"]],["jsonrpcbatch"]]],[11,"clone","","",28,[[["self"]],["jsonrpcasyncclient"]]],[11,"clone","","",26,[[["self"]],["jsonrpcresponse"]]],[11,"default","","",25,[[],["jsonrpcbatch"]]],[11,"eq","","",26,[[["self"],["jsonrpcresponse"]],["bool"]]],[11,"ne","","",26,[[["self"],["jsonrpcresponse"]],["bool"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"try_from","","",26,[[],[["jsonrpcresponse"],["result",["jsonrpcresponse"]]]]],[11,"serialize","libra_json_rpc_client::errors","",1,[[],["value"]]],[11,"invalid_request","","",1,[[],["jsonrpcerror"]]],[11,"invalid_params","","",1,[[],["jsonrpcerror"]]],[11,"method_not_found","","",1,[[],["jsonrpcerror"]]],[11,"internal_error","","",1,[[["string"]],["jsonrpcerror"]]],[11,"mempool_error","","",1,[[["mempoolstatus"]],[["jsonrpcerror"],["error"],["result",["jsonrpcerror","error"]]]]],[11,"vm_error","","",1,[[["vmstatus"]],["jsonrpcerror"]]],[11,"get_vm_error","","",1,[[["self"]],[["option",["vmstatus"]],["vmstatus"]]]],[11,"new","libra_json_rpc_client::views","",3,[[["accountresource"]],["accountview"]]],[11,"into_bytes","","",13,[[],[["vec",["u8"]],["error"],["result",["vec","error"]]]]],[11,"get_transaction_name","","",14,[[["self"]],["string"]]],[11,"get_name","","",18,[[["self"]],["string"]]],[11,"unexpected_response_error","libra_json_rpc_client","",29,[[["jsonrpcresponse"]],["result"]]],[11,"from_response","","",29,[[["jsonrpcresponse"]],["result"]]],[11,"optional_from_response","","",29,[[["jsonrpcresponse"]],[["option"],["result",["option"]]]]],[11,"vec_from_response","","",29,[[["jsonrpcresponse"]],[["vec"],["result",["vec"]]]]]],"p":[[4,"ServerCode"],[3,"JsonRpcError"],[3,"AmountView"],[3,"AccountView"],[3,"EventView"],[4,"EventDataView"],[13,"Burn"],[13,"CancelBurn"],[13,"Mint"],[13,"Preburn"],[13,"ReceivedPayment"],[13,"SentPayment"],[3,"BlockMetadata"],[3,"BytesView"],[3,"TransactionView"],[4,"TransactionDataView"],[13,"BlockMetadata"],[13,"UserTransaction"],[4,"ScriptView"],[13,"PeerToPeer"],[13,"Mint"],[3,"CurrencyInfoView"],[3,"StateProofView"],[3,"AccountStateWithProofView"],[3,"AccountStateProofView"],[3,"JsonRpcBatch"],[4,"JsonRpcResponse"],[3,"JsonRpcClient"],[3,"JsonRpcAsyncClient"],[8,"ResponseAsView"]]};
searchIndex["libra_json_rpc_types"] = {"doc":"","i":[[0,"errors","libra_json_rpc_types","",null,null],[3,"JsonRpcError","libra_json_rpc_types::errors","",null,null],[12,"code","","",0,null],[12,"message","","",0,null],[12,"data","","",0,null],[4,"ServerCode","","Custom JSON RPC server error codes Ranges from -32000 to…",null,null],[13,"DefaultServerError","","",1,null],[13,"VmValidationError","","",1,null],[13,"VmVerificationError","","",1,null],[13,"VmInvariantViolationError","","",1,null],[13,"VmDeserializationError","","",1,null],[13,"VmExecutionError","","",1,null],[13,"VmUnknownError","","",1,null],[13,"MempoolInvalidSeqNumber","","",1,null],[13,"MempoolIsFull","","",1,null],[13,"MempoolTooManyTransactions","","",1,null],[13,"MempoolInvalidUpdate","","",1,null],[13,"MempoolVmError","","",1,null],[13,"MempoolUnknownError","","",1,null],[11,"serialize","","",0,[[],["value"]]],[11,"invalid_request","","",0,[[],["self"]]],[11,"invalid_params","","",0,[[],["self"]]],[11,"method_not_found","","",0,[[],["self"]]],[11,"internal_error","","",0,[[["string"]],["self"]]],[11,"mempool_error","","",0,[[["mempoolstatus"]],["result"]]],[11,"vm_error","","",0,[[["vmstatus"]],["self"]]],[11,"get_vm_error","","",0,[[["self"]],[["vmstatus"],["option",["vmstatus"]]]]],[0,"views","libra_json_rpc_types","",null,null],[3,"AmountView","libra_json_rpc_types::views","",null,null],[12,"amount","","",2,null],[12,"currency","","",2,null],[3,"AccountView","","",null,null],[12,"balances","","",3,null],[12,"sequence_number","","",3,null],[12,"authentication_key","","",3,null],[12,"sent_events_key","","",3,null],[12,"received_events_key","","",3,null],[12,"delegated_key_rotation_capability","","",3,null],[12,"delegated_withdrawal_capability","","",3,null],[3,"EventView","","",null,null],[12,"key","","",4,null],[12,"sequence_number","","",4,null],[12,"transaction_version","","",4,null],[12,"data","","",4,null],[3,"BlockMetadata","","",null,null],[12,"version","","",5,null],[12,"timestamp","","",5,null],[3,"BytesView","","",null,null],[12,"0","","",6,null],[3,"TransactionView","","",null,null],[12,"version","","",7,null],[12,"transaction","","",7,null],[12,"events","","",7,null],[12,"vm_status","","",7,null],[12,"gas_used","","",7,null],[3,"CurrencyInfoView","","",null,null],[12,"code","","",8,null],[12,"scaling_factor","","",8,null],[12,"fractional_part","","",8,null],[3,"StateProofView","","",null,null],[12,"ledger_info_with_signatures","","",9,null],[12,"epoch_change_proof","","",9,null],[12,"ledger_consistency_proof","","",9,null],[3,"AccountStateWithProofView","","",null,null],[12,"version","","",10,null],[12,"blob","","",10,null],[12,"proof","","",10,null],[3,"AccountStateProofView","","",null,null],[12,"ledger_info_to_transaction_info_proof","","",11,null],[12,"transaction_info","","",11,null],[12,"transaction_info_to_account_proof","","",11,null],[4,"EventDataView","","",null,null],[13,"Burn","","",12,null],[12,"amount","libra_json_rpc_types::views::EventDataView","",13,null],[12,"preburn_address","","",13,null],[13,"CancelBurn","libra_json_rpc_types::views","",12,null],[12,"amount","libra_json_rpc_types::views::EventDataView","",14,null],[12,"preburn_address","","",14,null],[13,"Mint","libra_json_rpc_types::views","",12,null],[12,"amount","libra_json_rpc_types::views::EventDataView","",15,null],[13,"Preburn","libra_json_rpc_types::views","",12,null],[12,"amount","libra_json_rpc_types::views::EventDataView","",16,null],[12,"preburn_address","","",16,null],[13,"ReceivedPayment","libra_json_rpc_types::views","",12,null],[12,"amount","libra_json_rpc_types::views::EventDataView","",17,null],[12,"sender","","",17,null],[12,"metadata","","",17,null],[13,"SentPayment","libra_json_rpc_types::views","",12,null],[12,"amount","libra_json_rpc_types::views::EventDataView","",18,null],[12,"receiver","","",18,null],[12,"metadata","","",18,null],[13,"Unknown","libra_json_rpc_types::views","",12,null],[4,"TransactionDataView","","",null,null],[13,"BlockMetadata","","",19,null],[12,"timestamp_usecs","libra_json_rpc_types::views::TransactionDataView","",20,null],[13,"WriteSet","libra_json_rpc_types::views","",19,null],[13,"UserTransaction","","",19,null],[12,"sender","libra_json_rpc_types::views::TransactionDataView","",21,null],[12,"signature_scheme","","",21,null],[12,"signature","","",21,null],[12,"public_key","","",21,null],[12,"sequence_number","","",21,null],[12,"max_gas_amount","","",21,null],[12,"gas_unit_price","","",21,null],[12,"expiration_time","","",21,null],[12,"script_hash","","",21,null],[12,"script","","",21,null],[13,"UnknownTransaction","libra_json_rpc_types::views","",19,null],[4,"ScriptView","","",null,null],[13,"PeerToPeer","","",22,null],[12,"receiver","libra_json_rpc_types::views::ScriptView","",23,null],[12,"auth_key_prefix","","",23,null],[12,"amount","","",23,null],[12,"metadata","","",23,null],[12,"metadata_signature","","",23,null],[13,"Mint","libra_json_rpc_types::views","",22,null],[12,"receiver","libra_json_rpc_types::views::ScriptView","",24,null],[12,"auth_key_prefix","","",24,null],[12,"amount","","",24,null],[13,"Unknown","libra_json_rpc_types::views","",22,null],[11,"new","","",3,[[["accountresource"]],["self"]]],[11,"into_bytes","","",6,[[],[["result",["vec","error"]],["error"],["vec",["u8"]]]]],[11,"get_transaction_name","","",7,[[["self"]],["string"]]],[11,"get_name","","",22,[[["self"]],["string"]]],[11,"from","libra_json_rpc_types::errors","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"test_only_hash","","",0,[[["self"]],["hashvalue"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","libra_json_rpc_types::views","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"test_only_hash","","",2,[[["self"]],["hashvalue"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"test_only_hash","","",3,[[["self"]],["hashvalue"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"test_only_hash","","",4,[[["self"]],["hashvalue"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"test_only_hash","","",5,[[["self"]],["hashvalue"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"test_only_hash","","",6,[[["self"]],["hashvalue"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"test_only_hash","","",7,[[["self"]],["hashvalue"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"test_only_hash","","",8,[[["self"]],["hashvalue"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"test_only_hash","","",9,[[["self"]],["hashvalue"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"test_only_hash","","",10,[[["self"]],["hashvalue"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"test_only_hash","","",11,[[["self"]],["hashvalue"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"test_only_hash","","",12,[[["self"]],["hashvalue"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"test_only_hash","","",19,[[["self"]],["hashvalue"]]],[11,"vzip","","",19,[[],["v"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"test_only_hash","","",22,[[["self"]],["hashvalue"]]],[11,"vzip","","",22,[[],["v"]]],[11,"from","","Tries to convert the provided byte array into Event Key.",4,[[],["eventview"]]],[11,"from","","",6,[[],["self"]]],[11,"from","","",6,[[["vec"]],["self"]]],[11,"from","","",19,[[["transaction"]],["self"]]],[11,"from","","",22,[[["transactionpayload"]],["self"]]],[11,"from","","",8,[[["currencyinforesource"]],["currencyinfoview"]]],[11,"clone","libra_json_rpc_types::errors","",0,[[["self"]],["jsonrpcerror"]]],[11,"clone","libra_json_rpc_types::views","",2,[[["self"]],["amountview"]]],[11,"clone","","",3,[[["self"]],["accountview"]]],[11,"clone","","",4,[[["self"]],["eventview"]]],[11,"clone","","",12,[[["self"]],["eventdataview"]]],[11,"clone","","",5,[[["self"]],["blockmetadata"]]],[11,"clone","","",6,[[["self"]],["bytesview"]]],[11,"clone","","",7,[[["self"]],["transactionview"]]],[11,"clone","","",19,[[["self"]],["transactiondataview"]]],[11,"clone","","",22,[[["self"]],["scriptview"]]],[11,"clone","","",8,[[["self"]],["currencyinfoview"]]],[11,"clone","","",9,[[["self"]],["stateproofview"]]],[11,"clone","","",10,[[["self"]],["accountstatewithproofview"]]],[11,"clone","","",11,[[["self"]],["accountstateproofview"]]],[11,"eq","","",2,[[["amountview"],["self"]],["bool"]]],[11,"ne","","",2,[[["amountview"],["self"]],["bool"]]],[11,"eq","","",3,[[["accountview"],["self"]],["bool"]]],[11,"ne","","",3,[[["accountview"],["self"]],["bool"]]],[11,"eq","","",4,[[["eventview"],["self"]],["bool"]]],[11,"ne","","",4,[[["eventview"],["self"]],["bool"]]],[11,"eq","","",12,[[["self"],["eventdataview"]],["bool"]]],[11,"ne","","",12,[[["self"],["eventdataview"]],["bool"]]],[11,"eq","","",5,[[["blockmetadata"],["self"]],["bool"]]],[11,"ne","","",5,[[["blockmetadata"],["self"]],["bool"]]],[11,"eq","","",6,[[["bytesview"],["self"]],["bool"]]],[11,"ne","","",6,[[["bytesview"],["self"]],["bool"]]],[11,"eq","","",7,[[["self"],["transactionview"]],["bool"]]],[11,"ne","","",7,[[["self"],["transactionview"]],["bool"]]],[11,"eq","","",19,[[["transactiondataview"],["self"]],["bool"]]],[11,"ne","","",19,[[["transactiondataview"],["self"]],["bool"]]],[11,"eq","","",22,[[["self"],["scriptview"]],["bool"]]],[11,"ne","","",22,[[["self"],["scriptview"]],["bool"]]],[11,"eq","","",8,[[["currencyinfoview"],["self"]],["bool"]]],[11,"ne","","",8,[[["currencyinfoview"],["self"]],["bool"]]],[11,"eq","","",9,[[["self"],["stateproofview"]],["bool"]]],[11,"ne","","",9,[[["self"],["stateproofview"]],["bool"]]],[11,"eq","","",10,[[["accountstatewithproofview"],["self"]],["bool"]]],[11,"ne","","",10,[[["accountstatewithproofview"],["self"]],["bool"]]],[11,"eq","","",11,[[["accountstateproofview"],["self"]],["bool"]]],[11,"ne","","",11,[[["accountstateproofview"],["self"]],["bool"]]],[11,"fmt","libra_json_rpc_types::errors","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_json_rpc_types::views","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_json_rpc_types::errors","",0,[[["formatter"],["self"]],["result"]]],[11,"try_from","libra_json_rpc_types::views","",9,[[],[["stateproofview"],["result",["stateproofview"]]]]],[11,"try_from","","",10,[[["accountstatewithproof"]],[["result",["accountstatewithproofview","error"]],["accountstatewithproofview"],["error"]]]],[11,"try_from","","",11,[[["accountstateproof"]],[["error"],["result",["accountstateproofview","error"]],["accountstateproofview"]]]],[11,"deserialize","libra_json_rpc_types::errors","",0,[[["__d"]],["result"]]],[11,"deserialize","libra_json_rpc_types::views","",2,[[["__d"]],["result"]]],[11,"deserialize","","",3,[[["__d"]],["result"]]],[11,"deserialize","","",4,[[["__d"]],["result"]]],[11,"deserialize","","",12,[[["__d"]],["result"]]],[11,"deserialize","","",5,[[["__d"]],["result"]]],[11,"deserialize","","",6,[[["__d"]],["result"]]],[11,"deserialize","","",7,[[["__d"]],["result"]]],[11,"deserialize","","",19,[[["__d"]],["result"]]],[11,"deserialize","","",22,[[["__d"]],["result"]]],[11,"deserialize","","",8,[[["__d"]],["result"]]],[11,"deserialize","","",9,[[["__d"]],["result"]]],[11,"deserialize","","",10,[[["__d"]],["result"]]],[11,"deserialize","","",11,[[["__d"]],["result"]]],[11,"serialize","libra_json_rpc_types::errors","",0,[[["self"],["__s"]],["result"]]],[11,"serialize","libra_json_rpc_types::views","",2,[[["self"],["__s"]],["result"]]],[11,"serialize","","",3,[[["self"],["__s"]],["result"]]],[11,"serialize","","",4,[[["self"],["__s"]],["result"]]],[11,"serialize","","",12,[[["self"],["__s"]],["result"]]],[11,"serialize","","",5,[[["self"],["__s"]],["result"]]],[11,"serialize","","",6,[[["self"],["__s"]],["result"]]],[11,"serialize","","",7,[[["self"],["__s"]],["result"]]],[11,"serialize","","",19,[[["self"],["__s"]],["result"]]],[11,"serialize","","",22,[[["self"],["__s"]],["result"]]],[11,"serialize","","",8,[[["self"],["__s"]],["result"]]],[11,"serialize","","",9,[[["self"],["__s"]],["result"]]],[11,"serialize","","",10,[[["self"],["__s"]],["result"]]],[11,"serialize","","",11,[[["self"],["__s"]],["result"]]]],"p":[[3,"JsonRpcError"],[4,"ServerCode"],[3,"AmountView"],[3,"AccountView"],[3,"EventView"],[3,"BlockMetadata"],[3,"BytesView"],[3,"TransactionView"],[3,"CurrencyInfoView"],[3,"StateProofView"],[3,"AccountStateWithProofView"],[3,"AccountStateProofView"],[4,"EventDataView"],[13,"Burn"],[13,"CancelBurn"],[13,"Mint"],[13,"Preburn"],[13,"ReceivedPayment"],[13,"SentPayment"],[4,"TransactionDataView"],[13,"BlockMetadata"],[13,"UserTransaction"],[4,"ScriptView"],[13,"PeerToPeer"],[13,"Mint"]]};
searchIndex["libra_key_manager"] = {"doc":"The purpose of KeyManager is to rotate consensus key (and…","i":[[3,"KeyManager","libra_key_manager","",null,null],[4,"Action","","Defines actions that KeyManager should perform after a…",null,null],[13,"NoAction","","The system is in a healthy state and there is no need to…",0,null],[13,"FullKeyRotation","","The system is in a healthy state but sufficient time has…",0,null],[13,"SubmitKeyRotationTransaction","","Storage and the blockchain are inconsistent, submit a new…",0,null],[4,"Error","","",null,null],[13,"ConfigInfoKeyMismatch","","",1,null],[13,"ConfigStorageKeyMismatch","","",1,null],[13,"DataDoesNotExist","","",1,null],[13,"LivenessError","","",1,null],[13,"SecureStorageError","","",1,null],[13,"ValidatorInfoNotFound","","",1,null],[13,"UnknownError","","",1,null],[5,"build_rotation_transaction","","",null,[[["accountaddress"],["ed25519privatekey"],["ed25519publickey"],["u64"],["duration"]],["transaction"]]],[0,"counters","","",null,null],[3,"Counters","libra_key_manager::counters","",null,null],[12,"completed_consensus_key_rotations","","",2,null],[12,"consensus_rotation_tx_resubmissions","","",2,null],[12,"no_actions_required","","",2,null],[12,"waiting_on_consensus_reconfiguration","","",2,null],[12,"sleeps","","",2,null],[7,"COUNTERS","","",null,null],[11,"new","","",2,[[],["self"]]],[0,"libra_interface","libra_key_manager","",null,null],[3,"JsonRpcLibraInterface","libra_key_manager::libra_interface","This implements the LibraInterface by talking directly to…",null,null],[8,"LibraInterface","","This defines a generic trait used to interact with the…",null,null],[10,"libra_timestamp","","Retrieves the current time from the blockchain, this is…",3,[[["self"]],[["result",["u64","error"]],["u64"],["error"]]]],[10,"last_reconfiguration","","Retrieves the last reconfiguration time from the…",3,[[["self"]],[["result",["u64","error"]],["u64"],["error"]]]],[10,"retrieve_sequence_number","","Retrieve current sequence number for the provided account.",3,[[["accountaddress"],["self"]],[["result",["u64","error"]],["u64"],["error"]]]],[10,"submit_transaction","","Submits a transaction to the block chain and returns…",3,[[["transaction"],["self"]],[["result",["error"]],["error"]]]],[10,"retrieve_validator_config","","Retrieves the ValidatorConfig at the specified…",3,[[["accountaddress"],["self"]],[["validatorconfig"],["result",["validatorconfig","error"]],["error"]]]],[10,"retrieve_validator_info","","Retrieves the ValidatorInfo for the specified account from…",3,[[["accountaddress"],["self"]],[["result",["validatorinfo","error"]],["error"],["validatorinfo"]]]],[10,"retrieve_account_state","","Fetches the AccountState associated with a specific…",3,[[["accountaddress"],["self"]],[["error"],["accountstate"],["result",["accountstate","error"]]]]],[11,"new","","",4,[[["string"]],["self"]]],[11,"new","libra_key_manager","",5,[[["accountaddress"],["li"],["s"],["t"],["u64"]],["self"]]],[11,"execute","","Begins execution of the key manager by running an infinite…",5,[[["self"]],[["result",["error"]],["error"]]]],[11,"execute_once","","Checks the current state of the validator keys and…",5,[[["self"]],[["result",["error"]],["error"]]]],[11,"compare_storage_to_config","","",5,[[["self"]],[["result",["error"]],["error"]]]],[11,"compare_info_to_config","","",5,[[["self"]],[["result",["error"]],["error"]]]],[11,"last_reconfiguration","","",5,[[["self"]],[["result",["u64","error"]],["u64"],["error"]]]],[11,"last_rotation","","",5,[[["self"]],[["result",["u64","error"]],["u64"],["error"]]]],[11,"libra_timestamp","","",5,[[["self"]],[["result",["u64","error"]],["u64"],["error"]]]],[11,"resubmit_consensus_key_transaction","","",5,[[["self"]],[["result",["error"]],["error"]]]],[11,"rotate_consensus_key","","",5,[[["self"]],[["result",["ed25519publickey","error"]],["error"],["ed25519publickey"]]]],[11,"submit_key_rotation_transaction","","",5,[[["self"],["ed25519publickey"]],[["result",["ed25519publickey","error"]],["error"],["ed25519publickey"]]]],[11,"evaluate_status","","Evaluates the current status of the key manager by…",5,[[["self"]],[["result",["action","error"]],["error"],["action"]]]],[11,"perform_action","","",5,[[["self"],["action"]],[["result",["error"]],["error"]]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","libra_key_manager::counters","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","libra_key_manager::libra_interface","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"libra_timestamp","","",4,[[["self"]],[["result",["u64","error"]],["u64"],["error"]]]],[11,"last_reconfiguration","","",4,[[["self"]],[["result",["u64","error"]],["u64"],["error"]]]],[11,"retrieve_sequence_number","","",4,[[["accountaddress"],["self"]],[["result",["u64","error"]],["u64"],["error"]]]],[11,"submit_transaction","","",4,[[["transaction"],["self"]],[["result",["error"]],["error"]]]],[11,"retrieve_validator_config","","",4,[[["accountaddress"],["self"]],[["validatorconfig"],["result",["validatorconfig","error"]],["error"]]]],[11,"retrieve_validator_info","","",4,[[["accountaddress"],["self"]],[["result",["validatorinfo","error"]],["error"],["validatorinfo"]]]],[11,"retrieve_account_state","","",4,[[["accountaddress"],["self"]],[["error"],["accountstate"],["result",["accountstate","error"]]]]],[11,"from","libra_key_manager","",1,[[["error"]],["self"]]],[11,"clone","libra_key_manager::libra_interface","",4,[[["self"]],["jsonrpclibrainterface"]]],[11,"eq","libra_key_manager","",0,[[["self"],["action"]],["bool"]]],[11,"eq","","",1,[[["error"],["self"]],["bool"]]],[11,"ne","","",1,[[["error"],["self"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"source","","",1,[[["self"]],[["option",["error"]],["error"]]]],[11,"get_metrics","libra_key_manager::counters","",2,[[["self"]],[["vec",["pushmetricformat"]],["pushmetricformat"]]]]],"p":[[4,"Action"],[4,"Error"],[3,"Counters"],[8,"LibraInterface"],[3,"JsonRpcLibraInterface"],[3,"KeyManager"]]};
searchIndex["libra_logger"] = {"doc":"This crates provides API for both structured and not…","i":[[4,"Level","libra_logger","An enum representing the available verbosity levels of the…",null,null],[13,"Error","","The \"error\" level.",0,null],[13,"Warn","","The \"warn\" level.",0,null],[13,"Info","","The \"info\" level.",0,null],[13,"Debug","","The \"debug\" level.",0,null],[13,"Trace","","The \"trace\" level.",0,null],[3,"StructuredLogEntry","","",null,null],[3,"Logger","","Logging framework for Libra that encapsulates a minimal…",null,null],[5,"init_file_struct_log","","Initializes struct logger sink that writes to specified…",null,[[["string"]],[["initloggererror"],["result",["initloggererror"]]]]],[5,"init_println_struct_log","","Initialize struct logger sink that prints all structured…",null,[[],["result"]]],[5,"init_struct_log_from_env","","Initializes struct logger from STRUCT_LOG_FILE env var If…",null,[[],[["initloggererror"],["result",["initloggererror"]]]]],[5,"set_struct_logger","","Sets structured logger",null,[[["structlogsink"]],["result"]]],[5,"struct_logger_enabled","","Checks if structured logging is enabled for level",null,[[["level"]],["bool"]]],[5,"struct_logger_set","","Checks if structured logging is enabled",null,[[],["bool"]]],[0,"prelude","","",null,null],[11,"new_unnamed","","",1,[[],["self"]]],[11,"new_named","","",1,[[["str"]],["self"]]],[11,"critical","","",1,[[],["self"]]],[11,"warning","","",1,[[],["self"]]],[11,"json_data","","",1,[[["str"],["value"]],["self"]]],[11,"data","","",1,[[["str"],["serialize"]],["self"]]],[11,"new","","",2,[[],["self"]]],[11,"channel_size","","",2,[[["self"],["usize"]],["self"]]],[11,"environment_only","","",2,[[["self"],["bool"]],["self"]]],[11,"is_async","","",2,[[["self"],["bool"]],["self"]]],[11,"level","","",2,[[["level"],["self"]],["self"]]],[11,"override_rust_log","","",2,[[["self"],["bool"]],["self"]]],[11,"init","","",2,[[["self"]]]],[17,"CHANNEL_SIZE","","",null,null],[17,"DEFAULT_TARGET","","",null,null],[8,"StructLogSink","","",null,null],[10,"send","","",3,[[["structuredlogentry"],["self"]]]],[14,"crit","","Define crit macro that specify libra as the target",null,null],[14,"debug","","Define debug macro that specify libra as the target",null,null],[14,"error","","Define  macro that specify libra as the target",null,null],[14,"info","","Define info macro that specify libra as the target",null,null],[14,"trace","","Define trace macro that specify libra as the target",null,null],[14,"warn","","Define warn macro that specify libra as the target",null,null],[14,"struct_log_enabled","","",null,null],[14,"struct_log","","",null,null],[14,"send_struct_log","","",null,null],[14,"location","","",null,null],[14,"git_rev","","",null,null],[14,"format_struct_args_and_pattern","","",null,null],[14,"format_struct_args","","",null,null],[14,"format_struct_arg","","",null,null],[14,"format_index","","",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"deserialize","","",0,[[["d"]],[["level"],["result",["level"]]]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"cmp","","",0,[[["self"],["level"]],["ordering"]]],[11,"clone","","",0,[[["self"]],["level"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"eq","","",0,[[["levelfilter"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["level"]],["bool"]]],[11,"from_str","","",0,[[["str"]],[["level"],["result",["level"]]]]],[11,"serialize","","",0,[[["s"],["self"]],["result"]]],[11,"partial_cmp","","",0,[[["levelfilter"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["levelfilter"],["self"]],["bool"]]],[11,"le","","",0,[[["levelfilter"],["self"]],["bool"]]],[11,"gt","","",0,[[["levelfilter"],["self"]],["bool"]]],[11,"ge","","",0,[[["levelfilter"],["self"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["level"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["self"],["level"]],["bool"]]],[11,"le","","",0,[[["self"],["level"]],["bool"]]],[11,"gt","","",0,[[["self"],["level"]],["bool"]]],[11,"ge","","",0,[[["self"],["level"]],["bool"]]],[11,"default","","",1,[[],["structuredlogentry"]]],[11,"default","","",2,[[],["self"]]],[11,"serialize","","",1,[[["self"],["__s"]],["result"]]],[11,"max","","Returns the most verbose logging level.",0,[[],["level"]]],[11,"to_level_filter","","Converts the `Level` to the equivalent `LevelFilter`.",0,[[["self"]],["levelfilter"]]]],"p":[[4,"Level"],[3,"StructuredLogEntry"],[3,"Logger"],[8,"StructLogSink"]]};
searchIndex["libra_management"] = {"doc":"","i":[[3,"SecureBackends","libra_management","",null,null],[3,"SingleBackend","","",null,null],[4,"Command","","",null,null],[13,"AssociationKey","","",0,null],[13,"Genesis","","",0,null],[13,"OperatorKey","","",0,null],[13,"OwnerKey","","",0,null],[13,"SetLayout","","",0,null],[13,"ValidatorConfig","","",0,null],[13,"Verify","","",0,null],[4,"CommandName","","",null,null],[13,"AssociationKey","","",1,null],[13,"Genesis","","",1,null],[13,"OperatorKey","","",1,null],[13,"OwnerKey","","",1,null],[13,"SetLayout","","",1,null],[13,"ValidatorConfig","","",1,null],[13,"Verify","","",1,null],[0,"management_constants","","",null,null],[17,"COMMON_NS","libra_management::management_constants","",null,null],[17,"LAYOUT","","",null,null],[17,"VALIDATOR_CONFIG","","",null,null],[17,"GAS_UNIT_PRICE","","",null,null],[17,"MAX_GAS_AMOUNT","","",null,null],[17,"TXN_EXPIRATION_SECS","","",null,null],[11,"execute","libra_management","",0,[[],["string"]]],[11,"association_key","","",0,[[],[["ed25519publickey"],["error"],["result",["ed25519publickey","error"]]]]],[11,"genesis","","",0,[[],[["result",["transaction","error"]],["transaction"],["error"]]]],[11,"operator_key","","",0,[[],[["ed25519publickey"],["error"],["result",["ed25519publickey","error"]]]]],[11,"owner_key","","",0,[[],[["ed25519publickey"],["error"],["result",["ed25519publickey","error"]]]]],[11,"set_layout","","",0,[[],[["layout"],["error"],["result",["layout","error"]]]]],[11,"validator_config","","",0,[[],[["result",["transaction","error"]],["transaction"],["error"]]]],[11,"verify","","",0,[[],[["error"],["result",["string","error"]],["string"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",1,[[["command"]],["self"]]],[11,"eq","","",1,[[["self"],["commandname"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"clap","","",0,[[],["app"]]],[11,"from_clap","","",0,[[["argmatches"]],["self"]]],[11,"clap","","",2,[[],["app"]]],[11,"from_clap","","",2,[[["argmatches"]],["self"]]],[11,"clap","","",3,[[],["app"]]],[11,"from_clap","","",3,[[["argmatches"]],["self"]]],[11,"augment_clap","","",0,[[["app"]],["app"]]],[11,"from_subcommand","","",0,[[],["option"]]],[11,"is_subcommand","","",0,[[],["bool"]]],[11,"augment_clap","","",2,[[["app"]],["app"]]],[11,"is_subcommand","","",2,[[],["bool"]]],[11,"augment_clap","","",3,[[["app"]],["app"]]],[11,"is_subcommand","","",3,[[],["bool"]]]],"p":[[4,"Command"],[4,"CommandName"],[3,"SecureBackends"],[3,"SingleBackend"]]};
searchIndex["libra_mempool"] = {"doc":"Mempool is used to hold transactions that have been…","i":[[3,"CommitNotification","libra_mempool","notification from state sync to mempool of commit event…",null,null],[12,"transactions","","committed transactions",0,null],[12,"block_timestamp_usecs","","timestamp of committed block",0,null],[12,"callback","","callback to send back response from mempool to State Sync",0,null],[3,"CommitResponse","","ACK response to commit notification",null,null],[12,"msg","","error msg if applicable - empty string if commit was…",1,null],[3,"CommittedTransaction","","successfully executed and committed txn",null,null],[12,"sender","","sender",2,null],[12,"sequence_number","","sequence number",2,null],[3,"TransactionExclusion","","excluded txn",null,null],[12,"sender","","sender",3,null],[12,"sequence_number","","sequence number",3,null],[4,"ConsensusRequest","","Message sent from consensus to mempool",null,null],[13,"GetBlockRequest","","request to pull block to submit to consensus",4,null],[13,"RejectNotification","","notifications about rejected committed txns",4,null],[4,"ConsensusResponse","","Response setn from mempool to consensus",null,null],[13,"GetBlockResponse","","block to submit to consensus",5,null],[13,"CommitResponse","","ACK for commit notification",5,null],[5,"bootstrap","","method used to bootstrap shared mempool for a node",null,[[["nodeconfig"],["consensusrequest"],["dbreader"],["receiver",["consensusrequest"]],["receiver",["commitnotification"]],["receiver",["onchainconfigpayload"]],["commitnotification"],["vec"],["arc",["dbreader"]],["onchainconfigpayload"],["receiver"]],["runtime"]]],[0,"network","","Interface between Mempool and Network layers.",null,null],[3,"MempoolNetworkSender","libra_mempool::network","The interface from Mempool to Networking layer.",null,null],[4,"MempoolSyncMsg","","Container for exchanging transactions with other Mempools",null,null],[13,"BroadcastTransactionsRequest","","broadcast request issued by the sender",6,null],[12,"request_id","libra_mempool::network::MempoolSyncMsg","unique id of sync request. Can be used by sender for…",7,null],[12,"transactions","","shared transactions in this batch",7,null],[13,"BroadcastTransactionsResponse","libra_mempool::network","broadcast ack issued by the receiver",6,null],[12,"request_id","libra_mempool::network::MempoolSyncMsg","unique id of received broadcast request",8,null],[5,"add_to_network","libra_mempool::network","Create a new Sender that only sends for the…",null,[[["networkbuilder"],["usize"]]]],[6,"MempoolNetworkEvents","","The interface from Network to Mempool layer.",null,null],[17,"MEMPOOL_DIRECT_SEND_PROTOCOL","","Protocol id for mempool direct-send calls",null,null],[0,"mocks","libra_mempool","Mocks used for testing",null,null],[3,"MockSharedMempool","libra_mempool::mocks","Mock of a running instance of shared mempool",null,null],[12,"ac_client","","sender from admission control to shared mempool",9,null],[12,"mempool","","mempool",9,null],[12,"consensus_sender","","sender from consensus to shared mempool",9,null],[12,"state_sync_sender","","sender from state sync to shared mempool",9,null],[11,"new","libra_mempool::network","Returns a Sender that only sends for the…",10,[[["connectionrequestsender"],["peermanagerrequestsender"]],["self"]]],[11,"send_to","","Send a single message to the destination peer using the…",10,[[["peerid"],["self"],["mempoolsyncmsg"]],[["networkerror"],["result",["networkerror"]]]]],[6,"MempoolClientSender","libra_mempool","sender type: used to enqueue new transactions to shared…",null,null],[6,"SubmissionStatus","","Submission Status is represented as combination of…",null,null],[17,"MEMPOOL_SUBSCRIBED_CONFIGS","","On-chain configs that mempool subscribes to for…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"into_request","","",0,[[],["request"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"into_request","","",1,[[],["request"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"into_request","","",2,[[],["request"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"into_request","","",3,[[],["request"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"into_request","","",4,[[],["request"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"into_request","","",5,[[],["request"]]],[11,"from","libra_mempool::mocks","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"into_request","","",9,[[],["request"]]],[11,"from","libra_mempool::network","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"into_request","","",10,[[],["request"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"test_only_hash","","",6,[[["self"]],["hashvalue"]]],[11,"into_request","","",6,[[],["request"]]],[11,"clone","","",6,[[["self"]],["mempoolsyncmsg"]]],[11,"clone","","",10,[[["self"]],["mempoolnetworksender"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_mempool","",1,[[["formatter"],["self"]],["result"]]],[11,"serialize","libra_mempool::network","",6,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",6,[[["__d"]],["result"]]],[11,"new","libra_mempool::mocks","Creates a mock of a running instance of shared mempool…",9,[[["receiver",["commitnotification"]],["option",["receiver"]]],["self"]]],[11,"add_txns","","add txns to mempool",9,[[["vec",["signedtransaction"]],["self"],["signedtransaction"]],["result"]]],[11,"read_timeline","","true if all given txns are in mempool, else false",9,[[["usize"],["self"],["u64"]],[["vec",["signedtransaction"]],["signedtransaction"]]]]],"p":[[3,"CommitNotification"],[3,"CommitResponse"],[3,"CommittedTransaction"],[3,"TransactionExclusion"],[4,"ConsensusRequest"],[4,"ConsensusResponse"],[4,"MempoolSyncMsg"],[13,"BroadcastTransactionsRequest"],[13,"BroadcastTransactionsResponse"],[3,"MockSharedMempool"],[3,"MempoolNetworkSender"]]};
searchIndex["libra_metrics"] = {"doc":"","i":[[14,"register_histogram","libra_metrics","Create a `Histogram` and registers to default registry.",null,null],[14,"register_histogram_vec","","Create a `HistogramVec` and registers to default registry.",null,null],[14,"register_int_counter","","Create an `IntCounter` and registers to default registry.",null,null],[14,"register_int_counter_vec","","Create an `IntCounterVec` and registers to default registry.",null,null],[14,"register_int_gauge","","Create an `IntGauge` and registers to default registry.",null,null],[14,"register_int_gauge_vec","","Create an `IntGaugeVec` and registers to default registry.",null,null],[3,"Histogram","","A `Metric` counts individual observations from an event or…",null,null],[6,"HistogramVec","","A `Collector` that bundles a set of Histograms that all…",null,null],[6,"IntCounter","","The integer version of `Counter`. Provides better…",null,null],[6,"IntCounterVec","","The integer version of `CounterVec`. Provides better…",null,null],[6,"IntGauge","","The integer version of `Gauge`. Provides better…",null,null],[6,"IntGaugeVec","","The integer version of `GaugeVec`. Provides better…",null,null],[3,"DurationHistogram","","A small wrapper around Histogram to handle the special…",null,null],[3,"OpMetrics","","",null,null],[5,"get_all_metrics","","",null,[[],[["hashmap",["string","string"]],["string"]]]],[5,"dump_all_metrics_to_file_periodically","","",null,[[["str"],["p"],["u64"]]]],[5,"export_counter","","",null,[[["hashmap"],["m"]]]],[5,"get_metric_name","","",null,[[["m"]],["string"]]],[0,"counters","","",null,null],[7,"COUNTER_ADMISSION_CONTROL_CANNOT_SEND_REPLY","libra_metrics::counters","",null,null],[7,"COUNTER_CLIENT_ERRORS","","",null,null],[0,"metric_server","libra_metrics","",null,null],[5,"start_server","libra_metrics::metric_server","",null,[[["u16"],["bool"],["string"]]]],[11,"new","libra_metrics","",0,[[["histogram"]],["durationhistogram"]]],[11,"observe_duration","","",0,[[["self"],["duration"]]]],[11,"new","","",1,[[["into",["string"]],["string"]],["opmetrics"]]],[11,"new_and_registered","","",1,[[["into",["string"]],["string"]],["opmetrics"]]],[11,"gauge","","",1,[[["str"],["self"]],["intgauge"]]],[11,"peer_gauge","","",1,[[["str"],["self"]],["intgauge"]]],[11,"counter","","",1,[[["str"],["self"]],["intcounter"]]],[11,"histogram","","",1,[[["str"],["self"]],["histogram"]]],[11,"duration_histogram","","",1,[[["str"],["self"]],["durationhistogram"]]],[11,"inc","","",1,[[["str"],["self"]]]],[11,"inc_by","","",1,[[["str"],["self"],["usize"]]]],[11,"add","","",1,[[["str"],["self"]]]],[11,"sub","","",1,[[["str"],["self"]]]],[11,"set","","",1,[[["str"],["self"],["usize"]]]],[11,"observe","","",1,[[["str"],["f64"],["self"]]]],[11,"observe_duration","","",1,[[["str"],["self"],["duration"]]]],[11,"timer","","",1,[[["str"],["self"]],["histogramtimer"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",2,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"clone","","",2,[[["self"]],["histogram"]]],[11,"metric","","",2,[[["self"]],["metric"]]],[11,"desc","","",2,[[["self"]],[["desc"],["vec",["desc"]]]]],[11,"collect","","",2,[[["self"]],[["vec",["metricfamily"]],["metricfamily"]]]],[11,"clone","","",1,[[["self"]],["opmetrics"]]],[11,"desc","","",1,[[["self"]],[["vec",["desc"]],["desc"]]]],[11,"collect","","",1,[[["self"]],[["vec",["metricfamily"]],["metricfamily"]]]],[11,"with_opts","","`with_opts` creates a `Histogram` with the `opts` options.",2,[[["histogramopts"]],[["error"],["result",["histogram","error"]],["histogram"]]]],[11,"observe","","Add a single observation to the `Histogram`.",2,[[["f64"],["self"]]]],[11,"start_timer","","Return a `HistogramTimer` to track a duration.",2,[[["self"]],["histogramtimer"]]],[11,"observe_closure_duration","","Observe execution time of a closure, in second.",2,[[["self"],["f"]],["t"]]],[11,"local","","Return a `LocalHistogram` for single thread usage.",2,[[["self"]],["localhistogram"]]],[11,"get_sample_sum","","Return accumulated sum of all samples.",2,[[["self"]],["f64"]]],[11,"get_sample_count","","Return count of all samples.",2,[[["self"]],["u64"]]]],"p":[[3,"DurationHistogram"],[3,"OpMetrics"],[3,"Histogram"]]};
searchIndex["libra_network_address"] = {"doc":"","i":[[3,"RawNetworkAddress","libra_network_address","A `RawNetworkAddress` is the serialized, unverified,…",null,null],[3,"NetworkAddress","","Libra `NetworkAddress` is a compact, efficient,…",null,null],[3,"DnsName","","A minimally parsed DNS name. We don't really do any…",null,null],[3,"EmptyError","","",null,null],[4,"Protocol","","A single protocol in the [`NetworkAddress`] protocol stack.",null,null],[13,"Ip4","","",0,null],[13,"Ip6","","",0,null],[13,"Dns","","",0,null],[13,"Dns4","","",0,null],[13,"Dns6","","",0,null],[13,"Tcp","","",0,null],[13,"Memory","","",0,null],[13,"NoiseIk","","",0,null],[13,"Handshake","","",0,null],[4,"ParseError","","Possible errors when parsing a human-readable…",null,null],[13,"UnknownProtocolType","","",1,null],[13,"UnexpectedEnd","","",1,null],[13,"ParseAddrError","","",1,null],[13,"ParseIntError","","",1,null],[13,"ParseX25519PubkeyError","","",1,null],[13,"EmptyProtocolString","","",1,null],[13,"InvalidProtocolString","","",1,null],[13,"EmptyDnsNameString","","",1,null],[13,"InvalidDnsNameCharacter","","",1,null],[13,"DnsNameTooLong","","",1,null],[11,"new","","",2,[[["vec",["u8"]],["u8"]],["self"]]],[11,"empty","","",2,[[],["self"]]],[11,"len","","",2,[[["self"]],["usize"]]],[11,"is_empty","","",2,[[["self"]],["bool"]]],[11,"as_slice","","",3,[[["self"]]]],[11,"push","","",3,[[["self"],["protocol"]]]],[11,"mock","","",3,[[],["self"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"test_only_hash","","",2,[[["self"]],["hashvalue"]]],[11,"vzip","","",2,[[],["v"]]],[11,"encode_hex","","",2,[[["self"]],["u"]]],[11,"encode_hex_upper","","",2,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"test_only_hash","","",3,[[["self"]],["hashvalue"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"test_only_hash","","",4,[[["self"]],["hashvalue"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"test_only_hash","","",0,[[["self"]],["hashvalue"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"as_ref","","",2,[[["self"]]]],[11,"as_ref","","",4,[[["self"]],["str"]]],[11,"from","","",1,[[["addrparseerror"]],["self"]]],[11,"from","","",1,[[["parseinterror"]],["self"]]],[11,"from","","",1,[[["cryptomaterialerror"]],["self"]]],[11,"from","","",3,[[["protocol"]],["networkaddress"]]],[11,"from","","",3,[[["socketaddr"]],["networkaddress"]]],[11,"from","","",0,[[["ipaddr"]],["protocol"]]],[11,"into","","",2,[[],[["vec",["u8"]],["u8"]]]],[11,"into","","",4,[[],["string"]]],[11,"clone","","",2,[[["self"]],["rawnetworkaddress"]]],[11,"clone","","",3,[[["self"]],["networkaddress"]]],[11,"clone","","",0,[[["self"]],["protocol"]]],[11,"clone","","",4,[[["self"]],["dnsname"]]],[11,"eq","","",2,[[["rawnetworkaddress"],["self"]],["bool"]]],[11,"ne","","",2,[[["rawnetworkaddress"],["self"]],["bool"]]],[11,"eq","","",3,[[["self"],["networkaddress"]],["bool"]]],[11,"ne","","",3,[[["self"],["networkaddress"]],["bool"]]],[11,"eq","","",0,[[["self"],["protocol"]],["bool"]]],[11,"ne","","",0,[[["self"],["protocol"]],["bool"]]],[11,"eq","","",4,[[["self"],["dnsname"]],["bool"]]],[11,"ne","","",4,[[["self"],["dnsname"]],["bool"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"try_from","","",2,[[["networkaddress"]],[["error"],["result",["error"]]]]],[11,"try_from","","",3,[[["vec",["protocol"]],["protocol"]],["result"]]],[11,"try_from","","",3,[[["rawnetworkaddress"]],[["error"],["result",["error"]]]]],[11,"try_from","","",4,[[["string"]],["result"]]],[11,"from_str","","",3,[[["str"]],["result"]]],[11,"from_str","","",4,[[["str"]],["result"]]],[11,"source","","",1,[[["self"]],[["option",["error"]],["error"]]]],[11,"deserialize","","",2,[[["__d"]],["result"]]],[11,"deserialize","","",0,[[["__d"]],["result"]]],[11,"deserialize","","",3,[[["d"]],["result"]]],[11,"deserialize","","",4,[[["d"]],["result"]]],[11,"serialize","","",2,[[["self"],["__s"]],["result"]]],[11,"serialize","","",0,[[["self"],["__s"]],["result"]]],[11,"serialize","","",4,[[["self"],["__s"]],["result"]]],[11,"serialize","","",3,[[["s"],["self"]],["result"]]],[11,"arbitrary_with","","",0,[[]]],[11,"arbitrary_with","","",2,[[]]],[11,"arbitrary_with","","",3,[[]]],[11,"arbitrary_with","","",4,[[]]]],"p":[[4,"Protocol"],[4,"ParseError"],[3,"RawNetworkAddress"],[3,"NetworkAddress"],[3,"DnsName"],[3,"EmptyError"]]};
searchIndex["libra_nibble"] = {"doc":"`Nibble` represents a four-bit unsigned integer.","i":[[3,"Nibble","libra_nibble","",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",0,[[["u8"]],["self"]]],[11,"clone","","",0,[[["self"]],["nibble"]]],[11,"cmp","","",0,[[["nibble"],["self"]],["ordering"]]],[11,"eq","","",0,[[["nibble"],["self"]],["bool"]]],[11,"ne","","",0,[[["nibble"],["self"]],["bool"]]],[11,"partial_cmp","","",0,[[["nibble"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["nibble"],["self"]],["bool"]]],[11,"le","","",0,[[["nibble"],["self"]],["bool"]]],[11,"gt","","",0,[[["nibble"],["self"]],["bool"]]],[11,"ge","","",0,[[["nibble"],["self"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"arbitrary_with","","",0,[[]]],[11,"serialize","","",0,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",0,[[["__d"]],["result"]]]],"p":[[3,"Nibble"]]};
searchIndex["libra_node"] = {"doc":"","i":[[0,"main_node","libra_node","",null,null],[3,"LibraHandle","libra_node::main_node","",null,null],[5,"setup_onchain_discovery","","",null,[[["waypoint"],["roletype"],["networkbuilder"],["peerid"],["handle"],["arc",["dbreader"]],["dbreader"]]]],[5,"setup_network","","",null,[[["waypoint"],["roletype"],["networkconfig"],["arc",["dbreader"]],["dbreader"]]]],[5,"setup_environment","","",null,[[["nodeconfig"]],["librahandle"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"into_request","","",0,[[],["request"]]]],"p":[[3,"LibraHandle"]]};
searchIndex["libra_proptest_helpers"] = {"doc":"","i":[[3,"GrowingSubset","libra_proptest_helpers","A set of elements, each with an associated key, that grows…",null,null],[3,"RepeatVec","","An efficient representation of a vector with repeated…",null,null],[3,"ValueGenerator","","Context for generating single values out of strategies.",null,null],[3,"Index","","Wrapper for `proptest`'s…",null,null],[5,"with_stack_size","","Creates a new thread with a larger stack size.",null,[[["usize"],["f"]],[["box",["any"]],["result",["box"]]]]],[5,"pick_idxs","","Given a maximum value `max` and a list of `Index`…",null,[[["t"],["usize"]],[["vec",["usize"]],["usize"]]]],[5,"pick_slice_idxs","","Given a maximum value `max` and a slice of `Index`…",null,[[["usize"]],[["vec",["usize"]],["usize"]]]],[11,"len","","Returns the number of elements in the current subset.",0,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the current subset contains no elements.",0,[[["self"]],["bool"]]],[11,"total_len","","Returns the total number of elements in the universal set.",0,[[["self"]],["usize"]]],[11,"current","","Returns a slice containing the items in the current subset.",0,[[["self"]]]],[11,"pick_item","","Chooses an (index, value) pair from the current subset…",0,[[["index"],["self"]]]],[11,"pick_value","","Chooses a value from the current subset using the provided…",0,[[["index"],["self"]],["t"]]],[11,"advance_to","","Advances the valid subset to the provided index. After the…",0,[[["self"],["ix"]]]],[11,"new","","Creates a new, empty `RepeatVec`.",1,[[],["self"]]],[11,"with_capacity","","Creates a new, empty `RepeatVec` with the specified…",1,[[["usize"]],["self"]]],[11,"len","","Returns the logical number of elements in this `RepeatVec`.",1,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if this `RepeatVec` has no logical elements.",1,[[["self"]],["bool"]]],[11,"extend","","Extends this `RepeatVec` by logically adding `size` copies…",1,[[["self"],["t"],["usize"]]]],[11,"remove","","Removes the item specified by the given logical index,…",1,[[["self"],["usize"]]]],[11,"remove_all","","Removes the items specified by the given logical indexes,…",1,[[["self"]]]],[11,"get","","Returns the item at location `at`. The return value is a…",1,[[["self"],["usize"]],["option"]]],[11,"pick_uniform_indexes","","Picks out indexes uniformly randomly from this…",1,[[["self"]],[["vec",["usize"]],["usize"]]]],[11,"pick_uniform","","Picks out elements uniformly randomly from this…",1,[[["self"]],["vec"]]],[11,"new","","Creates a new value generator with the default RNG.",2,[[],["self"]]],[11,"deterministic","","Creates a new value generator with a deterministic RNG.",2,[[],["self"]]],[11,"generate","","Generates a single value for this strategy.",2,[[["strategy"],["self"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"as_ref","","",3,[[["self"]],["propindex"]]],[11,"clone","","",0,[[["self"]],["growingsubset"]]],[11,"clone","","",1,[[["self"]],["repeatvec"]]],[11,"clone","","",3,[[["self"]],["index"]]],[11,"default","","",1,[[],["repeatvec"]]],[11,"default","","",2,[[],["valuegenerator"]]],[11,"eq","","",1,[[["self"],["repeatvec"]],["bool"]]],[11,"ne","","",1,[[["self"],["repeatvec"]],["bool"]]],[11,"deref","","",3,[[["self"]],["propindex"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"from_iter","","",0,[[["i"]],["self"]]],[11,"arbitrary_with","","",3,[[]]]],"p":[[3,"GrowingSubset"],[3,"RepeatVec"],[3,"ValueGenerator"],[3,"Index"]]};
searchIndex["libra_prost_ext"] = {"doc":"","i":[[0,"test_helpers","libra_prost_ext","",null,null],[5,"assert_protobuf_encode_decode","libra_prost_ext::test_helpers","Assert that protobuf encoding and decoding roundtrips…",null,[[["t"]]]],[8,"MessageExt","libra_prost_ext","",null,null],[11,"to_bytes","","",0,[[["self"]],[["encodeerror"],["result",["bytes","encodeerror"]],["bytes"]]]],[11,"to_vec","","",0,[[["self"]],[["result",["vec","encodeerror"]],["vec",["u8"]],["encodeerror"]]]]],"p":[[8,"MessageExt"]]};
searchIndex["libra_secure_json_rpc"] = {"doc":"The purpose of the JsonRpcClient presented here is to…","i":[[3,"JsonRpcClient","libra_secure_json_rpc","Provides a lightweight JsonRpcClient implementation.",null,null],[3,"Bytes","","Represents a vector of bytes using hex encoding.",null,null],[12,"0","","",0,null],[4,"Error","","",null,null],[13,"InternalRPCError","","",1,null],[13,"MissingData","","",1,null],[13,"RPCFailure","","",1,null],[13,"SerializationError","","",1,null],[13,"UnknownError","","",1,null],[11,"new","","",2,[[["string"]],["self"]]],[11,"submit_signed_transaction","","Submits a signed transaction to the Libra blockchain via…",2,[[["self"],["signedtransaction"]],[["result",["error"]],["error"]]]],[11,"get_account_state","","Returns the associated AccountState for a specific account…",2,[[["option",["u64"]],["u64"],["self"],["accountaddress"]],[["result",["accountstate","error"]],["accountstate"],["error"]]]],[11,"into_bytes","","",0,[[],[["result",["vec","error"]],["vec",["u8"]],["error"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"test_only_hash","","",0,[[["self"]],["hashvalue"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",1,[[["error"]],["self"]]],[11,"from","","",1,[[["error"]],["self"]]],[11,"from","","",1,[[["error"]],["self"]]],[11,"from","","",1,[[["fromhexerror"]],["self"]]],[11,"from","","",0,[[],["self"]]],[11,"from","","",0,[[["vec"]],["self"]]],[11,"clone","","",2,[[["self"]],["jsonrpcclient"]]],[11,"clone","","",0,[[["self"]],["bytes"]]],[11,"eq","","",1,[[["self"],["error"]],["bool"]]],[11,"ne","","",1,[[["self"],["error"]],["bool"]]],[11,"eq","","",0,[[["bytes"],["self"]],["bool"]]],[11,"ne","","",0,[[["bytes"],["self"]],["bool"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"deserialize","","",0,[[["__d"]],["result"]]],[11,"serialize","","",0,[[["self"],["__s"]],["result"]]]],"p":[[3,"Bytes"],[4,"Error"],[3,"JsonRpcClient"]]};
searchIndex["libra_secure_net"] = {"doc":"This provides a simple networking substrate between a…","i":[[3,"NetworkClient","libra_secure_net","",null,null],[3,"NetworkServer","","",null,null],[4,"Error","","",null,null],[13,"AlreadyShutdown","","",0,null],[13,"DataTooLarge","","",0,null],[13,"NetworkError","","",0,null],[13,"NoActiveStream","","",0,null],[13,"RemoteStreamClosed","","",0,null],[11,"new","","",1,[[["socketaddr"]],["self"]]],[11,"read","","Blocking read until able to successfully read an entire…",1,[[["self"]],[["error"],["result",["vec","error"]],["vec",["u8"]]]]],[11,"shutdown","","Shutdown the internal network stream",1,[[["self"]],[["result",["error"]],["error"]]]],[11,"write","","Blocking write until able to successfully send an entire…",1,[[["self"]],[["result",["error"]],["error"]]]],[11,"new","","",2,[[["socketaddr"]],["self"]]],[11,"read","","If there isn't already a downstream client, it accepts.…",2,[[["self"]],[["error"],["result",["vec","error"]],["vec",["u8"]]]]],[11,"shutdown","","Shutdown the internal network stream",2,[[["self"]],[["result",["error"]],["error"]]]],[11,"write","","If there isn't already a downstream client, it accepts.…",2,[[["self"]],[["result",["error"]],["error"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"source","","",0,[[["self"]],[["option",["error"]],["error"]]]]],"p":[[4,"Error"],[3,"NetworkClient"],[3,"NetworkServer"]]};
searchIndex["libra_secure_push_metrics"] = {"doc":"","i":[[3,"Counter","libra_secure_push_metrics","A Counter is a cumulative metric that represents a single…",null,null],[3,"Gauge","","A Gauge is a metric that represents a single numerical…",null,null],[3,"MetricsPusher","","MetricsPusher provides a function to push a list of…",null,null],[11,"new","","",0,[[["string"]],["self"]]],[11,"inc_by","","",0,[[["i64"],["self"]]]],[11,"inc","","",0,[[["self"]]]],[11,"new","","",1,[[["string"]],["self"]]],[11,"set","","",1,[[["i64"],["self"]]]],[11,"new","","",2,[[["arc",["metrics"]],["metrics"]],["self"]]],[11,"start","","start starts a new thread and periodically pushes the…",2,[[],[["joinhandle"],["option",["joinhandle"]]]]],[8,"Metrics","","",null,null],[10,"get_metrics","","",3,[[["self"]],[["pushmetricformat"],["vec",["pushmetricformat"]]]]],[8,"PushMetricFormat","","PushMetricFormat contains a single function which converts…",null,null],[10,"get_push_metric_format","","",4,[[["self"]],["string"]]],[14,"define_counters","","Defines a list of counters with help messages…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"get_push_metric_format","","",0,[[["self"]],["string"]]],[11,"get_push_metric_format","","",1,[[["self"]],["string"]]]],"p":[[3,"Counter"],[3,"Gauge"],[3,"MetricsPusher"],[8,"Metrics"],[8,"PushMetricFormat"]]};
searchIndex["libra_secure_storage"] = {"doc":"","i":[[3,"PublicKeyResponse","libra_secure_storage","",null,null],[12,"last_update","","Time since Unix Epoch in seconds.",0,null],[12,"public_key","","Ed25519PublicKey stored at the provided key",0,null],[3,"GitHubStorage","","GitHubStorage leverages a GitHub repository to provide a…",null,null],[3,"InMemoryStorageInternal","","",null,null],[3,"GetResponse","","A container for a get response that contains relevant…",null,null],[12,"last_update","","Time since Unix Epoch in seconds.",1,null],[12,"value","","Value stored at the provided key",1,null],[3,"NamespacedStorage","","This provides a light wrapper around KV storages to…",null,null],[3,"OnDiskStorageInternal","","",null,null],[3,"Permission","","Maps an identity to a set of capabilities",null,null],[12,"id","","",2,null],[12,"capabilities","","",2,null],[3,"Policy","","Dictates a set of permissions",null,null],[12,"permissions","","",3,null],[3,"BoxStorage","","This is a hack that allows us to convert from…",null,null],[12,"0","","",4,null],[3,"VaultStorage","","VaultStorage utilizes Vault for maintaining encrypted,…",null,null],[4,"Error","","",null,null],[13,"EntropyError","","",5,null],[13,"InternalError","","",5,null],[13,"KeyAlreadyExists","","",5,null],[13,"KeyNotSet","","",5,null],[13,"PermissionDenied","","",5,null],[13,"SerializationError","","",5,null],[13,"UnexpectedValueType","","",5,null],[13,"KeyVersionNotFound","","",5,null],[4,"Capability","","Represents actions",null,null],[13,"Export","","",6,null],[13,"Read","","",6,null],[13,"Rotate","","",6,null],[13,"Sign","","",6,null],[13,"Write","","",6,null],[4,"Identity","","Id represents a Libra internal identifier for a given…",null,null],[13,"User","","",7,null],[13,"Anyone","","",7,null],[13,"NoOne","","",7,null],[4,"Value","","",null,null],[13,"Ed25519PrivateKey","","",8,null],[13,"Ed25519PublicKey","","",8,null],[13,"HashValue","","",8,null],[13,"String","","",8,null],[13,"Transaction","","",8,null],[13,"U64","","",8,null],[11,"new","","Creates a PublicKeyResponse using the current time for the…",0,[[["ed25519publickey"]],["self"]]],[11,"new","","",9,[[["string"]],["self"]]],[11,"new","","",10,[[],["self"]]],[11,"new_storage","","Public convenience function to return a new…",10,[[],[["box",["storage"]],["storage"]]]],[11,"new_with_time_service","","",10,[[["t"]],["self"]]],[11,"new","","Creates a GetResponse",1,[[["value"],["u64"]],["self"]]],[11,"new","","",11,[[["t"],["string"]],["self"]]],[11,"namespace","","",11,[[["self"]],["str"]]],[11,"new","","",12,[[["pathbuf"]],["self"]]],[11,"new_storage","","Public convenience function to return a new OnDiskStorage…",12,[[["pathbuf"]],[["box",["storage"]],["storage"]]]],[11,"new","","",3,[[["permission"],["vec",["permission"]]],["self"]]],[11,"is_default","","",3,[[["self"]],["bool"]]],[11,"public","","",3,[[],["self"]]],[11,"new","","",2,[[["identity"],["vec",["capability"]],["capability"]],["self"]]],[11,"ed25519_private_key","","",8,[[],[["error"],["ed25519privatekey"],["result",["ed25519privatekey","error"]]]]],[11,"ed25519_public_key","","",8,[[],[["error"],["result",["ed25519publickey","error"]],["ed25519publickey"]]]],[11,"hash_value","","",8,[[],[["result",["hashvalue","error"]],["error"],["hashvalue"]]]],[11,"string","","",8,[[],[["result",["string","error"]],["error"],["string"]]]],[11,"u64","","",8,[[],[["error"],["u64"],["result",["u64","error"]]]]],[11,"transaction","","",8,[[],[["error"],["result",["transaction","error"]],["transaction"]]]],[11,"new","","",13,[[["option",["string"]],["string"]],["self"]]],[11,"namespace","","",13,[[["self"]],[["option",["string"]],["string"]]]],[11,"create_token","","Creates a token but uses the namespace for policies",13,[[["str"],["vec",["str"]],["self"]],[["result",["string","error"]],["error"],["string"]]]],[11,"set_policy","","Create a new policy in Vault, see the explanation for…",13,[[["str"],["self"],["vaultengine"]],[["result",["error"]],["error"]]]],[11,"new_storage","","Public convenience function to return a new Vault based…",13,[[["option",["string"]],["string"]],[["box",["storage"]],["storage"]]]],[11,"set_policies","","",13,[[["str"],["policy"],["self"],["vaultengine"]],[["result",["error"]],["error"]]]],[6,"InMemoryStorage","","InMemoryStorage represents a key value store that is…",null,null],[6,"OnDiskStorage","","OnDiskStorage represents a key value store that is…",null,null],[8,"CryptoKVStorage","","CryptoKVStorage offers a CryptoStorage implementation by…",null,null],[8,"CryptoStorage","","CryptoStorage offers a secure storage engine for…",null,null],[10,"create_key","","Securely generates a new named Ed25519 key pair and…",14,[[["str"],["self"],["policy"]],[["error"],["result",["ed25519publickey","error"]],["ed25519publickey"]]]],[10,"export_private_key","","Returns the private key for a given Ed25519 key pair, as…",14,[[["str"],["self"]],[["error"],["ed25519privatekey"],["result",["ed25519privatekey","error"]]]]],[10,"export_private_key_for_version","","Returns the private key for a given Ed25519 key pair…",14,[[["str"],["self"],["ed25519publickey"]],[["error"],["ed25519privatekey"],["result",["ed25519privatekey","error"]]]]],[10,"get_public_key","","Returns the public key for a given Ed25519 key pair, as…",14,[[["str"],["self"]],[["publickeyresponse"],["result",["publickeyresponse","error"]],["error"]]]],[10,"rotate_key","","Rotates an Ed25519 key pair by generating a new Ed25519…",14,[[["str"],["self"]],[["error"],["result",["ed25519publickey","error"]],["ed25519publickey"]]]],[10,"sign_message","","Signs the given message using the private key associated…",14,[[["str"],["self"],["hashvalue"]],[["error"],["result",["ed25519signature","error"]],["ed25519signature"]]]],[10,"sign_message_using_version","","Signs the given message using the private key associated…",14,[[["str"],["ed25519publickey"],["self"],["hashvalue"]],[["error"],["result",["ed25519signature","error"]],["ed25519signature"]]]],[8,"KVStorage","","A secure key/value storage engine. Create takes a policy…",null,null],[10,"available","","Returns true if the backend service is online and available.",15,[[["self"]],["bool"]]],[10,"get","","Retrieves a value from storage and fails if the backend is…",15,[[["str"],["self"]],[["result",["getresponse","error"]],["error"],["getresponse"]]]],[10,"set","","Sets a value in storage and fails if the backend is…",15,[[["str"],["self"],["value"]],[["result",["error"]],["error"]]]],[8,"Storage","","This is the Libra interface into secure storage. Any…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"test_only_hash","","",0,[[["self"]],["hashvalue"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"clear","","",10,[[["self"]]]],[11,"initialize","","",10,[[]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"test_only_hash","","",1,[[["self"]],["hashvalue"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"test_only_hash","","",2,[[["self"]],["hashvalue"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"test_only_hash","","",3,[[["self"]],["hashvalue"]]],[11,"clear","","",3,[[["self"]]]],[11,"initialize","","",3,[[]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"test_only_hash","","",5,[[["self"]],["hashvalue"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"test_only_hash","","",6,[[["self"]],["hashvalue"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"test_only_hash","","",7,[[["self"]],["hashvalue"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"test_only_hash","","",8,[[["self"]],["hashvalue"]]],[11,"create_key","","",4,[[["str"],["self"],["policy"]],[["error"],["result",["ed25519publickey","error"]],["ed25519publickey"]]]],[11,"export_private_key","","",4,[[["str"],["self"]],[["error"],["ed25519privatekey"],["result",["ed25519privatekey","error"]]]]],[11,"export_private_key_for_version","","",4,[[["str"],["self"],["ed25519publickey"]],[["error"],["ed25519privatekey"],["result",["ed25519privatekey","error"]]]]],[11,"get_public_key","","",4,[[["str"],["self"]],[["publickeyresponse"],["result",["publickeyresponse","error"]],["error"]]]],[11,"rotate_key","","",4,[[["str"],["self"]],[["error"],["result",["ed25519publickey","error"]],["ed25519publickey"]]]],[11,"sign_message","","",4,[[["str"],["self"],["hashvalue"]],[["error"],["result",["ed25519signature","error"]],["ed25519signature"]]]],[11,"sign_message_using_version","","",4,[[["str"],["ed25519publickey"],["self"],["hashvalue"]],[["error"],["result",["ed25519signature","error"]],["ed25519signature"]]]],[11,"create_key","","",13,[[["str"],["self"],["policy"]],[["error"],["result",["ed25519publickey","error"]],["ed25519publickey"]]]],[11,"export_private_key","","",13,[[["str"],["self"]],[["error"],["ed25519privatekey"],["result",["ed25519privatekey","error"]]]]],[11,"export_private_key_for_version","","",13,[[["str"],["self"],["ed25519publickey"]],[["error"],["ed25519privatekey"],["result",["ed25519privatekey","error"]]]]],[11,"get_public_key","","",13,[[["str"],["self"]],[["publickeyresponse"],["result",["publickeyresponse","error"]],["error"]]]],[11,"rotate_key","","",13,[[["str"],["self"]],[["error"],["result",["ed25519publickey","error"]],["ed25519publickey"]]]],[11,"sign_message","","",13,[[["str"],["self"],["hashvalue"]],[["error"],["result",["ed25519signature","error"]],["ed25519signature"]]]],[11,"sign_message_using_version","","",13,[[["str"],["ed25519publickey"],["self"],["hashvalue"]],[["error"],["result",["ed25519signature","error"]],["ed25519signature"]]]],[11,"available","","",9,[[["self"]],["bool"]]],[11,"get","","",9,[[["str"],["self"]],[["result",["getresponse","error"]],["error"],["getresponse"]]]],[11,"set","","",9,[[["str"],["self"],["value"]],[["result",["error"]],["error"]]]],[11,"available","","",10,[[["self"]],["bool"]]],[11,"get","","",10,[[["str"],["self"]],[["result",["getresponse","error"]],["error"],["getresponse"]]]],[11,"set","","",10,[[["str"],["self"],["value"]],[["result",["error"]],["error"]]]],[11,"available","","",11,[[["self"]],["bool"]]],[11,"get","","",11,[[["str"],["self"]],[["result",["getresponse","error"]],["error"],["getresponse"]]]],[11,"set","","",11,[[["str"],["self"],["value"]],[["result",["error"]],["error"]]]],[11,"available","","",12,[[["self"]],["bool"]]],[11,"get","","",12,[[["str"],["self"]],[["result",["getresponse","error"]],["error"],["getresponse"]]]],[11,"set","","",12,[[["str"],["self"],["value"]],[["result",["error"]],["error"]]]],[11,"available","","",4,[[["self"]],["bool"]]],[11,"get","","",4,[[["str"],["self"]],[["result",["getresponse","error"]],["error"],["getresponse"]]]],[11,"set","","",4,[[["str"],["self"],["value"]],[["result",["error"]],["error"]]]],[11,"available","","",13,[[["self"]],["bool"]]],[11,"get","","",13,[[["str"],["self"]],[["result",["getresponse","error"]],["error"],["getresponse"]]]],[11,"set","","",13,[[["str"],["self"],["value"]],[["result",["error"]],["error"]]]],[11,"from","","",5,[[["decodeerror"]],["self"]]],[11,"from","","",5,[[["parseerror"]],["self"]]],[11,"from","","",5,[[["error"]],["self"]]],[11,"from","","",5,[[["error"]],["self"]]],[11,"from","","",5,[[["error"]],["self"]]],[11,"from","","",5,[[["error"]],["self"]]],[11,"from","","",5,[[["error"]],["self"]]],[11,"from","","",5,[[["error"]],["self"]]],[11,"from","","",5,[[["error"]],["self"]]],[11,"default","","",10,[[],["inmemorystorageinternal"]]],[11,"default","","",3,[[],["policy"]]],[11,"eq","","",0,[[["publickeyresponse"],["self"]],["bool"]]],[11,"ne","","",0,[[["publickeyresponse"],["self"]],["bool"]]],[11,"eq","","",5,[[["error"],["self"]],["bool"]]],[11,"ne","","",5,[[["error"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["getresponse"]],["bool"]]],[11,"ne","","",1,[[["self"],["getresponse"]],["bool"]]],[11,"eq","","",3,[[["policy"],["self"]],["bool"]]],[11,"ne","","",3,[[["policy"],["self"]],["bool"]]],[11,"eq","","",2,[[["permission"],["self"]],["bool"]]],[11,"ne","","",2,[[["permission"],["self"]],["bool"]]],[11,"eq","","",7,[[["identity"],["self"]],["bool"]]],[11,"ne","","",7,[[["identity"],["self"]],["bool"]]],[11,"eq","","",6,[[["capability"],["self"]],["bool"]]],[11,"eq","","",8,[[["value"],["self"]],["bool"]]],[11,"ne","","",8,[[["value"],["self"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"serialize","","",0,[[["self"],["__s"]],["result"]]],[11,"serialize","","",5,[[["self"],["__s"]],["result"]]],[11,"serialize","","",1,[[["self"],["__s"]],["result"]]],[11,"serialize","","",3,[[["self"],["__s"]],["result"]]],[11,"serialize","","",2,[[["self"],["__s"]],["result"]]],[11,"serialize","","",7,[[["self"],["__s"]],["result"]]],[11,"serialize","","",6,[[["self"],["__s"]],["result"]]],[11,"serialize","","",8,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",0,[[["__d"]],["result"]]],[11,"deserialize","","",5,[[["__d"]],["result"]]],[11,"deserialize","","",1,[[["__d"]],["result"]]],[11,"deserialize","","",3,[[["__d"]],["result"]]],[11,"deserialize","","",2,[[["__d"]],["result"]]],[11,"deserialize","","",7,[[["__d"]],["result"]]],[11,"deserialize","","",6,[[["__d"]],["result"]]],[11,"deserialize","","",8,[[["__d"]],["result"]]]],"p":[[3,"PublicKeyResponse"],[3,"GetResponse"],[3,"Permission"],[3,"Policy"],[3,"BoxStorage"],[4,"Error"],[4,"Capability"],[4,"Identity"],[4,"Value"],[3,"GitHubStorage"],[3,"InMemoryStorageInternal"],[3,"NamespacedStorage"],[3,"OnDiskStorageInternal"],[3,"VaultStorage"],[8,"CryptoStorage"],[8,"KVStorage"]]};
searchIndex["libra_secure_time"] = {"doc":"","i":[[3,"RealTimeService","libra_secure_time","A real-time TimeService",null,null],[3,"MockTimeService","","A mock-time TimeService",null,null],[8,"TimeService","","A generic service for providing time related operations…",null,null],[10,"now","","Returns the current time since the UNIX_EPOCH in seconds…",0,[[["self"]],["u64"]]],[10,"sleep","","Sleeps the calling thread for (at least) the specified…",0,[[["self"],["u64"]]]],[11,"new","","",1,[[],["self"]]],[11,"new","","",2,[[],["self"]]],[11,"increment","","",2,[[["self"]]]],[11,"increment_by","","",2,[[["self"],["u64"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"now","","",1,[[["self"]],["u64"]]],[11,"sleep","","",1,[[["self"],["u64"]]]],[11,"now","","",2,[[["self"]],["u64"]]],[11,"sleep","","",2,[[["self"],["u64"]]]],[11,"clone","","",2,[[["self"]],["mocktimeservice"]]],[11,"default","","",1,[[],["realtimeservice"]]],[11,"default","","",2,[[],["mocktimeservice"]]]],"p":[[8,"TimeService"],[3,"RealTimeService"],[3,"MockTimeService"]]};
searchIndex["libra_security_logger"] = {"doc":"","i":[[3,"SecurityLog","libra_security_logger","The `SecurityLog` struct is used to log security-sensitive…",null,null],[4,"SecurityEvent","","",null,null],[13,"InvalidTransactionAC","","Admission Control received a transaction with an invalid…",0,null],[13,"InvalidTransactionMP","","Mempool received a transaction with an invalid signature",0,null],[13,"InvalidTransactionConsensus","","Consensus received a transaction with an invalid signature",0,null],[13,"InvalidChunkExecutor","","Executor received an invalid transactions chunk",0,null],[13,"InvalidNetworkEventMP","","Mempool received an invalid network event",0,null],[13,"DuplicateConsensusVote","","Consensus received an invalid vote",0,null],[13,"InvalidConsensusProposal","","Consensus received an invalid proposal",0,null],[13,"InvalidConsensusVote","","Consensus received an invalid vote",0,null],[13,"InvalidConsensusRound","","Consensus received an invalid new round message",0,null],[13,"InvalidSyncInfoMsg","","Consensus received an invalid sync info message",0,null],[13,"InvalidNetworkEventHC","","HealthChecker received an invalid network event",0,null],[13,"InvalidHealthCheckerMsg","","HealthChecker received an invalid message",0,null],[13,"InvalidRetrievedBlock","","A received block is invalid",0,null],[13,"InvalidBlock","","A block being committed or executed is invalid",0,null],[13,"InvalidNetworkPeer","","Network identified an invalid peer",0,null],[13,"InvalidDiscoveryMsg","","Network discovery received an invalid DiscoveryMsg",0,null],[5,"security_log","","Creates a `SecurityLog` struct that can be decorated with…",null,[[["securityevent"]],["securitylog"]]],[11,"data","","Adds additional metadata to the `SecurityLog` struct. The…",1,[[["debug"]],["self"]]],[11,"error","","Adds an application error to the `SecurityLog` struct. The…",1,[[["debug"]],["self"]]],[11,"backtrace","","Adds a backtrace to the `SecurityLog` struct.",1,[[["u8"]],["self"]]],[11,"log","","Prints the `SecurityEvent` struct.",1,[[]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"serialize","","",0,[[["self"],["__s"]],["result"]]],[11,"serialize","","",1,[[["self"],["__s"]],["result"]]]],"p":[[4,"SecurityEvent"],[3,"SecurityLog"]]};
searchIndex["libra_state_view"] = {"doc":"This crate defines `trait StateView`.","i":[[8,"StateView","libra_state_view","`StateView` is a trait that defines a read-only snapshot…",null,null],[10,"get","","Gets the state for a single access path.",0,[[["self"],["accesspath"]],[["result",["option"]],["option",["vec"]]]]],[10,"multi_get","","Gets states for a list of access paths.",0,[[["self"]],[["result",["vec"]],["vec",["option"]]]]],[10,"is_genesis","","VM needs this method to know whether the current state…",0,[[["self"]],["bool"]]]],"p":[[8,"StateView"]]};
searchIndex["libra_swarm"] = {"doc":"","i":[[0,"client","libra_swarm","",null,null],[3,"InteractiveClient","libra_swarm::client","",null,null],[11,"new_with_inherit_io","","",0,[[["u16"],["path"],["waypoint"]],["self"]]],[11,"output","","",0,[[],[["result",["output"]],["output"]]]],[0,"swarm","libra_swarm","",null,null],[3,"LibraNode","libra_swarm::swarm","",null,null],[3,"LibraSwarm","","Struct holding instances and information of Libra Swarm",null,null],[12,"dir","","",1,null],[12,"nodes","","",1,null],[12,"config","","",1,null],[4,"HealthStatus","","",null,null],[13,"Healthy","","",2,null],[13,"Crashed","","",2,null],[13,"RpcFailure","","",2,null],[4,"LibraSwarmDir","","A wrapper that unifies PathBuf and TempPath.",null,null],[13,"Persistent","","",3,null],[13,"Temporary","","",3,null],[4,"SwarmLaunchFailure","","",null,null],[13,"LaunchTimeout","","Timeout while waiting for nodes to start",4,null],[13,"NodeCrash","","Node return status indicates a crash",4,null],[13,"ConnectivityTimeout","","Timeout while waiting for the nodes to report that they're…",4,null],[13,"IoError","","",4,null],[11,"launch","","",5,[[["bool"],["path"],["pathbuf"],["roletype"],["string"]],["result"]]],[11,"validator_peer_id","","",5,[[["self"]],[["option",["accountaddress"]],["accountaddress"]]]],[11,"port","","",5,[[["self"]],["u16"]]],[11,"get_log_contents","","",5,[[["self"]],[["string"],["result",["string"]]]]],[11,"check_connectivity","","",5,[[["i64"],["self"]],["bool"]]],[11,"health_check","","",5,[[["self"]],["healthstatus"]]],[11,"launch_swarm","","",1,[[["option",["string"]],["option",["nodeconfig"]],["bool"],["nodeconfig"],["usize"],["roletype"],["string"]],["self"]]],[11,"configure_swarm","","",1,[[["nodeconfig"],["option",["string"]],["usize"],["roletype"],["option",["nodeconfig"]],["string"]],[["libraswarm"],["result",["libraswarm"]]]]],[11,"launch_attempt","","",1,[[["bool"],["self"],["roletype"]],[["result",["swarmlaunchfailure"]],["swarmlaunchfailure"]]]],[11,"wait_for_all_nodes_to_catchup","","This function first checks the last committed round of all…",1,[[["self"]],["bool"]]],[11,"get_client_port","","A specific public JSON RPC port of a validator or a full…",1,[[["self"],["usize"]],["u16"]]],[11,"get_validators_ids","","Vector with the peer ids of the validators in the swarm.",1,[[["self"]],[["vec",["string"]],["string"]]]],[11,"get_validators_debug_ports","","Vector with the debug ports of all the validators in the…",1,[[["self"]],[["u16"],["vec",["u16"]]]]],[11,"get_validator","","",1,[[["self"],["usize"]],[["libranode"],["option",["libranode"]]]]],[11,"kill_node","","",1,[[["self"],["usize"]]]],[11,"add_node","","",1,[[["usize"],["roletype"],["self"],["bool"]],[["result",["swarmlaunchfailure"]],["swarmlaunchfailure"]]]],[11,"from","libra_swarm::client","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"into_request","","",0,[[],["request"]]],[11,"from","libra_swarm::swarm","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"into_request","","",5,[[],["request"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"into_request","","",1,[[],["request"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"into_request","","",2,[[],["request"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"into_request","","",3,[[],["request"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"into_request","","",4,[[],["request"]]],[11,"drop","libra_swarm::client","",0,[[["self"]]]],[11,"drop","libra_swarm::swarm","",5,[[["self"]]]],[11,"drop","","",1,[[["self"]]]],[11,"as_ref","","",3,[[["self"]],["path"]]],[11,"from","","",4,[[["error"]],["self"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"source","","",4,[[["self"]],[["option",["error"]],["error"]]]]],"p":[[3,"InteractiveClient"],[3,"LibraSwarm"],[4,"HealthStatus"],[4,"LibraSwarmDir"],[4,"SwarmLaunchFailure"],[3,"LibraNode"]]};
searchIndex["libra_temppath"] = {"doc":"","i":[[3,"TempPath","libra_temppath","A simple wrapper for creating a temporary directory that…",null,null],[11,"new","","Create new, uninitialized temporary path in the system…",0,[[],["self"]]],[11,"new_with_temp_dir","","Create new, uninitialized temporary path in the specified…",0,[[["pathbuf"]],["self"]]],[11,"path","","Return the underlying path to this temporary directory.",0,[[["self"]],["path"]]],[11,"persist","","Keep the temp path",0,[[["self"]]]],[11,"create_as_file","","",0,[[["self"]],["result"]]],[11,"create_as_dir","","",0,[[["self"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"drop","","",0,[[["self"]]]],[11,"as_ref","","",0,[[["self"]],["path"]]],[11,"default","","",0,[[],["self"]]],[11,"eq","","",0,[[["temppath"],["self"]],["bool"]]],[11,"ne","","",0,[[["temppath"],["self"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[3,"TempPath"]]};
searchIndex["libra_transaction_scripts"] = {"doc":"This crates includes the compiled transactions scripts to…","i":[[7,"ADD_VALIDATOR_TXN","libra_transaction_scripts","",null,null],[7,"PEER_TO_PEER_TXN","","",null,null],[7,"PEER_TO_PEER_WITH_METADATA_TXN","","",null,null],[7,"CREATE_ACCOUNT_TXN","","",null,null],[7,"REGISTER_VALIDATOR_TXN","","",null,null],[7,"REMOVE_VALIDATOR_TXN","","",null,null],[7,"ROTATE_CONSENSUS_PUBKEY_TXN","","",null,null],[7,"ROTATE_AUTHENTICATION_KEY_TXN","","",null,null],[7,"MINT_TXN","","",null,null],[7,"EMPTY_TXN","","",null,null]],"p":[]};
searchIndex["libra_types"] = {"doc":"","i":[[3,"PeerId","libra_types","A struct that represents an account address.",null,null],[0,"access_path","","Suppose we have the following data structure in a smart…",null,null],[3,"AccessPath","libra_types::access_path","",null,null],[12,"address","","",0,null],[12,"path","","",0,null],[18,"CODE_TAG","","",0,null],[18,"RESOURCE_TAG","","",0,null],[11,"new","","",0,[[["accountaddress"],["vec",["u8"]],["u8"]],["self"]]],[11,"new_for_account","","Given an address, returns the corresponding access path…",0,[[["accountaddress"]],["self"]]],[11,"new_for_sent_event","","Create an AccessPath to the event for the sender account…",0,[[["accountaddress"]],["self"]]],[11,"new_for_received_event","","Create an AccessPath to the event for the target account…",0,[[["accountaddress"]],["self"]]],[11,"resource_access_vec","","",0,[[["structtag"]],[["vec",["u8"]],["u8"]]]],[11,"resource_access_path","","Convert Accesses into a byte offset which would be used by…",0,[[["resourcekey"]],["accesspath"]]],[11,"code_access_path","","",0,[[["moduleid"]],["accesspath"]]],[0,"account_address","libra_types","",null,null],[3,"AccountAddress","libra_types::account_address","A struct that represents an account address.",null,null],[5,"from_public_key","","",null,[[["ed25519publickey"]],["accountaddress"]]],[0,"account_config","libra_types","",null,null],[0,"constants","libra_types::account_config","",null,null],[0,"account","libra_types::account_config::constants","",null,null],[5,"account_balance_struct_name","libra_types::account_config::constants::account","",null,[[],["identstr"]]],[5,"sent_event_name","","",null,[[],["identstr"]]],[5,"received_event_name","","",null,[[],["identstr"]]],[5,"account_struct_tag","","",null,[[],["structtag"]]],[5,"sent_payment_tag","","",null,[[],["structtag"]]],[5,"received_payment_tag","","",null,[[],["structtag"]]],[7,"ACCOUNT_MODULE","","The ModuleId for the Account module.",null,null],[17,"ACCOUNT_MODULE_NAME","","",null,null],[0,"account_limits","libra_types::account_config::constants","",null,null],[5,"account_limits_module_name","libra_types::account_config::constants::account_limits","",null,[[],["identstr"]]],[5,"account_limits_window_struct_name","","",null,[[],["identstr"]]],[7,"ACCOUNT_LIMITS_MODULE","","",null,null],[7,"ACCOUNT_LIMITS_WINDOW_STRUCT_NAME","","",null,null],[0,"account_type","libra_types::account_config::constants","",null,null],[5,"account_type_module_name","libra_types::account_config::constants::account_type","",null,[[],["identstr"]]],[5,"account_type_struct_name","","",null,[[],["identstr"]]],[5,"vasp_type_module_name","","",null,[[],["identstr"]]],[5,"root_vasp_type_struct_name","","",null,[[],["identstr"]]],[5,"empty_account_type_module_name","","",null,[[],["identstr"]]],[5,"empty_account_type_struct_name","","",null,[[],["identstr"]]],[5,"unhosted_type_module_name","","",null,[[],["identstr"]]],[5,"unhosted_type_struct_name","","",null,[[],["identstr"]]],[5,"empty_account_type_struct_tag","","",null,[[],["structtag"]]],[5,"vasp_account_type_struct_tag","","",null,[[],["structtag"]]],[5,"unhosted_account_type_struct_tag","","",null,[[],["structtag"]]],[7,"ACCOUNT_TYPE_MODULE","","",null,null],[7,"ACCOUNT_TYPE_STRUCT_NAME","","",null,null],[7,"VASP_TYPE_MODULE","","",null,null],[7,"ROOT_VASP_STRUCT_NAME","","",null,null],[7,"EMPTY_ACCOUNT_TYPE_MODULE","","",null,null],[7,"EMPTY_ACCOUNT_STRUCT_NAME","","",null,null],[7,"UNHOSTED_TYPE_MODULE","","",null,null],[7,"UNHOSTED_STRUCT_NAME","","",null,null],[0,"addresses","libra_types::account_config::constants","",null,null],[17,"CORE_CODE_ADDRESS","libra_types::account_config::constants::addresses","",null,null],[5,"association_address","","",null,[[],["accountaddress"]]],[5,"transaction_fee_address","","",null,[[],["accountaddress"]]],[5,"validator_set_address","","",null,[[],["accountaddress"]]],[5,"burn_account_address","","",null,[[],["accountaddress"]]],[0,"debug","libra_types::account_config::constants","",null,null],[7,"GENESIS_MODULE","libra_types::account_config::constants::debug","",null,null],[7,"DEBUG_MODULE_NAME","","",null,null],[7,"DEBUG_MODULE","","",null,null],[0,"event","libra_types::account_config::constants","",null,null],[5,"event_module_name","libra_types::account_config::constants::event","",null,[[],["identstr"]]],[5,"event_handle_generator_struct_name","","",null,[[],["identstr"]]],[5,"event_handle_struct_name","","",null,[[],["identstr"]]],[5,"event_handle_generator_struct_tag","","",null,[[],["structtag"]]],[7,"EVENT_MODULE","","",null,null],[0,"lbr","libra_types::account_config::constants","",null,null],[5,"lbr_type_tag","libra_types::account_config::constants::lbr","",null,[[],["typetag"]]],[7,"LBR_MODULE","","",null,null],[7,"LBR_STRUCT_NAME","","",null,null],[17,"LBR_NAME","","",null,null],[0,"libra","libra_types::account_config::constants","",null,null],[5,"coin_module_name","libra_types::account_config::constants::libra","",null,[[],["identstr"]]],[5,"coin_struct_name","","",null,[[],["identstr"]]],[5,"type_tag_for_currency_code","","",null,[[["identifier"]],["typetag"]]],[5,"from_currency_code_string","","",null,[[["str"]],[["result",["identifier"]],["identifier"]]]],[7,"COIN_MODULE","","",null,null],[17,"LIBRA_MODULE_NAME","","",null,null],[0,"events","libra_types::account_config","",null,null],[0,"burn","libra_types::account_config::events","",null,null],[3,"BurnEvent","libra_types::account_config::events::burn","Struct that represents a BurnEvent.",null,null],[11,"amount","","Get the amount burned",1,[[["self"]],["u64"]]],[11,"currency_code","","Return the code for the currency that was burned",1,[[["self"]],["identstr"]]],[11,"preburn_address","","Return the address whose Preburn resource formerly held…",1,[[["self"]],["accountaddress"]]],[11,"try_from_bytes","","",1,[[],["result"]]],[0,"cancel_burn","libra_types::account_config::events","",null,null],[3,"CancelBurnEvent","libra_types::account_config::events::cancel_burn","Struct that represents a CancelBurnEvent.",null,null],[11,"amount","","Get the amount canceled",2,[[["self"]],["u64"]]],[11,"currency_code","","Return the code for the currency that was returned",2,[[["self"]],["identstr"]]],[11,"preburn_address","","Return the address whose Preburn resource formerly held…",2,[[["self"]],["accountaddress"]]],[11,"try_from_bytes","","",2,[[],["result"]]],[0,"mint","libra_types::account_config::events","",null,null],[3,"MintEvent","libra_types::account_config::events::mint","Struct that represents a MintEvent.",null,null],[11,"amount","","Get the amount minted",3,[[["self"]],["u64"]]],[11,"currency_code","","Return the code for the currency that was minted",3,[[["self"]],["identstr"]]],[11,"try_from_bytes","","",3,[[],["result"]]],[0,"preburn","libra_types::account_config::events","",null,null],[3,"PreburnEvent","libra_types::account_config::events::preburn","Struct that represents a PreburnEvent.",null,null],[11,"amount","","Get the amount preburned",4,[[["self"]],["u64"]]],[11,"currency_code","","Return the code for the currency that was preburned",4,[[["self"]],["identstr"]]],[11,"preburn_address","","Return the address whose Preburn now holds the funds",4,[[["self"]],["accountaddress"]]],[11,"try_from_bytes","","",4,[[],["result"]]],[0,"received_payment","libra_types::account_config::events","",null,null],[3,"ReceivedPaymentEvent","libra_types::account_config::events::received_payment","Struct that represents a ReceivedPaymentEvent.",null,null],[7,"ACCOUNT_RECEIVED_EVENT_PATH","","Returns the path to the received event counter for an…",null,null],[11,"new","","",5,[[["u8"],["identifier"],["accountaddress"],["u64"],["vec",["u8"]]],["self"]]],[11,"try_from_bytes","","",5,[[],["result"]]],[11,"sender","","Get the receiver of this transaction event.",5,[[["self"]],["accountaddress"]]],[11,"amount","","Get the amount sent or received",5,[[["self"]],["u64"]]],[11,"metadata","","Get the metadata associated with this event",5,[[["self"]],["vec"]]],[11,"currency_code","","Return the currency code that the payment was made in.",5,[[["self"]],["identstr"]]],[0,"sent_payment","libra_types::account_config::events","",null,null],[3,"SentPaymentEvent","libra_types::account_config::events::sent_payment","Struct that represents a SentPaymentEvent.",null,null],[7,"ACCOUNT_SENT_EVENT_PATH","","The path to the sent event counter for an Account…",null,null],[11,"new","","",6,[[["u8"],["identifier"],["accountaddress"],["u64"],["vec",["u8"]]],["self"]]],[11,"try_from_bytes","","",6,[[],["result"]]],[11,"receiver","","Get the sender of this transaction event.",6,[[["self"]],["accountaddress"]]],[11,"amount","","Get the amount sent or received",6,[[["self"]],["u64"]]],[11,"metadata","","Get the metadata associated with this event",6,[[["self"]],["vec"]]],[11,"currency_code","","Return the currency currency_code symbol that the payment…",6,[[["self"]],["identstr"]]],[0,"resources","libra_types::account_config","",null,null],[0,"account","libra_types::account_config::resources","",null,null],[3,"AccountResource","libra_types::account_config::resources::account","A Rust representation of an Account resource. This is not…",null,null],[11,"new","","Constructs an Account resource.",7,[[["vec",["u8"]],["bool"],["eventhandle"],["identifier"],["u64"],["u8"]],["self"]]],[11,"sequence_number","","Return the sequence_number field for the given…",7,[[["self"]],["u64"]]],[11,"authentication_key","","Return the authentication_key field for the given…",7,[[["self"]]]],[11,"sent_events","","Return the sent_events handle for the given AccountResource",7,[[["self"]],["eventhandle"]]],[11,"received_events","","Return the received_events handle for the given…",7,[[["self"]],["eventhandle"]]],[11,"delegated_key_rotation_capability","","Return the delegated_key_rotation_capability field for the…",7,[[["self"]],["bool"]]],[11,"delegated_withdrawal_capability","","Return the delegated_withdrawal_capability field for the…",7,[[["self"]],["bool"]]],[11,"is_frozen","","Return the the is_frozen flag for the given AccountResource",7,[[["self"]],["bool"]]],[11,"balance_currency_code","","Return the currency code for the currency held by this…",7,[[["self"]],["identstr"]]],[0,"association_capability","libra_types::account_config::resources","",null,null],[3,"AssociationCapabilityResource","libra_types::account_config::resources::association_capability","",null,null],[11,"is_certified","","",8,[[["self"]],["bool"]]],[0,"balance","libra_types::account_config::resources","",null,null],[3,"BalanceResource","libra_types::account_config::resources::balance","The balance resource held under an account.",null,null],[11,"new","","",9,[[["u64"]],["self"]]],[11,"coin","","",9,[[["self"]],["u64"]]],[11,"struct_tag_for_currency","","",9,[[["typetag"]],["structtag"]]],[11,"access_path_for","","",9,[[["typetag"]],[["vec",["u8"]],["u8"]]]],[0,"currency_info","libra_types::account_config::resources","",null,null],[3,"CurrencyInfoResource","libra_types::account_config::resources::currency_info","Struct that represents a CurrencyInfo resource",null,null],[11,"currency_code","","",10,[[["self"]],["identstr"]]],[11,"scaling_factor","","",10,[[["self"]],["u64"]]],[11,"fractional_part","","",10,[[["self"]],["u64"]]],[11,"convert_to_lbr","","",10,[[["self"],["u64"]],["u64"]]],[11,"struct_tag_for","","",10,[[["identifier"]],["structtag"]]],[11,"resource_path_for","","",10,[[["identifier"]],["accesspath"]]],[11,"access_path_for","","",10,[[["identifier"]],[["vec",["u8"]],["u8"]]]],[11,"try_from_bytes","","",10,[[],["result"]]],[0,"account_state","libra_types","",null,null],[3,"AccountState","libra_types::account_state","",null,null],[11,"get_account_address","","",11,[[["self"]],[["result",["option"]],["option",["accountaddress"]]]]],[11,"get_account_resource","","",11,[[["self"]],[["option",["accountresource"]],["result",["option"]]]]],[11,"get_balance_resources","","",11,[[["self"]],[["vec",["balanceresource"]],["result",["vec"]]]]],[11,"get_configuration_resource","","",11,[[["self"]],[["result",["option"]],["option",["configurationresource"]]]]],[11,"get_libra_timestamp_resource","","",11,[[["self"]],[["result",["option"]],["option",["libratimestampresource"]]]]],[11,"get_validator_config_resource","","",11,[[["self"]],[["result",["option"]],["option",["validatorconfigresource"]]]]],[11,"get_currency_info_resource","","",11,[[["self"],["identifier"]],[["result",["option"]],["option",["balanceresource"]]]]],[11,"get_validator_set","","",11,[[["self"]],[["result",["option"]],["option",["validatorset"]]]]],[11,"get_libra_block_resource","","",11,[[["self"]],[["option",["librablockresource"]],["result",["option"]]]]],[11,"get_event_handle_by_query_path","","",11,[[["self"]],[["option",["eventhandle"]],["result",["option"]]]]],[11,"get","","",11,[[["self"]],[["option",["vec"]],["vec"]]]],[11,"get_resource","","",11,[[["self"]],[["result",["option"]],["option"]]]],[11,"insert","","",11,[[["self"],["vec",["u8"]],["u8"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"remove","","",11,[[["self"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"is_empty","","",11,[[["self"]],["bool"]]],[11,"iter","","",11,[[["self"]]]],[0,"account_state_blob","libra_types","",null,null],[3,"AccountStateBlob","libra_types::account_state_blob","",null,null],[3,"AccountStateBlobHasher","","",null,null],[3,"AccountStateWithProof","","",null,null],[12,"version","","The transaction version at which this account state is seen.",12,null],[12,"blob","","Blob value representing the account state. If this field…",12,null],[12,"proof","","The proof the client can use to authenticate the value.",12,null],[11,"new","","Constructor.",12,[[["option",["accountstateblob"]],["version"],["accountstateblob"],["accountstateproof"]],["self"]]],[11,"verify","","Verifies the the account state blob with the proof, both…",12,[[["ledgerinfo"],["version"],["self"],["accountaddress"]],["result"]]],[11,"get_event_key_and_count_by_query_path","","Returns the `EventKey` (if existent) and number of total…",12,[[["self"]],["result"]]],[0,"block_info","libra_types","",null,null],[3,"BlockInfo","libra_types::block_info","This structure contains all the information needed for…",null,null],[6,"Round","","The round of a block is a consensus-internal counter,…",null,null],[17,"GENESIS_EPOCH","","",null,null],[17,"GENESIS_ROUND","","",null,null],[17,"GENESIS_VERSION","","",null,null],[17,"GENESIS_TIMESTAMP_USECS","","",null,null],[11,"new","","",13,[[["option",["epochinfo"]],["hashvalue"],["epochinfo"],["version"],["u64"],["round"]],["self"]]],[11,"empty","","",13,[[],["self"]]],[11,"random","","",13,[[["round"]],["self"]]],[11,"genesis","","Create a new genesis block. The genesis block is…",13,[[["validatorset"],["hashvalue"]],["self"]]],[11,"mock_genesis","","Create a mock genesis `BlockInfo` with an empty state tree…",13,[[["validatorset"],["option",["validatorset"]]],["self"]]],[11,"next_block_epoch","","The epoch after this block committed",13,[[["self"]],["u64"]]],[11,"epoch","","",13,[[["self"]],["u64"]]],[11,"executed_state_id","","",13,[[["self"]],["hashvalue"]]],[11,"has_reconfiguration","","",13,[[["self"]],["bool"]]],[11,"id","","",13,[[["self"]],["hashvalue"]]],[11,"next_epoch_info","","",13,[[["self"]],[["option",["epochinfo"]],["epochinfo"]]]],[11,"round","","",13,[[["self"]],["round"]]],[11,"timestamp_usecs","","",13,[[["self"]],["u64"]]],[11,"version","","",13,[[["self"]],["version"]]],[0,"block_metadata","libra_types","",null,null],[3,"BlockMetadata","libra_types::block_metadata","Struct that will be persisted on chain to store the…",null,null],[3,"LibraBlockResource","","",null,null],[3,"NewBlockEvent","","",null,null],[5,"new_block_event_key","","",null,[[],["eventkey"]]],[7,"NEW_BLOCK_EVENT_PATH","","The path to the new block event handle under a…",null,null],[11,"new","","",14,[[["vec",["accountaddress"]],["hashvalue"],["accountaddress"],["u64"]],["self"]]],[11,"id","","",14,[[["self"]],["hashvalue"]]],[11,"into_inner","","",14,[[],["result"]]],[11,"proposer","","",14,[[["self"]],["accountaddress"]]],[11,"voters","","",14,[[["self"]],[["vec",["accountaddress"]],["accountaddress"]]]],[11,"new_block_events","","",15,[[["self"]],["eventhandle"]]],[11,"new","","",16,[[["vec",["accountaddress"]],["accountaddress"],["u64"]],["self"]]],[11,"round","","",16,[[["self"]],["u64"]]],[11,"proposer","","",16,[[["self"]],["accountaddress"]]],[11,"votes","","",16,[[["self"]],[["vec",["accountaddress"]],["accountaddress"]]]],[0,"contract_event","libra_types","",null,null],[3,"ContractEventHasher","libra_types::contract_event","",null,null],[3,"ContractEventV0","","Entry produced via a call to the `emit_event` builtin.",null,null],[3,"ContractEventV0Hasher","","",null,null],[3,"EventWithProof","","",null,null],[12,"transaction_version","","",17,null],[12,"event_index","","",17,null],[12,"event","","",17,null],[12,"proof","","",17,null],[4,"ContractEvent","","Support versioning of the data structure.",null,null],[13,"V0","","",18,null],[11,"new","","",18,[[["vec",["u8"]],["u8"],["eventkey"],["u64"],["typetag"]],["self"]]],[11,"new","","",19,[[["vec",["u8"]],["u8"],["eventkey"],["u64"],["typetag"]],["self"]]],[11,"key","","",19,[[["self"]],["eventkey"]]],[11,"sequence_number","","",19,[[["self"]],["u64"]]],[11,"event_data","","",19,[[["self"]]]],[11,"type_tag","","",19,[[["self"]],["typetag"]]],[11,"new","","Constructor.",17,[[["contractevent"],["eventproof"],["version"],["u64"]],["self"]]],[11,"verify","","Verifies the event with the proof, both carried by `self`.",17,[[["ledgerinfo"],["u64"],["version"],["self"],["eventkey"]],["result"]]],[0,"epoch_change","libra_types","",null,null],[3,"EpochChangeProof","libra_types::epoch_change","A vector of LedgerInfo with contiguous increasing epoch…",null,null],[12,"ledger_info_with_sigs","","",20,null],[12,"more","","",20,null],[8,"Verifier","","The verification of the epoch change proof starts with…",null,null],[10,"verify","","Verify if the ledger_info is trust worthy.",21,[[["self"],["ledgerinfowithsignatures"]],["result"]]],[10,"epoch_change_verification_required","","Returns true in case the given epoch is larger than the…",21,[[["self"],["u64"]],["bool"]]],[10,"is_ledger_info_stale","","Returns true if the given [`LedgerInfo`] is stale and…",21,[[["ledgerinfo"],["self"]],["bool"]]],[11,"new","","",20,[[["vec",["ledgerinfowithsignatures"]],["ledgerinfowithsignatures"],["bool"]],["self"]]],[11,"epoch","","The first/lowest epoch of the proof to indicate which…",20,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"verify","","Verify the proof is correctly chained with known epoch and…",20,[[["verifier"],["self"]],[["ledgerinfowithsignatures"],["result",["ledgerinfowithsignatures"]]]]],[0,"epoch_info","libra_types","",null,null],[3,"EpochInfo","libra_types::epoch_info","EpochInfo represents a trusted validator set to validate…",null,null],[12,"epoch","","",22,null],[12,"verifier","","",22,null],[11,"empty","","",22,[[],["self"]]],[0,"event","libra_types","",null,null],[3,"EventKey","libra_types::event","A struct that represents a globally unique id for an Event…",null,null],[3,"EventHandle","","A Rust representation of an Event Handle Resource.",null,null],[11,"new","","Construct a new EventKey from a byte array slice.",23,[[],["self"]]],[18,"LENGTH","","The number of bytes in an EventKey.",23,null],[11,"as_bytes","","Get the byte representation of the event key.",23,[[["self"]]]],[11,"to_vec","","Convert event key into a byte array.",23,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"get_creator_address","","Get the account address part in this event key",23,[[["self"]],["accountaddress"]]],[11,"random","","Create a random event key for testing",23,[[],["self"]]],[11,"new_from_address","","Create a unique handle by using an AccountAddress and a…",23,[[["accountaddress"],["u64"]],["self"]]],[11,"new","","Constructs a new Event Handle",24,[[["eventkey"],["u64"]],["self"]]],[11,"key","","Return the key to where this event is stored in EventStore.",24,[[["self"]],["eventkey"]]],[11,"count","","Return the counter for the handle",24,[[["self"]],["u64"]]],[11,"count_mut","","",24,[[["self"]],["u64"]]],[11,"random_handle","","Create a random event handle for testing",24,[[["u64"]],["self"]]],[11,"new_from_address","","Derive a unique handle by using an AccountAddress and a…",24,[[["accountaddress"],["u64"]],["self"]]],[0,"get_with_proof","libra_types","",null,null],[3,"UpdateToLatestLedgerRequest","libra_types::get_with_proof","",null,null],[12,"client_known_version","","",25,null],[12,"requested_items","","",25,null],[3,"UpdateToLatestLedgerResponse","","",null,null],[12,"response_items","","",26,null],[12,"ledger_info_with_sigs","","",26,null],[12,"epoch_change_proof","","",26,null],[12,"ledger_consistency_proof","","",26,null],[4,"RequestItem","","",null,null],[13,"GetAccountTransactionBySequenceNumber","","",27,null],[12,"account","libra_types::get_with_proof::RequestItem","",28,null],[12,"sequence_number","","",28,null],[12,"fetch_events","","",28,null],[13,"GetAccountState","libra_types::get_with_proof","",27,null],[12,"address","libra_types::get_with_proof::RequestItem","",29,null],[13,"GetEventsByEventAccessPath","libra_types::get_with_proof","",27,null],[12,"access_path","libra_types::get_with_proof::RequestItem","",30,null],[12,"start_event_seq_num","","",30,null],[12,"ascending","","",30,null],[12,"limit","","",30,null],[13,"GetTransactions","libra_types::get_with_proof","",27,null],[12,"start_version","libra_types::get_with_proof::RequestItem","",31,null],[12,"limit","","",31,null],[12,"fetch_events","","",31,null],[4,"ResponseItem","libra_types::get_with_proof","",null,null],[13,"GetAccountTransactionBySequenceNumber","","",32,null],[12,"transaction_with_proof","libra_types::get_with_proof::ResponseItem","",33,null],[12,"proof_of_current_sequence_number","","",33,null],[13,"GetAccountState","libra_types::get_with_proof","",32,null],[12,"account_state_with_proof","libra_types::get_with_proof::ResponseItem","",34,null],[13,"GetEventsByEventAccessPath","libra_types::get_with_proof","",32,null],[12,"events_with_proof","libra_types::get_with_proof::ResponseItem","",35,null],[12,"proof_of_latest_event","","",35,null],[13,"GetTransactions","libra_types::get_with_proof","",32,null],[12,"txn_list_with_proof","libra_types::get_with_proof::ResponseItem","",36,null],[5,"verify_update_to_latest_ledger_response","libra_types::get_with_proof","Verifies content of an [`UpdateToLatestLedgerResponse`]…",null,[[["ledgerinfowithsignatures"],["trustedstate"],["u64"],["epochchangeproof"]],[["result",["trustedstatechange"]],["trustedstatechange"]]]],[11,"new","","",25,[[["requestitem"],["vec",["requestitem"]],["u64"]],["self"]]],[11,"new","","Constructor.",26,[[["epochchangeproof"],["accumulatorconsistencyproof"],["ledgerinfowithsignatures"],["vec",["responseitem"]],["responseitem"]],["self"]]],[11,"verify","","Verifies that the response has items corresponding to…",26,[[["trustedstate"],["self"],["updatetolatestledgerrequest"]],[["result",["trustedstatechange"]],["trustedstatechange"]]]],[11,"into_get_account_state_response","","",32,[[],[["accountstatewithproof"],["result",["accountstatewithproof"]]]]],[11,"into_get_account_txn_by_seq_num_response","","",32,[[],["result"]]],[11,"into_get_events_by_access_path_response","","",32,[[],["result"]]],[11,"into_get_transactions_response","","",32,[[],[["transactionlistwithproof"],["result",["transactionlistwithproof"]]]]],[0,"ledger_info","libra_types","",null,null],[3,"LedgerInfo","libra_types::ledger_info","This structure serves a dual purpose.",null,null],[3,"LedgerInfoHasher","","",null,null],[3,"LedgerInfoWithV0","","The validator node returns this structure which includes…",null,null],[4,"LedgerInfoWithSignatures","","Wrapper around LedgerInfoWithScheme to support future…",null,null],[13,"V0","","",37,null],[11,"new","","Constructs a `LedgerInfo` object based on the given commit…",38,[[["blockinfo"],["hashvalue"]],["self"]]],[11,"genesis","","Create a new LedgerInfo at genesis with the given genesis…",38,[[["validatorset"],["hashvalue"]],["self"]]],[11,"mock_genesis","","",38,[[["validatorset"],["option",["validatorset"]]],["self"]]],[11,"commit_info","","The `BlockInfo` of a committed block.",38,[[["self"]],["blockinfo"]]],[11,"epoch","","A series of wrapper functions for the data stored in the…",38,[[["self"]],["u64"]]],[11,"next_block_epoch","","",38,[[["self"]],["u64"]]],[11,"round","","",38,[[["self"]],["round"]]],[11,"consensus_block_id","","",38,[[["self"]],["hashvalue"]]],[11,"transaction_accumulator_hash","","",38,[[["self"]],["hashvalue"]]],[11,"version","","",38,[[["self"]],["version"]]],[11,"timestamp_usecs","","",38,[[["self"]],["u64"]]],[11,"next_epoch_info","","",38,[[["self"]],[["option",["epochinfo"]],["epochinfo"]]]],[11,"consensus_data_hash","","Returns hash of consensus voting data in this `LedgerInfo`.",38,[[["self"]],["hashvalue"]]],[11,"set_consensus_data_hash","","",38,[[["self"],["hashvalue"]]]],[11,"new","","",37,[[["ledgerinfo"],["ed25519signature"],["btreemap",["accountaddress","ed25519signature"]],["accountaddress"]],["self"]]],[11,"genesis","","",37,[[["validatorset"],["hashvalue"]],["self"]]],[11,"new","","",39,[[["ledgerinfo"],["ed25519signature"],["btreemap",["accountaddress","ed25519signature"]],["accountaddress"]],["self"]]],[11,"genesis","","Create a new `LedgerInfoWithEd25519` at genesis with the…",39,[[["validatorset"],["hashvalue"]],["self"]]],[11,"ledger_info","","",39,[[["self"]],["ledgerinfo"]]],[11,"add_signature","","",39,[[["self"],["accountaddress"],["ed25519signature"]]]],[11,"remove_signature","","",39,[[["self"],["accountaddress"]]]],[11,"signatures","","",39,[[["self"]],["btreemap"]]],[11,"verify_signatures","","",39,[[["validatorverifier"],["self"]],[["result",["verifyerror"]],["verifyerror"]]]],[0,"libra_timestamp","libra_types","",null,null],[3,"LibraTimestampResource","libra_types::libra_timestamp","",null,null],[12,"libra_timestamp","","",40,null],[3,"LibraTimestamp","","",null,null],[12,"microseconds","","",41,null],[0,"mempool_status","libra_types","",null,null],[3,"MempoolStatus","libra_types::mempool_status","A `MempoolStatus` is represented as a required status code…",null,null],[12,"code","","insertion status code",42,null],[12,"message","","optional message",42,null],[4,"MempoolStatusCode","","",null,null],[13,"Accepted","","",43,null],[13,"InvalidSeqNumber","","",43,null],[13,"MempoolIsFull","","",43,null],[13,"TooManyTransactions","","",43,null],[13,"InvalidUpdate","","",43,null],[13,"VmError","","",43,null],[13,"UnknownStatus","","",43,null],[11,"new","","",42,[[["mempoolstatuscode"]],["self"]]],[11,"with_message","","Adds a message to the Mempool status.",42,[[["string"]],["self"]]],[0,"move_resource","libra_types","",null,null],[8,"MoveStorage","libra_types::move_resource","",null,null],[10,"batch_fetch_resources","","Returns a vector of Move resources as serialized byte…",44,[[["accesspath"],["vec",["accesspath"]],["self"]],[["result",["vec"]],["vec",["vec"]]]]],[10,"batch_fetch_resources_by_version","","Returns a vector of Move resources as serialized byte…",44,[[["vec",["accesspath"]],["accesspath"],["version"],["self"]],[["result",["vec"]],["vec",["vec"]]]]],[0,"on_chain_config","libra_types","",null,null],[3,"LibraVersion","libra_types::on_chain_config","Defines the version of Libra Validator software.",null,null],[12,"major","","",45,null],[3,"RegisteredCurrencies","","",null,null],[3,"ValidatorSet","","",null,null],[3,"VMConfig","","Defines all the on chain configuration data needed by VM.",null,null],[12,"publishing_option","","",46,null],[12,"gas_schedule","","",46,null],[3,"ConfigID","","To register an on-chain config in Rust: 1. Implement the…",null,null],[3,"OnChainConfigPayload","","",null,null],[3,"ConfigurationResource","","",null,null],[4,"VMPublishingOption","","Defines and holds the publishing policies for the VM.…",null,null],[13,"Locked","","Only allow scripts on a whitelist to be run",47,null],[13,"CustomScripts","","Allow custom scripts, but not custom module publishing",47,null],[13,"Open","","Allow both custom scripts and custom module publishing",47,null],[5,"config_address","","",null,[[],["accountaddress"]]],[5,"new_epoch_event_key","","",null,[[],["eventkey"]]],[5,"access_path_for_config","","",null,[[["accountaddress"],["identifier"]],["accesspath"]]],[11,"new","","",48,[[["vec",["identifier"]],["identifier"]],["self"]]],[11,"currency_codes","","",48,[[["self"]]]],[11,"empty","","",48,[[],["self"]]],[11,"from_bytes","","",48,[[],["result"]]],[11,"new","","Constructs a ValidatorSet resource.",49,[[["validatorinfo"],["vec",["validatorinfo"]]],["self"]]],[11,"scheme","","",49,[[["self"]],["consensusscheme"]]],[11,"payload","","",49,[[["self"]]]],[11,"empty","","",49,[[],["self"]]],[11,"from_bytes","","",49,[[],["result"]]],[11,"is_open","","",47,[[["self"]],["bool"]]],[11,"is_allowed_script","","",47,[[["self"]],["bool"]]],[17,"ON_CHAIN_CONFIG_REGISTRY","","State sync will panic if the value of any config in this…",null,null],[8,"ConfigStorage","","Trait to be implemented by a storage type from which to…",null,null],[10,"fetch_config","","",50,[[["accesspath"],["self"]],[["option",["vec"]],["vec",["u8"]]]]],[8,"OnChainConfig","","Trait to be implemented by a Rust struct representation of…",null,null],[18,"ADDRESS","","",51,null],[18,"IDENTIFIER","","",51,null],[18,"CONFIG_ID","","",51,null],[11,"deserialize_default_impl","","",51,[[],["result"]]],[11,"deserialize_into_config","","",51,[[],["result"]]],[11,"fetch_config","","",51,[[["t"]],["option"]]],[11,"access_path","","",52,[[],["accesspath"]]],[11,"new","","",53,[[["arc",["hashmap"]],["u64"],["hashmap",["configid","vec"]]],["self"]]],[11,"epoch","","",53,[[["self"]],["u64"]]],[11,"get","","",53,[[["self"]],[["result"],["onchainconfig"]]]],[11,"configs","","",53,[[["self"]],["hashmap"]]],[11,"epoch","","",54,[[["self"]],["u64"]]],[11,"last_reconfiguration_time","","",54,[[["self"]],["u64"]]],[11,"events","","",54,[[["self"]],["eventhandle"]]],[11,"bump_epoch_for_test","","",54,[[["self"]],["self"]]],[0,"proof","libra_types","",null,null],[3,"MerkleTreeInternalNode","libra_types::proof","",null,null],[3,"SparseMerkleLeafNode","","",null,null],[3,"SparseMerkleLeafNodeHasher","","",null,null],[0,"accumulator","","This module implements an in-memory Merkle Accumulator…",null,null],[3,"InMemoryAccumulator","libra_types::proof::accumulator","The Accumulator implementation.",null,null],[11,"new","","Constructs a new accumulator with roots of existing frozen…",55,[[["vec",["hashvalue"]],["leafcount"],["hashvalue"]],["result"]]],[11,"from_leaves","","Constructs a new accumulator with given leaves.",55,[[],["self"]]],[11,"append","","Appends a list of new leaves to an existing accumulator.…",55,[[["self"]],["self"]]],[11,"append_subtrees","","Appends a list of new subtrees to the existing…",55,[[["leafcount"],["self"]],["result"]]],[11,"root_hash","","Returns the root hash of the accumulator.",55,[[["self"]],["hashvalue"]]],[11,"version","","",55,[[["self"]],["u64"]]],[11,"frozen_subtree_roots","","Returns the set of frozen subtree roots in this accumulator",55,[[["self"]],["vec"]]],[11,"num_leaves","","Returns the total number of leaves in this accumulator.",55,[[["self"]],["leafcount"]]],[0,"definition","libra_types::proof","This module has definition of various proofs.",null,null],[3,"AccumulatorProof","libra_types::proof::definition","A proof that can be used authenticate an element in an…",null,null],[3,"SparseMerkleProof","","A proof that can be used to authenticate an element in a…",null,null],[3,"AccumulatorConsistencyProof","","A proof that can be used to show that two Merkle…",null,null],[3,"AccumulatorRangeProof","","A proof that is similar to `AccumulatorProof`, but can be…",null,null],[3,"SparseMerkleRangeProof","","A proof that can be used authenticate a range of…",null,null],[3,"TransactionProof","","The complete proof used to authenticate a `Transaction`…",null,null],[3,"AccountStateProof","","The complete proof used to authenticate the state of an…",null,null],[3,"EventProof","","The complete proof used to authenticate a contract event.…",null,null],[3,"TransactionListProof","","The complete proof used to authenticate a list of…",null,null],[6,"LeafCount","","Because leaves can only take half the space in the tree,…",null,null],[6,"TransactionAccumulatorProof","","",null,null],[6,"EventAccumulatorProof","","",null,null],[6,"TestAccumulatorProof","","",null,null],[6,"TransactionAccumulatorRangeProof","","",null,null],[6,"TestAccumulatorRangeProof","","",null,null],[17,"MAX_ACCUMULATOR_PROOF_DEPTH","","",null,null],[17,"MAX_ACCUMULATOR_LEAVES","","",null,null],[11,"new","","Constructs a new `AccumulatorProof` using a list of…",56,[[["vec",["hashvalue"]],["hashvalue"]],["self"]]],[11,"siblings","","Returns the list of siblings in this proof.",56,[[["self"]]]],[11,"verify","","Verifies an element whose hash is `element_hash` and…",56,[[["u64"],["self"],["hashvalue"]],["result"]]],[11,"new","","Constructs a new `SparseMerkleProof` using leaf and a list…",57,[[["vec",["hashvalue"]],["option",["sparsemerkleleafnode"]],["hashvalue"],["sparsemerkleleafnode"]],["self"]]],[11,"leaf","","Returns the leaf node in this proof.",57,[[["self"]],[["option",["sparsemerkleleafnode"]],["sparsemerkleleafnode"]]]],[11,"siblings","","Returns the list of siblings in this proof.",57,[[["self"]]]],[11,"verify","","If `element_blob` is present, verifies an element whose…",57,[[["option",["accountstateblob"]],["hashvalue"],["self"],["accountstateblob"]],["result"]]],[11,"new","","Constructs a new `AccumulatorConsistencyProof` using given…",58,[[["vec",["hashvalue"]],["hashvalue"]],["self"]]],[11,"subtrees","","Returns the subtrees.",58,[[["self"]]]],[11,"new","","Constructs a new `AccumulatorRangeProof` using…",59,[[["vec",["hashvalue"]],["hashvalue"]],["self"]]],[11,"new_empty","","Constructs a new `AccumulatorRangeProof` for an empty list…",59,[[],["self"]]],[11,"left_siblings","","Get all the left siblngs.",59,[[["self"]],["vec"]]],[11,"verify","","Verifies the proof is correct. The verifier needs to have…",59,[[["option",["u64"]],["hashvalue"],["self"],["u64"]],["result"]]],[11,"new","","Constructs a new `SparseMerkleRangeProof`.",60,[[["vec",["hashvalue"]],["hashvalue"]],["self"]]],[11,"right_siblings","","Returns the siblings.",60,[[["self"]]]],[11,"new","","Constructs a new `TransactionProof` object using given…",61,[[["transactionaccumulatorproof"],["transactioninfo"]],["self"]]],[11,"ledger_info_to_transaction_info_proof","","Returns the `ledger_info_to_transaction_info_proof` object…",61,[[["self"]],["transactionaccumulatorproof"]]],[11,"transaction_info","","Returns the `transaction_info` object in this proof.",61,[[["self"]],["transactioninfo"]]],[11,"verify","","Verifies that a `Transaction` with hash value of…",61,[[["ledgerinfo"],["hashvalue"],["option",["hashvalue"]],["self"],["version"]],["result"]]],[11,"new","","Constructs a new `AccountStateProof` using given…",62,[[["sparsemerkleproof"],["transactionaccumulatorproof"],["transactioninfo"]],["self"]]],[11,"ledger_info_to_transaction_info_proof","","Returns the `ledger_info_to_transaction_info_proof` object…",62,[[["self"]],["transactionaccumulatorproof"]]],[11,"transaction_info","","Returns the `transaction_info` object in this proof.",62,[[["self"]],["transactioninfo"]]],[11,"transaction_info_to_account_proof","","Returns the `transaction_info_to_account_proof` object in…",62,[[["self"]],["sparsemerkleproof"]]],[11,"verify","","Verifies that the state of an account at version…",62,[[["ledgerinfo"],["hashvalue"],["option",["accountstateblob"]],["version"],["self"],["accountstateblob"]],["result"]]],[11,"new","","Constructs a new `EventProof` using given…",63,[[["eventaccumulatorproof"],["transactionaccumulatorproof"],["transactioninfo"]],["self"]]],[11,"ledger_info_to_transaction_info_proof","","Returns the `ledger_info_to_transaction_info_proof` object…",63,[[["self"]],["transactionaccumulatorproof"]]],[11,"transaction_info","","Returns the `transaction_info` object in this proof.",63,[[["self"]],["transactioninfo"]]],[11,"transaction_info_to_event_proof","","Returns the `transaction_info_to_event_proof` object in…",63,[[["self"]],["eventaccumulatorproof"]]],[11,"verify","","Verifies that a given event is correct using provided proof.",63,[[["ledgerinfo"],["hashvalue"],["version"],["self"]],["result"]]],[11,"new","","Constructs a new `TransactionListProof` using…",64,[[["transactionaccumulatorrangeproof"],["vec",["transactioninfo"]],["transactioninfo"]],["self"]]],[11,"new_empty","","Constructs a proof for an empty list of transactions.",64,[[],["self"]]],[11,"transaction_infos","","Returns the list of `TransactionInfo` objects.",64,[[["self"]]]],[11,"left_siblings","","",64,[[["self"]],["vec"]]],[11,"verify","","Verifies the list of transactions are correct using the…",64,[[["ledgerinfo"],["version"],["self"],["option",["version"]]],["result"]]],[0,"position","libra_types::proof","This module provides an abstraction for positioning a node…",null,null],[3,"Position","libra_types::proof::position","",null,null],[3,"AncestorSiblingIterator","","`AncestorSiblingIterator` generates current sibling…",null,null],[3,"AncestorIterator","","`AncestorIterator` generates current position and moves…",null,null],[3,"FrozenSubTreeIterator","","Traverse leaves from left to right in groups that forms…",null,null],[3,"FrozenSubtreeSiblingIterator","","Given an accumulator of size `current_num_leaves`,…",null,null],[4,"NodeDirection","","",null,null],[13,"Left","","",65,null],[13,"Right","","",65,null],[5,"inorder_to_postorder","","Given `node`, an index in an in-order traversal of a…",null,[[["u64"]],["u64"]]],[5,"postorder_to_inorder","","",null,[[["u64"]],["u64"]]],[11,"level","","What level is this node in the tree, 0 if the node is a…",66,[[],["u32"]]],[11,"from_level_and_pos","","pos count start from 0 on each level",66,[[["u32"],["u64"]],["self"]]],[11,"from_inorder_index","","",66,[[["u64"]],["self"]]],[11,"to_inorder_index","","",66,[[],["u64"]]],[11,"from_postorder_index","","",66,[[["u64"]],["self"]]],[11,"to_postorder_index","","",66,[[],["u64"]]],[11,"parent","","What is the parent of this node?",66,[[],["self"]]],[11,"left_child","","What is the left node of this node? Will overflow if the…",66,[[],["self"]]],[11,"right_child","","What is the right node of this node? Will overflow if the…",66,[[],["self"]]],[11,"is_left_child","","Whether this position is a left child of its parent. The…",66,[[],["bool"]]],[11,"is_right_child","","",66,[[],["bool"]]],[11,"from_leaf_index","","",66,[[["u64"]],["self"]]],[11,"sibling","","This method takes in a node position and return its…",66,[[],["self"]]],[11,"root_from_leaf_index","","This method calculates the index of the smallest root…",66,[[["u64"]],["self"]]],[11,"root_from_leaf_count","","",66,[[["leafcount"]],["self"]]],[11,"root_level_from_leaf_count","","",66,[[["leafcount"]],["u32"]]],[11,"right_most_child","","Given a node, find its right most child in its subtree.…",66,[[],["self"]]],[11,"left_most_child","","Given a node, find its left most child in its subtree Left…",66,[[],["self"]]],[11,"is_freezable","","",66,[[["u64"]],["bool"]]],[11,"is_placeholder","","",66,[[["u64"]],["bool"]]],[11,"iter_ancestor","","Creates an `AncestorIterator` using this position.",66,[[],["ancestoriterator"]]],[11,"iter_ancestor_sibling","","Creates an `AncestorSiblingIterator` using this position.",66,[[],["ancestorsiblingiterator"]]],[11,"new","","",67,[[["leafcount"]],["self"]]],[11,"new","","Constructs a new `FrozenSubtreeSiblingIterator` given the…",68,[[["leafcount"]],["self"]]],[0,"proptest_proof","libra_types::proof","All proofs generated in this module are not valid proofs.…",null,null],[6,"SparseMerkleInternalNode","","",null,null],[6,"TransactionAccumulatorInternalNode","","",null,null],[6,"EventAccumulatorInternalNode","","",null,null],[6,"TestAccumulatorInternalNode","","",null,null],[11,"new","","",69,[[["hashvalue"]],["self"]]],[11,"new","","",70,[[["hashvalue"]],["self"]]],[11,"key","","",70,[[["self"]],["hashvalue"]]],[11,"value_hash","","",70,[[["self"]],["hashvalue"]]],[0,"proptest_types","libra_types","",null,null],[3,"AccountInfoUniverse","libra_types::proptest_types","",null,null],[3,"RawTransactionGen","","",null,null],[3,"SignatureCheckedTransactionGen","","",null,null],[3,"ContractEventGen","","",null,null],[3,"TransactionToCommitGen","","Represents information already determined for generating a…",null,null],[3,"LedgerInfoWithSignaturesGen","","",null,null],[11,"materialize","","",71,[[["accountinfouniverse"],["index"]],["rawtransaction"]]],[11,"materialize","","",72,[[["accountinfouniverse"],["index"]],["signaturecheckedtransaction"]]],[11,"materialize","","",73,[[["accountinfouniverse"],["index"]],["contractevent"]]],[11,"strategy_impl","libra_types::event","",24,[[]]],[11,"strategy_impl","libra_types::contract_event","",18,[[]]],[11,"materialize","libra_types::proptest_types","Materialize considering current states in the universe.",74,[[["accountinfouniverse"]],["transactiontocommit"]]],[11,"materialize","","",75,[[["accountinfouniverse"],["usize"]],["ledgerinfowithsignatures"]]],[0,"proto","libra_types","",null,null],[0,"types","libra_types::proto","",null,null],[3,"AccessPath","libra_types::proto::types","",null,null],[12,"address","","",76,null],[12,"path","","",76,null],[3,"TransactionInfo","","`TransactionInfo` is the object we store in the…",null,null],[12,"transaction_hash","","Hash of the transaction that is stored.",77,null],[12,"state_root_hash","","The root hash of Sparse Merkle Tree describing the world…",77,null],[12,"event_root_hash","","The root hash of Merkle Accumulator storing all events…",77,null],[12,"gas_used","","The amount of gas used by this transaction.",77,null],[12,"major_status","","The major status of executing this transaction.",77,null],[3,"AccumulatorProof","","",null,null],[12,"siblings","","The siblings. The ones near the leaf are at the beginning…",78,null],[3,"SparseMerkleProof","","",null,null],[12,"leaf","","This proof can be used to authenticate whether a given…",79,null],[12,"siblings","","The siblings. The ones near the leaf are at the beginning…",79,null],[3,"AccumulatorConsistencyProof","","",null,null],[12,"subtrees","","The root hashes of the subtrees that represent new leaves.…",80,null],[3,"AccumulatorRangeProof","","",null,null],[12,"left_siblings","","The siblings on the left of the path from root to the…",81,null],[12,"right_siblings","","The siblings on the right of the path from root to the…",81,null],[3,"SparseMerkleRangeProof","","",null,null],[12,"right_siblings","","The siblings on the right of the path from root to the…",82,null],[3,"TransactionProof","","The complete proof used to authenticate a transaction.",null,null],[12,"ledger_info_to_transaction_info_proof","","",83,null],[12,"transaction_info","","",83,null],[3,"AccountStateProof","","The complete proof used to authenticate an account state.",null,null],[12,"ledger_info_to_transaction_info_proof","","",84,null],[12,"transaction_info","","",84,null],[12,"transaction_info_to_account_proof","","",84,null],[3,"EventProof","","The complete proof used to authenticate an event.",null,null],[12,"ledger_info_to_transaction_info_proof","","",85,null],[12,"transaction_info","","",85,null],[12,"transaction_info_to_event_proof","","",85,null],[3,"TransactionListProof","","The complete proof used to authenticate a list of…",null,null],[12,"ledger_info_to_transaction_infos_proof","","",86,null],[12,"transaction_infos","","",86,null],[3,"Event","","An event emitted from a smart contract",null,null],[12,"key","","",87,null],[12,"sequence_number","","",87,null],[12,"event_data","","",87,null],[12,"type_tag","","",87,null],[3,"EventWithProof","","An event along with the proof for the event",null,null],[12,"transaction_version","","",88,null],[12,"event_index","","",88,null],[12,"event","","",88,null],[12,"proof","","",88,null],[3,"EventsList","","A list of events.",null,null],[12,"events","","",89,null],[3,"EventsForVersions","","A list of EventList's, each representing all events for a…",null,null],[12,"events_for_version","","",90,null],[3,"MempoolStatus","","The statuses and errors produced by the Mempool during…",null,null],[12,"code","","e.g. assertion violation",91,null],[12,"message","","",91,null],[3,"TransactionArgument","","An argument to the transaction if the transaction takes…",null,null],[3,"SignedTransaction","","A generic structure that represents signed RawTransaction",null,null],[12,"txn_bytes","","LCS bytes representation of a SignedTransaction.",92,null],[3,"Transaction","","A generic structure that represents a transaction,…",null,null],[12,"transaction","","",93,null],[3,"TransactionWithProof","","",null,null],[12,"version","","The version of the returned signed transaction.",94,null],[12,"transaction","","The transaction itself.",94,null],[12,"proof","","The proof authenticating the transaction.",94,null],[12,"events","","The events yielded by executing the transaction, if…",94,null],[3,"SignedTransactionsBlock","","A generic structure that represents a block of…",null,null],[12,"transactions","","Set of Signed Transactions",95,null],[12,"validator_public_key","","Public key of the validator that created this block",95,null],[12,"validator_signature","","Signature of the validator that created this block",95,null],[3,"AccountState","","Account state as a whole. After execution, updates to…",null,null],[12,"address","","Account address",96,null],[12,"blob","","Account state blob",96,null],[3,"TransactionToCommit","","Transaction struct to commit to storage",null,null],[12,"transaction","","The signed transaction which was executed",97,null],[12,"account_states","","State db updates",97,null],[12,"events","","Events yielded by the transaction.",97,null],[12,"gas_used","","The amount of gas used.",97,null],[12,"major_status","","The major status of executing the transaction.",97,null],[3,"TransactionListWithProof","","A list of consecutive transactions with proof. This is…",null,null],[12,"transactions","","The list of transactions.",98,null],[12,"events_for_versions","","The list of corresponding Event objects (only present if…",98,null],[12,"first_transaction_version","","If the list is not empty, the version of the first…",98,null],[12,"proof","","The proof authenticating the transactions and events.When…",98,null],[3,"ValidatorInfo","","Protobuf definition for the Rust struct ValidatorInfo",null,null],[12,"account_address","","Validator account address",99,null],[12,"consensus_public_key","","Consensus public key",99,null],[12,"consensus_voting_power","","Validator voting power for consensus",99,null],[12,"validator_network_signing_public_key","","Network signing publick key",99,null],[12,"validator_network_identity_public_key","","",99,null],[12,"validator_network_address","","",99,null],[12,"full_node_network_identity_public_key","","",99,null],[12,"full_node_network_address","","",99,null],[3,"VmStatus","","The statuses and errors produced by the VM can be…",null,null],[12,"major_status","","e.g. assertion violation, out of gas",100,null],[12,"has_sub_status","","Any substatus code. e.g. assertion error number",100,null],[12,"sub_status","","",100,null],[12,"has_message","","",100,null],[12,"message","","",100,null],[3,"AccountStateBlob","","",null,null],[12,"blob","","",101,null],[3,"AccountStateWithProof","","",null,null],[12,"version","","",102,null],[12,"blob","","",102,null],[12,"proof","","",102,null],[3,"ValidatorSet","","Protobuf definition for the Rust struct ValidatorSet.…",null,null],[12,"bytes","","",103,null],[3,"LedgerInfo","","",null,null],[12,"version","","Current latest version of the system",104,null],[12,"transaction_accumulator_hash","","Root hash of transaction accumulator at this version",104,null],[12,"consensus_data_hash","","Hash of consensus-specific data that is opaque to all…",104,null],[12,"consensus_block_id","","The block id of the last committed block corresponding to…",104,null],[12,"epoch","","Epoch number corresponds to the set of validators that are…",104,null],[12,"round","","Consensus protocol operates in rounds: the number…",104,null],[12,"timestamp_usecs","","Timestamp that represents the microseconds since the epoch…",104,null],[12,"next_epoch_info","","An optional field with the validator set for the next…",104,null],[3,"LedgerInfoWithSignatures","","",null,null],[12,"bytes","","",105,null],[3,"ValidatorSignature","","",null,null],[12,"validator_id","","The account address of the validator, which can be used…",106,null],[12,"signature","","",106,null],[3,"EpochChangeProof","","This is used to prove epoch changes.",null,null],[12,"ledger_info_with_sigs","","A list of LedgerInfos with contiguous increasing epoch…",107,null],[12,"more","","A flag (when true) that indicates the above list is…",107,null],[3,"UpdateToLatestLedgerRequest","","This API is used to update the client to the latest ledger…",null,null],[12,"client_known_version","","This is the version the client already trusts. Usually the…",108,null],[12,"requested_items","","The items for which we are requesting data in this API call.",108,null],[3,"RequestItem","","",null,null],[12,"requested_items","","",109,null],[3,"UpdateToLatestLedgerResponse","","Response from getting latest ledger",null,null],[12,"response_items","","Responses to the queries posed by the requests. The proofs…",110,null],[12,"ledger_info_with_sigs","","The latest ledger info this node has. It will come with at…",110,null],[12,"epoch_change_proof","","A proof for epoch changes from what the client last knew.…",110,null],[12,"ledger_consistency_proof","","A proof that shows the latest ledger accumulator is…",110,null],[3,"ResponseItem","","Individual response items to the queries posed by the…",null,null],[12,"response_items","","",111,null],[3,"GetAccountStateRequest","","Gets latest state for an account.",null,null],[12,"address","","Account for which we are fetching the state.",112,null],[3,"GetAccountStateResponse","","State information returned by a get account state query.",null,null],[12,"account_state_with_proof","","Blob value representing the account state together with…",113,null],[3,"GetAccountTransactionBySequenceNumberRequest","","…",null,null],[12,"account","","Account for which to query transactions",114,null],[12,"sequence_number","","",114,null],[12,"fetch_events","","Set to true to fetch events for the transaction at this…",114,null],[3,"GetAccountTransactionBySequenceNumberResponse","","Transaction information for transactions requested by…",null,null],[12,"transaction_with_proof","","When the transaction requested is committed, return the…",115,null],[12,"proof_of_current_sequence_number","","When the transaction requested is not committed, we give a…",115,null],[3,"GetEventsByEventAccessPathRequest","","Get events that exist on an event access path. In the…",null,null],[12,"access_path","","",116,null],[12,"start_event_seq_num","","The sequence number of the event to start with for this…",116,null],[12,"ascending","","If ascending is true this query will return up to `limit`…",116,null],[12,"limit","","Limit number of results",116,null],[3,"GetEventsByEventAccessPathResponse","","",null,null],[12,"events_with_proof","","Returns an event and proof of each of the events in the…",117,null],[12,"proof_of_latest_event","","If the number of events returned is less than `limit` for…",117,null],[3,"GetTransactionsRequest","","Get up to limit transactions starting from start_version.",null,null],[12,"start_version","","The version of the transaction to start with for this…",118,null],[12,"limit","","Limit number of results",118,null],[12,"fetch_events","","Set to true to fetch events for the transaction at each…",118,null],[3,"GetTransactionsResponse","","",null,null],[12,"txn_list_with_proof","","",119,null],[0,"transaction_argument","","",null,null],[4,"ArgType","libra_types::proto::types::transaction_argument","",null,null],[13,"U64","","",120,null],[13,"Address","","",120,null],[13,"String","","",120,null],[13,"Bytearray","","",120,null],[11,"is_valid","","Returns `true` if `value` is a variant of `ArgType`.",120,[[["i32"]],["bool"]]],[11,"from_i32","","Converts an `i32` to a `ArgType`, or `None` if `value` is…",120,[[["i32"]],[["option",["argtype"]],["argtype"]]]],[0,"request_item","libra_types::proto::types","",null,null],[4,"RequestedItems","libra_types::proto::types::request_item","",null,null],[13,"GetAccountStateRequest","","",121,null],[13,"GetAccountTransactionBySequenceNumberRequest","","",121,null],[13,"GetEventsByEventAccessPathRequest","","",121,null],[13,"GetTransactionsRequest","","",121,null],[11,"encode","","",121,[[["self"],["b"]]]],[11,"merge","","",121,[[["option"],["u32"],["b"],["decodecontext"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",121,[[["self"]],["usize"]]],[0,"response_item","libra_types::proto::types","",null,null],[4,"ResponseItems","libra_types::proto::types::response_item","",null,null],[13,"GetAccountStateResponse","","",122,null],[13,"GetAccountTransactionBySequenceNumberResponse","","",122,null],[13,"GetEventsByEventAccessPathResponse","","",122,null],[13,"GetTransactionsResponse","","",122,null],[11,"encode","","",122,[[["self"],["b"]]]],[11,"merge","","",122,[[["u32"],["b"],["option"],["decodecontext"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",122,[[["self"]],["usize"]]],[0,"test_helpers","libra_types","",null,null],[0,"transaction_test_helpers","libra_types::test_helpers","",null,null],[5,"get_test_signed_module_publishing_transaction","libra_types::test_helpers::transaction_test_helpers","",null,[[["ed25519privatekey"],["module"],["accountaddress"],["u64"],["ed25519publickey"]],["signedtransaction"]]],[5,"get_test_signed_transaction","","",null,[[["option",["script"]],["script"],["ed25519privatekey"],["option",["u64"]],["accountaddress"],["u64"],["ed25519publickey"]],["signedtransaction"]]],[5,"get_test_unchecked_transaction","","",null,[[["option",["script"]],["script"],["ed25519privatekey"],["option",["u64"]],["accountaddress"],["u64"],["ed25519publickey"]],["signedtransaction"]]],[5,"get_test_signed_txn","","",null,[[["option",["script"]],["script"],["ed25519privatekey"],["accountaddress"],["u64"],["ed25519publickey"]],["signedtransaction"]]],[5,"get_test_unchecked_txn","","",null,[[["option",["script"]],["script"],["ed25519privatekey"],["accountaddress"],["u64"],["ed25519publickey"]],["signedtransaction"]]],[5,"get_write_set_txn","","",null,[[["writeset"],["option",["writeset"]],["ed25519privatekey"],["accountaddress"],["u64"],["ed25519publickey"]],["signaturecheckedtransaction"]]],[0,"transaction","libra_types","",null,null],[3,"ChangeSet","libra_types::transaction","",null,null],[3,"Module","","",null,null],[3,"Script","","",null,null],[3,"RawTransaction","","RawTransaction is the portion of a transaction that a…",null,null],[3,"RawTransactionHasher","","",null,null],[3,"SignedTransaction","","A transaction that has been signed.",null,null],[3,"SignedTransactionHasher","","",null,null],[3,"SignatureCheckedTransaction","","A transaction for which the signature has been verified.…",null,null],[3,"TransactionWithProof","","",null,null],[12,"version","","",123,null],[12,"transaction","","",123,null],[12,"events","","",123,null],[12,"proof","","",123,null],[3,"VMValidatorResult","","The result of running the transaction through the VM…",null,null],[3,"TransactionOutput","","The output of executing a transaction.",null,null],[3,"TransactionInfo","","`TransactionInfo` is the object we store in the…",null,null],[3,"TransactionInfoHasher","","",null,null],[3,"TransactionToCommit","","",null,null],[3,"TransactionListWithProof","","The list may have three states: 1. The list is empty. Both…",null,null],[12,"transactions","","",124,null],[12,"events","","",124,null],[12,"first_transaction_version","","",124,null],[12,"proof","","",124,null],[3,"TransactionHasher","","",null,null],[4,"TransactionArgument","","",null,null],[13,"U64","","",125,null],[13,"Address","","",125,null],[13,"U8Vector","","",125,null],[13,"Bool","","",125,null],[4,"TransactionPayload","","",null,null],[13,"Program","","Deprecated. See…",126,null],[13,"WriteSet","","",126,null],[13,"Script","","A transaction that executes code.",126,null],[13,"Module","","A transaction that publishes code.",126,null],[4,"TransactionStatus","","The status of executing a transaction. The VM decides…",null,null],[13,"Discard","","Discard the transaction output",127,null],[13,"Keep","","Keep the transaction output",127,null],[13,"Retry","","Retry the transaction because it is after a…",127,null],[4,"Transaction","","`Transaction` will be the transaction type used internally…",null,null],[13,"UserTransaction","","Transaction submitted by the user. e.g: P2P payment…",128,null],[13,"WaypointWriteSet","","Transaction that applies a WriteSet to the current…",128,null],[13,"BlockMetadata","","Transaction to update the block metadata resource at the…",128,null],[5,"parse_as_transaction_argument","","Parses the given string as any transaction argument type.",null,[[["str"]],[["result",["transactionargument"]],["transactionargument"]]]],[0,"authenticator","","",null,null],[3,"AuthenticationKey","libra_types::transaction::authenticator","A struct that represents an account authentication key. An…",null,null],[3,"AuthenticationKeyHasher","","",null,null],[3,"AuthenticationKeyPreimage","","A value that can be hashed to produce an authentication key",null,null],[4,"Scheme","","A `TransactionAuthenticator` is an an abstraction of a…",null,null],[13,"Ed25519","","",129,null],[13,"MultiEd25519","","",129,null],[4,"TransactionAuthenticator","","",null,null],[13,"Ed25519","","Single signature",130,null],[12,"public_key","libra_types::transaction::authenticator::TransactionAuthenticator","",131,null],[12,"signature","","",131,null],[13,"MultiEd25519","libra_types::transaction::authenticator","K-of-N multisignature",130,null],[12,"public_key","libra_types::transaction::authenticator::TransactionAuthenticator","",132,null],[12,"signature","","",132,null],[11,"scheme","libra_types::transaction::authenticator","Unique identifier for the signature scheme",130,[[["self"]],["scheme"]]],[11,"ed25519","","Create a single-signature ed25519 authenticator",130,[[["ed25519publickey"],["ed25519signature"]],["self"]]],[11,"multi_ed25519","","Create a multisignature ed25519 authenticator",130,[[["multied25519signature"],["multied25519publickey"]],["self"]]],[11,"verify_signature","","Return Ok if the authenticator's public key matches its…",130,[[["hashvalue"],["self"]],["result"]]],[11,"public_key_bytes","","Return the raw bytes of `self.public_key`",130,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"signature_bytes","","Return the raw bytes of `self.signature`",130,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"authentication_key_preimage","","Return an authentication key preimage derived from…",130,[[["self"]],["authenticationkeypreimage"]]],[11,"authentication_key","","Return an authentication key derived from `self`'s public…",130,[[["self"]],["authenticationkey"]]],[11,"new","","Create an authentication key from `bytes`",133,[[],["self"]]],[18,"LENGTH","","The number of bytes in an authentication key.",133,null],[11,"from_preimage","","Create an authentication key from a preimage by taking its…",133,[[["authenticationkeypreimage"]],["authenticationkey"]]],[11,"ed25519","","Create an authentication key from an Ed25519 public key",133,[[["ed25519publickey"]],["authenticationkey"]]],[11,"multi_ed25519","","Create an authentication key from a MultiEd25519 public key",133,[[["multied25519publickey"]],["self"]]],[11,"derived_address","","Return an address derived from the last…",133,[[["self"]],["accountaddress"]]],[11,"prefix","","Return the first AccountAddress::LENGTH bytes of this…",133,[[["self"]]]],[11,"short_str","","Return an abbreviated representation of this…",133,[[["self"]],["string"]]],[11,"to_vec","","Construct a vector from this authentication key",133,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"random","","Create a random authentication key. For testing only",133,[[],["self"]]],[11,"ed25519","","Construct a preimage from an Ed25519 public key",134,[[["ed25519publickey"]],["authenticationkeypreimage"]]],[11,"multi_ed25519","","Construct a preimage from a MultiEd25519 public key",134,[[["multied25519publickey"]],["authenticationkeypreimage"]]],[11,"to_bytes","","Construct a slice from this authentication key",134,[[["self"]]]],[11,"into_vec","","Construct a vector from this authentication key",134,[[],[["vec",["u8"]],["u8"]]]],[11,"new","libra_types::transaction","",135,[[["vec",["contractevent"]],["writeset"],["contractevent"]],["self"]]],[11,"into_inner","","",135,[[]]],[11,"write_set","","",135,[[["self"]],["writeset"]]],[11,"events","","",135,[[["self"]]]],[0,"helpers","","",null,null],[5,"get_signed_transactions_digest","libra_types::transaction::helpers","Used to get the digest of a set of signed transactions.…",null,[[],["hashvalue"]]],[5,"create_unsigned_txn","","",null,[[["i64"],["transactionpayload"],["accountaddress"],["u64"]],["rawtransaction"]]],[5,"create_user_txn","","Craft a transaction request.",null,[[["i64"],["t"],["transactionpayload"],["accountaddress"],["u64"]],[["result",["signedtransaction"]],["signedtransaction"]]]],[8,"TransactionSigner","","",null,null],[10,"sign_txn","","",136,[[["self"],["rawtransaction"]],[["result",["signedtransaction"]],["signedtransaction"]]]],[11,"new","libra_types::transaction","",137,[[["vec",["u8"]],["u8"]],["module"]]],[11,"code","","",137,[[["self"]]]],[11,"into_inner","","",137,[[],[["vec",["u8"]],["u8"]]]],[11,"new","","",138,[[["u8"],["transactionargument"],["vec",["transactionargument"]],["vec",["typetag"]],["vec",["u8"]],["typetag"]],["self"]]],[11,"code","","",138,[[["self"]]]],[11,"ty_args","","",138,[[["self"]]]],[11,"args","","",138,[[["self"]]]],[11,"into_inner","","",138,[[]]],[6,"Version","","",null,null],[17,"SCRIPT_HASH_LENGTH","","",null,null],[17,"PRE_GENESIS_VERSION","","",null,null],[17,"MAX_TRANSACTION_SIZE_IN_BYTES","","",null,null],[11,"new","","Create a new `RawTransaction` with a payload.",139,[[["duration"],["accountaddress"],["u64"],["transactionpayload"]],["self"]]],[11,"new_script","","Create a new `RawTransaction` with a script.",139,[[["duration"],["accountaddress"],["u64"],["script"]],["self"]]],[11,"new_module","","Create a new `RawTransaction` with a module to publish.",139,[[["module"],["accountaddress"],["u64"],["duration"]],["self"]]],[11,"new_write_set","","",139,[[["accountaddress"],["u64"],["writeset"]],["self"]]],[11,"new_change_set","","",139,[[["changeset"],["accountaddress"],["u64"]],["self"]]],[11,"sign","","Signs the given `RawTransaction`. Note that this consumes…",139,[[["ed25519privatekey"],["ed25519publickey"]],[["result",["signaturecheckedtransaction"]],["signaturecheckedtransaction"]]]],[11,"multi_sign_for_testing","","",139,[[["ed25519privatekey"],["ed25519publickey"]],[["result",["signaturecheckedtransaction"]],["signaturecheckedtransaction"]]]],[11,"into_payload","","",139,[[],["transactionpayload"]]],[11,"format_for_client","","",139,[[["self"]],["string"]]],[11,"sender","","Return the sender of this transaction.",139,[[["self"]],["accountaddress"]]],[11,"into_inner","","Returns the `SignedTransaction` within.",140,[[],["signedtransaction"]]],[11,"into_raw_transaction","","Returns the `RawTransaction` within.",140,[[],["rawtransaction"]]],[11,"new","","",141,[[["ed25519signature"],["rawtransaction"],["ed25519publickey"]],["signedtransaction"]]],[11,"new_multisig","","",141,[[["multied25519signature"],["rawtransaction"],["multied25519publickey"]],["signedtransaction"]]],[11,"authenticator","","",141,[[["self"]],["transactionauthenticator"]]],[11,"sender","","",141,[[["self"]],["accountaddress"]]],[11,"into_raw_transaction","","",141,[[],["rawtransaction"]]],[11,"sequence_number","","",141,[[["self"]],["u64"]]],[11,"payload","","",141,[[["self"]],["transactionpayload"]]],[11,"max_gas_amount","","",141,[[["self"]],["u64"]]],[11,"gas_unit_price","","",141,[[["self"]],["u64"]]],[11,"expiration_time","","",141,[[["self"]],["duration"]]],[11,"raw_txn_bytes_len","","",141,[[["self"]],["usize"]]],[11,"check_signature","","Checks that the signature of given transaction. Returns…",141,[[],[["result",["signaturecheckedtransaction"]],["signaturecheckedtransaction"]]]],[11,"format_for_client","","",141,[[["self"]],["string"]]],[11,"verify_user_txn","","Verifies the transaction with the proof, both carried by…",123,[[["ledgerinfo"],["u64"],["version"],["self"],["accountaddress"]],["result"]]],[11,"vm_status","","",127,[[["self"]],["vmstatus"]]],[11,"is_discarded","","",127,[[["self"]],["bool"]]],[11,"new","","",142,[[["option",["vmstatus"]],["vmstatus"],["u64"],["bool"]],["self"]]],[11,"status","","",142,[[["self"]],[["option",["vmstatus"]],["vmstatus"]]]],[11,"score","","",142,[[["self"]],["u64"]]],[11,"is_governance_txn","","",142,[[["self"]],["bool"]]],[11,"new","","",143,[[["vec",["contractevent"]],["contractevent"],["writeset"],["u64"],["transactionstatus"]],["self"]]],[11,"write_set","","",143,[[["self"]],["writeset"]]],[11,"events","","",143,[[["self"]]]],[11,"gas_used","","",143,[[["self"]],["u64"]]],[11,"status","","",143,[[["self"]],["transactionstatus"]]],[11,"new","","Constructs a new `TransactionInfo` object using…",144,[[["statuscode"],["hashvalue"],["u64"]],["transactioninfo"]]],[11,"transaction_hash","","Returns the hash of this transaction.",144,[[["self"]],["hashvalue"]]],[11,"state_root_hash","","Returns root hash of Sparse Merkle Tree describing the…",144,[[["self"]],["hashvalue"]]],[11,"event_root_hash","","Returns the root hash of Merkle Accumulator storing all…",144,[[["self"]],["hashvalue"]]],[11,"gas_used","","Returns the amount of gas used by this transaction.",144,[[["self"]],["u64"]]],[11,"major_status","","",144,[[["self"]],["statuscode"]]],[11,"new","","",145,[[["contractevent"],["hashmap",["accountaddress","accountstateblob"]],["statuscode"],["accountaddress"],["u64"],["vec",["contractevent"]],["accountstateblob"],["transaction"]],["self"]]],[11,"transaction","","",145,[[["self"]],["transaction"]]],[11,"account_states","","",145,[[["self"]],["hashmap"]]],[11,"events","","",145,[[["self"]]]],[11,"gas_used","","",145,[[["self"]],["u64"]]],[11,"major_status","","",145,[[["self"]],["statuscode"]]],[11,"new","","Constructor.",124,[[["version"],["option",["version"]],["transactionlistproof"],["vec",["vec"]],["vec",["transaction"]],["transaction"],["option",["vec"]]],["self"]]],[11,"new_empty","","Creates an empty transaction list.",124,[[],["self"]]],[11,"verify","","Verifies the transaction list with the proofs, both…",124,[[["ledgerinfo"],["version"],["self"],["option",["version"]]],["result"]]],[11,"is_empty","","",124,[[["self"]],["bool"]]],[11,"len","","",124,[[["self"]],["usize"]]],[11,"as_signed_user_txn","","",128,[[["self"]],[["signedtransaction"],["result",["signedtransaction"]]]]],[11,"format_for_client","","",128,[[["self"]],["string"]]],[0,"trusted_state","libra_types","",null,null],[3,"TrustedState","libra_types::trusted_state","`TrustedState` keeps track of our latest trusted state,…",null,null],[4,"TrustedStateChange","","`TrustedStateChange` is the result of attempting to…",null,null],[13,"Version","","We have a newer `TrustedState` but it's still in the same…",146,null],[12,"new_state","libra_types::trusted_state::TrustedStateChange","",147,null],[13,"Epoch","libra_types::trusted_state","We have a newer `TrustedState` and there was at least one…",146,null],[12,"new_state","libra_types::trusted_state::TrustedStateChange","",148,null],[12,"latest_epoch_change_li","","",148,null],[13,"NoChange","libra_types::trusted_state","The latest ledger info is at the same version as the…",146,null],[11,"verify_and_ratchet","","Verify and ratchet forward our trusted state using a…",149,[[["ledgerinfowithsignatures"],["epochchangeproof"],["self"]],[["result",["trustedstatechange"]],["trustedstatechange"]]]],[11,"latest_version","","",149,[[["self"]],["version"]]],[0,"validator_config","libra_types","",null,null],[3,"ValidatorConfigResource","libra_types::validator_config","",null,null],[12,"validator_config","","",150,null],[12,"delegated_account","","",150,null],[3,"ValidatorConfig","","",null,null],[12,"consensus_public_key","","",151,null],[12,"validator_network_signing_public_key","","",151,null],[12,"validator_network_identity_public_key","","",151,null],[12,"validator_network_address","","",151,null],[12,"full_node_network_identity_public_key","","",151,null],[12,"full_node_network_address","","",151,null],[11,"new","","",151,[[["publickey"],["ed25519publickey"],["rawnetworkaddress"]],["self"]]],[0,"validator_info","libra_types","",null,null],[3,"ValidatorInfo","libra_types::validator_info","After executing a special transaction indicates a change…",null,null],[11,"new","","",152,[[["accountaddress"],["u64"],["validatorconfig"]],["self"]]],[11,"new_with_test_network_keys","","",152,[[["accountaddress"],["ed25519publickey"],["u64"]],["self"]]],[11,"account_address","","Returns the id of this validator (hash of the current…",152,[[["self"]],["accountaddress"]]],[11,"consensus_public_key","","Returns the key for validating signed messages from this…",152,[[["self"]],["ed25519publickey"]]],[11,"consensus_voting_power","","Returns the voting power for this validator",152,[[["self"]],["u64"]]],[11,"network_signing_public_key","","Returns the key for validating signed messages at the…",152,[[["self"]],["ed25519publickey"]]],[11,"network_identity_public_key","","Returns the key that establishes a validator's identity in…",152,[[["self"]],["publickey"]]],[11,"config","","Returns the validator's config",152,[[["self"]],["validatorconfig"]]],[0,"validator_signer","libra_types","",null,null],[3,"ValidatorSigner","libra_types::validator_signer","ValidatorSigner associates an author with public and…",null,null],[0,"proptests","","",null,null],[5,"arb_signing_key","libra_types::validator_signer::proptests","",null,[[]]],[5,"signer_strategy","","",null,[[]]],[5,"rand_signer","","",null,[[]]],[5,"arb_signer","","",null,[[]]],[5,"mostly_in_keypair_pool","","",null,[[["vec",["ed25519privatekey"]],["ed25519privatekey"]]]],[11,"new","libra_types::validator_signer","",153,[[["accountaddress"],["ed25519privatekey"]],["self"]]],[11,"sign_message","","Constructs a signature for `message` using `private_key`.",153,[[["self"],["hashvalue"]],["ed25519signature"]]],[11,"author","","Returns the author associated with this signer.",153,[[["self"]],["accountaddress"]]],[11,"public_key","","Returns the public key associated with this signer.",153,[[["self"]],["ed25519publickey"]]],[11,"private_key","","Returns the private key associated with this signer. Only…",153,[[["self"]],["ed25519privatekey"]]],[11,"random","","Generate a random set of public and private keys and…",153,[[],["self"]]],[11,"from_int","","For test only - makes signer with nicely looking account…",153,[[["u8"]],["self"]]],[0,"validator_verifier","libra_types","",null,null],[3,"ValidatorConsensusInfo","libra_types::validator_verifier","Helper struct to manage validator information for validation",null,null],[3,"ValidatorVerifier","","Supports validation of signatures for known authors with…",null,null],[4,"VerifyError","","Errors possible during signature verification.",null,null],[13,"UnknownAuthor","","The author for this signature is unknown by this validator.",154,null],[13,"TooLittleVotingPower","","",154,null],[12,"voting_power","libra_types::validator_verifier::VerifyError","",155,null],[12,"quorum_voting_power","","",155,null],[13,"TooManySignatures","libra_types::validator_verifier","",154,null],[12,"num_of_signatures","libra_types::validator_verifier::VerifyError","",156,null],[12,"num_of_authors","","",156,null],[13,"InvalidSignature","libra_types::validator_verifier","The signature does not match the hash.",154,null],[5,"random_validator_verifier","","Helper function to get random validator signers and a…",null,[[["option",["u64"]],["usize"],["u64"],["bool"]]]],[11,"new","","",157,[[["ed25519publickey"],["u64"]],["self"]]],[11,"public_key","","",157,[[["self"]],["ed25519publickey"]]],[11,"voting_power","","",157,[[["self"]],["u64"]]],[11,"new","","Initialize with a map of account address to validator info…",158,[[["accountaddress"],["btreemap",["accountaddress","validatorconsensusinfo"]],["validatorconsensusinfo"]],["self"]]],[11,"new_with_quorum_voting_power","","Initializes a validator verifier with a specified quorum…",158,[[["u64"],["accountaddress"],["btreemap",["accountaddress","validatorconsensusinfo"]],["validatorconsensusinfo"]],["result"]]],[11,"new_single","","Helper method to initialize with a single author and…",158,[[["accountaddress"],["ed25519publickey"]],["self"]]],[11,"verify_signature","","Verify the correctness of a signature of a hash by a known…",158,[[["ed25519signature"],["hashvalue"],["accountaddress"],["self"]],[["verifyerror"],["result",["verifyerror"]]]]],[11,"verify_aggregated_signature","","This function will successfully return when at least…",158,[[["btreemap"],["self"],["hashvalue"]],[["verifyerror"],["result",["verifyerror"]]]]],[11,"batch_verify_aggregated_signature","","This function will try batch signature verification and…",158,[[["btreemap"],["self"],["hashvalue"]],[["verifyerror"],["result",["verifyerror"]]]]],[11,"check_voting_power","","Ensure there is at least quorum_voting_power in the…",158,[[["self"]],[["verifyerror"],["result",["verifyerror"]]]]],[11,"get_public_key","","Returns the public key for this address.",158,[[["accountaddress"],["self"]],[["ed25519publickey"],["option",["ed25519publickey"]]]]],[11,"get_voting_power","","Returns the voting power for this address.",158,[[["accountaddress"],["self"]],[["option",["u64"]],["u64"]]]],[11,"get_ordered_account_addresses_iter","","Returns an ordered list of account addresses as an…",158,[[["self"]]]],[11,"len","","Returns the number of authors to be validated.",158,[[["self"]],["usize"]]],[11,"is_empty","","Is there at least one author?",158,[[["self"]],["bool"]]],[11,"quorum_voting_power","","Returns quorum voting power.",158,[[["self"]],["u64"]]],[0,"vm_error","libra_types","",null,null],[3,"VMStatus","libra_types::vm_error","A `VMStatus` is represented as a required major status…",null,null],[12,"major_status","","The major status, e.g. ABORTED, OUT_OF_GAS, etc.",159,null],[12,"sub_status","","The optional sub status. Used e.g. for things such as the…",159,null],[12,"message","","The optional message. Useful for verification errors, and…",159,null],[4,"StatusType","","A status type is one of 5 different variants, along with a…",null,null],[13,"Validation","","",160,null],[13,"Verification","","",160,null],[13,"InvariantViolation","","",160,null],[13,"Deserialization","","",160,null],[13,"Execution","","",160,null],[13,"Unknown","","",160,null],[4,"StatusCode","","We don't derive Arbitrary on this enum because it is too…",null,null],[13,"UNKNOWN_VALIDATION_STATUS","","",161,null],[13,"INVALID_SIGNATURE","","",161,null],[13,"INVALID_AUTH_KEY","","",161,null],[13,"SEQUENCE_NUMBER_TOO_OLD","","",161,null],[13,"SEQUENCE_NUMBER_TOO_NEW","","",161,null],[13,"INSUFFICIENT_BALANCE_FOR_TRANSACTION_FEE","","",161,null],[13,"TRANSACTION_EXPIRED","","",161,null],[13,"SENDING_ACCOUNT_DOES_NOT_EXIST","","",161,null],[13,"REJECTED_WRITE_SET","","",161,null],[13,"INVALID_WRITE_SET","","",161,null],[13,"EXCEEDED_MAX_TRANSACTION_SIZE","","",161,null],[13,"UNKNOWN_SCRIPT","","",161,null],[13,"UNKNOWN_MODULE","","",161,null],[13,"MAX_GAS_UNITS_EXCEEDS_MAX_GAS_UNITS_BOUND","","",161,null],[13,"MAX_GAS_UNITS_BELOW_MIN_TRANSACTION_GAS_UNITS","","",161,null],[13,"GAS_UNIT_PRICE_BELOW_MIN_BOUND","","",161,null],[13,"GAS_UNIT_PRICE_ABOVE_MAX_BOUND","","",161,null],[13,"INVALID_GAS_SPECIFIER","","",161,null],[13,"SENDING_ACCOUNT_FROZEN","","",161,null],[13,"UNABLE_TO_DESERIALIZE_ACCOUNT","","",161,null],[13,"CURRENCY_INFO_DOES_NOT_EXIST","","",161,null],[13,"UNKNOWN_VERIFICATION_ERROR","","",161,null],[13,"INDEX_OUT_OF_BOUNDS","","",161,null],[13,"RANGE_OUT_OF_BOUNDS","","",161,null],[13,"INVALID_SIGNATURE_TOKEN","","",161,null],[13,"INVALID_FIELD_DEF","","",161,null],[13,"RECURSIVE_STRUCT_DEFINITION","","",161,null],[13,"INVALID_RESOURCE_FIELD","","",161,null],[13,"INVALID_FALL_THROUGH","","",161,null],[13,"JOIN_FAILURE","","",161,null],[13,"NEGATIVE_STACK_SIZE_WITHIN_BLOCK","","",161,null],[13,"UNBALANCED_STACK","","",161,null],[13,"INVALID_MAIN_FUNCTION_SIGNATURE","","",161,null],[13,"DUPLICATE_ELEMENT","","",161,null],[13,"INVALID_MODULE_HANDLE","","",161,null],[13,"UNIMPLEMENTED_HANDLE","","",161,null],[13,"INCONSISTENT_FIELDS","","",161,null],[13,"UNUSED_FIELD","","",161,null],[13,"LOOKUP_FAILED","","",161,null],[13,"VISIBILITY_MISMATCH","","",161,null],[13,"TYPE_RESOLUTION_FAILURE","","",161,null],[13,"TYPE_MISMATCH","","",161,null],[13,"MISSING_DEPENDENCY","","",161,null],[13,"POP_REFERENCE_ERROR","","",161,null],[13,"POP_RESOURCE_ERROR","","",161,null],[13,"RELEASEREF_TYPE_MISMATCH_ERROR","","",161,null],[13,"BR_TYPE_MISMATCH_ERROR","","",161,null],[13,"ABORT_TYPE_MISMATCH_ERROR","","",161,null],[13,"STLOC_TYPE_MISMATCH_ERROR","","",161,null],[13,"STLOC_UNSAFE_TO_DESTROY_ERROR","","",161,null],[13,"UNSAFE_RET_LOCAL_OR_RESOURCE_STILL_BORROWED","","",161,null],[13,"RET_TYPE_MISMATCH_ERROR","","",161,null],[13,"RET_BORROWED_MUTABLE_REFERENCE_ERROR","","",161,null],[13,"FREEZEREF_TYPE_MISMATCH_ERROR","","",161,null],[13,"FREEZEREF_EXISTS_MUTABLE_BORROW_ERROR","","",161,null],[13,"BORROWFIELD_TYPE_MISMATCH_ERROR","","",161,null],[13,"BORROWFIELD_BAD_FIELD_ERROR","","",161,null],[13,"BORROWFIELD_EXISTS_MUTABLE_BORROW_ERROR","","",161,null],[13,"COPYLOC_UNAVAILABLE_ERROR","","",161,null],[13,"COPYLOC_RESOURCE_ERROR","","",161,null],[13,"COPYLOC_EXISTS_BORROW_ERROR","","",161,null],[13,"MOVELOC_UNAVAILABLE_ERROR","","",161,null],[13,"MOVELOC_EXISTS_BORROW_ERROR","","",161,null],[13,"BORROWLOC_REFERENCE_ERROR","","",161,null],[13,"BORROWLOC_UNAVAILABLE_ERROR","","",161,null],[13,"BORROWLOC_EXISTS_BORROW_ERROR","","",161,null],[13,"CALL_TYPE_MISMATCH_ERROR","","",161,null],[13,"CALL_BORROWED_MUTABLE_REFERENCE_ERROR","","",161,null],[13,"PACK_TYPE_MISMATCH_ERROR","","",161,null],[13,"UNPACK_TYPE_MISMATCH_ERROR","","",161,null],[13,"READREF_TYPE_MISMATCH_ERROR","","",161,null],[13,"READREF_RESOURCE_ERROR","","",161,null],[13,"READREF_EXISTS_MUTABLE_BORROW_ERROR","","",161,null],[13,"WRITEREF_TYPE_MISMATCH_ERROR","","",161,null],[13,"WRITEREF_RESOURCE_ERROR","","",161,null],[13,"WRITEREF_EXISTS_BORROW_ERROR","","",161,null],[13,"WRITEREF_NO_MUTABLE_REFERENCE_ERROR","","",161,null],[13,"INTEGER_OP_TYPE_MISMATCH_ERROR","","",161,null],[13,"BOOLEAN_OP_TYPE_MISMATCH_ERROR","","",161,null],[13,"EQUALITY_OP_TYPE_MISMATCH_ERROR","","",161,null],[13,"EXISTS_RESOURCE_TYPE_MISMATCH_ERROR","","",161,null],[13,"BORROWGLOBAL_TYPE_MISMATCH_ERROR","","",161,null],[13,"BORROWGLOBAL_NO_RESOURCE_ERROR","","",161,null],[13,"MOVEFROM_TYPE_MISMATCH_ERROR","","",161,null],[13,"MOVEFROM_NO_RESOURCE_ERROR","","",161,null],[13,"MOVETOSENDER_TYPE_MISMATCH_ERROR","","",161,null],[13,"MOVETOSENDER_NO_RESOURCE_ERROR","","",161,null],[13,"CREATEACCOUNT_TYPE_MISMATCH_ERROR","","",161,null],[13,"MODULE_ADDRESS_DOES_NOT_MATCH_SENDER","","",161,null],[13,"NO_MODULE_HANDLES","","",161,null],[13,"POSITIVE_STACK_SIZE_AT_BLOCK_END","","",161,null],[13,"MISSING_ACQUIRES_RESOURCE_ANNOTATION_ERROR","","",161,null],[13,"EXTRANEOUS_ACQUIRES_RESOURCE_ANNOTATION_ERROR","","",161,null],[13,"DUPLICATE_ACQUIRES_RESOURCE_ANNOTATION_ERROR","","",161,null],[13,"INVALID_ACQUIRES_RESOURCE_ANNOTATION_ERROR","","",161,null],[13,"GLOBAL_REFERENCE_ERROR","","",161,null],[13,"CONTRAINT_KIND_MISMATCH","","",161,null],[13,"NUMBER_OF_TYPE_ARGUMENTS_MISMATCH","","",161,null],[13,"LOOP_IN_INSTANTIATION_GRAPH","","",161,null],[13,"UNUSED_LOCALS_SIGNATURE","","",161,null],[13,"UNUSED_TYPE_SIGNATURE","","",161,null],[13,"ZERO_SIZED_STRUCT","","Reported when a struct has zero fields",161,null],[13,"LINKER_ERROR","","",161,null],[13,"INVALID_CONSTANT_TYPE","","",161,null],[13,"MALFORMED_CONSTANT_DATA","","",161,null],[13,"EMPTY_CODE_UNIT","","",161,null],[13,"INVALID_LOOP_SPLIT","","",161,null],[13,"INVALID_LOOP_BREAK","","",161,null],[13,"INVALID_LOOP_CONTINUE","","",161,null],[13,"UNSAFE_RET_UNUSED_RESOURCES","","",161,null],[13,"TOO_MANY_LOCALS","","",161,null],[13,"UNKNOWN_INVARIANT_VIOLATION_ERROR","","",161,null],[13,"OUT_OF_BOUNDS_INDEX","","",161,null],[13,"OUT_OF_BOUNDS_RANGE","","",161,null],[13,"EMPTY_VALUE_STACK","","",161,null],[13,"EMPTY_CALL_STACK","","",161,null],[13,"PC_OVERFLOW","","",161,null],[13,"VERIFICATION_ERROR","","",161,null],[13,"LOCAL_REFERENCE_ERROR","","",161,null],[13,"STORAGE_ERROR","","",161,null],[13,"INTERNAL_TYPE_ERROR","","",161,null],[13,"EVENT_KEY_MISMATCH","","",161,null],[13,"UNREACHABLE","","",161,null],[13,"VM_STARTUP_FAILURE","","",161,null],[13,"NATIVE_FUNCTION_INTERNAL_INCONSISTENCY","","",161,null],[13,"INVALID_CODE_CACHE","","",161,null],[13,"UNKNOWN_BINARY_ERROR","","",161,null],[13,"MALFORMED","","",161,null],[13,"BAD_MAGIC","","",161,null],[13,"UNKNOWN_VERSION","","",161,null],[13,"UNKNOWN_TABLE_TYPE","","",161,null],[13,"UNKNOWN_SIGNATURE_TYPE","","",161,null],[13,"UNKNOWN_SERIALIZED_TYPE","","",161,null],[13,"UNKNOWN_OPCODE","","",161,null],[13,"BAD_HEADER_TABLE","","",161,null],[13,"UNEXPECTED_SIGNATURE_TYPE","","",161,null],[13,"DUPLICATE_TABLE","","",161,null],[13,"VERIFIER_INVARIANT_VIOLATION","","",161,null],[13,"UNKNOWN_NOMINAL_RESOURCE","","",161,null],[13,"UNKNOWN_KIND","","",161,null],[13,"UNKNOWN_NATIVE_STRUCT_FLAG","","",161,null],[13,"BAD_ULEB_U16","","",161,null],[13,"BAD_ULEB_U32","","",161,null],[13,"BAD_U16","","",161,null],[13,"BAD_U32","","",161,null],[13,"BAD_U64","","",161,null],[13,"BAD_U128","","",161,null],[13,"UNKNOWN_RUNTIME_STATUS","","",161,null],[13,"EXECUTED","","",161,null],[13,"OUT_OF_GAS","","",161,null],[13,"RESOURCE_DOES_NOT_EXIST","","",161,null],[13,"RESOURCE_ALREADY_EXISTS","","",161,null],[13,"EVICTED_ACCOUNT_ACCESS","","",161,null],[13,"ACCOUNT_ADDRESS_ALREADY_EXISTS","","",161,null],[13,"TYPE_ERROR","","",161,null],[13,"MISSING_DATA","","",161,null],[13,"DATA_FORMAT_ERROR","","",161,null],[13,"INVALID_DATA","","",161,null],[13,"REMOTE_DATA_ERROR","","",161,null],[13,"CANNOT_WRITE_EXISTING_RESOURCE","","",161,null],[13,"VALUE_SERIALIZATION_ERROR","","",161,null],[13,"VALUE_DESERIALIZATION_ERROR","","",161,null],[13,"DUPLICATE_MODULE_NAME","","",161,null],[13,"ABORTED","","",161,null],[13,"ARITHMETIC_ERROR","","",161,null],[13,"DYNAMIC_REFERENCE_ERROR","","",161,null],[13,"CODE_DESERIALIZATION_ERROR","","",161,null],[13,"EXECUTION_STACK_OVERFLOW","","",161,null],[13,"CALL_STACK_OVERFLOW","","",161,null],[13,"NATIVE_FUNCTION_ERROR","","",161,null],[13,"GAS_SCHEDULE_ERROR","","",161,null],[13,"CREATE_NULL_ACCOUNT","","",161,null],[13,"UNKNOWN_STATUS","","",161,null],[0,"sub_status","","",null,null],[17,"AEU_UNKNOWN_ARITHMETIC_ERROR","libra_types::vm_error::sub_status","",null,null],[17,"AEU_UNDERFLOW","","",null,null],[17,"AEO_OVERFLOW","","",null,null],[17,"AED_DIVISION_BY_ZERO","","",null,null],[17,"VSF_GAS_SCHEDULE_NOT_FOUND","","",null,null],[17,"VSF_LIBRA_VERSION_NOT_FOUND","","",null,null],[17,"DRE_UNKNOWN_DYNAMIC_REFERENCE_ERROR","","",null,null],[17,"DRE_MOVE_OF_BORROWED_RESOURCE","","",null,null],[17,"DRE_GLOBAL_REF_ALREADY_RELEASED","","",null,null],[17,"DRE_MISSING_RELEASEREF","","",null,null],[17,"DRE_GLOBAL_ALREADY_BORROWED","","",null,null],[17,"NFE_VECTOR_ERROR_BASE","","",null,null],[17,"NFE_LCS_SERIALIZATION_FAILURE","","",null,null],[17,"GSE_UNABLE_TO_LOAD_MODULE","","",null,null],[17,"GSE_UNABLE_TO_LOAD_RESOURCE","","",null,null],[17,"GSE_UNABLE_TO_DESERIALIZE","","",null,null],[7,"VALIDATION_STATUS_MIN_CODE","libra_types::vm_error","The minimum status code for validation statuses",null,null],[7,"VALIDATION_STATUS_MAX_CODE","","The maximum status code for validation statuses",null,null],[7,"VERIFICATION_STATUS_MIN_CODE","","The minimum status code for verification statuses",null,null],[7,"VERIFICATION_STATUS_MAX_CODE","","The maximum status code for verification statuses",null,null],[7,"INVARIANT_VIOLATION_STATUS_MIN_CODE","","The minimum status code for invariant violation statuses",null,null],[7,"INVARIANT_VIOLATION_STATUS_MAX_CODE","","The maximum status code for invariant violation statuses",null,null],[7,"DESERIALIZATION_STATUS_MIN_CODE","","The minimum status code for deserialization statuses",null,null],[7,"DESERIALIZATION_STATUS_MAX_CODE","","The maximum status code for deserialization statuses",null,null],[7,"EXECUTION_STATUS_MIN_CODE","","The minimum status code for runtime statuses",null,null],[7,"EXECUTION_STATUS_MAX_CODE","","The maximum status code for runtim statuses",null,null],[11,"new","","Create a new VM status with major status `major_status`.",159,[[["statuscode"]],["self"]]],[11,"with_sub_status","","Adds a sub status to the VM status.",159,[[["u64"]],["self"]]],[11,"with_message","","Adds a message to the VM status.",159,[[["string"]],["self"]]],[11,"set_sub_status","","Mutates the VMStatus sub status field to be the new…",159,[[["self"],["u64"]]]],[11,"set_message","","Mutates the VMStatus message field to be the new `message`…",159,[[["self"],["string"]]]],[11,"append_message_with_separator","","Append the message `message` to the message field of the…",159,[[["char"],["string"]],["self"]]],[11,"status_type","","Return the status type for this VMStatus. This is solely…",159,[[["self"]],["statustype"]]],[11,"is","","Determine if the VMStatus has status type `status_type`.",159,[[["self"],["statustype"]],["bool"]]],[11,"append","","Append two VMStatuses together. The major status is kept…",159,[[],["self"]]],[0,"waypoint","libra_types","",null,null],[3,"Waypoint","libra_types::waypoint","Waypoint keeps information about the LedgerInfo on a given…",null,null],[3,"Ledger2WaypointConverterHasher","","",null,null],[11,"new_any","","Generate a new waypoint given any LedgerInfo.",162,[[["ledgerinfo"]],["self"]]],[11,"new_epoch_boundary","","Generates a new waypoint given the epoch change LedgerInfo.",162,[[["ledgerinfo"]],["result"]]],[11,"version","","",162,[[["self"]],["version"]]],[11,"value","","",162,[[["self"]],["hashvalue"]]],[11,"verify","","Errors in case the given ledger info does not match the…",162,[[["ledgerinfo"],["self"]],["result"]]],[0,"write_set","libra_types","For each transaction the VM executes, the VM will output a…",null,null],[3,"WriteSet","libra_types::write_set","`WriteSet` contains all access paths that one transaction…",null,null],[3,"WriteSetMut","","A mutable version of `WriteSet`.",null,null],[4,"WriteOp","","",null,null],[13,"Deletion","","",163,null],[13,"Value","","",163,null],[11,"is_deletion","","",163,[[["self"]],["bool"]]],[11,"len","","",164,[[["self"]],["usize"]]],[11,"is_empty","","",164,[[["self"]],["bool"]]],[11,"iter","","",164,[[["self"]],["iter"]]],[11,"into_mut","","",164,[[],["writesetmut"]]],[11,"new","","",165,[[["vec"]],["self"]]],[11,"push","","",165,[[["self"]]]],[11,"len","","",165,[[["self"]],["usize"]]],[11,"is_empty","","",165,[[["self"]],["bool"]]],[11,"freeze","","",165,[[],[["writeset"],["result",["writeset"]]]]],[11,"from","libra_types::account_address","",166,[[["t"]],["t"]]],[11,"into","","",166,[[],["u"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,[[["self"],["t"]]]],[11,"to_string","","",166,[[["self"]],["string"]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"try_into","","",166,[[],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"type_id","","",166,[[["self"]],["typeid"]]],[11,"test_only_hash","","",166,[[["self"]],["hashvalue"]]],[11,"vzip","","",166,[[],["v"]]],[11,"clear","","",166,[[["self"]]]],[11,"initialize","","",166,[[]]],[11,"encode_hex","","",166,[[["self"]],["u"]]],[11,"encode_hex_upper","","",166,[[["self"]],["u"]]],[11,"from","libra_types::access_path","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"test_only_hash","","",0,[[["self"]],["hashvalue"]]],[11,"vzip","","",0,[[],["v"]]],[11,"clear","","",0,[[["self"]]]],[11,"initialize","","",0,[[]]],[11,"from","libra_types::account_config::events::burn","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"test_only_hash","","",1,[[["self"]],["hashvalue"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","libra_types::account_config::events::cancel_burn","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"test_only_hash","","",2,[[["self"]],["hashvalue"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","libra_types::account_config::events::mint","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"test_only_hash","","",3,[[["self"]],["hashvalue"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","libra_types::account_config::events::preburn","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"test_only_hash","","",4,[[["self"]],["hashvalue"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","libra_types::account_config::events::received_payment","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"test_only_hash","","",5,[[["self"]],["hashvalue"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","libra_types::account_config::events::sent_payment","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"test_only_hash","","",6,[[["self"]],["hashvalue"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","libra_types::account_config::resources::account","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"test_only_hash","","",7,[[["self"]],["hashvalue"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","libra_types::account_config::resources::association_capability","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"test_only_hash","","",8,[[["self"]],["hashvalue"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","libra_types::account_config::resources::balance","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"test_only_hash","","",9,[[["self"]],["hashvalue"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","libra_types::account_config::resources::currency_info","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"test_only_hash","","",10,[[["self"]],["hashvalue"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","libra_types::account_state","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"test_only_hash","","",11,[[["self"]],["hashvalue"]]],[11,"vzip","","",11,[[],["v"]]],[11,"clear","","",11,[[["self"]]]],[11,"initialize","","",11,[[]]],[11,"from","libra_types::account_state_blob","",167,[[["t"]],["t"]]],[11,"into","","",167,[[],["u"]]],[11,"to_owned","","",167,[[["self"]],["t"]]],[11,"clone_into","","",167,[[["self"],["t"]]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"try_into","","",167,[[],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"type_id","","",167,[[["self"]],["typeid"]]],[11,"test_only_hash","","",167,[[["self"]],["hashvalue"]]],[11,"vzip","","",167,[[],["v"]]],[11,"encode_hex","","",167,[[["self"]],["u"]]],[11,"encode_hex_upper","","",167,[[["self"]],["u"]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"into","","",168,[[],["u"]]],[11,"to_owned","","",168,[[["self"]],["t"]]],[11,"clone_into","","",168,[[["self"],["t"]]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"try_into","","",168,[[],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"type_id","","",168,[[["self"]],["typeid"]]],[11,"vzip","","",168,[[],["v"]]],[11,"clear","","",168,[[["self"]]]],[11,"initialize","","",168,[[]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"test_only_hash","","",12,[[["self"]],["hashvalue"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","libra_types::block_info","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"test_only_hash","","",13,[[["self"]],["hashvalue"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","libra_types::block_metadata","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"test_only_hash","","",14,[[["self"]],["hashvalue"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"test_only_hash","","",15,[[["self"]],["hashvalue"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"test_only_hash","","",16,[[["self"]],["hashvalue"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","libra_types::contract_event","",169,[[["t"]],["t"]]],[11,"into","","",169,[[],["u"]]],[11,"to_owned","","",169,[[["self"]],["t"]]],[11,"clone_into","","",169,[[["self"],["t"]]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"try_into","","",169,[[],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"type_id","","",169,[[["self"]],["typeid"]]],[11,"vzip","","",169,[[],["v"]]],[11,"clear","","",169,[[["self"]]]],[11,"initialize","","",169,[[]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"test_only_hash","","",19,[[["self"]],["hashvalue"]]],[11,"vzip","","",19,[[],["v"]]],[11,"from","","",170,[[["t"]],["t"]]],[11,"into","","",170,[[],["u"]]],[11,"to_owned","","",170,[[["self"]],["t"]]],[11,"clone_into","","",170,[[["self"],["t"]]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"try_into","","",170,[[],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"type_id","","",170,[[["self"]],["typeid"]]],[11,"vzip","","",170,[[],["v"]]],[11,"clear","","",170,[[["self"]]]],[11,"initialize","","",170,[[]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"to_string","","",17,[[["self"]],["string"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"test_only_hash","","",17,[[["self"]],["hashvalue"]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"to_string","","",18,[[["self"]],["string"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"test_only_hash","","",18,[[["self"]],["hashvalue"]]],[11,"vzip","","",18,[[],["v"]]],[11,"from","libra_types::epoch_change","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"test_only_hash","","",20,[[["self"]],["hashvalue"]]],[11,"vzip","","",20,[[],["v"]]],[11,"from","libra_types::epoch_info","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"to_string","","",22,[[["self"]],["string"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"test_only_hash","","",22,[[["self"]],["hashvalue"]]],[11,"vzip","","",22,[[],["v"]]],[11,"from","libra_types::event","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"to_string","","",23,[[["self"]],["string"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"test_only_hash","","",23,[[["self"]],["hashvalue"]]],[11,"vzip","","",23,[[],["v"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"test_only_hash","","",24,[[["self"]],["hashvalue"]]],[11,"vzip","","",24,[[],["v"]]],[11,"from","libra_types::get_with_proof","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"test_only_hash","","",25,[[["self"]],["hashvalue"]]],[11,"vzip","","",25,[[],["v"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"test_only_hash","","",26,[[["self"]],["hashvalue"]]],[11,"vzip","","",26,[[],["v"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"test_only_hash","","",27,[[["self"]],["hashvalue"]]],[11,"vzip","","",27,[[],["v"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"test_only_hash","","",32,[[["self"]],["hashvalue"]]],[11,"vzip","","",32,[[],["v"]]],[11,"from","libra_types::ledger_info","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"to_string","","",38,[[["self"]],["string"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"test_only_hash","","",38,[[["self"]],["hashvalue"]]],[11,"vzip","","",38,[[],["v"]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"into","","",171,[[],["u"]]],[11,"to_owned","","",171,[[["self"]],["t"]]],[11,"clone_into","","",171,[[["self"],["t"]]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"try_into","","",171,[[],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"type_id","","",171,[[["self"]],["typeid"]]],[11,"vzip","","",171,[[],["v"]]],[11,"clear","","",171,[[["self"]]]],[11,"initialize","","",171,[[]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"to_string","","",39,[[["self"]],["string"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"test_only_hash","","",39,[[["self"]],["hashvalue"]]],[11,"vzip","","",39,[[],["v"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"to_string","","",37,[[["self"]],["string"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"test_only_hash","","",37,[[["self"]],["hashvalue"]]],[11,"vzip","","",37,[[],["v"]]],[11,"from","libra_types::libra_timestamp","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"test_only_hash","","",40,[[["self"]],["hashvalue"]]],[11,"vzip","","",40,[[],["v"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"test_only_hash","","",41,[[["self"]],["hashvalue"]]],[11,"vzip","","",41,[[],["v"]]],[11,"from","libra_types::mempool_status","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"vzip","","",42,[[],["v"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"vzip","","",43,[[],["v"]]],[11,"from","libra_types::on_chain_config","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"test_only_hash","","",45,[[["self"]],["hashvalue"]]],[11,"vzip","","",45,[[],["v"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"to_string","","",48,[[["self"]],["string"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"test_only_hash","","",48,[[["self"]],["hashvalue"]]],[11,"vzip","","",48,[[],["v"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"into_iter","","",49,[[],["i"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"to_string","","",49,[[["self"]],["string"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"test_only_hash","","",49,[[["self"]],["hashvalue"]]],[11,"vzip","","",49,[[],["v"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"test_only_hash","","",46,[[["self"]],["hashvalue"]]],[11,"vzip","","",46,[[],["v"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"vzip","","",52,[[],["v"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"vzip","","",53,[[],["v"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"test_only_hash","","",54,[[["self"]],["hashvalue"]]],[11,"vzip","","",54,[[],["v"]]],[11,"clear","","",54,[[["self"]]]],[11,"initialize","","",54,[[]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"test_only_hash","","",47,[[["self"]],["hashvalue"]]],[11,"vzip","","",47,[[],["v"]]],[11,"from","libra_types::proof","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"vzip","","",69,[[],["v"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"test_only_hash","","",70,[[["self"]],["hashvalue"]]],[11,"vzip","","",70,[[],["v"]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"into","","",172,[[],["u"]]],[11,"to_owned","","",172,[[["self"]],["t"]]],[11,"clone_into","","",172,[[["self"],["t"]]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"try_into","","",172,[[],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"type_id","","",172,[[["self"]],["typeid"]]],[11,"vzip","","",172,[[],["v"]]],[11,"clear","","",172,[[["self"]]]],[11,"initialize","","",172,[[]]],[11,"from","libra_types::proof::accumulator","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"vzip","","",55,[[],["v"]]],[11,"clear","","",55,[[["self"]]]],[11,"initialize","","",55,[[]]],[11,"from","libra_types::proof::definition","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"test_only_hash","","",56,[[["self"]],["hashvalue"]]],[11,"vzip","","",56,[[],["v"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"test_only_hash","","",57,[[["self"]],["hashvalue"]]],[11,"vzip","","",57,[[],["v"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"test_only_hash","","",58,[[["self"]],["hashvalue"]]],[11,"vzip","","",58,[[],["v"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"test_only_hash","","",59,[[["self"]],["hashvalue"]]],[11,"vzip","","",59,[[],["v"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"test_only_hash","","",60,[[["self"]],["hashvalue"]]],[11,"vzip","","",60,[[],["v"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"test_only_hash","","",61,[[["self"]],["hashvalue"]]],[11,"vzip","","",61,[[],["v"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"test_only_hash","","",62,[[["self"]],["hashvalue"]]],[11,"vzip","","",62,[[],["v"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"test_only_hash","","",63,[[["self"]],["hashvalue"]]],[11,"vzip","","",63,[[],["v"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"test_only_hash","","",64,[[["self"]],["hashvalue"]]],[11,"vzip","","",64,[[],["v"]]],[11,"from","libra_types::proof::position","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"to_string","","",66,[[["self"]],["string"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"vzip","","",66,[[],["v"]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[],["u"]]],[11,"into_iter","","",173,[[],["i"]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"try_into","","",173,[[],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"type_id","","",173,[[["self"]],["typeid"]]],[11,"vzip","","",173,[[],["v"]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[],["u"]]],[11,"into_iter","","",174,[[],["i"]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"try_into","","",174,[[],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"type_id","","",174,[[["self"]],["typeid"]]],[11,"vzip","","",174,[[],["v"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"into_iter","","",67,[[],["i"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"vzip","","",67,[[],["v"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"into_iter","","",68,[[],["i"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"vzip","","",68,[[],["v"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"vzip","","",65,[[],["v"]]],[11,"from","libra_types::proptest_types","",175,[[["t"]],["t"]]],[11,"into","","",175,[[],["u"]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"try_into","","",175,[[],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"type_id","","",175,[[["self"]],["typeid"]]],[11,"vzip","","",175,[[],["v"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"vzip","","",71,[[],["v"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"vzip","","",72,[[],["v"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"vzip","","",73,[[],["v"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"vzip","","",74,[[],["v"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"vzip","","",75,[[],["v"]]],[11,"from","libra_types::proto::types","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"vzip","","",76,[[],["v"]]],[11,"clear","","",76,[[["self"]]]],[11,"initialize","","",76,[[]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"vzip","","",77,[[],["v"]]],[11,"clear","","",77,[[["self"]]]],[11,"initialize","","",77,[[]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"vzip","","",78,[[],["v"]]],[11,"clear","","",78,[[["self"]]]],[11,"initialize","","",78,[[]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,[[["self"],["t"]]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"vzip","","",79,[[],["v"]]],[11,"clear","","",79,[[["self"]]]],[11,"initialize","","",79,[[]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,[[["self"],["t"]]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"vzip","","",80,[[],["v"]]],[11,"clear","","",80,[[["self"]]]],[11,"initialize","","",80,[[]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"vzip","","",81,[[],["v"]]],[11,"clear","","",81,[[["self"]]]],[11,"initialize","","",81,[[]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"vzip","","",82,[[],["v"]]],[11,"clear","","",82,[[["self"]]]],[11,"initialize","","",82,[[]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,[[["self"],["t"]]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"vzip","","",83,[[],["v"]]],[11,"clear","","",83,[[["self"]]]],[11,"initialize","","",83,[[]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,[[["self"],["t"]]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"vzip","","",84,[[],["v"]]],[11,"clear","","",84,[[["self"]]]],[11,"initialize","","",84,[[]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,[[["self"],["t"]]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"vzip","","",85,[[],["v"]]],[11,"clear","","",85,[[["self"]]]],[11,"initialize","","",85,[[]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,[[["self"],["t"]]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"vzip","","",86,[[],["v"]]],[11,"clear","","",86,[[["self"]]]],[11,"initialize","","",86,[[]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,[[["self"],["t"]]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"vzip","","",87,[[],["v"]]],[11,"clear","","",87,[[["self"]]]],[11,"initialize","","",87,[[]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,[[["self"],["t"]]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"vzip","","",88,[[],["v"]]],[11,"clear","","",88,[[["self"]]]],[11,"initialize","","",88,[[]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,[[["self"],["t"]]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"vzip","","",89,[[],["v"]]],[11,"clear","","",89,[[["self"]]]],[11,"initialize","","",89,[[]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,[[["self"],["t"]]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"vzip","","",90,[[],["v"]]],[11,"clear","","",90,[[["self"]]]],[11,"initialize","","",90,[[]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,[[["self"],["t"]]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"vzip","","",91,[[],["v"]]],[11,"clear","","",91,[[["self"]]]],[11,"initialize","","",91,[[]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"into","","",176,[[],["u"]]],[11,"to_owned","","",176,[[["self"]],["t"]]],[11,"clone_into","","",176,[[["self"],["t"]]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"try_into","","",176,[[],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"type_id","","",176,[[["self"]],["typeid"]]],[11,"vzip","","",176,[[],["v"]]],[11,"clear","","",176,[[["self"]]]],[11,"initialize","","",176,[[]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,[[["self"],["t"]]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"vzip","","",92,[[],["v"]]],[11,"clear","","",92,[[["self"]]]],[11,"initialize","","",92,[[]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,[[["self"],["t"]]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"vzip","","",93,[[],["v"]]],[11,"clear","","",93,[[["self"]]]],[11,"initialize","","",93,[[]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,[[["self"],["t"]]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"vzip","","",94,[[],["v"]]],[11,"clear","","",94,[[["self"]]]],[11,"initialize","","",94,[[]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,[[["self"],["t"]]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"vzip","","",95,[[],["v"]]],[11,"clear","","",95,[[["self"]]]],[11,"initialize","","",95,[[]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,[[["self"],["t"]]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"vzip","","",96,[[],["v"]]],[11,"clear","","",96,[[["self"]]]],[11,"initialize","","",96,[[]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,[[["self"],["t"]]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"vzip","","",97,[[],["v"]]],[11,"clear","","",97,[[["self"]]]],[11,"initialize","","",97,[[]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,[[["self"],["t"]]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"vzip","","",98,[[],["v"]]],[11,"clear","","",98,[[["self"]]]],[11,"initialize","","",98,[[]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,[[["self"],["t"]]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"vzip","","",99,[[],["v"]]],[11,"clear","","",99,[[["self"]]]],[11,"initialize","","",99,[[]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,[[["self"],["t"]]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"vzip","","",100,[[],["v"]]],[11,"clear","","",100,[[["self"]]]],[11,"initialize","","",100,[[]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,[[["self"],["t"]]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"vzip","","",101,[[],["v"]]],[11,"clear","","",101,[[["self"]]]],[11,"initialize","","",101,[[]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,[[["self"],["t"]]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"vzip","","",102,[[],["v"]]],[11,"clear","","",102,[[["self"]]]],[11,"initialize","","",102,[[]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,[[["self"],["t"]]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"vzip","","",103,[[],["v"]]],[11,"clear","","",103,[[["self"]]]],[11,"initialize","","",103,[[]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,[[["self"],["t"]]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"vzip","","",104,[[],["v"]]],[11,"clear","","",104,[[["self"]]]],[11,"initialize","","",104,[[]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,[[["self"],["t"]]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"vzip","","",105,[[],["v"]]],[11,"clear","","",105,[[["self"]]]],[11,"initialize","","",105,[[]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,[[["self"],["t"]]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"vzip","","",106,[[],["v"]]],[11,"clear","","",106,[[["self"]]]],[11,"initialize","","",106,[[]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,[[["self"],["t"]]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"vzip","","",107,[[],["v"]]],[11,"clear","","",107,[[["self"]]]],[11,"initialize","","",107,[[]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,[[["self"],["t"]]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"vzip","","",108,[[],["v"]]],[11,"clear","","",108,[[["self"]]]],[11,"initialize","","",108,[[]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,[[["self"],["t"]]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"vzip","","",109,[[],["v"]]],[11,"clear","","",109,[[["self"]]]],[11,"initialize","","",109,[[]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,[[["self"],["t"]]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"vzip","","",110,[[],["v"]]],[11,"clear","","",110,[[["self"]]]],[11,"initialize","","",110,[[]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,[[["self"],["t"]]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"vzip","","",111,[[],["v"]]],[11,"clear","","",111,[[["self"]]]],[11,"initialize","","",111,[[]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,[[["self"],["t"]]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"vzip","","",112,[[],["v"]]],[11,"clear","","",112,[[["self"]]]],[11,"initialize","","",112,[[]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,[[["self"],["t"]]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"vzip","","",113,[[],["v"]]],[11,"clear","","",113,[[["self"]]]],[11,"initialize","","",113,[[]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,[[["self"],["t"]]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"vzip","","",114,[[],["v"]]],[11,"clear","","",114,[[["self"]]]],[11,"initialize","","",114,[[]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,[[["self"],["t"]]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"vzip","","",115,[[],["v"]]],[11,"clear","","",115,[[["self"]]]],[11,"initialize","","",115,[[]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,[[["self"],["t"]]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"vzip","","",116,[[],["v"]]],[11,"clear","","",116,[[["self"]]]],[11,"initialize","","",116,[[]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,[[["self"],["t"]]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"vzip","","",117,[[],["v"]]],[11,"clear","","",117,[[["self"]]]],[11,"initialize","","",117,[[]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,[[["self"],["t"]]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"vzip","","",118,[[],["v"]]],[11,"clear","","",118,[[["self"]]]],[11,"initialize","","",118,[[]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,[[["self"],["t"]]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"vzip","","",119,[[],["v"]]],[11,"clear","","",119,[[["self"]]]],[11,"initialize","","",119,[[]]],[11,"from","libra_types::proto::types::transaction_argument","",120,[[["t"]],["t"]]],[11,"into","","",120,[[],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,[[["self"],["t"]]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"vzip","","",120,[[],["v"]]],[11,"clear","","",120,[[["self"]]]],[11,"initialize","","",120,[[]]],[11,"from","libra_types::proto::types::request_item","",121,[[["t"]],["t"]]],[11,"into","","",121,[[],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,[[["self"],["t"]]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"vzip","","",121,[[],["v"]]],[11,"from","libra_types::proto::types::response_item","",122,[[["t"]],["t"]]],[11,"into","","",122,[[],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,[[["self"],["t"]]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"vzip","","",122,[[],["v"]]],[11,"from","libra_types::transaction","",135,[[["t"]],["t"]]],[11,"into","","",135,[[],["u"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,[[["self"],["t"]]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"test_only_hash","","",135,[[["self"]],["hashvalue"]]],[11,"vzip","","",135,[[],["v"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[],["u"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,[[["self"],["t"]]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"test_only_hash","","",137,[[["self"]],["hashvalue"]]],[11,"vzip","","",137,[[],["v"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[],["u"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,[[["self"],["t"]]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"test_only_hash","","",138,[[["self"]],["hashvalue"]]],[11,"vzip","","",138,[[],["v"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[],["u"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,[[["self"],["t"]]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"test_only_hash","","",139,[[["self"]],["hashvalue"]]],[11,"vzip","","",139,[[],["v"]]],[11,"from","","",177,[[["t"]],["t"]]],[11,"into","","",177,[[],["u"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,[[["self"],["t"]]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"try_into","","",177,[[],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"type_id","","",177,[[["self"]],["typeid"]]],[11,"vzip","","",177,[[],["v"]]],[11,"clear","","",177,[[["self"]]]],[11,"initialize","","",177,[[]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[],["u"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,[[["self"],["t"]]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"test_only_hash","","",141,[[["self"]],["hashvalue"]]],[11,"vzip","","",141,[[],["v"]]],[11,"from","","",178,[[["t"]],["t"]]],[11,"into","","",178,[[],["u"]]],[11,"to_owned","","",178,[[["self"]],["t"]]],[11,"clone_into","","",178,[[["self"],["t"]]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"try_into","","",178,[[],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"type_id","","",178,[[["self"]],["typeid"]]],[11,"vzip","","",178,[[],["v"]]],[11,"clear","","",178,[[["self"]]]],[11,"initialize","","",178,[[]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[],["u"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,[[["self"],["t"]]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"vzip","","",140,[[],["v"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,[[["self"],["t"]]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"test_only_hash","","",123,[[["self"]],["hashvalue"]]],[11,"vzip","","",123,[[],["v"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[],["u"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,[[["self"],["t"]]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"vzip","","",142,[[],["v"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[],["u"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,[[["self"],["t"]]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"vzip","","",143,[[],["v"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[],["u"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,[[["self"],["t"]]]],[11,"to_string","","",144,[[["self"]],["string"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"test_only_hash","","",144,[[["self"]],["hashvalue"]]],[11,"vzip","","",144,[[],["v"]]],[11,"from","","",179,[[["t"]],["t"]]],[11,"into","","",179,[[],["u"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,[[["self"],["t"]]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"try_into","","",179,[[],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"type_id","","",179,[[["self"]],["typeid"]]],[11,"vzip","","",179,[[],["v"]]],[11,"clear","","",179,[[["self"]]]],[11,"initialize","","",179,[[]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[],["u"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,[[["self"],["t"]]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"test_only_hash","","",145,[[["self"]],["hashvalue"]]],[11,"vzip","","",145,[[],["v"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,[[["self"],["t"]]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"test_only_hash","","",124,[[["self"]],["hashvalue"]]],[11,"vzip","","",124,[[],["v"]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"into","","",180,[[],["u"]]],[11,"to_owned","","",180,[[["self"]],["t"]]],[11,"clone_into","","",180,[[["self"],["t"]]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"try_into","","",180,[[],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"type_id","","",180,[[["self"]],["typeid"]]],[11,"vzip","","",180,[[],["v"]]],[11,"clear","","",180,[[["self"]]]],[11,"initialize","","",180,[[]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,[[["self"],["t"]]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"test_only_hash","","",125,[[["self"]],["hashvalue"]]],[11,"vzip","","",125,[[],["v"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,[[["self"],["t"]]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"test_only_hash","","",126,[[["self"]],["hashvalue"]]],[11,"vzip","","",126,[[],["v"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,[[["self"],["t"]]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"test_only_hash","","",127,[[["self"]],["hashvalue"]]],[11,"vzip","","",127,[[],["v"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,[[["self"],["t"]]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"test_only_hash","","",128,[[["self"]],["hashvalue"]]],[11,"vzip","","",128,[[],["v"]]],[11,"from","libra_types::transaction::authenticator","",133,[[["t"]],["t"]]],[11,"into","","",133,[[],["u"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,[[["self"],["t"]]]],[11,"to_string","","",133,[[["self"]],["string"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"test_only_hash","","",133,[[["self"]],["hashvalue"]]],[11,"vzip","","",133,[[],["v"]]],[11,"encode_hex","","",133,[[["self"]],["u"]]],[11,"encode_hex_upper","","",133,[[["self"]],["u"]]],[11,"from","","",181,[[["t"]],["t"]]],[11,"into","","",181,[[],["u"]]],[11,"to_owned","","",181,[[["self"]],["t"]]],[11,"clone_into","","",181,[[["self"],["t"]]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"try_into","","",181,[[],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"type_id","","",181,[[["self"]],["typeid"]]],[11,"vzip","","",181,[[],["v"]]],[11,"clear","","",181,[[["self"]]]],[11,"initialize","","",181,[[]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[],["u"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"vzip","","",134,[[],["v"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[],["u"]]],[11,"to_string","","",129,[[["self"]],["string"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"vzip","","",129,[[],["v"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,[[["self"],["t"]]]],[11,"to_string","","",130,[[["self"]],["string"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"test_only_hash","","",130,[[["self"]],["hashvalue"]]],[11,"vzip","","",130,[[],["v"]]],[11,"from","libra_types::trusted_state","",149,[[["t"]],["t"]]],[11,"into","","",149,[[],["u"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,[[["self"],["t"]]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"vzip","","",149,[[],["v"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[],["u"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,[[["self"],["t"]]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"vzip","","",146,[[],["v"]]],[11,"from","libra_types::validator_config","",150,[[["t"]],["t"]]],[11,"into","","",150,[[],["u"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"test_only_hash","","",150,[[["self"]],["hashvalue"]]],[11,"vzip","","",150,[[],["v"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[],["u"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,[[["self"],["t"]]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"test_only_hash","","",151,[[["self"]],["hashvalue"]]],[11,"vzip","","",151,[[],["v"]]],[11,"from","libra_types::validator_info","",152,[[["t"]],["t"]]],[11,"into","","",152,[[],["u"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,[[["self"],["t"]]]],[11,"to_string","","",152,[[["self"]],["string"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"test_only_hash","","",152,[[["self"]],["hashvalue"]]],[11,"vzip","","",152,[[],["v"]]],[11,"from","libra_types::validator_signer","",153,[[["t"]],["t"]]],[11,"into","","",153,[[],["u"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,[[["self"],["t"]]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"vzip","","",153,[[],["v"]]],[11,"from","libra_types::validator_verifier","",157,[[["t"]],["t"]]],[11,"into","","",157,[[],["u"]]],[11,"to_owned","","",157,[[["self"]],["t"]]],[11,"clone_into","","",157,[[["self"],["t"]]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"try_into","","",157,[[],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"type_id","","",157,[[["self"]],["typeid"]]],[11,"test_only_hash","","",157,[[["self"]],["hashvalue"]]],[11,"vzip","","",157,[[],["v"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[],["u"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,[[["self"],["t"]]]],[11,"to_string","","",158,[[["self"]],["string"]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"try_into","","",158,[[],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"type_id","","",158,[[["self"]],["typeid"]]],[11,"test_only_hash","","",158,[[["self"]],["hashvalue"]]],[11,"vzip","","",158,[[],["v"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[],["u"]]],[11,"to_string","","",154,[[["self"]],["string"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"vzip","","",154,[[],["v"]]],[11,"from","libra_types::vm_error","",159,[[["t"]],["t"]]],[11,"into","","",159,[[],["u"]]],[11,"to_owned","","",159,[[["self"]],["t"]]],[11,"clone_into","","",159,[[["self"],["t"]]]],[11,"to_string","","",159,[[["self"]],["string"]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"try_into","","",159,[[],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"type_id","","",159,[[["self"]],["typeid"]]],[11,"test_only_hash","","",159,[[["self"]],["hashvalue"]]],[11,"vzip","","",159,[[],["v"]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[],["u"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,[[["self"],["t"]]]],[11,"to_string","","",160,[[["self"]],["string"]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"try_into","","",160,[[],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"type_id","","",160,[[["self"]],["typeid"]]],[11,"vzip","","",160,[[],["v"]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[],["u"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,[[["self"],["t"]]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"try_into","","",161,[[],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"type_id","","",161,[[["self"]],["typeid"]]],[11,"test_only_hash","","",161,[[["self"]],["hashvalue"]]],[11,"vzip","","",161,[[],["v"]]],[11,"from","libra_types::waypoint","",162,[[["t"]],["t"]]],[11,"into","","",162,[[],["u"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,[[["self"],["t"]]]],[11,"to_string","","",162,[[["self"]],["string"]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"try_into","","",162,[[],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"type_id","","",162,[[["self"]],["typeid"]]],[11,"test_only_hash","","",162,[[["self"]],["hashvalue"]]],[11,"vzip","","",162,[[],["v"]]],[11,"clear","","",162,[[["self"]]]],[11,"initialize","","",162,[[]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"into","","",182,[[],["u"]]],[11,"to_owned","","",182,[[["self"]],["t"]]],[11,"clone_into","","",182,[[["self"],["t"]]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"try_into","","",182,[[],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"type_id","","",182,[[["self"]],["typeid"]]],[11,"vzip","","",182,[[],["v"]]],[11,"clear","","",182,[[["self"]]]],[11,"initialize","","",182,[[]]],[11,"from","libra_types::write_set","",164,[[["t"]],["t"]]],[11,"into","","",164,[[],["u"]]],[11,"into_iter","","",164,[[],["i"]]],[11,"to_owned","","",164,[[["self"]],["t"]]],[11,"clone_into","","",164,[[["self"],["t"]]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"try_into","","",164,[[],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"type_id","","",164,[[["self"]],["typeid"]]],[11,"test_only_hash","","",164,[[["self"]],["hashvalue"]]],[11,"vzip","","",164,[[],["v"]]],[11,"clear","","",164,[[["self"]]]],[11,"initialize","","",164,[[]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"into","","",165,[[],["u"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,[[["self"],["t"]]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"try_into","","",165,[[],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"type_id","","",165,[[["self"]],["typeid"]]],[11,"test_only_hash","","",165,[[["self"]],["hashvalue"]]],[11,"vzip","","",165,[[],["v"]]],[11,"clear","","",165,[[["self"]]]],[11,"initialize","","",165,[[]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[],["u"]]],[11,"to_owned","","",163,[[["self"]],["t"]]],[11,"clone_into","","",163,[[["self"],["t"]]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"try_into","","",163,[[],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"type_id","","",163,[[["self"]],["typeid"]]],[11,"test_only_hash","","",163,[[["self"]],["hashvalue"]]],[11,"vzip","","",163,[[],["v"]]],[11,"default","libra_types::account_address","",166,[[],["accountaddress"]]],[11,"arbitrary_with","","",166,[[]]],[11,"fmt","","",166,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",166,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",166,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"hash","","",166,[[["self"]],["hashvalue"]]],[11,"serialize","","",166,[[["s"],["self"]],["result"]]],[11,"try_from","","",166,[[["bytes"]],[["accountaddress"],["result",["accountaddress","error"]],["error"]]]],[11,"try_from","","Tries to convert the provided byte array into Address.",166,[[],[["accountaddress"],["result",["accountaddress","error"]],["error"]]]],[11,"try_from","","Tries to convert the provided byte array into Address.",166,[[],[["accountaddress"],["result",["accountaddress","error"]],["error"]]]],[11,"try_from","","Tries to convert the provided byte buffer into Address.",166,[[["vec",["u8"]],["u8"]],[["accountaddress"],["result",["accountaddress","error"]],["error"]]]],[11,"try_from","","",166,[[["string"]],[["accountaddress"],["result",["accountaddress","error"]],["error"]]]],[11,"cmp","","",166,[[["accountaddress"],["self"]],["ordering"]]],[11,"clone","","",166,[[["self"]],["accountaddress"]]],[11,"eq","","",166,[[["accountaddress"],["self"]],["bool"]]],[11,"ne","","",166,[[["accountaddress"],["self"]],["bool"]]],[11,"from_str","","",166,[[["str"]],[["accountaddress"],["result",["accountaddress","error"]],["error"]]]],[11,"hash","","",166,[[["self"],["__h"]]]],[11,"deserialize","","",166,[[["d"]],[["accountaddress"],["result",["accountaddress"]]]]],[11,"as_ref","","",166,[[["self"]]]],[11,"partial_cmp","","",166,[[["accountaddress"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",166,[[["accountaddress"],["self"]],["bool"]]],[11,"le","","",166,[[["accountaddress"],["self"]],["bool"]]],[11,"gt","","",166,[[["accountaddress"],["self"]],["bool"]]],[11,"ge","","",166,[[["accountaddress"],["self"]],["bool"]]],[11,"verify","libra_types::epoch_info","",22,[[["self"],["ledgerinfowithsignatures"]],["result"]]],[11,"epoch_change_verification_required","","",22,[[["self"],["u64"]],["bool"]]],[11,"is_ledger_info_stale","","",22,[[["ledgerinfo"],["self"]],["bool"]]],[11,"verify","libra_types::waypoint","",162,[[["self"],["ledgerinfowithsignatures"]],["result"]]],[11,"epoch_change_verification_required","","",162,[[["self"],["u64"]],["bool"]]],[11,"is_ledger_info_stale","","",162,[[["ledgerinfo"],["self"]],["bool"]]],[11,"deserialize_into_config","libra_types::on_chain_config","",46,[[],["result"]]],[11,"as_ref","libra_types::account_state_blob","",167,[[["self"]]]],[11,"as_ref","libra_types::transaction::authenticator","",133,[[["self"]]]],[11,"from","libra_types::proto::types","",76,[[["accesspath"]],["self"]]],[11,"from","libra_types::access_path","",0,[[["moduleid"]],["accesspath"]]],[11,"from","libra_types::account_state_blob","",167,[[["vec",["u8"]],["u8"]],["accountstateblob"]]],[11,"from","libra_types::proto::types","",101,[[["accountstateblob"]],["self"]]],[11,"from","","",102,[[["accountstatewithproof"]],["self"]]],[11,"from","","",87,[[["contractevent"]],["self"]]],[11,"from","","",88,[[["eventwithproof"]],["self"]]],[11,"from","","",107,[[["epochchangeproof"]],["self"]]],[11,"from","","",108,[[["updatetolatestledgerrequest"]],["self"]]],[11,"from","","",110,[[["updatetolatestledgerresponse"]],["self"]]],[11,"from","","",109,[[["requestitem"]],["self"]]],[11,"from","","",111,[[["responseitem"]],["self"]]],[11,"from","","",104,[[["ledgerinfo"]],["self"]]],[11,"from","","",105,[[["ledgerinfowithsignatures"]],["self"]]],[11,"from","","",91,[[["mempoolstatus"]],["self"]]],[11,"from","","",103,[[["validatorset"]],["self"]]],[11,"from","","",78,[[["accumulatorproof"]],["self"]]],[11,"from","","",79,[[["sparsemerkleproof"]],["self"]]],[11,"from","","",80,[[["accumulatorconsistencyproof"]],["self"]]],[11,"from","","",81,[[["accumulatorrangeproof"]],["self"]]],[11,"from","","",82,[[["sparsemerklerangeproof"]],["self"]]],[11,"from","","",83,[[["transactionproof"]],["self"]]],[11,"from","","",84,[[["accountstateproof"]],["self"]]],[11,"from","","",85,[[["eventproof"]],["self"]]],[11,"from","","",86,[[["transactionlistproof"]],["self"]]],[11,"from","","",92,[[["signedtransaction"]],["self"]]],[11,"from","","",92,[[["signaturecheckedtransaction"]],["self"]]],[11,"from","","",94,[[["transactionwithproof"]],["self"]]],[11,"from","libra_types::transaction","",127,[[["vmstatus"]],["self"]]],[11,"from","libra_types::proto::types","",77,[[["transactioninfo"]],["self"]]],[11,"from","","",97,[[["transactiontocommit"]],["self"]]],[11,"from","","",98,[[["transactionlistwithproof"]],["self"]]],[11,"from","","",93,[[["transaction"]],["self"]]],[11,"from","libra_types::trusted_state","",149,[[["waypoint"]],["self"]]],[11,"from","libra_types::proto::types","",99,[[["validatorinfo"]],["self"]]],[11,"from","libra_types::validator_verifier","",158,[[["validatorset"]],["self"]]],[11,"from","libra_types::on_chain_config","",49,[[["validatorverifier"]],["self"]]],[11,"from","libra_types::proto::types","",100,[[["vmstatus"]],["self"]]],[11,"into_iter","libra_types::on_chain_config","",49,[[]]],[11,"into_iter","libra_types::write_set","",164,[[]]],[11,"next","libra_types::proof::position","",173,[[["self"]],[["option",["position"]],["position"]]]],[11,"next","","",174,[[["self"]],[["option",["position"]],["position"]]]],[11,"next","","",67,[[["self"]],[["option",["position"]],["position"]]]],[11,"next","","",68,[[["self"]],["option"]]],[11,"clone","libra_types::access_path","",0,[[["self"]],["accesspath"]]],[11,"clone","libra_types::account_state_blob","",167,[[["self"]],["accountstateblob"]]],[11,"clone","","",168,[[["self"]],["accountstateblobhasher"]]],[11,"clone","","",12,[[["self"]],["accountstatewithproof"]]],[11,"clone","libra_types::block_info","",13,[[["self"]],["blockinfo"]]],[11,"clone","libra_types::block_metadata","",14,[[["self"]],["blockmetadata"]]],[11,"clone","","",16,[[["self"]],["newblockevent"]]],[11,"clone","libra_types::contract_event","",18,[[["self"]],["contractevent"]]],[11,"clone","","",169,[[["self"]],["contracteventhasher"]]],[11,"clone","","",19,[[["self"]],["contracteventv0"]]],[11,"clone","","",170,[[["self"]],["contracteventv0hasher"]]],[11,"clone","","",17,[[["self"]],["eventwithproof"]]],[11,"clone","libra_types::epoch_change","",20,[[["self"]],["epochchangeproof"]]],[11,"clone","libra_types::epoch_info","",22,[[["self"]],["epochinfo"]]],[11,"clone","libra_types::event","",23,[[["self"]],["eventkey"]]],[11,"clone","","",24,[[["self"]],["eventhandle"]]],[11,"clone","libra_types::get_with_proof","",25,[[["self"]],["updatetolatestledgerrequest"]]],[11,"clone","","",26,[[["self"]],["updatetolatestledgerresponse"]]],[11,"clone","","",27,[[["self"]],["requestitem"]]],[11,"clone","","",32,[[["self"]],["responseitem"]]],[11,"clone","libra_types::ledger_info","",38,[[["self"]],["ledgerinfo"]]],[11,"clone","","",171,[[["self"]],["ledgerinfohasher"]]],[11,"clone","","",37,[[["self"]],["ledgerinfowithsignatures"]]],[11,"clone","","",39,[[["self"]],["ledgerinfowithv0"]]],[11,"clone","libra_types::libra_timestamp","",41,[[["self"]],["libratimestamp"]]],[11,"clone","libra_types::mempool_status","",42,[[["self"]],["mempoolstatus"]]],[11,"clone","","",43,[[["self"]],["mempoolstatuscode"]]],[11,"clone","libra_types::on_chain_config","",45,[[["self"]],["libraversion"]]],[11,"clone","","",48,[[["self"]],["registeredcurrencies"]]],[11,"clone","","",49,[[["self"]],["validatorset"]]],[11,"clone","","",47,[[["self"]],["vmpublishingoption"]]],[11,"clone","","",46,[[["self"]],["vmconfig"]]],[11,"clone","","",52,[[["self"]],["configid"]]],[11,"clone","","",53,[[["self"]],["onchainconfigpayload"]]],[11,"clone","libra_types::proof::definition","",56,[[["self"]],["accumulatorproof"]]],[11,"clone","","",57,[[["self"]],["sparsemerkleproof"]]],[11,"clone","","",58,[[["self"]],["accumulatorconsistencyproof"]]],[11,"clone","","",59,[[["self"]],["accumulatorrangeproof"]]],[11,"clone","","",60,[[["self"]],["sparsemerklerangeproof"]]],[11,"clone","","",61,[[["self"]],["transactionproof"]]],[11,"clone","","",62,[[["self"]],["accountstateproof"]]],[11,"clone","","",63,[[["self"]],["eventproof"]]],[11,"clone","","",64,[[["self"]],["transactionlistproof"]]],[11,"clone","libra_types::proof::position","",66,[[["self"]],["position"]]],[11,"clone","libra_types::proof","",70,[[["self"]],["sparsemerkleleafnode"]]],[11,"clone","","",172,[[["self"]],["sparsemerkleleafnodehasher"]]],[11,"clone","libra_types::proto::types","",76,[[["self"]],["accesspath"]]],[11,"clone","","",77,[[["self"]],["transactioninfo"]]],[11,"clone","","",78,[[["self"]],["accumulatorproof"]]],[11,"clone","","",79,[[["self"]],["sparsemerkleproof"]]],[11,"clone","","",80,[[["self"]],["accumulatorconsistencyproof"]]],[11,"clone","","",81,[[["self"]],["accumulatorrangeproof"]]],[11,"clone","","",82,[[["self"]],["sparsemerklerangeproof"]]],[11,"clone","","",83,[[["self"]],["transactionproof"]]],[11,"clone","","",84,[[["self"]],["accountstateproof"]]],[11,"clone","","",85,[[["self"]],["eventproof"]]],[11,"clone","","",86,[[["self"]],["transactionlistproof"]]],[11,"clone","","",87,[[["self"]],["event"]]],[11,"clone","","",88,[[["self"]],["eventwithproof"]]],[11,"clone","","",89,[[["self"]],["eventslist"]]],[11,"clone","","",90,[[["self"]],["eventsforversions"]]],[11,"clone","","",91,[[["self"]],["mempoolstatus"]]],[11,"clone","","",176,[[["self"]],["transactionargument"]]],[11,"clone","libra_types::proto::types::transaction_argument","",120,[[["self"]],["argtype"]]],[11,"clone","libra_types::proto::types","",92,[[["self"]],["signedtransaction"]]],[11,"clone","","",93,[[["self"]],["transaction"]]],[11,"clone","","",94,[[["self"]],["transactionwithproof"]]],[11,"clone","","",95,[[["self"]],["signedtransactionsblock"]]],[11,"clone","","",96,[[["self"]],["accountstate"]]],[11,"clone","","",97,[[["self"]],["transactiontocommit"]]],[11,"clone","","",98,[[["self"]],["transactionlistwithproof"]]],[11,"clone","","",99,[[["self"]],["validatorinfo"]]],[11,"clone","","",100,[[["self"]],["vmstatus"]]],[11,"clone","","",101,[[["self"]],["accountstateblob"]]],[11,"clone","","",102,[[["self"]],["accountstatewithproof"]]],[11,"clone","","",103,[[["self"]],["validatorset"]]],[11,"clone","","",104,[[["self"]],["ledgerinfo"]]],[11,"clone","","",105,[[["self"]],["ledgerinfowithsignatures"]]],[11,"clone","","",106,[[["self"]],["validatorsignature"]]],[11,"clone","","",107,[[["self"]],["epochchangeproof"]]],[11,"clone","","",108,[[["self"]],["updatetolatestledgerrequest"]]],[11,"clone","","",109,[[["self"]],["requestitem"]]],[11,"clone","libra_types::proto::types::request_item","",121,[[["self"]],["requesteditems"]]],[11,"clone","libra_types::proto::types","",110,[[["self"]],["updatetolatestledgerresponse"]]],[11,"clone","","",111,[[["self"]],["responseitem"]]],[11,"clone","libra_types::proto::types::response_item","",122,[[["self"]],["responseitems"]]],[11,"clone","libra_types::proto::types","",112,[[["self"]],["getaccountstaterequest"]]],[11,"clone","","",113,[[["self"]],["getaccountstateresponse"]]],[11,"clone","","",114,[[["self"]],["getaccounttransactionbysequencenumberrequest"]]],[11,"clone","","",115,[[["self"]],["getaccounttransactionbysequencenumberresponse"]]],[11,"clone","","",116,[[["self"]],["geteventsbyeventaccesspathrequest"]]],[11,"clone","","",117,[[["self"]],["geteventsbyeventaccesspathresponse"]]],[11,"clone","","",118,[[["self"]],["gettransactionsrequest"]]],[11,"clone","","",119,[[["self"]],["gettransactionsresponse"]]],[11,"clone","libra_types::transaction::authenticator","",130,[[["self"]],["transactionauthenticator"]]],[11,"clone","","",133,[[["self"]],["authenticationkey"]]],[11,"clone","","",181,[[["self"]],["authenticationkeyhasher"]]],[11,"clone","libra_types::transaction","",135,[[["self"]],["changeset"]]],[11,"clone","","",137,[[["self"]],["module"]]],[11,"clone","","",138,[[["self"]],["script"]]],[11,"clone","","",125,[[["self"]],["transactionargument"]]],[11,"clone","","",139,[[["self"]],["rawtransaction"]]],[11,"clone","","",177,[[["self"]],["rawtransactionhasher"]]],[11,"clone","","",126,[[["self"]],["transactionpayload"]]],[11,"clone","","",141,[[["self"]],["signedtransaction"]]],[11,"clone","","",178,[[["self"]],["signedtransactionhasher"]]],[11,"clone","","",140,[[["self"]],["signaturecheckedtransaction"]]],[11,"clone","","",123,[[["self"]],["transactionwithproof"]]],[11,"clone","","",127,[[["self"]],["transactionstatus"]]],[11,"clone","","",142,[[["self"]],["vmvalidatorresult"]]],[11,"clone","","",143,[[["self"]],["transactionoutput"]]],[11,"clone","","",144,[[["self"]],["transactioninfo"]]],[11,"clone","","",179,[[["self"]],["transactioninfohasher"]]],[11,"clone","","",145,[[["self"]],["transactiontocommit"]]],[11,"clone","","",124,[[["self"]],["transactionlistwithproof"]]],[11,"clone","","",128,[[["self"]],["transaction"]]],[11,"clone","","",180,[[["self"]],["transactionhasher"]]],[11,"clone","libra_types::trusted_state","",149,[[["self"]],["trustedstate"]]],[11,"clone","","",146,[[["self"]],["trustedstatechange"]]],[11,"clone","libra_types::validator_config","",151,[[["self"]],["validatorconfig"]]],[11,"clone","libra_types::validator_info","",152,[[["self"]],["validatorinfo"]]],[11,"clone","libra_types::validator_signer","",153,[[["self"]],["validatorsigner"]]],[11,"clone","libra_types::validator_verifier","",157,[[["self"]],["validatorconsensusinfo"]]],[11,"clone","","",158,[[["self"]],["validatorverifier"]]],[11,"clone","libra_types::vm_error","",159,[[["self"]],["vmstatus"]]],[11,"clone","","",160,[[["self"]],["statustype"]]],[11,"clone","","",161,[[["self"]],["statuscode"]]],[11,"clone","libra_types::waypoint","",162,[[["self"]],["waypoint"]]],[11,"clone","","",182,[[["self"]],["ledger2waypointconverterhasher"]]],[11,"clone","libra_types::write_set","",163,[[["self"]],["writeop"]]],[11,"clone","","",164,[[["self"]],["writeset"]]],[11,"clone","","",165,[[["self"]],["writesetmut"]]],[11,"default","libra_types::access_path","",0,[[],["accesspath"]]],[11,"default","libra_types::account_state","",11,[[],["accountstate"]]],[11,"default","libra_types::account_state_blob","",168,[[],["self"]]],[11,"default","libra_types::contract_event","",169,[[],["self"]]],[11,"default","","",170,[[],["self"]]],[11,"default","libra_types::ledger_info","",171,[[],["self"]]],[11,"default","libra_types::on_chain_config","",54,[[],["self"]]],[11,"default","libra_types::proof::accumulator","",55,[[],["self"]]],[11,"default","libra_types::proof","",172,[[],["self"]]],[11,"default","libra_types::proto::types","",76,[[],["accesspath"]]],[11,"default","","",77,[[],["transactioninfo"]]],[11,"default","","",78,[[],["accumulatorproof"]]],[11,"default","","",79,[[],["sparsemerkleproof"]]],[11,"default","","",80,[[],["accumulatorconsistencyproof"]]],[11,"default","","",81,[[],["accumulatorrangeproof"]]],[11,"default","","",82,[[],["sparsemerklerangeproof"]]],[11,"default","","",83,[[],["transactionproof"]]],[11,"default","","",84,[[],["accountstateproof"]]],[11,"default","","",85,[[],["eventproof"]]],[11,"default","","",86,[[],["transactionlistproof"]]],[11,"default","","",87,[[],["event"]]],[11,"default","","",88,[[],["eventwithproof"]]],[11,"default","","",89,[[],["eventslist"]]],[11,"default","","",90,[[],["eventsforversions"]]],[11,"default","","",91,[[],["mempoolstatus"]]],[11,"default","","",176,[[],["transactionargument"]]],[11,"default","libra_types::proto::types::transaction_argument","",120,[[],["argtype"]]],[11,"default","libra_types::proto::types","",92,[[],["signedtransaction"]]],[11,"default","","",93,[[],["transaction"]]],[11,"default","","",94,[[],["transactionwithproof"]]],[11,"default","","",95,[[],["signedtransactionsblock"]]],[11,"default","","",96,[[],["accountstate"]]],[11,"default","","",97,[[],["transactiontocommit"]]],[11,"default","","",98,[[],["transactionlistwithproof"]]],[11,"default","","",99,[[],["validatorinfo"]]],[11,"default","","",100,[[],["vmstatus"]]],[11,"default","","",101,[[],["accountstateblob"]]],[11,"default","","",102,[[],["accountstatewithproof"]]],[11,"default","","",103,[[],["validatorset"]]],[11,"default","","",104,[[],["ledgerinfo"]]],[11,"default","","",105,[[],["ledgerinfowithsignatures"]]],[11,"default","","",106,[[],["validatorsignature"]]],[11,"default","","",107,[[],["epochchangeproof"]]],[11,"default","","",108,[[],["updatetolatestledgerrequest"]]],[11,"default","","",109,[[],["requestitem"]]],[11,"default","","",110,[[],["updatetolatestledgerresponse"]]],[11,"default","","",111,[[],["responseitem"]]],[11,"default","","",112,[[],["getaccountstaterequest"]]],[11,"default","","",113,[[],["getaccountstateresponse"]]],[11,"default","","",114,[[],["getaccounttransactionbysequencenumberrequest"]]],[11,"default","","",115,[[],["getaccounttransactionbysequencenumberresponse"]]],[11,"default","","",116,[[],["geteventsbyeventaccesspathrequest"]]],[11,"default","","",117,[[],["geteventsbyeventaccesspathresponse"]]],[11,"default","","",118,[[],["gettransactionsrequest"]]],[11,"default","","",119,[[],["gettransactionsresponse"]]],[11,"default","libra_types::transaction::authenticator","",181,[[],["self"]]],[11,"default","libra_types::transaction","",177,[[],["self"]]],[11,"default","","",178,[[],["self"]]],[11,"default","","",179,[[],["self"]]],[11,"default","","",180,[[],["self"]]],[11,"default","libra_types::waypoint","",162,[[],["waypoint"]]],[11,"default","","",182,[[],["self"]]],[11,"default","libra_types::write_set","",164,[[],["writeset"]]],[11,"default","","",165,[[],["writesetmut"]]],[11,"cmp","libra_types::access_path","",0,[[["accesspath"],["self"]],["ordering"]]],[11,"cmp","libra_types::event","",23,[[["self"],["eventkey"]],["ordering"]]],[11,"cmp","libra_types::mempool_status","",42,[[["self"],["mempoolstatus"]],["ordering"]]],[11,"cmp","","",43,[[["self"],["mempoolstatuscode"]],["ordering"]]],[11,"cmp","libra_types::proto::types::transaction_argument","",120,[[["self"],["argtype"]],["ordering"]]],[11,"cmp","libra_types::transaction::authenticator","",133,[[["self"],["authenticationkey"]],["ordering"]]],[11,"cmp","libra_types::vm_error","",159,[[["self"],["vmstatus"]],["ordering"]]],[11,"cmp","","",161,[[["statuscode"],["self"]],["ordering"]]],[11,"eq","libra_types::access_path","",0,[[["accesspath"],["self"]],["bool"]]],[11,"ne","","",0,[[["accesspath"],["self"]],["bool"]]],[11,"eq","libra_types::account_state","",11,[[["accountstate"],["self"]],["bool"]]],[11,"ne","","",11,[[["accountstate"],["self"]],["bool"]]],[11,"eq","libra_types::account_state_blob","",167,[[["self"],["accountstateblob"]],["bool"]]],[11,"ne","","",167,[[["self"],["accountstateblob"]],["bool"]]],[11,"eq","","",12,[[["accountstatewithproof"],["self"]],["bool"]]],[11,"ne","","",12,[[["accountstatewithproof"],["self"]],["bool"]]],[11,"eq","libra_types::block_info","",13,[[["blockinfo"],["self"]],["bool"]]],[11,"ne","","",13,[[["blockinfo"],["self"]],["bool"]]],[11,"eq","libra_types::block_metadata","",14,[[["blockmetadata"],["self"]],["bool"]]],[11,"ne","","",14,[[["blockmetadata"],["self"]],["bool"]]],[11,"eq","libra_types::contract_event","",18,[[["self"],["contractevent"]],["bool"]]],[11,"ne","","",18,[[["self"],["contractevent"]],["bool"]]],[11,"eq","","",19,[[["self"],["contracteventv0"]],["bool"]]],[11,"ne","","",19,[[["self"],["contracteventv0"]],["bool"]]],[11,"eq","","",17,[[["self"],["eventwithproof"]],["bool"]]],[11,"ne","","",17,[[["self"],["eventwithproof"]],["bool"]]],[11,"eq","libra_types::epoch_change","",20,[[["epochchangeproof"],["self"]],["bool"]]],[11,"ne","","",20,[[["epochchangeproof"],["self"]],["bool"]]],[11,"eq","libra_types::epoch_info","",22,[[["self"],["epochinfo"]],["bool"]]],[11,"ne","","",22,[[["self"],["epochinfo"]],["bool"]]],[11,"eq","libra_types::event","",23,[[["self"],["eventkey"]],["bool"]]],[11,"ne","","",23,[[["self"],["eventkey"]],["bool"]]],[11,"eq","","",24,[[["self"],["eventhandle"]],["bool"]]],[11,"ne","","",24,[[["self"],["eventhandle"]],["bool"]]],[11,"eq","libra_types::get_with_proof","",25,[[["updatetolatestledgerrequest"],["self"]],["bool"]]],[11,"ne","","",25,[[["updatetolatestledgerrequest"],["self"]],["bool"]]],[11,"eq","","",26,[[["self"],["updatetolatestledgerresponse"]],["bool"]]],[11,"ne","","",26,[[["self"],["updatetolatestledgerresponse"]],["bool"]]],[11,"eq","","",27,[[["self"],["requestitem"]],["bool"]]],[11,"ne","","",27,[[["self"],["requestitem"]],["bool"]]],[11,"eq","","",32,[[["responseitem"],["self"]],["bool"]]],[11,"ne","","",32,[[["responseitem"],["self"]],["bool"]]],[11,"eq","libra_types::ledger_info","",38,[[["ledgerinfo"],["self"]],["bool"]]],[11,"ne","","",38,[[["ledgerinfo"],["self"]],["bool"]]],[11,"eq","","",37,[[["self"],["ledgerinfowithsignatures"]],["bool"]]],[11,"ne","","",37,[[["self"],["ledgerinfowithsignatures"]],["bool"]]],[11,"eq","","",39,[[["ledgerinfowithv0"],["self"]],["bool"]]],[11,"ne","","",39,[[["ledgerinfowithv0"],["self"]],["bool"]]],[11,"eq","libra_types::mempool_status","",42,[[["self"],["mempoolstatus"]],["bool"]]],[11,"ne","","",42,[[["self"],["mempoolstatus"]],["bool"]]],[11,"eq","","",43,[[["self"],["mempoolstatuscode"]],["bool"]]],[11,"eq","libra_types::on_chain_config","",45,[[["libraversion"],["self"]],["bool"]]],[11,"ne","","",45,[[["libraversion"],["self"]],["bool"]]],[11,"eq","","",48,[[["self"],["registeredcurrencies"]],["bool"]]],[11,"ne","","",48,[[["self"],["registeredcurrencies"]],["bool"]]],[11,"eq","","",49,[[["self"],["validatorset"]],["bool"]]],[11,"ne","","",49,[[["self"],["validatorset"]],["bool"]]],[11,"eq","","",47,[[["self"],["vmpublishingoption"]],["bool"]]],[11,"ne","","",47,[[["self"],["vmpublishingoption"]],["bool"]]],[11,"eq","","",46,[[["vmconfig"],["self"]],["bool"]]],[11,"ne","","",46,[[["vmconfig"],["self"]],["bool"]]],[11,"eq","","",52,[[["self"],["configid"]],["bool"]]],[11,"ne","","",52,[[["self"],["configid"]],["bool"]]],[11,"eq","","",53,[[["self"],["onchainconfigpayload"]],["bool"]]],[11,"ne","","",53,[[["self"],["onchainconfigpayload"]],["bool"]]],[11,"eq","libra_types::proof::definition","",56,[[["self"]],["bool"]]],[11,"eq","","",57,[[["self"],["sparsemerkleproof"]],["bool"]]],[11,"ne","","",57,[[["self"],["sparsemerkleproof"]],["bool"]]],[11,"eq","","",58,[[["accumulatorconsistencyproof"],["self"]],["bool"]]],[11,"ne","","",58,[[["accumulatorconsistencyproof"],["self"]],["bool"]]],[11,"eq","","",59,[[["self"]],["bool"]]],[11,"eq","","",60,[[["sparsemerklerangeproof"],["self"]],["bool"]]],[11,"ne","","",60,[[["sparsemerklerangeproof"],["self"]],["bool"]]],[11,"eq","","",61,[[["self"],["transactionproof"]],["bool"]]],[11,"ne","","",61,[[["self"],["transactionproof"]],["bool"]]],[11,"eq","","",62,[[["self"],["accountstateproof"]],["bool"]]],[11,"ne","","",62,[[["self"],["accountstateproof"]],["bool"]]],[11,"eq","","",63,[[["self"],["eventproof"]],["bool"]]],[11,"ne","","",63,[[["self"],["eventproof"]],["bool"]]],[11,"eq","","",64,[[["self"],["transactionlistproof"]],["bool"]]],[11,"ne","","",64,[[["self"],["transactionlistproof"]],["bool"]]],[11,"eq","libra_types::proof::position","",66,[[["self"],["position"]],["bool"]]],[11,"ne","","",66,[[["self"],["position"]],["bool"]]],[11,"eq","","",65,[[["self"],["nodedirection"]],["bool"]]],[11,"eq","libra_types::proof","",70,[[["sparsemerkleleafnode"],["self"]],["bool"]]],[11,"ne","","",70,[[["sparsemerkleleafnode"],["self"]],["bool"]]],[11,"eq","libra_types::proto::types","",76,[[["accesspath"],["self"]],["bool"]]],[11,"ne","","",76,[[["accesspath"],["self"]],["bool"]]],[11,"eq","","",77,[[["transactioninfo"],["self"]],["bool"]]],[11,"ne","","",77,[[["transactioninfo"],["self"]],["bool"]]],[11,"eq","","",78,[[["accumulatorproof"],["self"]],["bool"]]],[11,"ne","","",78,[[["accumulatorproof"],["self"]],["bool"]]],[11,"eq","","",79,[[["sparsemerkleproof"],["self"]],["bool"]]],[11,"ne","","",79,[[["sparsemerkleproof"],["self"]],["bool"]]],[11,"eq","","",80,[[["self"],["accumulatorconsistencyproof"]],["bool"]]],[11,"ne","","",80,[[["self"],["accumulatorconsistencyproof"]],["bool"]]],[11,"eq","","",81,[[["self"],["accumulatorrangeproof"]],["bool"]]],[11,"ne","","",81,[[["self"],["accumulatorrangeproof"]],["bool"]]],[11,"eq","","",82,[[["self"],["sparsemerklerangeproof"]],["bool"]]],[11,"ne","","",82,[[["self"],["sparsemerklerangeproof"]],["bool"]]],[11,"eq","","",83,[[["transactionproof"],["self"]],["bool"]]],[11,"ne","","",83,[[["transactionproof"],["self"]],["bool"]]],[11,"eq","","",84,[[["self"],["accountstateproof"]],["bool"]]],[11,"ne","","",84,[[["self"],["accountstateproof"]],["bool"]]],[11,"eq","","",85,[[["eventproof"],["self"]],["bool"]]],[11,"ne","","",85,[[["eventproof"],["self"]],["bool"]]],[11,"eq","","",86,[[["transactionlistproof"],["self"]],["bool"]]],[11,"ne","","",86,[[["transactionlistproof"],["self"]],["bool"]]],[11,"eq","","",87,[[["event"],["self"]],["bool"]]],[11,"ne","","",87,[[["event"],["self"]],["bool"]]],[11,"eq","","",88,[[["self"],["eventwithproof"]],["bool"]]],[11,"ne","","",88,[[["self"],["eventwithproof"]],["bool"]]],[11,"eq","","",89,[[["eventslist"],["self"]],["bool"]]],[11,"ne","","",89,[[["eventslist"],["self"]],["bool"]]],[11,"eq","","",90,[[["eventsforversions"],["self"]],["bool"]]],[11,"ne","","",90,[[["eventsforversions"],["self"]],["bool"]]],[11,"eq","","",91,[[["mempoolstatus"],["self"]],["bool"]]],[11,"ne","","",91,[[["mempoolstatus"],["self"]],["bool"]]],[11,"eq","","",176,[[["self"],["transactionargument"]],["bool"]]],[11,"eq","libra_types::proto::types::transaction_argument","",120,[[["self"],["argtype"]],["bool"]]],[11,"eq","libra_types::proto::types","",92,[[["signedtransaction"],["self"]],["bool"]]],[11,"ne","","",92,[[["signedtransaction"],["self"]],["bool"]]],[11,"eq","","",93,[[["transaction"],["self"]],["bool"]]],[11,"ne","","",93,[[["transaction"],["self"]],["bool"]]],[11,"eq","","",94,[[["self"],["transactionwithproof"]],["bool"]]],[11,"ne","","",94,[[["self"],["transactionwithproof"]],["bool"]]],[11,"eq","","",95,[[["self"],["signedtransactionsblock"]],["bool"]]],[11,"ne","","",95,[[["self"],["signedtransactionsblock"]],["bool"]]],[11,"eq","","",96,[[["accountstate"],["self"]],["bool"]]],[11,"ne","","",96,[[["accountstate"],["self"]],["bool"]]],[11,"eq","","",97,[[["transactiontocommit"],["self"]],["bool"]]],[11,"ne","","",97,[[["transactiontocommit"],["self"]],["bool"]]],[11,"eq","","",98,[[["transactionlistwithproof"],["self"]],["bool"]]],[11,"ne","","",98,[[["transactionlistwithproof"],["self"]],["bool"]]],[11,"eq","","",99,[[["self"],["validatorinfo"]],["bool"]]],[11,"ne","","",99,[[["self"],["validatorinfo"]],["bool"]]],[11,"eq","","",100,[[["self"],["vmstatus"]],["bool"]]],[11,"ne","","",100,[[["self"],["vmstatus"]],["bool"]]],[11,"eq","","",101,[[["accountstateblob"],["self"]],["bool"]]],[11,"ne","","",101,[[["accountstateblob"],["self"]],["bool"]]],[11,"eq","","",102,[[["accountstatewithproof"],["self"]],["bool"]]],[11,"ne","","",102,[[["accountstatewithproof"],["self"]],["bool"]]],[11,"eq","","",103,[[["validatorset"],["self"]],["bool"]]],[11,"ne","","",103,[[["validatorset"],["self"]],["bool"]]],[11,"eq","","",104,[[["self"],["ledgerinfo"]],["bool"]]],[11,"ne","","",104,[[["self"],["ledgerinfo"]],["bool"]]],[11,"eq","","",105,[[["self"],["ledgerinfowithsignatures"]],["bool"]]],[11,"ne","","",105,[[["self"],["ledgerinfowithsignatures"]],["bool"]]],[11,"eq","","",106,[[["validatorsignature"],["self"]],["bool"]]],[11,"ne","","",106,[[["validatorsignature"],["self"]],["bool"]]],[11,"eq","","",107,[[["epochchangeproof"],["self"]],["bool"]]],[11,"ne","","",107,[[["epochchangeproof"],["self"]],["bool"]]],[11,"eq","","",108,[[["self"],["updatetolatestledgerrequest"]],["bool"]]],[11,"ne","","",108,[[["self"],["updatetolatestledgerrequest"]],["bool"]]],[11,"eq","","",109,[[["requestitem"],["self"]],["bool"]]],[11,"ne","","",109,[[["requestitem"],["self"]],["bool"]]],[11,"eq","libra_types::proto::types::request_item","",121,[[["self"],["requesteditems"]],["bool"]]],[11,"ne","","",121,[[["self"],["requesteditems"]],["bool"]]],[11,"eq","libra_types::proto::types","",110,[[["updatetolatestledgerresponse"],["self"]],["bool"]]],[11,"ne","","",110,[[["updatetolatestledgerresponse"],["self"]],["bool"]]],[11,"eq","","",111,[[["self"],["responseitem"]],["bool"]]],[11,"ne","","",111,[[["self"],["responseitem"]],["bool"]]],[11,"eq","libra_types::proto::types::response_item","",122,[[["self"],["responseitems"]],["bool"]]],[11,"ne","","",122,[[["self"],["responseitems"]],["bool"]]],[11,"eq","libra_types::proto::types","",112,[[["self"],["getaccountstaterequest"]],["bool"]]],[11,"ne","","",112,[[["self"],["getaccountstaterequest"]],["bool"]]],[11,"eq","","",113,[[["self"],["getaccountstateresponse"]],["bool"]]],[11,"ne","","",113,[[["self"],["getaccountstateresponse"]],["bool"]]],[11,"eq","","",114,[[["getaccounttransactionbysequencenumberrequest"],["self"]],["bool"]]],[11,"ne","","",114,[[["getaccounttransactionbysequencenumberrequest"],["self"]],["bool"]]],[11,"eq","","",115,[[["getaccounttransactionbysequencenumberresponse"],["self"]],["bool"]]],[11,"ne","","",115,[[["getaccounttransactionbysequencenumberresponse"],["self"]],["bool"]]],[11,"eq","","",116,[[["geteventsbyeventaccesspathrequest"],["self"]],["bool"]]],[11,"ne","","",116,[[["geteventsbyeventaccesspathrequest"],["self"]],["bool"]]],[11,"eq","","",117,[[["geteventsbyeventaccesspathresponse"],["self"]],["bool"]]],[11,"ne","","",117,[[["geteventsbyeventaccesspathresponse"],["self"]],["bool"]]],[11,"eq","","",118,[[["gettransactionsrequest"],["self"]],["bool"]]],[11,"ne","","",118,[[["gettransactionsrequest"],["self"]],["bool"]]],[11,"eq","","",119,[[["gettransactionsresponse"],["self"]],["bool"]]],[11,"ne","","",119,[[["gettransactionsresponse"],["self"]],["bool"]]],[11,"eq","libra_types::transaction::authenticator","",130,[[["self"],["transactionauthenticator"]],["bool"]]],[11,"ne","","",130,[[["self"],["transactionauthenticator"]],["bool"]]],[11,"eq","","",133,[[["self"],["authenticationkey"]],["bool"]]],[11,"ne","","",133,[[["self"],["authenticationkey"]],["bool"]]],[11,"eq","libra_types::transaction","",135,[[["changeset"],["self"]],["bool"]]],[11,"ne","","",135,[[["changeset"],["self"]],["bool"]]],[11,"eq","","",137,[[["module"],["self"]],["bool"]]],[11,"ne","","",137,[[["module"],["self"]],["bool"]]],[11,"eq","","",138,[[["script"],["self"]],["bool"]]],[11,"ne","","",138,[[["script"],["self"]],["bool"]]],[11,"eq","","",125,[[["self"],["transactionargument"]],["bool"]]],[11,"ne","","",125,[[["self"],["transactionargument"]],["bool"]]],[11,"eq","","",139,[[["rawtransaction"],["self"]],["bool"]]],[11,"ne","","",139,[[["rawtransaction"],["self"]],["bool"]]],[11,"eq","","",126,[[["transactionpayload"],["self"]],["bool"]]],[11,"ne","","",126,[[["transactionpayload"],["self"]],["bool"]]],[11,"eq","","",141,[[["signedtransaction"],["self"]],["bool"]]],[11,"ne","","",141,[[["signedtransaction"],["self"]],["bool"]]],[11,"eq","","",140,[[["signaturecheckedtransaction"],["self"]],["bool"]]],[11,"ne","","",140,[[["signaturecheckedtransaction"],["self"]],["bool"]]],[11,"eq","","",123,[[["self"],["transactionwithproof"]],["bool"]]],[11,"ne","","",123,[[["self"],["transactionwithproof"]],["bool"]]],[11,"eq","","",127,[[["self"],["transactionstatus"]],["bool"]]],[11,"ne","","",127,[[["self"],["transactionstatus"]],["bool"]]],[11,"eq","","",142,[[["self"],["vmvalidatorresult"]],["bool"]]],[11,"ne","","",142,[[["self"],["vmvalidatorresult"]],["bool"]]],[11,"eq","","",143,[[["transactionoutput"],["self"]],["bool"]]],[11,"ne","","",143,[[["transactionoutput"],["self"]],["bool"]]],[11,"eq","","",144,[[["transactioninfo"],["self"]],["bool"]]],[11,"ne","","",144,[[["transactioninfo"],["self"]],["bool"]]],[11,"eq","","",145,[[["transactiontocommit"],["self"]],["bool"]]],[11,"ne","","",145,[[["transactiontocommit"],["self"]],["bool"]]],[11,"eq","","",124,[[["transactionlistwithproof"],["self"]],["bool"]]],[11,"ne","","",124,[[["transactionlistwithproof"],["self"]],["bool"]]],[11,"eq","","",128,[[["self"],["transaction"]],["bool"]]],[11,"ne","","",128,[[["self"],["transaction"]],["bool"]]],[11,"eq","libra_types::validator_config","",151,[[["validatorconfig"],["self"]],["bool"]]],[11,"ne","","",151,[[["validatorconfig"],["self"]],["bool"]]],[11,"eq","libra_types::validator_info","",152,[[["validatorinfo"],["self"]],["bool"]]],[11,"ne","","",152,[[["validatorinfo"],["self"]],["bool"]]],[11,"eq","libra_types::validator_verifier","",154,[[["verifyerror"],["self"]],["bool"]]],[11,"ne","","",154,[[["verifyerror"],["self"]],["bool"]]],[11,"eq","","",157,[[["self"],["validatorconsensusinfo"]],["bool"]]],[11,"ne","","",157,[[["self"],["validatorconsensusinfo"]],["bool"]]],[11,"eq","","",158,[[["validatorverifier"],["self"]],["bool"]]],[11,"ne","","",158,[[["validatorverifier"],["self"]],["bool"]]],[11,"eq","libra_types::vm_error","",159,[[["self"],["vmstatus"]],["bool"]]],[11,"ne","","",159,[[["self"],["vmstatus"]],["bool"]]],[11,"eq","","",160,[[["self"],["statustype"]],["bool"]]],[11,"eq","","",161,[[["statuscode"],["self"]],["bool"]]],[11,"eq","libra_types::waypoint","",162,[[["waypoint"],["self"]],["bool"]]],[11,"ne","","",162,[[["waypoint"],["self"]],["bool"]]],[11,"eq","libra_types::write_set","",163,[[["self"],["writeop"]],["bool"]]],[11,"ne","","",163,[[["self"],["writeop"]],["bool"]]],[11,"eq","","",164,[[["writeset"],["self"]],["bool"]]],[11,"ne","","",164,[[["writeset"],["self"]],["bool"]]],[11,"eq","","",165,[[["self"],["writesetmut"]],["bool"]]],[11,"ne","","",165,[[["self"],["writesetmut"]],["bool"]]],[11,"partial_cmp","libra_types::access_path","",0,[[["accesspath"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["accesspath"],["self"]],["bool"]]],[11,"le","","",0,[[["accesspath"],["self"]],["bool"]]],[11,"gt","","",0,[[["accesspath"],["self"]],["bool"]]],[11,"ge","","",0,[[["accesspath"],["self"]],["bool"]]],[11,"partial_cmp","libra_types::event","",23,[[["self"],["eventkey"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",23,[[["self"],["eventkey"]],["bool"]]],[11,"le","","",23,[[["self"],["eventkey"]],["bool"]]],[11,"gt","","",23,[[["self"],["eventkey"]],["bool"]]],[11,"ge","","",23,[[["self"],["eventkey"]],["bool"]]],[11,"partial_cmp","libra_types::mempool_status","",42,[[["self"],["mempoolstatus"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",42,[[["self"],["mempoolstatus"]],["bool"]]],[11,"le","","",42,[[["self"],["mempoolstatus"]],["bool"]]],[11,"gt","","",42,[[["self"],["mempoolstatus"]],["bool"]]],[11,"ge","","",42,[[["self"],["mempoolstatus"]],["bool"]]],[11,"partial_cmp","","",43,[[["self"],["mempoolstatuscode"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","libra_types::proto::types::transaction_argument","",120,[[["self"],["argtype"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","libra_types::transaction::authenticator","",133,[[["self"],["authenticationkey"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",133,[[["self"],["authenticationkey"]],["bool"]]],[11,"le","","",133,[[["self"],["authenticationkey"]],["bool"]]],[11,"gt","","",133,[[["self"],["authenticationkey"]],["bool"]]],[11,"ge","","",133,[[["self"],["authenticationkey"]],["bool"]]],[11,"partial_cmp","libra_types::vm_error","",159,[[["self"],["vmstatus"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",159,[[["self"],["vmstatus"]],["bool"]]],[11,"le","","",159,[[["self"],["vmstatus"]],["bool"]]],[11,"gt","","",159,[[["self"],["vmstatus"]],["bool"]]],[11,"ge","","",159,[[["self"],["vmstatus"]],["bool"]]],[11,"partial_cmp","","",161,[[["statuscode"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"deref","libra_types::contract_event","",18,[[["self"]]]],[11,"deref","libra_types::ledger_info","",37,[[["self"]],["ledgerinfowithv0"]]],[11,"deref","libra_types::transaction","",140,[[["self"]]]],[11,"deref_mut","libra_types::ledger_info","",37,[[["self"]],["ledgerinfowithv0"]]],[11,"fmt","libra_types::access_path","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::account_config::events::burn","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::account_config::events::cancel_burn","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::account_config::events::mint","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::account_config::events::preburn","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::account_config::events::received_payment","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::account_config::events::sent_payment","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::account_config::resources::account","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::account_config::resources::association_capability","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::account_config::resources::balance","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::account_config::resources::currency_info","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::account_state","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::account_state_blob","",167,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::block_info","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::block_metadata","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::contract_event","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::epoch_change","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::epoch_info","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::event","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::get_with_proof","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::ledger_info","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::libra_timestamp","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::mempool_status","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::on_chain_config","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::proof::accumulator","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::proof::definition","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::proof::position","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",173,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",174,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::proof","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::proptest_types","",175,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",71,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",74,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::proto::types","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",176,[[["self"],["formatter"]],["result"]]],[11,"fmt","libra_types::proto::types::transaction_argument","",120,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::proto::types","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",103,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",104,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",106,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",107,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",108,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result"]]],[11,"fmt","libra_types::proto::types::request_item","",121,[[["self"],["formatter"]],["result"]]],[11,"fmt","libra_types::proto::types","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","libra_types::proto::types::response_item","",122,[[["self"],["formatter"]],["result"]]],[11,"fmt","libra_types::proto::types","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[11,"fmt","libra_types::transaction::authenticator","",129,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",130,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",133,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::transaction","",135,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",137,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",138,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",125,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",139,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",126,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",140,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",141,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",123,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",127,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",142,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",143,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",144,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",145,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",124,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",128,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::trusted_state","",149,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",146,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::validator_config","",150,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",151,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::validator_info","",152,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::validator_signer","",153,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::validator_verifier","",154,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",157,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",158,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::vm_error","",159,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",160,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",161,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::waypoint","",162,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::write_set","",163,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",164,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",165,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::access_path","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::block_info","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::contract_event","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::epoch_info","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::event","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::ledger_info","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::on_chain_config","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::proof::position","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::transaction::authenticator","",129,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",130,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",133,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::transaction","",144,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::validator_info","",152,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::validator_verifier","",154,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",158,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::vm_error","",160,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",159,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::waypoint","",162,[[["formatter"],["self"]],["result"]]],[11,"hash","libra_types::access_path","",0,[[["self"],["__h"]]]],[11,"hash","libra_types::contract_event","",18,[[["self"],["__h"]]]],[11,"hash","","",19,[[["self"],["__h"]]]],[11,"hash","libra_types::event","",23,[[["self"],["__h"]]]],[11,"hash","libra_types::mempool_status","",42,[[["self"],["__h"]]]],[11,"hash","","",43,[[["self"],["__h"]]]],[11,"hash","libra_types::on_chain_config","",52,[[["self"],["__h"]]]],[11,"hash","libra_types::proof::position","",66,[[["self"],["__h"]]]],[11,"hash","libra_types::proto::types::transaction_argument","",120,[[["self"],["__h"]]]],[11,"hash","libra_types::transaction::authenticator","",130,[[["self"],["__h"]]]],[11,"hash","","",133,[[["self"],["__h"]]]],[11,"hash","libra_types::transaction","",135,[[["self"],["__h"]]]],[11,"hash","","",137,[[["self"],["__h"]]]],[11,"hash","","",138,[[["self"],["__h"]]]],[11,"hash","","",125,[[["self"],["__h"]]]],[11,"hash","","",139,[[["self"],["__h"]]]],[11,"hash","","",126,[[["self"],["__h"]]]],[11,"hash","","",141,[[["self"],["__h"]]]],[11,"hash","","",140,[[["self"],["__h"]]]],[11,"hash","libra_types::vm_error","",159,[[["self"],["__h"]]]],[11,"hash","","",160,[[["self"],["__h"]]]],[11,"hash","","",161,[[["self"],["__h"]]]],[11,"hash","libra_types::write_set","",163,[[["self"],["__h"]]]],[11,"hash","","",164,[[["self"],["__h"]]]],[11,"hash","","",165,[[["self"],["__h"]]]],[11,"from_iter","","",165,[[["intoiterator"]],["self"]]],[11,"try_from","libra_types::access_path","",0,[[["accesspath"]],["result"]]],[11,"try_from","libra_types::account_state","",11,[[],["result"]]],[11,"try_from","libra_types::account_state_blob","",167,[[["accountstateblob"]],["result"]]],[11,"try_from","","",167,[[["accountstate"]],["result"]]],[11,"try_from","libra_types::account_state","",11,[[["accountstateblob"]],["result"]]],[11,"try_from","libra_types::account_state_blob","",167,[[],["result"]]],[11,"try_from","libra_types::account_config::resources::account","",7,[[["accountstateblob"]],["result"]]],[11,"try_from","libra_types::account_state_blob","",12,[[["accountstatewithproof"]],["result"]]],[11,"try_from","libra_types::account_config::events::sent_payment","",6,[[["contractevent"]],["result"]]],[11,"try_from","libra_types::account_config::events::received_payment","",5,[[["contractevent"]],["result"]]],[11,"try_from","libra_types::account_config::events::mint","",3,[[["contractevent"]],["result"]]],[11,"try_from","libra_types::account_config::events::burn","",1,[[["contractevent"]],["result"]]],[11,"try_from","libra_types::account_config::events::preburn","",4,[[["contractevent"]],["result"]]],[11,"try_from","libra_types::account_config::events::cancel_burn","",2,[[["contractevent"]],["result"]]],[11,"try_from","libra_types::contract_event","",18,[[["event"]],["result"]]],[11,"try_from","","",17,[[["eventwithproof"]],["result"]]],[11,"try_from","libra_types::epoch_change","",20,[[["epochchangeproof"]],["result"]]],[11,"try_from","libra_types::event","Tries to convert the provided byte array into Event Key.",23,[[],[["eventkey"],["result",["eventkey"]]]]],[11,"try_from","libra_types::get_with_proof","",25,[[["updatetolatestledgerrequest"]],["result"]]],[11,"try_from","","",26,[[["updatetolatestledgerresponse"]],["result"]]],[11,"try_from","","",27,[[["requestitem"]],["result"]]],[11,"try_from","","",32,[[["responseitem"]],["result"]]],[11,"try_from","libra_types::ledger_info","",38,[[["ledgerinfo"]],["result"]]],[11,"try_from","","",37,[[["ledgerinfowithsignatures"]],["result"]]],[11,"try_from","libra_types::mempool_status","",43,[[["u64"]],["result"]]],[11,"try_from","","",42,[[["mempoolstatus"]],["result"]]],[11,"try_from","libra_types::on_chain_config","",49,[[["validatorset"]],["result"]]],[11,"try_from","libra_types::proof::definition","",56,[[["accumulatorproof"]],["result"]]],[11,"try_from","","",57,[[["sparsemerkleproof"]],["result"]]],[11,"try_from","","",58,[[["accumulatorconsistencyproof"]],["result"]]],[11,"try_from","","",59,[[["accumulatorrangeproof"]],["result"]]],[11,"try_from","","",60,[[["sparsemerklerangeproof"]],["result"]]],[11,"try_from","","",61,[[["transactionproof"]],["result"]]],[11,"try_from","","",62,[[["accountstateproof"]],["result"]]],[11,"try_from","","",63,[[["eventproof"]],["result"]]],[11,"try_from","","",64,[[["transactionlistproof"]],["result"]]],[11,"try_from","libra_types::transaction::authenticator","",133,[[],[["cryptomaterialerror"],["result",["authenticationkey","cryptomaterialerror"]],["authenticationkey"]]]],[11,"try_from","","",133,[[["vec",["u8"]],["u8"]],[["cryptomaterialerror"],["result",["authenticationkey","cryptomaterialerror"]],["authenticationkey"]]]],[11,"try_from","libra_types::transaction","",141,[[["signedtransaction"]],["result"]]],[11,"try_from","","",123,[[["transactionwithproof"]],["result"]]],[11,"try_from","","",144,[[["transactioninfo"]],["result"]]],[11,"try_from","","",145,[[["transactiontocommit"]],["result"]]],[11,"try_from","","",124,[[["transactionlistwithproof"]],["result"]]],[11,"try_from","","",128,[[["transaction"]],["result"]]],[11,"try_from","","",141,[[["transaction"]],["result"]]],[11,"try_from","libra_types::trusted_state","",149,[[["ledgerinfo"]],["result"]]],[11,"try_from","libra_types::validator_info","",152,[[["validatorinfo"]],["result"]]],[11,"try_from","libra_types::vm_error","",159,[[["vmstatus"]],["result"]]],[11,"try_from","","",161,[[["u64"]],["result"]]],[11,"from_str","libra_types::transaction::authenticator","",133,[[["str"]],["result"]]],[11,"from_str","libra_types::waypoint","",162,[[["str"]],["result"]]],[11,"fmt","libra_types::event","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","libra_types::transaction::authenticator","",133,[[["formatter"],["self"]],["result"]]],[11,"deserialize","libra_types::access_path","",0,[[["__d"]],["result"]]],[11,"deserialize","libra_types::account_config::events::burn","",1,[[["__d"]],["result"]]],[11,"deserialize","libra_types::account_config::events::cancel_burn","",2,[[["__d"]],["result"]]],[11,"deserialize","libra_types::account_config::events::mint","",3,[[["__d"]],["result"]]],[11,"deserialize","libra_types::account_config::events::preburn","",4,[[["__d"]],["result"]]],[11,"deserialize","libra_types::account_config::events::received_payment","",5,[[["__d"]],["result"]]],[11,"deserialize","libra_types::account_config::events::sent_payment","",6,[[["__d"]],["result"]]],[11,"deserialize","libra_types::account_config::resources::account","",7,[[["__d"]],["result"]]],[11,"deserialize","libra_types::account_config::resources::association_capability","",8,[[["__d"]],["result"]]],[11,"deserialize","libra_types::account_config::resources::balance","",9,[[["__d"]],["result"]]],[11,"deserialize","libra_types::account_config::resources::currency_info","",10,[[["__d"]],["result"]]],[11,"deserialize","libra_types::account_state","",11,[[["__d"]],["result"]]],[11,"deserialize","libra_types::account_state_blob","",167,[[["__d"]],["result"]]],[11,"deserialize","","",12,[[["__d"]],["result"]]],[11,"deserialize","libra_types::block_info","",13,[[["__d"]],["result"]]],[11,"deserialize","libra_types::block_metadata","",14,[[["__d"]],["result"]]],[11,"deserialize","","",15,[[["__d"]],["result"]]],[11,"deserialize","","",16,[[["__d"]],["result"]]],[11,"deserialize","libra_types::contract_event","",18,[[["__d"]],["result"]]],[11,"deserialize","","",19,[[["__d"]],["result"]]],[11,"deserialize","","",17,[[["__d"]],["result"]]],[11,"deserialize","libra_types::epoch_change","",20,[[["__d"]],["result"]]],[11,"deserialize","libra_types::epoch_info","",22,[[["__d"]],["result"]]],[11,"deserialize","libra_types::event","",23,[[["d"]],["result"]]],[11,"deserialize","","",24,[[["__d"]],["result"]]],[11,"deserialize","libra_types::get_with_proof","",25,[[["__d"]],["result"]]],[11,"deserialize","","",26,[[["__d"]],["result"]]],[11,"deserialize","","",27,[[["__d"]],["result"]]],[11,"deserialize","","",32,[[["__d"]],["result"]]],[11,"deserialize","libra_types::ledger_info","",38,[[["__d"]],["result"]]],[11,"deserialize","","",37,[[["__d"]],["result"]]],[11,"deserialize","","",39,[[["__d"]],["result"]]],[11,"deserialize","libra_types::libra_timestamp","",40,[[["__d"]],["result"]]],[11,"deserialize","","",41,[[["__d"]],["result"]]],[11,"deserialize","libra_types::on_chain_config","",45,[[["__d"]],["result"]]],[11,"deserialize","","",48,[[["__d"]],["result"]]],[11,"deserialize","","",49,[[["__d"]],["result"]]],[11,"deserialize","","",47,[[["__d"]],["result"]]],[11,"deserialize","","",46,[[["__d"]],["result"]]],[11,"deserialize","","",54,[[["__d"]],["result"]]],[11,"deserialize","libra_types::proof::definition","",56,[[["__d"]],["result"]]],[11,"deserialize","","",57,[[["__d"]],["result"]]],[11,"deserialize","","",58,[[["__d"]],["result"]]],[11,"deserialize","","",59,[[["__d"]],["result"]]],[11,"deserialize","","",60,[[["__d"]],["result"]]],[11,"deserialize","","",61,[[["__d"]],["result"]]],[11,"deserialize","","",62,[[["__d"]],["result"]]],[11,"deserialize","","",63,[[["__d"]],["result"]]],[11,"deserialize","","",64,[[["__d"]],["result"]]],[11,"deserialize","libra_types::proof","",70,[[["__d"]],["result"]]],[11,"deserialize","libra_types::transaction::authenticator","",130,[[["__d"]],["result"]]],[11,"deserialize","","",133,[[["d"]],["result"]]],[11,"deserialize","libra_types::transaction","",135,[[["__d"]],["result"]]],[11,"deserialize","","",137,[[["__d"]],["result"]]],[11,"deserialize","","",138,[[["__d"]],["result"]]],[11,"deserialize","","",125,[[["__d"]],["result"]]],[11,"deserialize","","",139,[[["__d"]],["result"]]],[11,"deserialize","","",126,[[["__d"]],["result"]]],[11,"deserialize","","",141,[[["__d"]],["result"]]],[11,"deserialize","","",123,[[["__d"]],["result"]]],[11,"deserialize","","",127,[[["__d"]],["result"]]],[11,"deserialize","","",144,[[["__d"]],["result"]]],[11,"deserialize","","",145,[[["__d"]],["result"]]],[11,"deserialize","","",124,[[["__d"]],["result"]]],[11,"deserialize","","",128,[[["__d"]],["result"]]],[11,"deserialize","libra_types::validator_config","",150,[[["__d"]],["result"]]],[11,"deserialize","","",151,[[["__d"]],["result"]]],[11,"deserialize","libra_types::validator_info","",152,[[["__d"]],["result"]]],[11,"deserialize","libra_types::validator_verifier","",157,[[["__d"]],["result"]]],[11,"deserialize","","",158,[[["__d"]],["result"]]],[11,"deserialize","libra_types::vm_error","",159,[[["__d"]],["result"]]],[11,"deserialize","","",161,[[["d"]],["result"]]],[11,"deserialize","libra_types::waypoint","",162,[[["__d"]],["result"]]],[11,"deserialize","libra_types::write_set","",163,[[["__d"]],["result"]]],[11,"deserialize","","",164,[[["__d"]],["result"]]],[11,"deserialize","","",165,[[["__d"]],["result"]]],[11,"serialize","libra_types::access_path","",0,[[["self"],["__s"]],["result"]]],[11,"serialize","libra_types::account_config::events::burn","",1,[[["self"],["__s"]],["result"]]],[11,"serialize","libra_types::account_config::events::cancel_burn","",2,[[["self"],["__s"]],["result"]]],[11,"serialize","libra_types::account_config::events::mint","",3,[[["self"],["__s"]],["result"]]],[11,"serialize","libra_types::account_config::events::preburn","",4,[[["self"],["__s"]],["result"]]],[11,"serialize","libra_types::account_config::events::received_payment","",5,[[["self"],["__s"]],["result"]]],[11,"serialize","libra_types::account_config::events::sent_payment","",6,[[["self"],["__s"]],["result"]]],[11,"serialize","libra_types::account_config::resources::account","",7,[[["self"],["__s"]],["result"]]],[11,"serialize","libra_types::account_config::resources::association_capability","",8,[[["self"],["__s"]],["result"]]],[11,"serialize","libra_types::account_config::resources::balance","",9,[[["self"],["__s"]],["result"]]],[11,"serialize","libra_types::account_config::resources::currency_info","",10,[[["self"],["__s"]],["result"]]],[11,"serialize","libra_types::account_state","",11,[[["self"],["__s"]],["result"]]],[11,"serialize","libra_types::account_state_blob","",167,[[["self"],["__s"]],["result"]]],[11,"serialize","","",12,[[["self"],["__s"]],["result"]]],[11,"serialize","libra_types::block_info","",13,[[["self"],["__s"]],["result"]]],[11,"serialize","libra_types::block_metadata","",14,[[["self"],["__s"]],["result"]]],[11,"serialize","","",15,[[["self"],["__s"]],["result"]]],[11,"serialize","","",16,[[["self"],["__s"]],["result"]]],[11,"serialize","libra_types::contract_event","",18,[[["self"],["__s"]],["result"]]],[11,"serialize","","",19,[[["self"],["__s"]],["result"]]],[11,"serialize","","",17,[[["self"],["__s"]],["result"]]],[11,"serialize","libra_types::epoch_change","",20,[[["self"],["__s"]],["result"]]],[11,"serialize","libra_types::epoch_info","",22,[[["self"],["__s"]],["result"]]],[11,"serialize","libra_types::event","",23,[[["s"],["self"]],["result"]]],[11,"serialize","","",24,[[["self"],["__s"]],["result"]]],[11,"serialize","libra_types::get_with_proof","",25,[[["self"],["__s"]],["result"]]],[11,"serialize","","",26,[[["self"],["__s"]],["result"]]],[11,"serialize","","",27,[[["self"],["__s"]],["result"]]],[11,"serialize","","",32,[[["self"],["__s"]],["result"]]],[11,"serialize","libra_types::ledger_info","",38,[[["self"],["__s"]],["result"]]],[11,"serialize","","",37,[[["self"],["__s"]],["result"]]],[11,"serialize","","",39,[[["self"],["__s"]],["result"]]],[11,"serialize","libra_types::libra_timestamp","",40,[[["self"],["__s"]],["result"]]],[11,"serialize","","",41,[[["self"],["__s"]],["result"]]],[11,"serialize","libra_types::on_chain_config","",45,[[["self"],["__s"]],["result"]]],[11,"serialize","","",48,[[["self"],["__s"]],["result"]]],[11,"serialize","","",49,[[["self"],["__s"]],["result"]]],[11,"serialize","","",47,[[["self"],["__s"]],["result"]]],[11,"serialize","","",46,[[["self"],["__s"]],["result"]]],[11,"serialize","","",54,[[["self"],["__s"]],["result"]]],[11,"serialize","libra_types::proof::definition","",56,[[["self"],["__s"]],["result"]]],[11,"serialize","","",57,[[["self"],["__s"]],["result"]]],[11,"serialize","","",58,[[["self"],["__s"]],["result"]]],[11,"serialize","","",59,[[["self"],["__s"]],["result"]]],[11,"serialize","","",60,[[["self"],["__s"]],["result"]]],[11,"serialize","","",61,[[["self"],["__s"]],["result"]]],[11,"serialize","","",62,[[["self"],["__s"]],["result"]]],[11,"serialize","","",63,[[["self"],["__s"]],["result"]]],[11,"serialize","","",64,[[["self"],["__s"]],["result"]]],[11,"serialize","libra_types::proof","",70,[[["self"],["__s"]],["result"]]],[11,"serialize","libra_types::transaction::authenticator","",130,[[["self"],["__s"]],["result"]]],[11,"serialize","","",133,[[["s"],["self"]],["result"]]],[11,"serialize","libra_types::transaction","",135,[[["self"],["__s"]],["result"]]],[11,"serialize","","",137,[[["self"],["__s"]],["result"]]],[11,"serialize","","",138,[[["self"],["__s"]],["result"]]],[11,"serialize","","",125,[[["self"],["__s"]],["result"]]],[11,"serialize","","",139,[[["self"],["__s"]],["result"]]],[11,"serialize","","",126,[[["self"],["__s"]],["result"]]],[11,"serialize","","",141,[[["self"],["__s"]],["result"]]],[11,"serialize","","",123,[[["self"],["__s"]],["result"]]],[11,"serialize","","",127,[[["self"],["__s"]],["result"]]],[11,"serialize","","",144,[[["self"],["__s"]],["result"]]],[11,"serialize","","",145,[[["self"],["__s"]],["result"]]],[11,"serialize","","",124,[[["self"],["__s"]],["result"]]],[11,"serialize","","",128,[[["self"],["__s"]],["result"]]],[11,"serialize","libra_types::validator_config","",150,[[["self"],["__s"]],["result"]]],[11,"serialize","","",151,[[["self"],["__s"]],["result"]]],[11,"serialize","libra_types::validator_info","",152,[[["self"],["__s"]],["result"]]],[11,"serialize","libra_types::validator_verifier","",157,[[["self"],["__s"]],["result"]]],[11,"serialize","","",158,[[["self"],["__s"]],["result"]]],[11,"serialize","libra_types::vm_error","",159,[[["self"],["__s"]],["result"]]],[11,"serialize","","",161,[[["s"],["self"]],["result"]]],[11,"serialize","libra_types::waypoint","",162,[[["self"],["__s"]],["result"]]],[11,"serialize","libra_types::write_set","",163,[[["self"],["__s"]],["result"]]],[11,"serialize","","",164,[[["self"],["__s"]],["result"]]],[11,"serialize","","",165,[[["self"],["__s"]],["result"]]],[11,"arbitrary_with","libra_types::access_path","",0,[[]]],[11,"arbitrary_with","libra_types::account_config::resources::account","",7,[[]]],[11,"arbitrary_with","libra_types::account_config::resources::association_capability","",8,[[]]],[11,"arbitrary_with","libra_types::account_config::resources::balance","",9,[[]]],[11,"arbitrary_with","libra_types::account_state_blob","",167,[[]]],[11,"arbitrary_with","","",12,[[]]],[11,"arbitrary_with","libra_types::block_info","",13,[[]]],[11,"arbitrary_with","libra_types::contract_event","",17,[[]]],[11,"arbitrary_with","libra_types::epoch_change","",20,[[]]],[11,"arbitrary_with","libra_types::epoch_info","",22,[[]]],[11,"arbitrary_with","libra_types::event","",23,[[]]],[11,"arbitrary_with","libra_types::get_with_proof","",25,[[]]],[11,"arbitrary_with","","",27,[[]]],[11,"arbitrary_with","","",32,[[]]],[11,"arbitrary_with","libra_types::ledger_info","",38,[[]]],[11,"arbitrary_with","libra_types::mempool_status","",42,[[]]],[11,"arbitrary_with","","",43,[[]]],[11,"arbitrary_with","libra_types::on_chain_config","",49,[[]]],[11,"arbitrary_with","libra_types::proof::definition","",61,[[]]],[11,"arbitrary_with","","",62,[[]]],[11,"arbitrary_with","","",63,[[]]],[11,"arbitrary_with","","",64,[[]]],[11,"arbitrary_with","","",56,[[]]],[11,"arbitrary_with","","",57,[[]]],[11,"arbitrary_with","","",58,[[]]],[11,"arbitrary_with","","",59,[[]]],[11,"arbitrary_with","","",60,[[]]],[11,"arbitrary_with","libra_types::proof","",70,[[]]],[11,"arbitrary_with","libra_types::write_set","",163,[[]]],[11,"arbitrary_with","","",164,[[]]],[11,"arbitrary_with","libra_types::transaction","",135,[[]]],[11,"arbitrary_with","libra_types::proptest_types","",175,[[]]],[11,"arbitrary","","",175,[[]]],[11,"arbitrary_with","","",71,[[]]],[11,"arbitrary_with","libra_types::transaction","",139,[[]]],[11,"arbitrary_with","libra_types::proptest_types","",72,[[]]],[11,"arbitrary_with","libra_types::transaction","",140,[[]]],[11,"arbitrary_with","","",141,[[]]],[11,"arbitrary_with","libra_types::vm_error","",161,[[]]],[11,"arbitrary_with","libra_types::transaction","",127,[[]]],[11,"arbitrary_with","","",126,[[]]],[11,"arbitrary_with","","",138,[[]]],[11,"arbitrary_with","","",137,[[]]],[11,"arbitrary_with","","",125,[[]]],[11,"arbitrary_with","libra_types::ledger_info","",37,[[]]],[11,"arbitrary_with","libra_types::get_with_proof","",26,[[]]],[11,"arbitrary_with","libra_types::proptest_types","",73,[[]]],[11,"arbitrary_with","libra_types::event","",24,[[]]],[11,"arbitrary_with","libra_types::contract_event","",18,[[]]],[11,"arbitrary_with","libra_types::transaction","",145,[[]]],[11,"arbitrary_with","libra_types::proptest_types","",74,[[]]],[11,"arbitrary_with","libra_types::transaction","",124,[[]]],[11,"arbitrary_with","libra_types::block_metadata","",14,[[]]],[11,"arbitrary_with","libra_types::proptest_types","",75,[[]]],[11,"arbitrary_with","libra_types::transaction::authenticator","",133,[[]]],[11,"arbitrary_with","libra_types::transaction","",123,[[]]],[11,"arbitrary_with","","",144,[[]]],[11,"arbitrary_with","","",128,[[]]],[11,"arbitrary_with","libra_types::validator_config","",151,[[]]],[11,"arbitrary_with","libra_types::validator_info","",152,[[]]],[11,"arbitrary_with","libra_types::validator_verifier","",157,[[]]],[11,"arbitrary_with","","",158,[[]]],[11,"arbitrary_with","libra_types::vm_error","",159,[[]]],[11,"to_bytes","libra_types::transaction::authenticator","",133,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"hash","libra_types::account_state_blob","",167,[[["self"]],["hashvalue"]]],[11,"hash","libra_types::contract_event","",18,[[["self"]],["hashvalue"]]],[11,"hash","libra_types::ledger_info","",38,[[["self"]],["hashvalue"]]],[11,"hash","libra_types::proof","",69,[[["self"]],["hashvalue"]]],[11,"hash","","",70,[[["self"]],["hashvalue"]]],[11,"hash","libra_types::transaction","",139,[[["self"]],["hashvalue"]]],[11,"hash","","",144,[[["self"]],["hashvalue"]]],[11,"hash","","",128,[[["self"]],["hashvalue"]]],[11,"finish","libra_types::account_state_blob","",168,[[],["hashvalue"]]],[11,"write","","",168,[[["self"]],["self"]]],[11,"finish","libra_types::contract_event","",169,[[],["hashvalue"]]],[11,"write","","",169,[[["self"]],["self"]]],[11,"finish","","",170,[[],["hashvalue"]]],[11,"write","","",170,[[["self"]],["self"]]],[11,"finish","libra_types::ledger_info","",171,[[],["hashvalue"]]],[11,"write","","",171,[[["self"]],["self"]]],[11,"finish","libra_types::proof","",172,[[],["hashvalue"]]],[11,"write","","",172,[[["self"]],["self"]]],[11,"finish","libra_types::transaction::authenticator","",181,[[],["hashvalue"]]],[11,"write","","",181,[[["self"]],["self"]]],[11,"finish","libra_types::transaction","",177,[[],["hashvalue"]]],[11,"write","","",177,[[["self"]],["self"]]],[11,"finish","","",178,[[],["hashvalue"]]],[11,"write","","",178,[[["self"]],["self"]]],[11,"finish","","",179,[[],["hashvalue"]]],[11,"write","","",179,[[["self"]],["self"]]],[11,"finish","","",180,[[],["hashvalue"]]],[11,"write","","",180,[[["self"]],["self"]]],[11,"finish","libra_types::waypoint","",182,[[],["hashvalue"]]],[11,"write","","",182,[[["self"]],["self"]]],[11,"type_params","libra_types::account_config::resources::balance","",9,[[],[["typetag"],["vec",["typetag"]]]]],[11,"encode_raw","libra_types::proto::types","",76,[[["self"],["b"]]]],[11,"merge_field","","",76,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",76,[[["self"]],["usize"]]],[11,"clear","","",76,[[["self"]]]],[11,"encode_raw","","",77,[[["self"],["b"]]]],[11,"merge_field","","",77,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",77,[[["self"]],["usize"]]],[11,"clear","","",77,[[["self"]]]],[11,"encode_raw","","",78,[[["self"],["b"]]]],[11,"merge_field","","",78,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",78,[[["self"]],["usize"]]],[11,"clear","","",78,[[["self"]]]],[11,"encode_raw","","",79,[[["self"],["b"]]]],[11,"merge_field","","",79,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",79,[[["self"]],["usize"]]],[11,"clear","","",79,[[["self"]]]],[11,"encode_raw","","",80,[[["self"],["b"]]]],[11,"merge_field","","",80,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",80,[[["self"]],["usize"]]],[11,"clear","","",80,[[["self"]]]],[11,"encode_raw","","",81,[[["self"],["b"]]]],[11,"merge_field","","",81,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",81,[[["self"]],["usize"]]],[11,"clear","","",81,[[["self"]]]],[11,"encode_raw","","",82,[[["self"],["b"]]]],[11,"merge_field","","",82,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",82,[[["self"]],["usize"]]],[11,"clear","","",82,[[["self"]]]],[11,"encode_raw","","",83,[[["self"],["b"]]]],[11,"merge_field","","",83,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",83,[[["self"]],["usize"]]],[11,"clear","","",83,[[["self"]]]],[11,"encode_raw","","",84,[[["self"],["b"]]]],[11,"merge_field","","",84,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",84,[[["self"]],["usize"]]],[11,"clear","","",84,[[["self"]]]],[11,"encode_raw","","",85,[[["self"],["b"]]]],[11,"merge_field","","",85,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",85,[[["self"]],["usize"]]],[11,"clear","","",85,[[["self"]]]],[11,"encode_raw","","",86,[[["self"],["b"]]]],[11,"merge_field","","",86,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",86,[[["self"]],["usize"]]],[11,"clear","","",86,[[["self"]]]],[11,"encode_raw","","",87,[[["self"],["b"]]]],[11,"merge_field","","",87,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",87,[[["self"]],["usize"]]],[11,"clear","","",87,[[["self"]]]],[11,"encode_raw","","",88,[[["self"],["b"]]]],[11,"merge_field","","",88,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",88,[[["self"]],["usize"]]],[11,"clear","","",88,[[["self"]]]],[11,"encode_raw","","",89,[[["self"],["b"]]]],[11,"merge_field","","",89,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",89,[[["self"]],["usize"]]],[11,"clear","","",89,[[["self"]]]],[11,"encode_raw","","",90,[[["self"],["b"]]]],[11,"merge_field","","",90,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",90,[[["self"]],["usize"]]],[11,"clear","","",90,[[["self"]]]],[11,"encode_raw","","",91,[[["self"],["b"]]]],[11,"merge_field","","",91,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",91,[[["self"]],["usize"]]],[11,"clear","","",91,[[["self"]]]],[11,"encode_raw","","",176,[[["self"],["b"]]]],[11,"merge_field","","",176,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",176,[[["self"]],["usize"]]],[11,"clear","","",176,[[["self"]]]],[11,"encode_raw","","",92,[[["self"],["b"]]]],[11,"merge_field","","",92,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",92,[[["self"]],["usize"]]],[11,"clear","","",92,[[["self"]]]],[11,"encode_raw","","",93,[[["self"],["b"]]]],[11,"merge_field","","",93,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",93,[[["self"]],["usize"]]],[11,"clear","","",93,[[["self"]]]],[11,"encode_raw","","",94,[[["self"],["b"]]]],[11,"merge_field","","",94,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",94,[[["self"]],["usize"]]],[11,"clear","","",94,[[["self"]]]],[11,"encode_raw","","",95,[[["self"],["b"]]]],[11,"merge_field","","",95,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",95,[[["self"]],["usize"]]],[11,"clear","","",95,[[["self"]]]],[11,"encode_raw","","",96,[[["self"],["b"]]]],[11,"merge_field","","",96,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",96,[[["self"]],["usize"]]],[11,"clear","","",96,[[["self"]]]],[11,"encode_raw","","",97,[[["self"],["b"]]]],[11,"merge_field","","",97,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",97,[[["self"]],["usize"]]],[11,"clear","","",97,[[["self"]]]],[11,"encode_raw","","",98,[[["self"],["b"]]]],[11,"merge_field","","",98,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",98,[[["self"]],["usize"]]],[11,"clear","","",98,[[["self"]]]],[11,"encode_raw","","",99,[[["self"],["b"]]]],[11,"merge_field","","",99,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",99,[[["self"]],["usize"]]],[11,"clear","","",99,[[["self"]]]],[11,"encode_raw","","",100,[[["self"],["b"]]]],[11,"merge_field","","",100,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",100,[[["self"]],["usize"]]],[11,"clear","","",100,[[["self"]]]],[11,"encode_raw","","",101,[[["self"],["b"]]]],[11,"merge_field","","",101,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",101,[[["self"]],["usize"]]],[11,"clear","","",101,[[["self"]]]],[11,"encode_raw","","",102,[[["self"],["b"]]]],[11,"merge_field","","",102,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",102,[[["self"]],["usize"]]],[11,"clear","","",102,[[["self"]]]],[11,"encode_raw","","",103,[[["self"],["b"]]]],[11,"merge_field","","",103,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",103,[[["self"]],["usize"]]],[11,"clear","","",103,[[["self"]]]],[11,"encode_raw","","",104,[[["self"],["b"]]]],[11,"merge_field","","",104,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",104,[[["self"]],["usize"]]],[11,"clear","","",104,[[["self"]]]],[11,"encode_raw","","",105,[[["self"],["b"]]]],[11,"merge_field","","",105,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",105,[[["self"]],["usize"]]],[11,"clear","","",105,[[["self"]]]],[11,"encode_raw","","",106,[[["self"],["b"]]]],[11,"merge_field","","",106,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",106,[[["self"]],["usize"]]],[11,"clear","","",106,[[["self"]]]],[11,"encode_raw","","",107,[[["self"],["b"]]]],[11,"merge_field","","",107,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",107,[[["self"]],["usize"]]],[11,"clear","","",107,[[["self"]]]],[11,"encode_raw","","",108,[[["self"],["b"]]]],[11,"merge_field","","",108,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",108,[[["self"]],["usize"]]],[11,"clear","","",108,[[["self"]]]],[11,"encode_raw","","",109,[[["self"],["b"]]]],[11,"merge_field","","",109,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",109,[[["self"]],["usize"]]],[11,"clear","","",109,[[["self"]]]],[11,"encode_raw","","",110,[[["self"],["b"]]]],[11,"merge_field","","",110,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",110,[[["self"]],["usize"]]],[11,"clear","","",110,[[["self"]]]],[11,"encode_raw","","",111,[[["self"],["b"]]]],[11,"merge_field","","",111,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",111,[[["self"]],["usize"]]],[11,"clear","","",111,[[["self"]]]],[11,"encode_raw","","",112,[[["self"],["b"]]]],[11,"merge_field","","",112,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",112,[[["self"]],["usize"]]],[11,"clear","","",112,[[["self"]]]],[11,"encode_raw","","",113,[[["self"],["b"]]]],[11,"merge_field","","",113,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",113,[[["self"]],["usize"]]],[11,"clear","","",113,[[["self"]]]],[11,"encode_raw","","",114,[[["self"],["b"]]]],[11,"merge_field","","",114,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",114,[[["self"]],["usize"]]],[11,"clear","","",114,[[["self"]]]],[11,"encode_raw","","",115,[[["self"],["b"]]]],[11,"merge_field","","",115,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",115,[[["self"]],["usize"]]],[11,"clear","","",115,[[["self"]]]],[11,"encode_raw","","",116,[[["self"],["b"]]]],[11,"merge_field","","",116,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",116,[[["self"]],["usize"]]],[11,"clear","","",116,[[["self"]]]],[11,"encode_raw","","",117,[[["self"],["b"]]]],[11,"merge_field","","",117,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",117,[[["self"]],["usize"]]],[11,"clear","","",117,[[["self"]]]],[11,"encode_raw","","",118,[[["self"],["b"]]]],[11,"merge_field","","",118,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",118,[[["self"]],["usize"]]],[11,"clear","","",118,[[["self"]]]],[11,"encode_raw","","",119,[[["self"],["b"]]]],[11,"merge_field","","",119,[[["u32"],["b"],["decodecontext"],["self"],["wiretype"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",119,[[["self"]],["usize"]]],[11,"clear","","",119,[[["self"]]]],[11,"new","libra_types::account_address","",166,[[],["accountaddress"]]],[18,"LENGTH","","The number of bytes in an address.",166,null],[18,"DEFAULT","","",166,null],[11,"random","","",166,[[],["accountaddress"]]],[11,"short_str","","",166,[[["self"]],["string"]]],[11,"to_vec","","",166,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"from_hex_literal","","",166,[[["str"]],[["accountaddress"],["result",["accountaddress","error"]],["error"]]]],[11,"value_strategy","libra_types::write_set","",163,[[]]],[11,"deletion_strategy","","",163,[[]]],[11,"script_strategy","libra_types::transaction","",140,[[]]],[11,"module_strategy","","",140,[[]]],[11,"write_set_strategy","","",140,[[]]],[11,"genesis_strategy","","",140,[[]]],[11,"script_strategy","","",126,[[]]],[11,"module_strategy","","",126,[[]]],[11,"write_set_strategy","","",126,[[]]],[11,"genesis_strategy","","Similar to `write_set_strategy` except generates a valid…",126,[[]]]],"p":[[3,"AccessPath"],[3,"BurnEvent"],[3,"CancelBurnEvent"],[3,"MintEvent"],[3,"PreburnEvent"],[3,"ReceivedPaymentEvent"],[3,"SentPaymentEvent"],[3,"AccountResource"],[3,"AssociationCapabilityResource"],[3,"BalanceResource"],[3,"CurrencyInfoResource"],[3,"AccountState"],[3,"AccountStateWithProof"],[3,"BlockInfo"],[3,"BlockMetadata"],[3,"LibraBlockResource"],[3,"NewBlockEvent"],[3,"EventWithProof"],[4,"ContractEvent"],[3,"ContractEventV0"],[3,"EpochChangeProof"],[8,"Verifier"],[3,"EpochInfo"],[3,"EventKey"],[3,"EventHandle"],[3,"UpdateToLatestLedgerRequest"],[3,"UpdateToLatestLedgerResponse"],[4,"RequestItem"],[13,"GetAccountTransactionBySequenceNumber"],[13,"GetAccountState"],[13,"GetEventsByEventAccessPath"],[13,"GetTransactions"],[4,"ResponseItem"],[13,"GetAccountTransactionBySequenceNumber"],[13,"GetAccountState"],[13,"GetEventsByEventAccessPath"],[13,"GetTransactions"],[4,"LedgerInfoWithSignatures"],[3,"LedgerInfo"],[3,"LedgerInfoWithV0"],[3,"LibraTimestampResource"],[3,"LibraTimestamp"],[3,"MempoolStatus"],[4,"MempoolStatusCode"],[8,"MoveStorage"],[3,"LibraVersion"],[3,"VMConfig"],[4,"VMPublishingOption"],[3,"RegisteredCurrencies"],[3,"ValidatorSet"],[8,"ConfigStorage"],[8,"OnChainConfig"],[3,"ConfigID"],[3,"OnChainConfigPayload"],[3,"ConfigurationResource"],[3,"InMemoryAccumulator"],[3,"AccumulatorProof"],[3,"SparseMerkleProof"],[3,"AccumulatorConsistencyProof"],[3,"AccumulatorRangeProof"],[3,"SparseMerkleRangeProof"],[3,"TransactionProof"],[3,"AccountStateProof"],[3,"EventProof"],[3,"TransactionListProof"],[4,"NodeDirection"],[3,"Position"],[3,"FrozenSubTreeIterator"],[3,"FrozenSubtreeSiblingIterator"],[3,"MerkleTreeInternalNode"],[3,"SparseMerkleLeafNode"],[3,"RawTransactionGen"],[3,"SignatureCheckedTransactionGen"],[3,"ContractEventGen"],[3,"TransactionToCommitGen"],[3,"LedgerInfoWithSignaturesGen"],[3,"AccessPath"],[3,"TransactionInfo"],[3,"AccumulatorProof"],[3,"SparseMerkleProof"],[3,"AccumulatorConsistencyProof"],[3,"AccumulatorRangeProof"],[3,"SparseMerkleRangeProof"],[3,"TransactionProof"],[3,"AccountStateProof"],[3,"EventProof"],[3,"TransactionListProof"],[3,"Event"],[3,"EventWithProof"],[3,"EventsList"],[3,"EventsForVersions"],[3,"MempoolStatus"],[3,"SignedTransaction"],[3,"Transaction"],[3,"TransactionWithProof"],[3,"SignedTransactionsBlock"],[3,"AccountState"],[3,"TransactionToCommit"],[3,"TransactionListWithProof"],[3,"ValidatorInfo"],[3,"VmStatus"],[3,"AccountStateBlob"],[3,"AccountStateWithProof"],[3,"ValidatorSet"],[3,"LedgerInfo"],[3,"LedgerInfoWithSignatures"],[3,"ValidatorSignature"],[3,"EpochChangeProof"],[3,"UpdateToLatestLedgerRequest"],[3,"RequestItem"],[3,"UpdateToLatestLedgerResponse"],[3,"ResponseItem"],[3,"GetAccountStateRequest"],[3,"GetAccountStateResponse"],[3,"GetAccountTransactionBySequenceNumberRequest"],[3,"GetAccountTransactionBySequenceNumberResponse"],[3,"GetEventsByEventAccessPathRequest"],[3,"GetEventsByEventAccessPathResponse"],[3,"GetTransactionsRequest"],[3,"GetTransactionsResponse"],[4,"ArgType"],[4,"RequestedItems"],[4,"ResponseItems"],[3,"TransactionWithProof"],[3,"TransactionListWithProof"],[4,"TransactionArgument"],[4,"TransactionPayload"],[4,"TransactionStatus"],[4,"Transaction"],[4,"Scheme"],[4,"TransactionAuthenticator"],[13,"Ed25519"],[13,"MultiEd25519"],[3,"AuthenticationKey"],[3,"AuthenticationKeyPreimage"],[3,"ChangeSet"],[8,"TransactionSigner"],[3,"Module"],[3,"Script"],[3,"RawTransaction"],[3,"SignatureCheckedTransaction"],[3,"SignedTransaction"],[3,"VMValidatorResult"],[3,"TransactionOutput"],[3,"TransactionInfo"],[3,"TransactionToCommit"],[4,"TrustedStateChange"],[13,"Version"],[13,"Epoch"],[3,"TrustedState"],[3,"ValidatorConfigResource"],[3,"ValidatorConfig"],[3,"ValidatorInfo"],[3,"ValidatorSigner"],[4,"VerifyError"],[13,"TooLittleVotingPower"],[13,"TooManySignatures"],[3,"ValidatorConsensusInfo"],[3,"ValidatorVerifier"],[3,"VMStatus"],[4,"StatusType"],[4,"StatusCode"],[3,"Waypoint"],[4,"WriteOp"],[3,"WriteSet"],[3,"WriteSetMut"],[3,"AccountAddress"],[3,"AccountStateBlob"],[3,"AccountStateBlobHasher"],[3,"ContractEventHasher"],[3,"ContractEventV0Hasher"],[3,"LedgerInfoHasher"],[3,"SparseMerkleLeafNodeHasher"],[3,"AncestorSiblingIterator"],[3,"AncestorIterator"],[3,"AccountInfoUniverse"],[3,"TransactionArgument"],[3,"RawTransactionHasher"],[3,"SignedTransactionHasher"],[3,"TransactionInfoHasher"],[3,"TransactionHasher"],[3,"AuthenticationKeyHasher"],[3,"Ledger2WaypointConverterHasher"]]};
searchIndex["libra_util"] = {"doc":"","i":[[0,"retry","libra_util","",null,null],[3,"FixedDelay","libra_util::retry","An iterator which uses a fixed delay",null,null],[5,"retry","","Given an operation retries it successfully sleeping…",null,[[["i"],["o"]],["result"]]],[5,"retry_async","","",null,[[["i"],["o"]]]],[5,"fixed_retry_strategy","","",null,[[["u64"],["usize"]]]],[14,"unrecoverable","libra_util","Terminates the program with a panic that is tagged as…",null,null],[11,"from","libra_util::retry","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"next","","",0,[[["self"]],[["option",["duration"]],["duration"]]]]],"p":[[3,"FixedDelay"]]};
searchIndex["libra_vault_client"] = {"doc":"","i":[[3,"Client","libra_vault_client","Client provides a client around the restful interface to a…",null,null],[3,"ReadResponse","","Provides a simple wrapper for all read APIs.",null,null],[12,"creation_time","","",0,null],[12,"value","","",0,null],[12,"version","","",0,null],[3,"Policy","","This data structure is used to represent both policies…",null,null],[3,"PolicyPaths","","Represents the policy for a given path.",null,null],[3,"PathPolicy","","Represents the set of capabilities used within a policy.",null,null],[4,"Error","","",null,null],[13,"HttpError","","",1,null],[13,"InternalError","","",1,null],[13,"MissingField","","",1,null],[13,"NotFound","","",1,null],[13,"SerializationError","","",1,null],[4,"Capability","","The various set of capabilities available to a policy…",null,null],[13,"Create","","",2,null],[13,"Delete","","",2,null],[13,"Deny","","",2,null],[13,"List","","",2,null],[13,"Read","","",2,null],[13,"Sudo","","",2,null],[13,"Update","","",2,null],[11,"new","","",3,[[["string"]],["self"]]],[11,"delete_policy","","",3,[[["str"],["self"]],[["error"],["result",["error"]]]]],[11,"list_policies","","",3,[[["self"]],[["result",["vec","error"]],["vec",["string"]],["error"]]]],[11,"read_policy","","Retrieves the policy at the given policy name.",3,[[["str"],["self"]],[["result",["policy","error"]],["policy"],["error"]]]],[11,"set_policy","","Create a new policy in Vault, see the explanation for…",3,[[["str"],["policy"],["self"]],[["error"],["result",["error"]]]]],[11,"create_token","","Creates a new token or identity for accessing Vault. The…",3,[[["str"],["vec",["str"]],["self"]],[["result",["string","error"]],["error"],["string"]]]],[11,"list_secrets","","List all stored secrets",3,[[["str"],["self"]],[["result",["vec","error"]],["vec",["string"]],["error"]]]],[11,"delete_secret","","Delete a specific secret store",3,[[["str"],["self"]],[["error"],["result",["error"]]]]],[11,"read_secret","","Read a key/value pair from a given secret store.",3,[[["str"],["self"]],[["error"],["readresponse",["string"]],["result",["readresponse","error"]]]]],[11,"create_ed25519_key","","",3,[[["str"],["self"],["bool"]],[["error"],["result",["error"]]]]],[11,"delete_key","","",3,[[["str"],["self"]],[["error"],["result",["error"]]]]],[11,"export_ed25519_key","","",3,[[["str"],["u32"],["self"],["option",["u32"]]],[["ed25519privatekey"],["error"],["result",["ed25519privatekey","error"]]]]],[11,"list_keys","","",3,[[["self"]],[["result",["vec","error"]],["vec",["string"]],["error"]]]],[11,"read_ed25519_key","","",3,[[["str"],["self"]],[["vec",["readresponse"]],["result",["vec","error"]],["error"]]]],[11,"rotate_key","","",3,[[["str"],["self"]],[["error"],["result",["error"]]]]],[11,"sign_ed25519","","",3,[[["str"],["u32"],["self"],["option",["u32"]]],[["error"],["result",["ed25519signature","error"]],["ed25519signature"]]]],[11,"write_secret","","Create or update a key/value pair in a given secret store.",3,[[["str"],["self"]],[["error"],["result",["error"]]]]],[11,"unsealed","","Returns whether or not the vault is unsealed (can be read…",3,[[["self"]],[["result",["bool","error"]],["error"],["bool"]]]],[11,"transit_enabled","","Returns whether or not transit is enabled at the default…",3,[[["self"]],[["result",["bool","error"]],["error"],["bool"]]]],[11,"new","","",0,[[["u32"],["t"],["string"]],["self"]]],[11,"new","","",4,[[],["self"]]],[11,"add_policy","","",4,[[["str"],["vec",["capability"]],["capability"],["self"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"test_only_hash","","",4,[[["self"]],["hashvalue"]]],[11,"vzip","","",4,[[],["v"]]],[11,"clear","","",4,[[["self"]]]],[11,"initialize","","",4,[[]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"test_only_hash","","",5,[[["self"]],["hashvalue"]]],[11,"vzip","","",5,[[],["v"]]],[11,"clear","","",5,[[["self"]]]],[11,"initialize","","",5,[[]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"test_only_hash","","",6,[[["self"]],["hashvalue"]]],[11,"vzip","","",6,[[],["v"]]],[11,"clear","","",6,[[["self"]]]],[11,"initialize","","",6,[[]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"test_only_hash","","",2,[[["self"]],["hashvalue"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",1,[[["decodeerror"]],["self"]]],[11,"from","","",1,[[["cryptomaterialerror"]],["self"]]],[11,"from","","",1,[[["error"]],["self"]]],[11,"from","","",1,[[["response"]],["self"]]],[11,"from","","",1,[[["error"]],["self"]]],[11,"clone","","",4,[[["self"]],["policy"]]],[11,"clone","","",5,[[["self"]],["policypaths"]]],[11,"clone","","",6,[[["self"]],["pathpolicy"]]],[11,"clone","","",2,[[["self"]],["capability"]]],[11,"default","","",4,[[],["policy"]]],[11,"default","","",5,[[],["policypaths"]]],[11,"default","","",6,[[],["pathpolicy"]]],[11,"eq","","",1,[[["error"],["self"]],["bool"]]],[11,"ne","","",1,[[["error"],["self"]],["bool"]]],[11,"eq","","",4,[[["policy"],["self"]],["bool"]]],[11,"ne","","",4,[[["policy"],["self"]],["bool"]]],[11,"eq","","",5,[[["policypaths"],["self"]],["bool"]]],[11,"ne","","",5,[[["policypaths"],["self"]],["bool"]]],[11,"eq","","",6,[[["self"],["pathpolicy"]],["bool"]]],[11,"ne","","",6,[[["self"],["pathpolicy"]],["bool"]]],[11,"eq","","",2,[[["capability"],["self"]],["bool"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"try_from","","",4,[[["value"]],["result"]]],[11,"deserialize","","",4,[[["__d"]],["result"]]],[11,"deserialize","","",5,[[["__d"]],["result"]]],[11,"deserialize","","",6,[[["__d"]],["result"]]],[11,"deserialize","","",2,[[["__d"]],["result"]]],[11,"serialize","","",4,[[["self"],["__s"]],["result"]]],[11,"serialize","","",5,[[["self"],["__s"]],["result"]]],[11,"serialize","","",6,[[["self"],["__s"]],["result"]]],[11,"serialize","","",2,[[["self"],["__s"]],["result"]]]],"p":[[3,"ReadResponse"],[4,"Error"],[4,"Capability"],[3,"Client"],[3,"Policy"],[3,"PolicyPaths"],[3,"PathPolicy"]]};
searchIndex["libra_vm"] = {"doc":"The VM runtime","i":[[3,"LibraVM","libra_vm","A wrapper to make VMRuntime standalone and thread safe.",null,null],[11,"new","","",0,[[],["self"]]],[11,"init_with_config","","",0,[[["libraversion"],["vmconfig"]],["self"]]],[11,"internals","","Provides access to some internal APIs of the Libra VM.",0,[[["self"]],["libravminternals"]]],[11,"load_configs","","",0,[[["stateview"],["self"]]]],[11,"get_gas_schedule","","",0,[[["self"]],[["costtable"],["vmresult",["costtable"]]]]],[11,"get_libra_version","","",0,[[["self"]],[["vmresult",["libraversion"]],["libraversion"]]]],[11,"failed_transaction_cleanup","","Generates a transaction output for a transaction that…",0,[[["gascarrier"],["blockdatacache"],["identstr"],["vmstatus"],["transactionmetadata"],["self"],["gasunits",["gascarrier"]]],["transactionoutput"]]],[0,"system_module_names","","Names of modules, functions, and types used by Libra System.",null,null],[5,"association_capability_struct_tag","libra_vm::system_module_names","",null,[[],["structtag"]]],[7,"LIBRA_TRANSACTION_TIMEOUT","","The ModuleId for the LibraTransactionTimeout module",null,null],[7,"EVENT_MODULE","","The ModuleId for the Event",null,null],[7,"VALIDATOR_CONFIG_MODULE","","The ModuleId for the validator config",null,null],[7,"LIBRA_SYSTEM_MODULE","","The ModuleId for the libra system module",null,null],[7,"LIBRA_WRITESET_MANAGER_MODULE","","The ModuleId for the libra writeset manager module",null,null],[7,"LIBRA_BLOCK_MODULE","","The ModuleId for the libra block module",null,null],[7,"LIBRA_CONFIG_MODULE","","",null,null],[7,"GAS_SCHEDULE_MODULE","","The ModuleId for the gas schedule module",null,null],[7,"TRANSACTION_FEE_MODULE","","The ModuleId for the transaction fee module",null,null],[7,"ASSOCIATION_MODULE","","",null,null],[7,"CREATE_ACCOUNT_NAME","","",null,null],[7,"PROLOGUE_NAME","","",null,null],[7,"EPILOGUE_NAME","","",null,null],[7,"BLOCK_PROLOGUE","","",null,null],[7,"ASSOCIATION_CAPABILITY_STRUCT_NAME","","",null,null],[7,"BASE_ASSOCIATION_CAPABILITY_TYPE_NAME","","",null,null],[8,"VMValidator","libra_vm","This trait describes the VM's validation interfaces.",null,null],[10,"validate_transaction","","Executes the prologue of the Libra Account and verifies…",1,[[["stateview"],["self"],["signedtransaction"]],["vmvalidatorresult"]]],[8,"VMExecutor","","This trait describes the VM's execution interface.",null,null],[10,"execute_block","","Executes a block of transactions and returns output for…",2,[[["transaction"],["stateview"],["vec",["transaction"]]],[["vmstatus"],["vec",["transactionoutput"]],["result",["vec","vmstatus"]]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"into_request","","",0,[[],["request"]]],[11,"vzip","","",0,[[],["v"]]],[11,"validate_transaction","","Determine if a transaction is valid. Will return `None` if…",0,[[["stateview"],["self"],["signedtransaction"]],["vmvalidatorresult"]]],[11,"execute_block","","Execute a block of `transactions`. The output vector will…",0,[[["transaction"],["stateview"],["vec",["transaction"]]],[["vmresult",["vec"]],["vec",["transactionoutput"]]]]],[11,"clone","","",0,[[["self"]],["libravm"]]]],"p":[[3,"LibraVM"],[8,"VMValidator"],[8,"VMExecutor"]]};
searchIndex["libra_wallet"] = {"doc":"","i":[[3,"Mnemonic","libra_wallet","Mnemonic seed for deterministic key derivation based on…",null,null],[3,"WalletLibrary","","WalletLibrary contains all the information needed to…",null,null],[0,"io_utils","","Utils for read/write A module to generate, store and load…",null,null],[5,"recover","libra_wallet::io_utils","Recover wallet from the path specified.",null,[[["p"]],[["walletlibrary"],["result",["walletlibrary"]]]]],[5,"write_recovery","","Write wallet seed to file.",null,[[["walletlibrary"],["p"]],["result"]]],[17,"DELIMITER","","Delimiter used to ser/deserialize account data.",null,null],[11,"from","libra_wallet","Generate mnemonic from string.",0,[[["str"]],[["result",["mnemonic"]],["mnemonic"]]]],[11,"mnemonic","","Generate mnemonic from entropy byte-array.",0,[[],[["result",["mnemonic"]],["mnemonic"]]]],[11,"write","","Write mnemonic to output_file_path.",0,[[["path"],["self"]],["result"]]],[11,"read","","Read mnemonic from input_file_path.",0,[[["path"]],["result"]]],[11,"new","","Constructor that generates a Mnemonic from OS randomness…",1,[[],["self"]]],[11,"new_from_mnemonic","","Constructor that instantiates a new WalletLibrary from…",1,[[["mnemonic"]],["self"]]],[11,"mnemonic","","Function that returns the string representation of the…",1,[[["self"]],["string"]]],[11,"write_recovery","","Function that writes the wallet Mnemonic to file NOTE:…",1,[[["path"],["self"]],["result"]]],[11,"recover","","Recover wallet from input_file_path",1,[[["path"]],[["walletlibrary"],["result",["walletlibrary"]]]]],[11,"key_leaf","","Get the current ChildNumber in u64 format",1,[[["self"]],["u64"]]],[11,"generate_addresses","","Function that iterates from the current key_leaf until the…",1,[[["self"],["u64"]],["result"]]],[11,"new_address_at_child_number","","Function that allows to get the address of a particular…",1,[[["self"],["childnumber"]],[["result",["accountaddress"]],["accountaddress"]]]],[11,"new_address","","Function that generates a new key and adds it to the…",1,[[["self"]],["result"]]],[11,"get_addresses","","Returns a list of all addresses controlled by this wallet…",1,[[["self"]],[["result",["vec"]],["vec",["accountaddress"]]]]],[11,"sign_txn","","Simple public function that allows to sign a Libra…",1,[[["self"],["rawtransaction"]],[["result",["signedtransaction"]],["signedtransaction"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"sign_txn","","",1,[[["self"],["rawtransaction"]],[["error"],["result",["signedtransaction","error"]],["signedtransaction"]]]]],"p":[[3,"Mnemonic"],[3,"WalletLibrary"]]};
searchIndex["libra_workspace_hack"] = {"doc":"","i":[],"p":[]};
searchIndex["libradb"] = {"doc":"This crate provides [`LibraDB`] which represents physical…","i":[[3,"LibraDB","libradb","This holds a handle to the underlying DB responsible for…",null,null],[0,"test_helper","","This module provides reusable helpers in tests.",null,null],[5,"arb_blocks_to_commit_impl","libradb::test_helper","This returns a `proptest` `Strategy` that yields an…",null,[[["usize"]]]],[5,"arb_blocks_to_commit","","",null,[[]]],[5,"arb_mock_genesis","","",null,[[]]],[0,"backup","libradb","",null,null],[3,"BackupHandler","libradb::backup","`BackupHandler` provides functionalities for LibraDB data…",null,null],[11,"get_transaction_iter","","Gets an iterator that yields a range of transactions.",0,[[["u64"],["self"],["version"]],[["result",["transactioniter"]],["transactioniter"]]]],[11,"get_transaction_info_iter","","Gets an iterator that yields a range of transaction infos.",0,[[["u64"],["self"],["version"]],[["result",["transactioninfoiter"]],["transactioninfoiter"]]]],[11,"get_account_iter","","Gets an iterator which can yield all accounts in the state…",0,[[["self"],["version"]],[["box",["iterator"]],["result",["box"]]]]],[11,"get_account_state_range_proof","","Gets the proof that proves a range of accounts.",0,[[["version"],["self"],["hashvalue"]],[["result",["sparsemerklerangeproof"]],["sparsemerklerangeproof"]]]],[0,"errors","libradb","This module defines error types used by `LibraDB`.",null,null],[4,"LibraDbError","libradb::errors","This enum defines errors commonly used among `LibraDB` APIs.",null,null],[13,"NotFound","","A requested item is not found.",1,null],[13,"TooManyRequested","","Requested too many items.",1,null],[0,"schema","libradb","This module defines representation of Libra core data…",null,null],[7,"LIBRA_STORAGE_CF_SIZE_BYTES","","",null,null],[7,"LIBRA_STORAGE_COMMITTED_TXNS","","",null,null],[7,"LIBRA_STORAGE_LATEST_TXN_VERSION","","",null,null],[11,"open","","",2,[[["option",["u64"]],["clone"],["path"],["asref",["path"]],["u64"],["bool"]],["result"]]],[11,"new_for_test","","This opens db in non-readonly mode, without the pruner.",2,[[["path"],["clone"],["asref",["path"]]],["self"]]],[11,"get_epoch_change_ledger_infos","","Returns ledger infos reflecting epoch bumps starting with…",2,[[["self"],["u64"]],["result"]]],[11,"get_transaction_with_proof","","",2,[[["bool"],["self"],["version"]],[["transactionwithproof"],["result",["transactionwithproof"]]]]],[11,"update_to_latest_ledger","","This backs the `UpdateToLatestLedger` public read API…",2,[[["version"],["vec",["requestitem"]],["requestitem"],["self"]],["result"]]],[11,"get_backup_handler","","Gets an instance of `BackupHandler` for data backup purpose.",2,[[["self"]],["backuphandler"]]],[11,"restore_account_state","","",2,[[["hashvalue"],["version"],["self"]],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","libradb::backup","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","libradb::errors","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"update_to_latest_ledger","libradb","",2,[[["version"],["vec",["requestitem"]],["requestitem"],["self"]],["result"]]],[11,"get_epoch_change_ledger_infos","","",2,[[["self"],["u64"]],[["epochchangeproof"],["result",["epochchangeproof"]]]]],[11,"get_latest_account_state","","",2,[[["self"],["accountaddress"]],[["option",["accountstateblob"]],["result",["option"]]]]],[11,"get_latest_ledger_info","","",2,[[["self"]],[["ledgerinfowithsignatures"],["result",["ledgerinfowithsignatures"]]]]],[11,"get_txn_by_account","","Returns a transaction that is the `seq_num`-th one…",2,[[["bool"],["accountaddress"],["version"],["u64"],["self"]],[["option",["transactionwithproof"]],["result",["option"]]]]],[11,"get_transactions","","Gets a batch of transactions for the purpose of…",2,[[["bool"],["version"],["u64"],["self"]],[["result",["transactionlistwithproof"]],["transactionlistwithproof"]]]],[11,"get_events","","",2,[[["bool"],["eventkey"],["self"],["u64"]],[["vec"],["result",["vec"]]]]],[11,"get_ledger_info","","",2,[[["self"],["u64"]],[["ledgerinfowithsignatures"],["result",["ledgerinfowithsignatures"]]]]],[11,"get_state_proof_with_ledger_info","","",2,[[["ledgerinfowithsignatures"],["self"],["u64"]],["result"]]],[11,"get_state_proof","","",2,[[["self"],["u64"]],["result"]]],[11,"get_account_state_with_proof","","",2,[[["version"],["accountaddress"],["self"]],[["accountstatewithproof"],["result",["accountstatewithproof"]]]]],[11,"get_startup_info","","",2,[[["self"]],[["option",["startupinfo"]],["result",["option"]]]]],[11,"get_account_state_with_proof_by_version","","",2,[[["version"],["self"],["accountaddress"]],["result"]]],[11,"get_latest_state_root","","",2,[[["self"]],["result"]]],[11,"get_latest_tree_state","","",2,[[["self"]],[["treestate"],["result",["treestate"]]]]],[11,"save_transactions","","`first_version` is the version of the first transaction in…",2,[[["option",["ledgerinfowithsignatures"]],["version"],["self"],["ledgerinfowithsignatures"]],["result"]]]],"p":[[3,"BackupHandler"],[4,"LibraDbError"],[3,"LibraDB"]]};
searchIndex["memsocket"] = {"doc":"","i":[[3,"MemoryListener","memsocket","An in-memory socket server, listening for connections.",null,null],[3,"Incoming","","Stream returned by the `MemoryListener::incoming` function…",null,null],[3,"MemorySocket","","An in-memory stream between two local sockets.",null,null],[11,"bind","","Creates a new `MemoryListener` which will be bound to the…",0,[[["u16"]],["result"]]],[11,"local_addr","","Returns the local address that this listener is bound to.",0,[[["self"]],["u16"]]],[11,"incoming","","Consumes this listener, returning a stream of the sockets…",0,[[["self"]],["incoming"]]],[11,"new_pair","","Construct both sides of an in-memory socket.",1,[[]]],[11,"connect","","Create a new in-memory Socket connected to the specified…",1,[[["u16"]],[["memorysocket"],["result",["memorysocket"]]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"try_poll_next","","",2,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"drop","","",0,[[["self"]]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"poll_next","","",2,[[["pin"],["self"],["context"]],[["option"],["poll",["option"]]]]],[11,"poll_read","","Attempt to read from the `AsyncRead` into `buf`.",1,[[["context"],["pin"],["self"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_write","","Attempt to write bytes from `buf` into the outgoing channel.",1,[[["context"],["pin"],["self"]],[["poll",["result"]],["result",["usize"]]]]],[11,"poll_flush","","Attempt to flush the channel. Cannot Fail.",1,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"poll_close","","Attempt to close the channel. Cannot Fail.",1,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]]],"p":[[3,"MemoryListener"],[3,"MemorySocket"],[3,"Incoming"]]};
searchIndex["move_core_types"] = {"doc":"Core types for Move.","i":[[0,"account_address","move_core_types","",null,null],[3,"AccountAddress","move_core_types::account_address","A struct that represents an account address.",null,null],[3,"AccountAddressHasher","","",null,null],[11,"new","","",0,[[],["self"]]],[18,"LENGTH","","The number of bytes in an address.",0,null],[18,"DEFAULT","","",0,null],[11,"random","","",0,[[],["self"]]],[11,"short_str","","",0,[[["self"]],["string"]]],[11,"to_vec","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"from_hex_literal","","",0,[[["str"]],["result"]]],[0,"gas_schedule","move_core_types","This module lays out the basic abstract costing schedule…",null,null],[3,"AbstractMemorySize","move_core_types::gas_schedule","A newtype wrapper that represents the (abstract) memory…",null,null],[3,"GasUnits","","A newtype wrapper around the underlying carrier for the…",null,null],[3,"GasPrice","","A newtype wrapper around the gas price for each unit of…",null,null],[3,"GasConstants","","",null,null],[12,"global_memory_per_byte_cost","","The cost per-byte written to global storage. TODO: Fill…",1,null],[12,"global_memory_per_byte_write_cost","","The cost per-byte written to storage. TODO: Fill this in…",1,null],[12,"min_transaction_gas_units","","We charge one unit of gas per-byte for the first 600 bytes",1,null],[12,"large_transaction_cutoff","","Any transaction over this size will be charged…",1,null],[12,"instrinsic_gas_per_byte","","The units of gas that should be charged per byte for every…",1,null],[12,"maximum_number_of_gas_units","","1 nanosecond should equal one unit of computational gas.…",1,null],[12,"min_price_per_gas_unit","","The minimum gas price that a transaction can be submitted…",1,null],[12,"max_price_per_gas_unit","","The maximum gas unit price that a transaction can be…",1,null],[12,"max_transaction_size_in_bytes","","",1,null],[3,"CostTable","","The cost tables, keyed by the serialized form of the…",null,null],[12,"instruction_table","","",2,null],[12,"native_table","","",2,null],[12,"gas_constants","","",2,null],[3,"GasCost","","The `GasCost` tracks: - instruction cost: how much…",null,null],[12,"instruction_gas","","",3,null],[12,"memory_gas","","",3,null],[5,"words_in","","Computes the number of words rounded up",null,[[["abstractmemorysize",["gascarrier"]],["gascarrier"]],[["abstractmemorysize",["gascarrier"]],["gascarrier"]]]],[6,"GasCarrier","","The underlying carrier for gas-related units and costs.…",null,null],[17,"ZERO_GAS_UNITS","","Zero cost.",null,null],[17,"MAX_ABSTRACT_MEMORY_SIZE","","The maximum size representable by AbstractMemorySize",null,null],[17,"WORD_SIZE","","The word size that we charge by",null,null],[17,"CONST_SIZE","","The size in words for a non-string or address constant on…",null,null],[17,"REFERENCE_SIZE","","The size in words for a reference on the stack",null,null],[17,"STRUCT_SIZE","","The size of a struct in words",null,null],[17,"DEFAULT_ACCOUNT_SIZE","","For V1 all accounts will be 32 words",null,null],[17,"LARGE_TRANSACTION_CUTOFF","","Any transaction over this size will be charged…",null,null],[8,"GasAlgebra","","A trait encoding the operations permitted on the…",null,null],[10,"new","","Project a value into the gas algebra.",4,[[["gascarrier"]],["self"]]],[10,"get","","Get the carrier.",4,[[["self"]],["gascarrier"]]],[11,"map","","Map a function `f` of one argument over the underlying data.",4,[[["fn"]],["self"]]],[11,"map2","","Map a function `f` of two arguments over the underlying…",4,[[["fn"]],["self"]]],[11,"app","","Apply a function `f` of two arguments to the carrier.…",4,[[["fn"],["self"]],["t"]]],[11,"unitary_cast","","We allow casting between GasAlgebras as long as they have…",4,[[],["gasalgebra"]]],[11,"add","","Add the two `GasAlgebra`s together.",4,[[],["self"]]],[11,"sub","","Subtract one `GasAlgebra` from the other.",4,[[],["self"]]],[11,"mul","","Multiply two `GasAlgebra`s together.",4,[[],["self"]]],[11,"div","","Divide one `GasAlgebra` by the other.",4,[[],["self"]]],[11,"instruction_cost","","",2,[[["self"],["u8"]],["gascost"]]],[11,"native_cost","","",2,[[["self"],["u8"]],["gascost"]]],[11,"new","","",3,[[["gascarrier"]],["self"]]],[11,"total","","Take a GasCost from our gas schedule and convert it to a…",3,[[["self"]],[["gasunits",["gascarrier"]],["gascarrier"]]]],[0,"identifier","move_core_types","An identifier is the name of an entity (module, resource,…",null,null],[3,"Identifier","move_core_types::identifier","An owned identifier.",null,null],[3,"IdentStr","","A borrowed identifier.",null,null],[11,"new","","Creates a new `Identifier` instance.",5,[[],["result"]]],[11,"is_valid","","Returns true if this string is a valid identifier.",5,[[],["bool"]]],[11,"is_self","","Returns if this identifier is \"\". TODO: remove once we…",5,[[["self"]],["bool"]]],[11,"from_utf8","","Converts a vector of bytes to an `Identifier`.",5,[[["vec",["u8"]],["u8"]],["result"]]],[11,"as_ident_str","","Creates a borrowed version of `self`.",5,[[["self"]],["identstr"]]],[11,"into_string","","Converts this `Identifier` into a `String`.",5,[[],["string"]]],[11,"into_bytes","","Converts this `Identifier` into a UTF-8-encoded byte…",5,[[],[["vec",["u8"]],["u8"]]]],[11,"new","","",6,[[["str"]],[["result",["identstr"]],["identstr"]]]],[11,"is_valid","","Returns true if this string is a valid identifier.",6,[[],["bool"]]],[11,"len","","Returns the length of `self` in bytes.",6,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if `self` has a length of zero bytes.",6,[[["self"]],["bool"]]],[11,"as_str","","Converts `self` to a `&str`.",6,[[["self"]],["str"]]],[11,"as_bytes","","Converts `self` to a byte slice.",6,[[["self"]]]],[0,"language_storage","move_core_types","",null,null],[3,"StructTag","move_core_types::language_storage","",null,null],[12,"address","","",7,null],[12,"module","","",7,null],[12,"name","","",7,null],[12,"type_params","","",7,null],[3,"StructTagHasher","","",null,null],[3,"ResourceKey","","Represents the intitial key into global storage where we…",null,null],[3,"ModuleId","","Represents the initial key into global storage where we…",null,null],[3,"ModuleIdHasher","","",null,null],[4,"TypeTag","","",null,null],[13,"Bool","","",8,null],[13,"U8","","",8,null],[13,"U64","","",8,null],[13,"U128","","",8,null],[13,"Address","","",8,null],[13,"Vector","","",8,null],[13,"Struct","","",8,null],[17,"CODE_TAG","","",null,null],[17,"RESOURCE_TAG","","",null,null],[17,"CORE_CODE_ADDRESS","","",null,null],[11,"access_vector","","",7,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"address","","",9,[[["self"]],["accountaddress"]]],[11,"type_","","",9,[[["self"]],["structtag"]]],[11,"new","","",9,[[["accountaddress"],["structtag"]],["self"]]],[11,"new","","",10,[[["accountaddress"],["identifier"]],["self"]]],[11,"name","","",10,[[["self"]],["identstr"]]],[11,"address","","",10,[[["self"]],["accountaddress"]]],[11,"access_vector","","",10,[[["self"]],[["vec",["u8"]],["u8"]]]],[0,"move_resource","move_core_types","",null,null],[8,"MoveResource","move_core_types::move_resource","",null,null],[18,"MODULE_NAME","","",11,null],[18,"STRUCT_NAME","","",11,null],[11,"module_identifier","","",11,[[],["identifier"]]],[11,"struct_identifier","","",11,[[],["identifier"]]],[11,"type_params","","",11,[[],[["typetag"],["vec",["typetag"]]]]],[11,"struct_tag","","",11,[[],["structtag"]]],[11,"resource_path","","",11,[[],[["vec",["u8"]],["u8"]]]],[0,"proptest_types","move_core_types","",null,null],[11,"from","move_core_types::account_address","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"test_only_hash","","",0,[[["self"]],["hashvalue"]]],[11,"vzip","","",0,[[],["v"]]],[11,"clear","","",0,[[["self"]]]],[11,"initialize","","",0,[[]]],[11,"encode_hex","","",0,[[["self"]],["u"]]],[11,"encode_hex_upper","","",0,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"clear","","",12,[[["self"]]]],[11,"initialize","","",12,[[]]],[11,"from","move_core_types::gas_schedule","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"test_only_hash","","",13,[[["self"]],["hashvalue"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"test_only_hash","","",14,[[["self"]],["hashvalue"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"test_only_hash","","",15,[[["self"]],["hashvalue"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"test_only_hash","","",1,[[["self"]],["hashvalue"]]],[11,"vzip","","",1,[[],["v"]]],[11,"clear","","",1,[[["self"]]]],[11,"initialize","","",1,[[]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"test_only_hash","","",2,[[["self"]],["hashvalue"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"test_only_hash","","",3,[[["self"]],["hashvalue"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","move_core_types::identifier","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"test_only_hash","","",5,[[["self"]],["hashvalue"]]],[11,"vzip","","",5,[[],["v"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","move_core_types::language_storage","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"test_only_hash","","",7,[[["self"]],["hashvalue"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"clear","","",16,[[["self"]]]],[11,"initialize","","",16,[[]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"test_only_hash","","",9,[[["self"]],["hashvalue"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"test_only_hash","","",10,[[["self"]],["hashvalue"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"clear","","",17,[[["self"]]]],[11,"initialize","","",17,[[]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"test_only_hash","","",8,[[["self"]],["hashvalue"]]],[11,"vzip","","",8,[[],["v"]]],[11,"new","move_core_types::gas_schedule","",13,[[["gascarrier"]],["self"]]],[11,"get","","",13,[[["self"]],["gascarrier"]]],[11,"new","","",14,[[["gascarrier"]],["self"]]],[11,"get","","",14,[[["self"]],["gascarrier"]]],[11,"new","","",15,[[["gascarrier"]],["self"]]],[11,"get","","",15,[[["self"]],["gascarrier"]]],[11,"as_ref","move_core_types::account_address","",0,[[["self"]]]],[11,"as_ref","move_core_types::identifier","",5,[[["self"]],["identstr"]]],[11,"from","","",5,[[["identstr"]],["self"]]],[11,"clone","move_core_types::account_address","",0,[[["self"]],["accountaddress"]]],[11,"clone","","",12,[[["self"]],["accountaddresshasher"]]],[11,"clone","move_core_types::gas_schedule","",13,[[["self"]],["abstractmemorysize"]]],[11,"clone","","",14,[[["self"]],["gasunits"]]],[11,"clone","","",15,[[["self"]],["gasprice"]]],[11,"clone","","",1,[[["self"]],["gasconstants"]]],[11,"clone","","",2,[[["self"]],["costtable"]]],[11,"clone","","",3,[[["self"]],["gascost"]]],[11,"clone","move_core_types::identifier","",5,[[["self"]],["identifier"]]],[11,"clone","move_core_types::language_storage","",8,[[["self"]],["typetag"]]],[11,"clone","","",7,[[["self"]],["structtag"]]],[11,"clone","","",16,[[["self"]],["structtaghasher"]]],[11,"clone","","",9,[[["self"]],["resourcekey"]]],[11,"clone","","",10,[[["self"]],["moduleid"]]],[11,"clone","","",17,[[["self"]],["moduleidhasher"]]],[11,"default","move_core_types::account_address","",12,[[],["self"]]],[11,"default","","",0,[[],["accountaddress"]]],[11,"default","move_core_types::gas_schedule","",1,[[],["self"]]],[11,"default","move_core_types::language_storage","",16,[[],["self"]]],[11,"default","","",17,[[],["self"]]],[11,"cmp","move_core_types::account_address","",0,[[["accountaddress"],["self"]],["ordering"]]],[11,"cmp","move_core_types::identifier","",5,[[["identifier"],["self"]],["ordering"]]],[11,"cmp","","",6,[[["self"],["identstr"]],["ordering"]]],[11,"cmp","move_core_types::language_storage","",8,[[["self"],["typetag"]],["ordering"]]],[11,"cmp","","",7,[[["structtag"],["self"]],["ordering"]]],[11,"cmp","","",9,[[["self"],["resourcekey"]],["ordering"]]],[11,"cmp","","",10,[[["moduleid"],["self"]],["ordering"]]],[11,"eq","move_core_types::account_address","",0,[[["accountaddress"],["self"]],["bool"]]],[11,"ne","","",0,[[["accountaddress"],["self"]],["bool"]]],[11,"eq","move_core_types::gas_schedule","",13,[[["abstractmemorysize"],["self"]],["bool"]]],[11,"ne","","",13,[[["abstractmemorysize"],["self"]],["bool"]]],[11,"eq","","",14,[[["gasunits"],["self"]],["bool"]]],[11,"ne","","",14,[[["gasunits"],["self"]],["bool"]]],[11,"eq","","",15,[[["self"],["gasprice"]],["bool"]]],[11,"ne","","",15,[[["self"],["gasprice"]],["bool"]]],[11,"eq","","",1,[[["self"],["gasconstants"]],["bool"]]],[11,"ne","","",1,[[["self"],["gasconstants"]],["bool"]]],[11,"eq","","",2,[[["self"],["costtable"]],["bool"]]],[11,"ne","","",2,[[["self"],["costtable"]],["bool"]]],[11,"eq","","",3,[[["gascost"],["self"]],["bool"]]],[11,"ne","","",3,[[["gascost"],["self"]],["bool"]]],[11,"eq","move_core_types::identifier","",5,[[["identifier"],["self"]],["bool"]]],[11,"ne","","",5,[[["identifier"],["self"]],["bool"]]],[11,"eq","","",6,[[["self"],["identstr"]],["bool"]]],[11,"ne","","",6,[[["self"],["identstr"]],["bool"]]],[11,"eq","move_core_types::language_storage","",8,[[["self"],["typetag"]],["bool"]]],[11,"ne","","",8,[[["self"],["typetag"]],["bool"]]],[11,"eq","","",7,[[["structtag"],["self"]],["bool"]]],[11,"ne","","",7,[[["structtag"],["self"]],["bool"]]],[11,"eq","","",9,[[["self"],["resourcekey"]],["bool"]]],[11,"ne","","",9,[[["self"],["resourcekey"]],["bool"]]],[11,"eq","","",10,[[["moduleid"],["self"]],["bool"]]],[11,"ne","","",10,[[["moduleid"],["self"]],["bool"]]],[11,"partial_cmp","move_core_types::account_address","",0,[[["accountaddress"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["accountaddress"],["self"]],["bool"]]],[11,"le","","",0,[[["accountaddress"],["self"]],["bool"]]],[11,"gt","","",0,[[["accountaddress"],["self"]],["bool"]]],[11,"ge","","",0,[[["accountaddress"],["self"]],["bool"]]],[11,"partial_cmp","move_core_types::identifier","",5,[[["identifier"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",5,[[["identifier"],["self"]],["bool"]]],[11,"le","","",5,[[["identifier"],["self"]],["bool"]]],[11,"gt","","",5,[[["identifier"],["self"]],["bool"]]],[11,"ge","","",5,[[["identifier"],["self"]],["bool"]]],[11,"partial_cmp","","",6,[[["self"],["identstr"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",6,[[["self"],["identstr"]],["bool"]]],[11,"le","","",6,[[["self"],["identstr"]],["bool"]]],[11,"gt","","",6,[[["self"],["identstr"]],["bool"]]],[11,"ge","","",6,[[["self"],["identstr"]],["bool"]]],[11,"partial_cmp","move_core_types::language_storage","",8,[[["self"],["typetag"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",8,[[["self"],["typetag"]],["bool"]]],[11,"le","","",8,[[["self"],["typetag"]],["bool"]]],[11,"gt","","",8,[[["self"],["typetag"]],["bool"]]],[11,"ge","","",8,[[["self"],["typetag"]],["bool"]]],[11,"partial_cmp","","",7,[[["structtag"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",7,[[["structtag"],["self"]],["bool"]]],[11,"le","","",7,[[["structtag"],["self"]],["bool"]]],[11,"gt","","",7,[[["structtag"],["self"]],["bool"]]],[11,"ge","","",7,[[["structtag"],["self"]],["bool"]]],[11,"partial_cmp","","",9,[[["self"],["resourcekey"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",9,[[["self"],["resourcekey"]],["bool"]]],[11,"le","","",9,[[["self"],["resourcekey"]],["bool"]]],[11,"gt","","",9,[[["self"],["resourcekey"]],["bool"]]],[11,"ge","","",9,[[["self"],["resourcekey"]],["bool"]]],[11,"partial_cmp","","",10,[[["moduleid"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",10,[[["moduleid"],["self"]],["bool"]]],[11,"le","","",10,[[["moduleid"],["self"]],["bool"]]],[11,"gt","","",10,[[["moduleid"],["self"]],["bool"]]],[11,"ge","","",10,[[["moduleid"],["self"]],["bool"]]],[11,"to_owned","move_core_types::identifier","",6,[[["self"]],["identifier"]]],[11,"deref","","",5,[[["self"]],["identstr"]]],[11,"fmt","move_core_types::account_address","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","move_core_types::gas_schedule","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","move_core_types::identifier","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","move_core_types::language_storage","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","move_core_types::account_address","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","move_core_types::identifier","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","move_core_types::language_storage","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"hash","move_core_types::account_address","",0,[[["self"],["__h"]]]],[11,"hash","move_core_types::gas_schedule","",13,[[["self"],["__h"]]]],[11,"hash","","",14,[[["self"],["__h"]]]],[11,"hash","","",15,[[["self"],["__h"]]]],[11,"hash","move_core_types::identifier","",5,[[["self"],["__h"]]]],[11,"hash","","",6,[[["self"],["__h"]]]],[11,"hash","move_core_types::language_storage","",8,[[["self"],["__h"]]]],[11,"hash","","",7,[[["self"],["__h"]]]],[11,"hash","","",9,[[["self"],["__h"]]]],[11,"hash","","",10,[[["self"],["__h"]]]],[11,"try_from","move_core_types::account_address","Tries to convert the provided byte array into Address.",0,[[],[["result",["accountaddress"]],["accountaddress"]]]],[11,"try_from","","Tries to convert the provided byte array into Address.",0,[[],[["result",["accountaddress"]],["accountaddress"]]]],[11,"try_from","","Tries to convert the provided byte buffer into Address.",0,[[["vec",["u8"]],["u8"]],[["result",["accountaddress"]],["accountaddress"]]]],[11,"try_from","","",0,[[["bytes"]],[["result",["accountaddress"]],["accountaddress"]]]],[11,"try_from","","",0,[[["string"]],[["result",["accountaddress"]],["accountaddress"]]]],[11,"from_str","","",0,[[["str"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"borrow","move_core_types::identifier","",5,[[["self"]],["identstr"]]],[11,"serialize","move_core_types::account_address","",0,[[["s"],["self"]],["result"]]],[11,"serialize","move_core_types::gas_schedule","",13,[[["self"],["__s"]],["result"]]],[11,"serialize","","",14,[[["self"],["__s"]],["result"]]],[11,"serialize","","",15,[[["self"],["__s"]],["result"]]],[11,"serialize","","",1,[[["self"],["__s"]],["result"]]],[11,"serialize","","",2,[[["self"],["__s"]],["result"]]],[11,"serialize","","",3,[[["self"],["__s"]],["result"]]],[11,"serialize","move_core_types::identifier","",5,[[["self"],["__s"]],["result"]]],[11,"serialize","move_core_types::language_storage","",8,[[["self"],["__s"]],["result"]]],[11,"serialize","","",7,[[["self"],["__s"]],["result"]]],[11,"serialize","","",9,[[["self"],["__s"]],["result"]]],[11,"serialize","","",10,[[["self"],["__s"]],["result"]]],[11,"deserialize","move_core_types::account_address","",0,[[["d"]],["result"]]],[11,"deserialize","move_core_types::gas_schedule","",13,[[["__d"]],["result"]]],[11,"deserialize","","",14,[[["__d"]],["result"]]],[11,"deserialize","","",15,[[["__d"]],["result"]]],[11,"deserialize","","",1,[[["__d"]],["result"]]],[11,"deserialize","","",2,[[["__d"]],["result"]]],[11,"deserialize","","",3,[[["__d"]],["result"]]],[11,"deserialize","move_core_types::identifier","",5,[[["__d"]],["result"]]],[11,"deserialize","move_core_types::language_storage","",8,[[["__d"]],["result"]]],[11,"deserialize","","",7,[[["__d"]],["result"]]],[11,"deserialize","","",9,[[["__d"]],["result"]]],[11,"deserialize","","",10,[[["__d"]],["result"]]],[11,"arbitrary_with","move_core_types::account_address","",0,[[]]],[11,"arbitrary_with","move_core_types::identifier","",5,[[]]],[11,"arbitrary_with","move_core_types::language_storage","",10,[[]]],[11,"arbitrary_with","","",8,[[]]],[11,"hash","move_core_types::account_address","",0,[[["self"]],["hashvalue"]]],[11,"hash","move_core_types::language_storage","",10,[[["self"]],["hashvalue"]]],[11,"hash","","",7,[[["self"]],["hashvalue"]]],[11,"finish","move_core_types::account_address","",12,[[],["hashvalue"]]],[11,"write","","",12,[[["self"]],["self"]]],[11,"finish","move_core_types::language_storage","",16,[[],["hashvalue"]]],[11,"write","","",16,[[["self"]],["self"]]],[11,"finish","","",17,[[],["hashvalue"]]],[11,"write","","",17,[[["self"]],["self"]]],[11,"ref_cast","move_core_types::identifier","",6,[[],["self"]]],[11,"ref_cast_mut","","",6,[[],["self"]]]],"p":[[3,"AccountAddress"],[3,"GasConstants"],[3,"CostTable"],[3,"GasCost"],[8,"GasAlgebra"],[3,"Identifier"],[3,"IdentStr"],[3,"StructTag"],[4,"TypeTag"],[3,"ResourceKey"],[3,"ModuleId"],[8,"MoveResource"],[3,"AccountAddressHasher"],[3,"AbstractMemorySize"],[3,"GasUnits"],[3,"GasPrice"],[3,"StructTagHasher"],[3,"ModuleIdHasher"]]};
searchIndex["move_coverage"] = {"doc":"","i":[[0,"coverage_map","move_coverage","",null,null],[3,"CoverageMap","move_coverage::coverage_map","",null,null],[12,"module_maps","","",0,null],[3,"ModuleCoverageMap","","",null,null],[12,"module_addr","","",1,null],[12,"module_name","","",1,null],[12,"function_maps","","",1,null],[5,"output_map_to_file","","",null,[[["path"],["m"],["asref",["path"]]],["result"]]],[6,"FunctionCoverage","","",null,null],[11,"from_trace_file","","Takes in a file containing a raw VM trace, and returns a…",0,[[["path"],["asref",["path"]]],["self"]]],[11,"from_binary_file","","Takes in a file containing a serialized coverage map and…",0,[[["path"],["asref",["path"]]],["self"]]],[11,"new","","",1,[[["accountaddress"],["identifier"]],["self"]]],[11,"insert","","",1,[[["self"],["identifier"],["u64"]]]],[11,"get_function_coverage","","",1,[[["identstr"],["self"]],[["option",["functioncoverage"]],["functioncoverage"]]]],[0,"source_coverage","move_coverage","",null,null],[3,"FunctionSourceCoverage","move_coverage::source_coverage","",null,null],[12,"fn_is_native","","",2,null],[12,"uncovered_locations","","",2,null],[3,"SourceCoverageBuilder","","",null,null],[3,"SourceCoverage","","",null,null],[12,"annotated_lines","","",3,null],[4,"AbstractSegment","","",null,null],[13,"Bounded","","",4,null],[12,"start","move_coverage::source_coverage::AbstractSegment","",5,null],[12,"end","","",5,null],[13,"BoundedRight","move_coverage::source_coverage","",4,null],[12,"end","move_coverage::source_coverage::AbstractSegment","",6,null],[13,"BoundedLeft","move_coverage::source_coverage","",4,null],[12,"start","move_coverage::source_coverage::AbstractSegment","",7,null],[4,"StringSegment","move_coverage::source_coverage","",null,null],[13,"Covered","","",8,null],[13,"Uncovered","","",8,null],[6,"AnnotatedLine","","",null,null],[11,"new","","",9,[[["compiledmodule"],["coveragemap"],["sourcemap"]],["self"]]],[11,"compute_source_coverage","","",9,[[["path"],["self"]],["sourcecoverage"]]],[11,"output_source_coverage","","",3,[[["w"],["self"]],["result"]]],[0,"summary","move_coverage","",null,null],[3,"ModuleSummaryOptions","move_coverage::summary","",null,null],[12,"summarize_function_coverage","","",10,null],[3,"ModuleSummary","","",null,null],[12,"module_name","","",11,null],[12,"function_summaries","","",11,null],[3,"FunctionSummary","","",null,null],[12,"fn_is_native","","",12,null],[12,"total_number_of_instructions","","",12,null],[12,"covered_instructions","","",12,null],[5,"percent_coverage_for_counts","","",null,[[["u64"]],["f64"]]],[11,"new","","",11,[[["modulesummaryoptions"],["compiledmodule"],["coveragemap"]],["self"]]],[11,"summarize","","Summarizes the modules coverage, and returns the total…",11,[[["w"],["self"]],["result"]]],[11,"percent_coverage","","",12,[[["self"]],["f64"]]],[11,"from","move_coverage::coverage_map","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"test_only_hash","","",0,[[["self"]],["hashvalue"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"test_only_hash","","",1,[[["self"]],["hashvalue"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","move_coverage::source_coverage","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"test_only_hash","","",2,[[["self"]],["hashvalue"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"test_only_hash","","",9,[[["self"]],["hashvalue"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"test_only_hash","","",3,[[["self"]],["hashvalue"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"test_only_hash","","",4,[[["self"]],["hashvalue"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"test_only_hash","","",8,[[["self"]],["hashvalue"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","move_coverage::summary","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"test_only_hash","","",10,[[["self"]],["hashvalue"]]],[11,"vzip","","",10,[[],["v"]]],[11,"clear","","",10,[[["self"]]]],[11,"initialize","","",10,[[]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"test_only_hash","","",11,[[["self"]],["hashvalue"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"test_only_hash","","",12,[[["self"]],["hashvalue"]]],[11,"vzip","","",12,[[],["v"]]],[11,"clone","move_coverage::source_coverage","",2,[[["self"]],["functionsourcecoverage"]]],[11,"default","move_coverage::summary","",10,[[],["self"]]],[11,"fmt","move_coverage::coverage_map","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","move_coverage::source_coverage","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","move_coverage::summary","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"deserialize","move_coverage::coverage_map","",0,[[["__d"]],["result"]]],[11,"deserialize","","",1,[[["__d"]],["result"]]],[11,"deserialize","move_coverage::summary","",10,[[["__d"]],["result"]]],[11,"deserialize","","",11,[[["__d"]],["result"]]],[11,"deserialize","","",12,[[["__d"]],["result"]]],[11,"serialize","move_coverage::coverage_map","",0,[[["self"],["__s"]],["result"]]],[11,"serialize","","",1,[[["self"],["__s"]],["result"]]],[11,"serialize","move_coverage::source_coverage","",2,[[["self"],["__s"]],["result"]]],[11,"serialize","","",9,[[["self"],["__s"]],["result"]]],[11,"serialize","","",4,[[["self"],["__s"]],["result"]]],[11,"serialize","","",8,[[["self"],["__s"]],["result"]]],[11,"serialize","","",3,[[["self"],["__s"]],["result"]]],[11,"serialize","move_coverage::summary","",10,[[["self"],["__s"]],["result"]]],[11,"serialize","","",11,[[["self"],["__s"]],["result"]]],[11,"serialize","","",12,[[["self"],["__s"]],["result"]]]],"p":[[3,"CoverageMap"],[3,"ModuleCoverageMap"],[3,"FunctionSourceCoverage"],[3,"SourceCoverage"],[4,"AbstractSegment"],[13,"Bounded"],[13,"BoundedRight"],[13,"BoundedLeft"],[4,"StringSegment"],[3,"SourceCoverageBuilder"],[3,"ModuleSummaryOptions"],[3,"ModuleSummary"],[3,"FunctionSummary"]]};
searchIndex["move_ir_types"] = {"doc":"Base types for the Move IR.","i":[[0,"ast","move_ir_types","",null,null],[3,"Program","move_ir_types::ast","A set of move modules and a Move transaction script",null,null],[12,"modules","","The modules to publish",0,null],[12,"script","","The transaction script to execute",0,null],[3,"Script","","The move transaction script to be executed",null,null],[12,"imports","","The dependencies of `main`, i.e. of the transaction script",1,null],[12,"explicit_dependency_declarations","","Explicit declaration of dependencies. If not provided,…",1,null],[12,"main","","The transaction script's `main` procedure",1,null],[3,"ModuleName","","Newtype for a name of a module",null,null],[3,"QualifiedModuleIdent","","Newtype of the address + the module name `addr.m`",null,null],[12,"name","","Name for the module. Will be unique among modules…",2,null],[12,"address","","Address that this module is published under",2,null],[3,"ModuleDefinition","","A Move module",null,null],[12,"name","","name of the module",3,null],[12,"imports","","the module's dependencies",3,null],[12,"explicit_dependency_declarations","","Explicit declaration of dependencies. If not provided,…",3,null],[12,"structs","","the structs (including resources) that the module defines",3,null],[12,"functions","","the procedure that the module defines",3,null],[12,"synthetics","","the synthetic, specification variables the module defines.",3,null],[3,"ModuleDependency","","Explicitly given dependency",null,null],[12,"name","","Qualified identifer of the dependency",4,null],[12,"structs","","The structs (including resources) that the dependency…",4,null],[12,"functions","","The signatures of functions that the dependency defines",4,null],[3,"ImportDefinition","","A dependency/import declaration",null,null],[12,"ident","","the dependency `addr.m` or `Transaction.m`",5,null],[12,"alias","","the alias for that dependency `m`",5,null],[3,"Var_","","Newtype for a variable/local",null,null],[3,"TypeVar_","","New type that represents a type variable. Used to declare…",null,null],[3,"QualifiedStructIdent","","Identifier for a struct definition. Tells us where to look…",null,null],[12,"module","","Module name and address in which the struct is contained",6,null],[12,"name","","Name for the struct class. Should be unique among structs…",6,null],[3,"Field_","","The field newtype",null,null],[3,"StructName","","Newtype for the name of a struct",null,null],[3,"StructDefinition_","","A Move struct",null,null],[12,"is_nominal_resource","","The struct will have kind resource if…",7,null],[12,"name","","Human-readable name for the struct that also serves as a…",7,null],[12,"type_formals","","Kind constraints of the type parameters",7,null],[12,"fields","","the fields each instance has",7,null],[12,"invariants","","the invariants for this struct",7,null],[3,"StructDependency","","An explicit struct dependency",null,null],[12,"is_nominal_resource","","The struct will have kind resource if…",8,null],[12,"name","","Human-readable name for the struct that also serves as a…",8,null],[12,"type_formals","","Kind constraints of the type parameters",8,null],[3,"FunctionName","","Newtype for the name of a function",null,null],[3,"FunctionSignature","","The signature of a function",null,null],[12,"formals","","Possibly-empty list of (formal name, formal type) pairs.…",9,null],[12,"return_type","","Optional return types",9,null],[12,"type_formals","","Possibly-empty list of (TypeVar, Kind) pairs.s.",9,null],[3,"FunctionDependency","","An explicit function dependency",null,null],[12,"name","","Name of the function dependency",10,null],[12,"signature","","Signature of the function dependency",10,null],[3,"Function_","","A Move function/procedure",null,null],[12,"visibility","","The visibility (public or internal)",11,null],[12,"signature","","The type signature",11,null],[12,"acquires","","List of nominal resources (declared in this module) that…",11,null],[12,"specifications","","List of specifications for the Move prover (experimental)",11,null],[12,"body","","The code for the procedure",11,null],[3,"IfElse","","Struct defining an if statement",null,null],[12,"cond","","the if's condition",12,null],[12,"if_block","","the block taken if the condition is `true`",12,null],[12,"else_block","","the block taken if the condition is `false`",12,null],[3,"While","","Struct defining a while statement",null,null],[12,"cond","","The condition for a while statement",13,null],[12,"block","","The block taken if the condition is `true`",13,null],[3,"Loop","","Struct defining a loop statement",null,null],[12,"block","","The body of the loop",14,null],[3,"Block_","","`{ s }`",null,null],[12,"stmts","","The statements that make up the block",15,null],[3,"BlockLabel","","",null,null],[12,"0","","",16,null],[3,"NopLabel","","",null,null],[12,"0","","",17,null],[4,"ScriptOrModule","","A script or a module, used to represent the two types of…",null,null],[13,"Script","","The script to execute.",18,null],[13,"Module","","The module to publish.",18,null],[4,"ModuleIdent","","Either a qualified module name like `addr.m` or…",null,null],[13,"Transaction","","",19,null],[13,"Qualified","","",19,null],[4,"Kind","","The kind of a type. Analogous to `vm::file_format::Kind`.",null,null],[13,"All","","Represents the super set of all types.",20,null],[13,"Resource","","`Resource` types must follow move semantics and various…",20,null],[13,"Copyable","","`Copyable` types do not need to follow the `Resource` rules.",20,null],[4,"Type","","The type of a single value",null,null],[13,"Address","","`address`",21,null],[13,"U8","","`u8`",21,null],[13,"U64","","`u64`",21,null],[13,"U128","","`u128`",21,null],[13,"Bool","","`bool`",21,null],[13,"Vector","","`vector`",21,null],[13,"Struct","","A module defined struct",21,null],[13,"Reference","","A reference type, the bool flag indicates whether the…",21,null],[13,"TypeParameter","","A type parameter",21,null],[4,"StructDefinitionFields","","The fields of a Move struct definition",null,null],[13,"Move","","The fields are declared",22,null],[12,"fields","move_ir_types::ast::StructDefinitionFields","",23,null],[13,"Native","move_ir_types::ast","The struct is a type provided by the VM",22,null],[4,"FunctionVisibility","","Public or internal modifier for a procedure",null,null],[13,"Public","","The procedure can be invoked anywhere `public`",24,null],[13,"Internal","","The procedure can be invoked only internally `<no modifier>`",24,null],[4,"FunctionBody","","The body of a Move function",null,null],[13,"Move","","The body is declared `locals` are all of the declared…",25,null],[12,"locals","move_ir_types::ast::FunctionBody","",26,null],[12,"code","","",26,null],[13,"Bytecode","move_ir_types::ast","",25,null],[12,"locals","move_ir_types::ast::FunctionBody","",27,null],[12,"code","","",27,null],[13,"Native","move_ir_types::ast","The body is provided by the runtime",25,null],[4,"Builtin","","Builtin \"function\"-like operators that often have a…",null,null],[13,"Exists","","Check if there is a struct object (`StructName` resolved…",28,null],[13,"BorrowGlobal","","Get a reference to the resource(`StructName` resolved by…",28,null],[13,"GetTxnSender","","Returns the address of the current transaction's sender",28,null],[13,"MoveFrom","","Remove a resource of the given type from the account with…",28,null],[13,"MoveToSender","","Publish an instantiated struct object into sender's account.",28,null],[13,"Freeze","","Convert a mutable reference into an immutable one",28,null],[13,"ToU8","","Cast an integer into u8.",28,null],[13,"ToU64","","Cast an integer into u64.",28,null],[13,"ToU128","","Cast an integer into u128.",28,null],[4,"FunctionCall_","","Enum for different function calls",null,null],[13,"Builtin","","functions defined in the host environment",29,null],[13,"ModuleFunctionCall","","The call of a module defined procedure",29,null],[12,"module","move_ir_types::ast::FunctionCall_","",30,null],[12,"name","","",30,null],[12,"type_actuals","","",30,null],[4,"LValue_","move_ir_types::ast","Enum for Move lvalues",null,null],[13,"Var","","`x`",31,null],[13,"Mutate","","`*e`",31,null],[13,"Pop","","`_`",31,null],[4,"Cmd_","","Enum for Move commands",null,null],[13,"Assign","","`l_1, ..., l_n = e`",32,null],[13,"Unpack","","`n { f_1: x_1, ... , f_j: x_j  } = e`",32,null],[13,"Abort","","`abort e`",32,null],[13,"Return","","`return e_1, ... , e_j`",32,null],[13,"Break","","`break`",32,null],[13,"Continue","","`continue`",32,null],[13,"Exp","","",32,null],[4,"Statement","","",null,null],[13,"CommandStatement","","`c;`",33,null],[13,"IfElseStatement","","`if (e) { s_1 } else { s_2 }`",33,null],[13,"WhileStatement","","`while (e) { s }`",33,null],[13,"LoopStatement","","`loop { s }`",33,null],[13,"EmptyStatement","","no-op that eases parsing in some places",33,null],[4,"CopyableVal_","","Bottom of the value hierarchy. These values can be…",null,null],[13,"Address","","An address in the global storage",34,null],[13,"U8","","An unsigned 8-bit integer",34,null],[13,"U64","","An unsigned 64-bit integer",34,null],[13,"U128","","An unsigned 128-bit integer",34,null],[13,"Bool","","true or false",34,null],[13,"ByteArray","","`b\"<bytes>\"`",34,null],[4,"UnaryOp","","Enum for unary operators",null,null],[13,"Not","","Boolean negation",35,null],[4,"BinOp","","Enum for binary operators",null,null],[13,"Add","","`+`",36,null],[13,"Sub","","`-`",36,null],[13,"Mul","","`*`",36,null],[13,"Mod","","`%`",36,null],[13,"Div","","`/`",36,null],[13,"BitOr","","`|`",36,null],[13,"BitAnd","","`&`",36,null],[13,"Xor","","`^`",36,null],[13,"Shl","","`<<`",36,null],[13,"Shr","","`>>`",36,null],[13,"And","","`&&`",36,null],[13,"Or","","`||`",36,null],[13,"Eq","","`==`",36,null],[13,"Neq","","`!=`",36,null],[13,"Lt","","`<`",36,null],[13,"Gt","","`>`",36,null],[13,"Le","","`<=`",36,null],[13,"Ge","","`>=`",36,null],[13,"Subrange","","'..'  only used in specs",36,null],[4,"Exp_","","Enum for all expressions",null,null],[13,"Dereference","","`*e`",37,null],[13,"UnaryExp","","`op e`",37,null],[13,"BinopExp","","`e_1 op e_2`",37,null],[13,"Value","","Wrapper to lift `CopyableVal` into `Exp` `v`",37,null],[13,"Pack","","Takes the given field values and instantiates the struct…",37,null],[13,"Borrow","","`&e.f`, `&mut e.f`",37,null],[12,"is_mutable","move_ir_types::ast::Exp_","mutable or not",38,null],[12,"exp","","the expression containing the reference",38,null],[12,"field","","the field being borrowed",38,null],[13,"Move","move_ir_types::ast","`move(x)`",37,null],[13,"Copy","","`copy(x)`",37,null],[13,"BorrowLocal","","`&x` or `&mut x`",37,null],[13,"FunctionCall","","`f(e)` or `f(e_1, e_2, ..., e_j)`",37,null],[13,"ExprList","","(e_1, e_2, e_3, ..., e_j)",37,null],[4,"Bytecode_","","",null,null],[13,"Pop","","",39,null],[13,"Ret","","",39,null],[13,"Nop","","",39,null],[13,"BrTrue","","",39,null],[13,"BrFalse","","",39,null],[13,"Branch","","",39,null],[13,"LdU8","","",39,null],[13,"LdU64","","",39,null],[13,"LdU128","","",39,null],[13,"CastU8","","",39,null],[13,"CastU64","","",39,null],[13,"CastU128","","",39,null],[13,"LdByteArray","","",39,null],[13,"LdAddr","","",39,null],[13,"LdTrue","","",39,null],[13,"LdFalse","","",39,null],[13,"CopyLoc","","",39,null],[13,"MoveLoc","","",39,null],[13,"StLoc","","",39,null],[13,"Call","","",39,null],[13,"Pack","","",39,null],[13,"Unpack","","",39,null],[13,"ReadRef","","",39,null],[13,"WriteRef","","",39,null],[13,"FreezeRef","","",39,null],[13,"MutBorrowLoc","","",39,null],[13,"ImmBorrowLoc","","",39,null],[13,"MutBorrowField","","",39,null],[13,"ImmBorrowField","","",39,null],[13,"MutBorrowGlobal","","",39,null],[13,"ImmBorrowGlobal","","",39,null],[13,"Add","","",39,null],[13,"Sub","","",39,null],[13,"Mul","","",39,null],[13,"Mod","","",39,null],[13,"Div","","",39,null],[13,"BitOr","","",39,null],[13,"BitAnd","","",39,null],[13,"Xor","","",39,null],[13,"Or","","",39,null],[13,"And","","",39,null],[13,"Not","","",39,null],[13,"Eq","","",39,null],[13,"Neq","","",39,null],[13,"Lt","","",39,null],[13,"Gt","","",39,null],[13,"Le","","",39,null],[13,"Ge","","",39,null],[13,"Abort","","",39,null],[13,"GetTxnSenderAddress","","",39,null],[13,"Exists","","",39,null],[13,"MoveFrom","","",39,null],[13,"MoveToSender","","",39,null],[13,"Shl","","",39,null],[13,"Shr","","",39,null],[6,"Var","","The type of a variable with a location",null,null],[6,"TypeVar","","The type of a type variable with a location.",null,null],[6,"Field","","A field coupled with source location information",null,null],[6,"Fields","","A field map",null,null],[6,"StructDefinition","","The type of a StructDefinition along with its source…",null,null],[6,"Function","","The type of a Function coupled with its source location…",null,null],[6,"FunctionCall","","The type for a function call and its location",null,null],[6,"LValue","","",null,null],[6,"Cmd","","The type of a command with its location",null,null],[6,"Block","","The type of a Block coupled with source location…",null,null],[6,"CopyableVal","","The type of a value and its location",null,null],[6,"ExpFields","","The type for fields and their bound expressions",null,null],[6,"Exp","","The type for a `Exp_` and its location",null,null],[6,"BytecodeBlocks","","",null,null],[6,"BytecodeBlock","","",null,null],[6,"Bytecode","","",null,null],[11,"new","","Create a new `Program` from modules and transaction script",0,[[["moduledefinition"],["vec",["moduledefinition"]],["script"]],["self"]]],[11,"new","","Create a new `Script` from the imports and the main function",1,[[["vec",["importdefinition"]],["importdefinition"],["function"],["moduledependency"],["vec",["moduledependency"]]],["self"]]],[11,"body","","Accessor for the body of the 'main' procedure",1,[[["self"]],["block_"]]],[11,"get_external_deps","","Return a vector of `ModuleId` for the external dependencies.",1,[[["self"]],[["vec",["moduleid"]],["moduleid"]]]],[11,"new","","Create a new `ModuleName` from a string",40,[[["string"]],["self"]]],[11,"self_name","","Name for the current module handle",40,[[],["str"]]],[11,"module_self","","Create a new `ModuleName` from `self_name`.",40,[[],["self"]]],[11,"into_inner","","Converts self into a string.",40,[[],["string"]]],[11,"as_inner","","Accessor for the name of the module",40,[[["self"]],["str"]]],[11,"new","","Creates a new fully qualified module identifier from the…",2,[[["modulename"],["accountaddress"]],["self"]]],[11,"name","","Accessor for the name of the fully qualified module…",2,[[["self"]],["modulename"]]],[11,"address","","Accessor for the address at which the module is published",2,[[["self"]],["accountaddress"]]],[11,"name","","",19,[[["self"]],["modulename"]]],[11,"new","","Creates a new `ModuleDefinition` from its string name,…",3,[[["vec",["importdefinition"]],["vec"],["vec",["syntheticdefinition"]],["structdefinition"],["importdefinition"],["syntheticdefinition"],["vec",["structdefinition"]],["moduledependency"],["vec",["moduledependency"]]],["result"]]],[11,"get_external_deps","","Return a vector of `ModuleId` for the external dependencies.",3,[[["self"]],[["vec",["moduleid"]],["moduleid"]]]],[11,"struct","","Creates a new struct type",21,[[["vec",["type"]],["qualifiedstructident"],["type"]],["type"]]],[11,"reference","","Creates a new reference type from its mutability and…",21,[[["type"],["bool"]],["type"]]],[11,"address","","Creates a new address type",21,[[],["type"]]],[11,"u64","","Creates a new u64 type",21,[[],["type"]]],[11,"bool","","Creates a new bool type",21,[[],["type"]]],[11,"new","","Creates a new StructType handle from the name of the…",6,[[["modulename"],["structname"]],["self"]]],[11,"module","","Accessor for the module alias",6,[[["self"]],["modulename"]]],[11,"name","","Accessor for the struct name",6,[[["self"]],["structname"]]],[11,"new","","Creates a new import definition from a module identifier…",5,[[["option",["modulename"]],["moduleident"],["modulename"]],["self"]]],[11,"new","","Create a new `Field_` from a string",41,[[["string"]],["self"]]],[11,"into_inner","","Converts self into a string.",41,[[],["string"]]],[11,"as_inner","","Accessor for the name of the struct",41,[[["self"]],["str"]]],[11,"new","","Create a new `StructName` from a string",42,[[["string"]],["self"]]],[11,"into_inner","","Converts self into a string.",42,[[],["string"]]],[11,"as_inner","","Accessor for the name of the struct",42,[[["self"]],["str"]]],[11,"move_declared","","Creates a new StructDefinition from the resource kind…",7,[[["invariant"],["fields",["type"]],["type"],["vec",["invariant"]],["bool"],["vec"]],["result"]]],[11,"native","","Creates a new StructDefinition from the resource kind…",7,[[["vec"],["bool"]],["result"]]],[11,"new","","Create a new `FunctionName` from a string",43,[[["string"]],["self"]]],[11,"into_inner","","Converts self into a string.",43,[[],["string"]]],[11,"as_inner","","Accessor for the name of the function",43,[[["self"]],["str"]]],[11,"new","","Creates a new function signature from the parameters and…",9,[[["vec",["type"]],["vec"],["vec"],["type"]],["self"]]],[11,"new","","Creates a new function declaration from the components of…",11,[[["vec",["type"]],["vec",["structname"]],["condition"],["vec"],["type"],["structname"],["vec",["condition"]],["vec"],["functionbody"],["functionvisibility"]],["self"]]],[11,"new","","Creates a new `Var` from a string.",44,[[["string"]],["self"]]],[11,"into_inner","","Converts self into a string.",44,[[],["string"]]],[11,"name","","Accessor for the name of the var",44,[[["self"]],["str"]]],[11,"new","","Creates a new `TypeVar` from an String.",45,[[["string"]],["self"]]],[11,"into_inner","","Converts self into a string.",45,[[],["string"]]],[11,"name","","Accessor for the name of the var.",45,[[["self"]],["str"]]],[11,"module_call","","Creates a `FunctionCall::ModuleFunctionCall` variant",29,[[["vec",["type"]],["functionname"],["modulename"],["type"]],["self"]]],[11,"builtin","","Creates a `FunctionCall::Builtin` variant with no location…",29,[[["builtin"]],["functioncall"]]],[11,"return_empty","","Creates a command that returns no values",32,[[],["self"]]],[11,"return_","","Creates a command that returns a single value",32,[[["exp"]],["self"]]],[11,"if_block","","Creates an if-statement with no else branch",12,[[["block"],["exp"]],["self"]]],[11,"if_else","","Creates an if-statement with an else branch",12,[[["block"],["exp"]],["self"]]],[11,"cmd","","Lifts a command into a statement",33,[[["cmd"]],["self"]]],[11,"if_block","","Creates an `Statement::IfElseStatement` variant with no…",33,[[["block"],["exp"]],["self"]]],[11,"if_else","","Creates an `Statement::IfElseStatement` variant with an…",33,[[["block"],["exp"]],["self"]]],[11,"new","","Creates a new block from the vector of statements",15,[[["vec",["statement"]],["statement"]],["self"]]],[11,"empty","","Creates an empty block",15,[[],["self"]]],[11,"address","","Creates a new address `Exp` with no location information",37,[[["accountaddress"]],["exp"]]],[11,"value","","Creates a new value `Exp` with no location information",37,[[["copyableval_"]],["exp"]]],[11,"u64","","Creates a new u64 `Exp` with no location information",37,[[["u64"]],["exp"]]],[11,"bool","","Creates a new bool `Exp` with no location information",37,[[["bool"]],["exp"]]],[11,"byte_array","","Creates a new bytearray `Exp` with no location information",37,[[["vec",["u8"]],["u8"]],["exp"]]],[11,"instantiate","","Creates a new pack/struct-instantiation `Exp` with no…",37,[[["vec",["type"]],["structname"],["expfields"],["type"]],["exp"]]],[11,"binop","","Creates a new binary operator `Exp` with no location…",37,[[["binop"],["exp"]],["exp"]]],[11,"add","","Creates a new `e+e` `Exp` with no location information",37,[[["exp"]],["exp"]]],[11,"sub","","Creates a new `e-e` `Exp` with no location information",37,[[["exp"]],["exp"]]],[11,"dereference","","Creates a new `*e` `Exp` with no location information",37,[[["exp"]],["exp"]]],[11,"borrow","","Creates a new borrow field `Exp` with no location…",37,[[["field_"],["exp"],["box",["exp"]],["bool"]],["exp"]]],[11,"copy","","Creates a new copy-local `Exp` with no location information",37,[[["var"]],["exp"]]],[11,"move_","","Creates a new move-local `Exp` with no location information",37,[[["var"]],["exp"]]],[11,"function_call","","Creates a new function call `Exp` with no location…",37,[[["functioncall"],["exp"]],["exp"]]],[11,"expr_list","","",37,[[["vec",["exp"]],["exp"]],["exp"]]],[0,"location","move_ir_types","",null,null],[3,"Loc","move_ir_types::location","",null,null],[3,"Spanned","","",null,null],[12,"loc","","",46,null],[12,"value","","",46,null],[5,"sp","","Function used to have nearly tuple-like syntax for…",null,[[["loc"],["t"]],["spanned"]]],[11,"new","","",47,[[["str"],["span"]],["loc"]]],[11,"file","","",47,[[],["str"]]],[11,"span","","",47,[[],["span"]]],[11,"new","","",46,[[["loc"],["t"]],["spanned"]]],[11,"unsafe_no_loc","","",46,[[["t"]],["spanned"]]],[0,"spec_language_ast","move_ir_types","",null,null],[3,"Invariant_","move_ir_types::spec_language_ast","An invariant over a resource.",null,null],[12,"modifier","","A free string (for now) which specifies the function of…",48,null],[12,"target","","An optional synthetic variable to which the below…",48,null],[12,"exp","","A specification expression.",48,null],[3,"SyntheticDefinition_","","A synthetic variable definition.",null,null],[12,"name","","",49,null],[12,"type_","","",49,null],[4,"FieldOrIndex","","AST for the Move Prover specification language.",null,null],[13,"Field","","",50,null],[13,"Index","","",50,null],[4,"StorageLocation","","A location that can store a value",null,null],[13,"Formal","","A formal of the current procedure",51,null],[13,"GlobalResource","","A resource of type `type_` stored in global storage at…",51,null],[12,"type_","move_ir_types::spec_language_ast::StorageLocation","",52,null],[12,"type_actuals","","",52,null],[12,"address","","",52,null],[13,"AccessPath","move_ir_types::spec_language_ast","An access path rooted at `base` with nonempty offsets in…",51,null],[12,"base","move_ir_types::spec_language_ast::StorageLocation","",53,null],[12,"fields_and_indices","","",53,null],[13,"TxnSenderAddress","move_ir_types::spec_language_ast","Sender address for the current transaction",51,null],[13,"Address","","Account address constant",51,null],[13,"Ret","","The ith return value of the current procedure",51,null],[4,"SpecExp","","An expression in the specification language",null,null],[13,"Constant","","A Move constant",54,null],[13,"StorageLocation","","A spec language storage location",54,null],[13,"GlobalExists","","Lifting the Move exists operator to a storage location",54,null],[12,"type_","move_ir_types::spec_language_ast::SpecExp","",55,null],[12,"type_actuals","","",55,null],[12,"address","","",55,null],[13,"Dereference","move_ir_types::spec_language_ast","Dereference of a storage location (written *s)",54,null],[13,"Reference","","Reference to a storage location (written &s)",54,null],[13,"Not","","Negation of a boolean expression (written !e),",54,null],[13,"Binop","","Binary operators also suported by Move",54,null],[13,"Update","","Update expr (i := 1 inside [])",54,null],[13,"Old","","Value of expression evaluated in the state before function…",54,null],[13,"Call","","Call to a helper function.",54,null],[4,"Condition_","","A specification directive to be verified",null,null],[13,"Ensures","","Postconditions",56,null],[13,"Requires","","Preconditions",56,null],[13,"AbortsIf","","If the given expression is true, the procedure must…",56,null],[13,"SucceedsIf","","If the given expression is true, the procedure must…",56,null],[6,"Condition","","Specification directive with span.",null,null],[6,"Invariant","","Invariant with span.",null,null],[6,"SyntheticDefinition","","Synthetic with span.",null,null],[14,"sp","move_ir_types","Macro used to create a tuple-like pattern match for Spanned",null,null],[11,"from","move_ir_types::ast","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"to_string","","",40,[[["self"]],["string"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"vzip","","",40,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"to_string","","",44,[[["self"]],["string"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"vzip","","",44,[[],["v"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"to_string","","",45,[[["self"]],["string"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"vzip","","",45,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"to_string","","",41,[[["self"]],["string"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"vzip","","",41,[[],["v"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"to_string","","",42,[[["self"]],["string"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"vzip","","",42,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"to_string","","",43,[[["self"]],["string"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"vzip","","",43,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"to_string","","",14,[[["self"]],["string"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"into_iter","","",15,[[],["i"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"to_string","","",15,[[["self"]],["string"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"test_only_hash","","",16,[[["self"]],["hashvalue"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"test_only_hash","","",17,[[["self"]],["hashvalue"]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"to_string","","",18,[[["self"]],["string"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"vzip","","",18,[[],["v"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"to_string","","",19,[[["self"]],["string"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"vzip","","",19,[[],["v"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"to_string","","",20,[[["self"]],["string"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"vzip","","",20,[[],["v"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"to_string","","",21,[[["self"]],["string"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"vzip","","",21,[[],["v"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"vzip","","",22,[[],["v"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"vzip","","",24,[[],["v"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"to_string","","",25,[[["self"]],["string"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"vzip","","",25,[[],["v"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"to_string","","",28,[[["self"]],["string"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"vzip","","",28,[[],["v"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"to_string","","",29,[[["self"]],["string"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"vzip","","",29,[[],["v"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"to_string","","",31,[[["self"]],["string"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"vzip","","",31,[[],["v"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"to_string","","",32,[[["self"]],["string"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"vzip","","",32,[[],["v"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"to_string","","",33,[[["self"]],["string"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"vzip","","",33,[[],["v"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"to_string","","",34,[[["self"]],["string"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"vzip","","",34,[[],["v"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"to_string","","",35,[[["self"]],["string"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"vzip","","",35,[[],["v"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"to_string","","",36,[[["self"]],["string"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"vzip","","",36,[[],["v"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"to_string","","",37,[[["self"]],["string"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"vzip","","",37,[[],["v"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"to_string","","",39,[[["self"]],["string"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"vzip","","",39,[[],["v"]]],[11,"from","move_ir_types::location","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"test_only_hash","","",47,[[["self"]],["hashvalue"]]],[11,"vzip","","",47,[[],["v"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"to_string","","",46,[[["self"]],["string"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"vzip","","",46,[[],["v"]]],[11,"from","move_ir_types::spec_language_ast","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"vzip","","",48,[[],["v"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"vzip","","",49,[[],["v"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"vzip","","",50,[[],["v"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"vzip","","",51,[[],["v"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"vzip","","",54,[[],["v"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"vzip","","",56,[[],["v"]]],[11,"next","move_ir_types::ast","",1,[[["self"]],[["option",["statement"]],["statement"]]]],[11,"next","","",15,[[["self"]],[["option",["statement"]],["statement"]]]],[11,"clone","","",0,[[["self"]],["program"]]],[11,"clone","","",18,[[["self"]],["scriptormodule"]]],[11,"clone","","",1,[[["self"]],["script"]]],[11,"clone","","",40,[[["self"]],["modulename"]]],[11,"clone","","",2,[[["self"]],["qualifiedmoduleident"]]],[11,"clone","","",3,[[["self"]],["moduledefinition"]]],[11,"clone","","",19,[[["self"]],["moduleident"]]],[11,"clone","","",4,[[["self"]],["moduledependency"]]],[11,"clone","","",5,[[["self"]],["importdefinition"]]],[11,"clone","","",44,[[["self"]],["var_"]]],[11,"clone","","",45,[[["self"]],["typevar_"]]],[11,"clone","","",20,[[["self"]],["kind"]]],[11,"clone","","",21,[[["self"]],["type"]]],[11,"clone","","",6,[[["self"]],["qualifiedstructident"]]],[11,"clone","","",41,[[["self"]],["field_"]]],[11,"clone","","",42,[[["self"]],["structname"]]],[11,"clone","","",7,[[["self"]],["structdefinition_"]]],[11,"clone","","",8,[[["self"]],["structdependency"]]],[11,"clone","","",22,[[["self"]],["structdefinitionfields"]]],[11,"clone","","",43,[[["self"]],["functionname"]]],[11,"clone","","",9,[[["self"]],["functionsignature"]]],[11,"clone","","",10,[[["self"]],["functiondependency"]]],[11,"clone","","",24,[[["self"]],["functionvisibility"]]],[11,"clone","","",25,[[["self"]],["functionbody"]]],[11,"clone","","",11,[[["self"]],["function_"]]],[11,"clone","","",28,[[["self"]],["builtin"]]],[11,"clone","","",29,[[["self"]],["functioncall_"]]],[11,"clone","","",31,[[["self"]],["lvalue_"]]],[11,"clone","","",32,[[["self"]],["cmd_"]]],[11,"clone","","",12,[[["self"]],["ifelse"]]],[11,"clone","","",13,[[["self"]],["while"]]],[11,"clone","","",14,[[["self"]],["loop"]]],[11,"clone","","",33,[[["self"]],["statement"]]],[11,"clone","","",15,[[["self"]],["block_"]]],[11,"clone","","",34,[[["self"]],["copyableval_"]]],[11,"clone","","",35,[[["self"]],["unaryop"]]],[11,"clone","","",36,[[["self"]],["binop"]]],[11,"clone","","",37,[[["self"]],["exp_"]]],[11,"clone","","",16,[[["self"]],["blocklabel"]]],[11,"clone","","",17,[[["self"]],["noplabel"]]],[11,"clone","","",39,[[["self"]],["bytecode_"]]],[11,"clone","move_ir_types::location","",47,[[["self"]],["loc"]]],[11,"clone","","",46,[[["self"]],["spanned"]]],[11,"clone","move_ir_types::spec_language_ast","",50,[[["self"]],["fieldorindex"]]],[11,"clone","","",51,[[["self"]],["storagelocation"]]],[11,"clone","","",54,[[["self"]],["specexp"]]],[11,"clone","","",56,[[["self"]],["condition_"]]],[11,"clone","","",48,[[["self"]],["invariant_"]]],[11,"clone","","",49,[[["self"]],["syntheticdefinition_"]]],[11,"cmp","move_ir_types::ast","",40,[[["self"],["modulename"]],["ordering"]]],[11,"cmp","","",2,[[["qualifiedmoduleident"],["self"]],["ordering"]]],[11,"cmp","","",19,[[["moduleident"],["self"]],["ordering"]]],[11,"cmp","","",44,[[["var_"],["self"]],["ordering"]]],[11,"cmp","","",6,[[["qualifiedstructident"],["self"]],["ordering"]]],[11,"cmp","","",41,[[["field_"],["self"]],["ordering"]]],[11,"cmp","","",42,[[["self"],["structname"]],["ordering"]]],[11,"cmp","","",43,[[["self"],["functionname"]],["ordering"]]],[11,"cmp","","",16,[[["blocklabel"],["self"]],["ordering"]]],[11,"cmp","","",17,[[["noplabel"],["self"]],["ordering"]]],[11,"cmp","move_ir_types::location","",47,[[["self"],["loc"]],["ordering"]]],[11,"cmp","","",46,[[["spanned"],["self"]],["ordering"]]],[11,"eq","move_ir_types::ast","",40,[[["self"],["modulename"]],["bool"]]],[11,"ne","","",40,[[["self"],["modulename"]],["bool"]]],[11,"eq","","",2,[[["qualifiedmoduleident"],["self"]],["bool"]]],[11,"ne","","",2,[[["qualifiedmoduleident"],["self"]],["bool"]]],[11,"eq","","",3,[[["self"],["moduledefinition"]],["bool"]]],[11,"ne","","",3,[[["self"],["moduledefinition"]],["bool"]]],[11,"eq","","",19,[[["moduleident"],["self"]],["bool"]]],[11,"ne","","",19,[[["moduleident"],["self"]],["bool"]]],[11,"eq","","",4,[[["moduledependency"],["self"]],["bool"]]],[11,"ne","","",4,[[["moduledependency"],["self"]],["bool"]]],[11,"eq","","",5,[[["self"],["importdefinition"]],["bool"]]],[11,"ne","","",5,[[["self"],["importdefinition"]],["bool"]]],[11,"eq","","",44,[[["var_"],["self"]],["bool"]]],[11,"ne","","",44,[[["var_"],["self"]],["bool"]]],[11,"eq","","",45,[[["typevar_"],["self"]],["bool"]]],[11,"ne","","",45,[[["typevar_"],["self"]],["bool"]]],[11,"eq","","",20,[[["kind"],["self"]],["bool"]]],[11,"eq","","",21,[[["self"],["type"]],["bool"]]],[11,"ne","","",21,[[["self"],["type"]],["bool"]]],[11,"eq","","",6,[[["qualifiedstructident"],["self"]],["bool"]]],[11,"ne","","",6,[[["qualifiedstructident"],["self"]],["bool"]]],[11,"eq","","",41,[[["field_"],["self"]],["bool"]]],[11,"ne","","",41,[[["field_"],["self"]],["bool"]]],[11,"eq","","",42,[[["self"],["structname"]],["bool"]]],[11,"ne","","",42,[[["self"],["structname"]],["bool"]]],[11,"eq","","",7,[[["structdefinition_"],["self"]],["bool"]]],[11,"ne","","",7,[[["structdefinition_"],["self"]],["bool"]]],[11,"eq","","",8,[[["structdependency"],["self"]],["bool"]]],[11,"ne","","",8,[[["structdependency"],["self"]],["bool"]]],[11,"eq","","",22,[[["self"],["structdefinitionfields"]],["bool"]]],[11,"ne","","",22,[[["self"],["structdefinitionfields"]],["bool"]]],[11,"eq","","",43,[[["self"],["functionname"]],["bool"]]],[11,"ne","","",43,[[["self"],["functionname"]],["bool"]]],[11,"eq","","",9,[[["functionsignature"],["self"]],["bool"]]],[11,"ne","","",9,[[["functionsignature"],["self"]],["bool"]]],[11,"eq","","",10,[[["functiondependency"],["self"]],["bool"]]],[11,"ne","","",10,[[["functiondependency"],["self"]],["bool"]]],[11,"eq","","",24,[[["self"],["functionvisibility"]],["bool"]]],[11,"eq","","",25,[[["self"],["functionbody"]],["bool"]]],[11,"ne","","",25,[[["self"],["functionbody"]],["bool"]]],[11,"eq","","",11,[[["function_"],["self"]],["bool"]]],[11,"ne","","",11,[[["function_"],["self"]],["bool"]]],[11,"eq","","",28,[[["self"],["builtin"]],["bool"]]],[11,"ne","","",28,[[["self"],["builtin"]],["bool"]]],[11,"eq","","",29,[[["functioncall_"],["self"]],["bool"]]],[11,"ne","","",29,[[["functioncall_"],["self"]],["bool"]]],[11,"eq","","",31,[[["self"],["lvalue_"]],["bool"]]],[11,"ne","","",31,[[["self"],["lvalue_"]],["bool"]]],[11,"eq","","",32,[[["cmd_"],["self"]],["bool"]]],[11,"ne","","",32,[[["cmd_"],["self"]],["bool"]]],[11,"eq","","",12,[[["self"],["ifelse"]],["bool"]]],[11,"ne","","",12,[[["self"],["ifelse"]],["bool"]]],[11,"eq","","",13,[[["while"],["self"]],["bool"]]],[11,"ne","","",13,[[["while"],["self"]],["bool"]]],[11,"eq","","",14,[[["loop"],["self"]],["bool"]]],[11,"ne","","",14,[[["loop"],["self"]],["bool"]]],[11,"eq","","",33,[[["self"],["statement"]],["bool"]]],[11,"ne","","",33,[[["self"],["statement"]],["bool"]]],[11,"eq","","",15,[[["block_"],["self"]],["bool"]]],[11,"ne","","",15,[[["block_"],["self"]],["bool"]]],[11,"eq","","",34,[[["self"],["copyableval_"]],["bool"]]],[11,"ne","","",34,[[["self"],["copyableval_"]],["bool"]]],[11,"eq","","",35,[[["self"],["unaryop"]],["bool"]]],[11,"eq","","",36,[[["self"],["binop"]],["bool"]]],[11,"eq","","",37,[[["self"],["exp_"]],["bool"]]],[11,"ne","","",37,[[["self"],["exp_"]],["bool"]]],[11,"eq","","",16,[[["blocklabel"],["self"]],["bool"]]],[11,"ne","","",16,[[["blocklabel"],["self"]],["bool"]]],[11,"eq","","",17,[[["noplabel"],["self"]],["bool"]]],[11,"ne","","",17,[[["noplabel"],["self"]],["bool"]]],[11,"eq","","",39,[[["bytecode_"],["self"]],["bool"]]],[11,"ne","","",39,[[["bytecode_"],["self"]],["bool"]]],[11,"eq","","",1,[[["script"],["self"]],["bool"]]],[11,"eq","move_ir_types::location","",47,[[["self"],["loc"]],["bool"]]],[11,"ne","","",47,[[["self"],["loc"]],["bool"]]],[11,"eq","","",46,[[["spanned"],["self"]],["bool"]]],[11,"eq","move_ir_types::spec_language_ast","",50,[[["self"],["fieldorindex"]],["bool"]]],[11,"ne","","",50,[[["self"],["fieldorindex"]],["bool"]]],[11,"eq","","",51,[[["storagelocation"],["self"]],["bool"]]],[11,"ne","","",51,[[["storagelocation"],["self"]],["bool"]]],[11,"eq","","",54,[[["self"],["specexp"]],["bool"]]],[11,"ne","","",54,[[["self"],["specexp"]],["bool"]]],[11,"eq","","",56,[[["condition_"],["self"]],["bool"]]],[11,"ne","","",56,[[["condition_"],["self"]],["bool"]]],[11,"eq","","",48,[[["invariant_"],["self"]],["bool"]]],[11,"ne","","",48,[[["invariant_"],["self"]],["bool"]]],[11,"eq","","",49,[[["self"],["syntheticdefinition_"]],["bool"]]],[11,"ne","","",49,[[["self"],["syntheticdefinition_"]],["bool"]]],[11,"partial_cmp","move_ir_types::ast","",40,[[["self"],["modulename"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",40,[[["self"],["modulename"]],["bool"]]],[11,"le","","",40,[[["self"],["modulename"]],["bool"]]],[11,"gt","","",40,[[["self"],["modulename"]],["bool"]]],[11,"ge","","",40,[[["self"],["modulename"]],["bool"]]],[11,"partial_cmp","","",2,[[["qualifiedmoduleident"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",2,[[["qualifiedmoduleident"],["self"]],["bool"]]],[11,"le","","",2,[[["qualifiedmoduleident"],["self"]],["bool"]]],[11,"gt","","",2,[[["qualifiedmoduleident"],["self"]],["bool"]]],[11,"ge","","",2,[[["qualifiedmoduleident"],["self"]],["bool"]]],[11,"partial_cmp","","",19,[[["moduleident"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",19,[[["moduleident"],["self"]],["bool"]]],[11,"le","","",19,[[["moduleident"],["self"]],["bool"]]],[11,"gt","","",19,[[["moduleident"],["self"]],["bool"]]],[11,"ge","","",19,[[["moduleident"],["self"]],["bool"]]],[11,"partial_cmp","","",44,[[["var_"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",44,[[["var_"],["self"]],["bool"]]],[11,"le","","",44,[[["var_"],["self"]],["bool"]]],[11,"gt","","",44,[[["var_"],["self"]],["bool"]]],[11,"ge","","",44,[[["var_"],["self"]],["bool"]]],[11,"partial_cmp","","",6,[[["qualifiedstructident"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",6,[[["qualifiedstructident"],["self"]],["bool"]]],[11,"le","","",6,[[["qualifiedstructident"],["self"]],["bool"]]],[11,"gt","","",6,[[["qualifiedstructident"],["self"]],["bool"]]],[11,"ge","","",6,[[["qualifiedstructident"],["self"]],["bool"]]],[11,"partial_cmp","","",41,[[["field_"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",41,[[["field_"],["self"]],["bool"]]],[11,"le","","",41,[[["field_"],["self"]],["bool"]]],[11,"gt","","",41,[[["field_"],["self"]],["bool"]]],[11,"ge","","",41,[[["field_"],["self"]],["bool"]]],[11,"partial_cmp","","",42,[[["self"],["structname"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",42,[[["self"],["structname"]],["bool"]]],[11,"le","","",42,[[["self"],["structname"]],["bool"]]],[11,"gt","","",42,[[["self"],["structname"]],["bool"]]],[11,"ge","","",42,[[["self"],["structname"]],["bool"]]],[11,"partial_cmp","","",43,[[["self"],["functionname"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",43,[[["self"],["functionname"]],["bool"]]],[11,"le","","",43,[[["self"],["functionname"]],["bool"]]],[11,"gt","","",43,[[["self"],["functionname"]],["bool"]]],[11,"ge","","",43,[[["self"],["functionname"]],["bool"]]],[11,"partial_cmp","","",16,[[["blocklabel"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",16,[[["blocklabel"],["self"]],["bool"]]],[11,"le","","",16,[[["blocklabel"],["self"]],["bool"]]],[11,"gt","","",16,[[["blocklabel"],["self"]],["bool"]]],[11,"ge","","",16,[[["blocklabel"],["self"]],["bool"]]],[11,"partial_cmp","","",17,[[["noplabel"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",17,[[["noplabel"],["self"]],["bool"]]],[11,"le","","",17,[[["noplabel"],["self"]],["bool"]]],[11,"gt","","",17,[[["noplabel"],["self"]],["bool"]]],[11,"ge","","",17,[[["noplabel"],["self"]],["bool"]]],[11,"partial_cmp","move_ir_types::location","",47,[[["self"],["loc"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",46,[[["spanned"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","move_ir_types::ast","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","move_ir_types::location","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","move_ir_types::spec_language_ast","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","move_ir_types::ast","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","move_ir_types::location","",46,[[["formatter"],["self"]],["result"]]],[11,"hash","move_ir_types::ast","",40,[[["self"],["__h"]]]],[11,"hash","","",2,[[["self"],["__h"]]]],[11,"hash","","",19,[[["self"],["__h"]]]],[11,"hash","","",44,[[["self"],["__h"]]]],[11,"hash","","",45,[[["self"],["__h"]]]],[11,"hash","","",6,[[["self"],["__h"]]]],[11,"hash","","",41,[[["self"],["__h"]]]],[11,"hash","","",42,[[["self"],["__h"]]]],[11,"hash","","",43,[[["self"],["__h"]]]],[11,"hash","","",16,[[["self"],["__h"]]]],[11,"hash","","",17,[[["self"],["__h"]]]],[11,"hash","move_ir_types::location","",46,[[["self"],["h"]]]],[11,"deserialize","move_ir_types::ast","",16,[[["__d"]],["result"]]],[11,"deserialize","","",17,[[["__d"]],["result"]]],[11,"deserialize","move_ir_types::location","",47,[[["__d"]],["result"]]],[11,"serialize","move_ir_types::ast","",16,[[["self"],["__s"]],["result"]]],[11,"serialize","","",17,[[["self"],["__s"]],["result"]]],[11,"serialize","move_ir_types::location","",47,[[["self"],["__s"]],["result"]]]],"p":[[3,"Program"],[3,"Script"],[3,"QualifiedModuleIdent"],[3,"ModuleDefinition"],[3,"ModuleDependency"],[3,"ImportDefinition"],[3,"QualifiedStructIdent"],[3,"StructDefinition_"],[3,"StructDependency"],[3,"FunctionSignature"],[3,"FunctionDependency"],[3,"Function_"],[3,"IfElse"],[3,"While"],[3,"Loop"],[3,"Block_"],[3,"BlockLabel"],[3,"NopLabel"],[4,"ScriptOrModule"],[4,"ModuleIdent"],[4,"Kind"],[4,"Type"],[4,"StructDefinitionFields"],[13,"Move"],[4,"FunctionVisibility"],[4,"FunctionBody"],[13,"Move"],[13,"Bytecode"],[4,"Builtin"],[4,"FunctionCall_"],[13,"ModuleFunctionCall"],[4,"LValue_"],[4,"Cmd_"],[4,"Statement"],[4,"CopyableVal_"],[4,"UnaryOp"],[4,"BinOp"],[4,"Exp_"],[13,"Borrow"],[4,"Bytecode_"],[3,"ModuleName"],[3,"Field_"],[3,"StructName"],[3,"FunctionName"],[3,"Var_"],[3,"TypeVar_"],[3,"Spanned"],[3,"Loc"],[3,"Invariant_"],[3,"SyntheticDefinition_"],[4,"FieldOrIndex"],[4,"StorageLocation"],[13,"GlobalResource"],[13,"AccessPath"],[4,"SpecExp"],[13,"GlobalExists"],[4,"Condition_"]]};
searchIndex["move_lang"] = {"doc":"","i":[[5,"move_check","move_lang","Given a set of targets and a set of dependencies - Checks…",null,[[["option",["address"]],["address"]],["result"]]],[5,"move_check_no_report","","Move check but it returns the errors instead of reporting…",null,[[["option",["address"]],["address"]],["result"]]],[5,"move_compile","","Given a set of targets and a set of dependencies - Checks…",null,[[["option",["address"]],["address"]],["result"]]],[5,"move_compile_no_report","","Move compile but it returns the errors instead of…",null,[[["option",["address"]],["address"]],["result"]]],[5,"move_compile_to_expansion_no_report","","Move compile up to expansion phase, returning errors…",null,[[["option",["address"]],["address"]],["result"]]],[5,"sanity_check_compiled_units","","Runs the bytecode verifier on the compiled units Fails if…",null,[[["compiledunit"],["filessourcetext"],["vec",["compiledunit"]]]]],[5,"output_compiled_units","","Given a file map and a set of compiled programs, saves the…",null,[[["vec",["compiledunit"]],["str"],["compiledunit"],["filessourcetext"],["bool"]],["result"]]],[5,"is_permitted_printable_char","","Determine if a character is an allowed eye-visible…",null,[[["char"]],["bool"]]],[5,"is_permitted_newline_char","","Determine if a character is a permitted newline character.",null,[[["char"]],["bool"]]],[5,"is_permitted_char","","Determine if a character is permitted character.",null,[[["char"]],["bool"]]],[0,"cfgir","","",null,null],[5,"refine_inference_and_verify","move_lang::cfgir","",null,[[["uniquemap"],["blockcfg"],["btreeset"],["errors"],["btreeset"],["functionsignature"]]]],[5,"optimize","","",null,[[["uniquemap"],["blockcfg"],["functionsignature"]]]],[0,"ast","","",null,null],[3,"Program","move_lang::cfgir::ast","",null,null],[12,"modules","","",0,null],[12,"scripts","","",0,null],[3,"Script","","",null,null],[12,"loc","","",1,null],[12,"function_name","","",1,null],[12,"function","","",1,null],[3,"ModuleDefinition","","",null,null],[12,"is_source_module","","",2,null],[12,"dependency_order","","`dependency_order` is the topological order/rank in the…",2,null],[12,"structs","","",2,null],[12,"functions","","",2,null],[3,"Function","","",null,null],[12,"visibility","","",3,null],[12,"signature","","",3,null],[12,"acquires","","",3,null],[12,"body","","",3,null],[4,"FunctionBody_","","",null,null],[13,"Native","","",4,null],[13,"Defined","","",4,null],[12,"locals","move_lang::cfgir::ast::FunctionBody_","",5,null],[12,"start","","",5,null],[12,"blocks","","",5,null],[5,"remap_labels","move_lang::cfgir::ast","",null,[[["label"],["btreemap"],["basicblocks"]]]],[6,"FunctionBody","","",null,null],[6,"BasicBlocks","","",null,null],[6,"BasicBlock","","",null,null],[0,"command_line","move_lang","",null,null],[5,"parse_address","move_lang::command_line","",null,[[["str"]],[["result",["address","string"]],["address"],["string"]]]],[17,"SOURCE_FILES","","",null,null],[17,"SOURCE_FILES_SHORT","","",null,null],[17,"DEPENDENCIES","","",null,null],[17,"DEPENDENCIES_SHORT","","",null,null],[17,"SENDER","","",null,null],[17,"SENDER_SHORT","","",null,null],[17,"OUT_DIR","","",null,null],[17,"OUT_DIR_SHORT","","",null,null],[17,"DEFAULT_OUTPUT_DIR","","",null,null],[17,"SOURCE_MAP","","",null,null],[17,"SOURCE_MAP_SHORT","","",null,null],[0,"compiled_unit","move_lang","",null,null],[3,"VarInfo","move_lang::compiled_unit","",null,null],[12,"type_","","",6,null],[12,"index","","",6,null],[3,"SpecInfo","","",null,null],[12,"offset","","",7,null],[12,"used_locals","","",7,null],[3,"FunctionInfo","","",null,null],[12,"spec_info","","",8,null],[12,"parameters","","",8,null],[4,"CompiledUnit","","",null,null],[13,"Module","","",9,null],[12,"ident","move_lang::compiled_unit::CompiledUnit","",10,null],[12,"module","","",10,null],[12,"source_map","","",10,null],[12,"function_infos","","",10,null],[13,"Script","move_lang::compiled_unit","",9,null],[12,"loc","move_lang::compiled_unit::CompiledUnit","",11,null],[12,"key","","",11,null],[12,"script","","",11,null],[12,"source_map","","",11,null],[12,"function_info","","",11,null],[5,"verify_units","move_lang::compiled_unit","",null,[[["compiledunit"],["vec",["compiledunit"]]]]],[11,"name","","",9,[[["self"]],["string"]]],[11,"serialize","","",9,[[],[["vec",["u8"]],["u8"]]]],[11,"serialize_debug","","",9,[[],[["vec",["u8"]],["u8"]]]],[11,"serialize_source_map","","",9,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"verify","","",9,[[]]],[0,"errors","move_lang","",null,null],[5,"check_errors","move_lang::errors","",null,[[["errors"]],[["result",["errors"]],["errors"]]]],[5,"report_errors","","",null,[[["filessourcetext"],["errors"]]]],[5,"report_errors_to_buffer","","",null,[[["filessourcetext"],["errors"]],[["vec",["u8"]],["u8"]]]],[5,"report_errors_to_color_buffer","","",null,[[["filessourcetext"],["errors"]],[["vec",["u8"]],["u8"]]]],[6,"Errors","","",null,null],[6,"Error","","",null,null],[6,"ErrorSlice","","",null,null],[6,"HashableError","","",null,null],[6,"FilesSourceText","","",null,null],[0,"expansion","move_lang","",null,null],[0,"ast","move_lang::expansion","",null,null],[3,"Program","move_lang::expansion::ast","",null,null],[12,"modules","","",12,null],[12,"scripts","","",12,null],[3,"Script","","",null,null],[12,"loc","","",13,null],[12,"uses","","",13,null],[12,"unused_aliases","","",13,null],[12,"function_name","","",13,null],[12,"function","","",13,null],[12,"specs","","",13,null],[3,"ModuleDefinition","","",null,null],[12,"loc","","",14,null],[12,"uses","","",14,null],[12,"unused_aliases","","",14,null],[12,"is_source_module","","",14,null],[12,"structs","","",14,null],[12,"functions","","",14,null],[12,"specs","","",14,null],[3,"StructDefinition","","",null,null],[12,"loc","","",15,null],[12,"resource_opt","","",15,null],[12,"type_parameters","","",15,null],[12,"fields","","",15,null],[3,"FunctionSignature","","",null,null],[12,"type_parameters","","",16,null],[12,"parameters","","",16,null],[12,"return_type","","",16,null],[3,"SpecId","","",null,null],[3,"Function","","",null,null],[12,"loc","","",17,null],[12,"visibility","","",17,null],[12,"signature","","",17,null],[12,"acquires","","",17,null],[12,"body","","",17,null],[12,"specs","","",17,null],[3,"SpecBlock_","","",null,null],[12,"target","","",18,null],[12,"uses","","",18,null],[12,"members","","",18,null],[4,"StructFields","","",null,null],[13,"Defined","","",19,null],[13,"Native","","",19,null],[4,"FunctionBody_","","",null,null],[13,"Defined","","",20,null],[13,"Native","","",20,null],[4,"SpecBlockMember_","","",null,null],[13,"Condition","","",21,null],[12,"kind","move_lang::expansion::ast::SpecBlockMember_","",22,null],[12,"exp","","",22,null],[13,"Function","move_lang::expansion::ast","",21,null],[12,"name","move_lang::expansion::ast::SpecBlockMember_","",23,null],[12,"signature","","",23,null],[12,"body","","",23,null],[13,"Variable","move_lang::expansion::ast","",21,null],[12,"is_global","move_lang::expansion::ast::SpecBlockMember_","",24,null],[12,"name","","",24,null],[12,"type_parameters","","",24,null],[12,"type_","","",24,null],[13,"Include","move_lang::expansion::ast","",21,null],[12,"exp","move_lang::expansion::ast::SpecBlockMember_","",25,null],[13,"Apply","move_lang::expansion::ast","",21,null],[12,"exp","move_lang::expansion::ast::SpecBlockMember_","",26,null],[12,"patterns","","",26,null],[12,"exclusion_patterns","","",26,null],[13,"Pragma","move_lang::expansion::ast","",21,null],[12,"properties","move_lang::expansion::ast::SpecBlockMember_","",27,null],[4,"ModuleAccess_","move_lang::expansion::ast","",null,null],[13,"Name","","",28,null],[13,"ModuleAccess","","",28,null],[4,"Type_","","",null,null],[13,"Unit","","",29,null],[13,"Multiple","","",29,null],[13,"Apply","","",29,null],[13,"Ref","","",29,null],[13,"Fun","","",29,null],[13,"UnresolvedError","","",29,null],[4,"LValue_","","",null,null],[13,"Var","","",30,null],[13,"Unpack","","",30,null],[4,"ExpDotted_","","",null,null],[13,"Exp","","",31,null],[13,"Dot","","",31,null],[4,"Exp_","","",null,null],[13,"Value","","",32,null],[13,"InferredNum","","",32,null],[13,"Move","","",32,null],[13,"Copy","","",32,null],[13,"Name","","",32,null],[13,"GlobalCall","","",32,null],[13,"Call","","",32,null],[13,"Pack","","",32,null],[13,"IfElse","","",32,null],[13,"While","","",32,null],[13,"Loop","","",32,null],[13,"Block","","",32,null],[13,"Lambda","","",32,null],[13,"Assign","","",32,null],[13,"FieldMutate","","",32,null],[13,"Mutate","","",32,null],[13,"Return","","",32,null],[13,"Abort","","",32,null],[13,"Break","","",32,null],[13,"Continue","","",32,null],[13,"Dereference","","",32,null],[13,"UnaryExp","","",32,null],[13,"BinopExp","","",32,null],[13,"ExpList","","",32,null],[13,"Unit","","",32,null],[13,"Borrow","","",32,null],[13,"ExpDotted","","",32,null],[13,"Index","","",32,null],[13,"Cast","","",32,null],[13,"Annotate","","",32,null],[13,"Spec","","",32,null],[13,"UnresolvedError","","",32,null],[4,"SequenceItem_","","",null,null],[13,"Seq","","",33,null],[13,"Declare","","",33,null],[13,"Bind","","",33,null],[6,"Fields","","",null,null],[6,"FunctionBody","","",null,null],[6,"SpecBlock","","",null,null],[6,"SpecBlockMember","","",null,null],[6,"ModuleAccess","","",null,null],[6,"Type","","",null,null],[6,"LValue","","",null,null],[6,"LValueList_","","",null,null],[6,"LValueList","","",null,null],[6,"ExpDotted","","",null,null],[6,"Exp","","",null,null],[6,"Sequence","","",null,null],[6,"SequenceItem","","",null,null],[11,"new","","",34,[[["usize"]],["self"]]],[11,"inner","","",34,[[],["usize"]]],[0,"hlir","move_lang","",null,null],[0,"ast","move_lang::hlir","",null,null],[3,"Program","move_lang::hlir::ast","",null,null],[12,"modules","","",35,null],[12,"scripts","","",35,null],[3,"Script","","",null,null],[12,"loc","","",36,null],[12,"function_name","","",36,null],[12,"function","","",36,null],[3,"ModuleDefinition","","",null,null],[12,"is_source_module","","",37,null],[12,"dependency_order","","`dependency_order` is the topological order/rank in the…",37,null],[12,"structs","","",37,null],[12,"functions","","",37,null],[3,"StructDefinition","","",null,null],[12,"resource_opt","","",38,null],[12,"type_parameters","","",38,null],[12,"fields","","",38,null],[3,"FunctionSignature","","",null,null],[12,"type_parameters","","",39,null],[12,"parameters","","",39,null],[12,"return_type","","",39,null],[3,"Function","","",null,null],[12,"visibility","","",40,null],[12,"signature","","",40,null],[12,"acquires","","",40,null],[12,"body","","",40,null],[3,"Label","","",null,null],[12,"0","","",41,null],[3,"ModuleCall","","",null,null],[12,"module","","",42,null],[12,"name","","",42,null],[12,"type_arguments","","",42,null],[12,"arguments","","",42,null],[12,"acquires","","",42,null],[3,"Exp","","",null,null],[12,"ty","","",43,null],[12,"exp","","",43,null],[4,"StructFields","","",null,null],[13,"Defined","","",44,null],[13,"Native","","",44,null],[4,"FunctionBody_","","",null,null],[13,"Native","","",45,null],[13,"Defined","","",45,null],[12,"locals","move_lang::hlir::ast::FunctionBody_","",46,null],[12,"body","","",46,null],[4,"TypeName_","move_lang::hlir::ast","",null,null],[13,"Builtin","","",47,null],[13,"ModuleType","","",47,null],[4,"BaseType_","","",null,null],[13,"Param","","",48,null],[13,"Apply","","",48,null],[13,"Unreachable","","",48,null],[13,"UnresolvedError","","",48,null],[4,"SingleType_","","",null,null],[13,"Base","","",49,null],[13,"Ref","","",49,null],[4,"Type_","","",null,null],[13,"Unit","","",50,null],[13,"Single","","",50,null],[13,"Multiple","","",50,null],[4,"Statement_","","",null,null],[13,"Command","","",51,null],[13,"IfElse","","",51,null],[12,"cond","move_lang::hlir::ast::Statement_","",52,null],[12,"if_block","","",52,null],[12,"else_block","","",52,null],[13,"While","move_lang::hlir::ast","",51,null],[12,"cond","move_lang::hlir::ast::Statement_","",53,null],[12,"block","","",53,null],[13,"Loop","move_lang::hlir::ast","",51,null],[12,"block","move_lang::hlir::ast::Statement_","",54,null],[12,"has_break","","",54,null],[12,"has_return_abort","","",54,null],[4,"Command_","move_lang::hlir::ast","",null,null],[13,"Assign","","",55,null],[13,"Mutate","","",55,null],[13,"Abort","","",55,null],[13,"Return","","",55,null],[13,"Break","","",55,null],[13,"Continue","","",55,null],[13,"IgnoreAndPop","","",55,null],[12,"pop_num","move_lang::hlir::ast::Command_","",56,null],[12,"exp","","",56,null],[13,"Jump","move_lang::hlir::ast","",55,null],[13,"JumpIf","","",55,null],[12,"cond","move_lang::hlir::ast::Command_","",57,null],[12,"if_true","","",57,null],[12,"if_false","","",57,null],[4,"LValue_","move_lang::hlir::ast","",null,null],[13,"Ignore","","",58,null],[13,"Var","","",58,null],[13,"Unpack","","",58,null],[4,"BuiltinFunction_","","",null,null],[13,"MoveToSender","","",59,null],[13,"MoveFrom","","",59,null],[13,"BorrowGlobal","","",59,null],[13,"Exists","","",59,null],[4,"UnannotatedExp_","","",null,null],[13,"Unit","","",60,null],[13,"Value","","",60,null],[13,"Move","","",60,null],[12,"from_user","move_lang::hlir::ast::UnannotatedExp_","",61,null],[12,"var","","",61,null],[13,"Copy","move_lang::hlir::ast","",60,null],[12,"from_user","move_lang::hlir::ast::UnannotatedExp_","",62,null],[12,"var","","",62,null],[13,"ModuleCall","move_lang::hlir::ast","",60,null],[13,"Builtin","","",60,null],[13,"Freeze","","",60,null],[13,"Dereference","","",60,null],[13,"UnaryExp","","",60,null],[13,"BinopExp","","",60,null],[13,"Pack","","",60,null],[13,"ExpList","","",60,null],[13,"Borrow","","",60,null],[13,"BorrowLocal","","",60,null],[13,"Cast","","",60,null],[13,"Unreachable","","",60,null],[13,"Spec","","",60,null],[13,"UnresolvedError","","",60,null],[4,"ExpListItem","","",null,null],[13,"Single","","",63,null],[13,"Splat","","",63,null],[5,"exp","","",null,[[["type"],["unannotatedexp"]],["exp"]]],[6,"FunctionBody","","",null,null],[6,"TypeName","","",null,null],[6,"BaseType","","",null,null],[6,"SingleType","","",null,null],[6,"Type","","",null,null],[6,"Statement","","",null,null],[6,"Block","","",null,null],[6,"BasicBlocks","","",null,null],[6,"BasicBlock","","",null,null],[6,"Command","","",null,null],[6,"LValue","","",null,null],[6,"BuiltinFunction","","",null,null],[6,"UnannotatedExp","","",null,null],[11,"is_parameter","","",39,[[["self"],["var"]],["bool"]]],[11,"is_terminal","","",55,[[["self"]],["bool"]]],[11,"is_exit","","",55,[[["self"]],["bool"]]],[11,"is_unit","","",55,[[["self"]],["bool"]]],[11,"successors","","",55,[[["self"]],[["label"],["btreeset",["label"]]]]],[11,"is_unit","","",43,[[["self"]],["bool"]]],[11,"is_unit","","",60,[[["self"]],["bool"]]],[11,"builtin","","",48,[[["loc"],["vec",["basetype"]],["builtintypename_"],["basetype"]],["basetype"]]],[11,"kind","","",48,[[["self"]],["kind"]]],[11,"bool","","",48,[[["loc"]],["basetype"]]],[11,"address","","",48,[[["loc"]],["basetype"]]],[11,"u64","","",48,[[["loc"]],["basetype"]]],[11,"base","","",49,[[["basetype"]],["singletype"]]],[11,"bool","","",49,[[["loc"]],["singletype"]]],[11,"address","","",49,[[["loc"]],["singletype"]]],[11,"u64","","",49,[[["loc"]],["singletype"]]],[11,"kind","","",49,[[["loc"],["self"]],["kind"]]],[11,"base","","",50,[[["basetype"]],["type"]]],[11,"single","","",50,[[["singletype"]],["type"]]],[11,"bool","","",50,[[["loc"]],["type"]]],[11,"address","","",50,[[["loc"]],["type"]]],[11,"u64","","",50,[[["loc"]],["type"]]],[11,"type_at_index","","",50,[[["self"],["usize"]],["singletype"]]],[11,"from_vec","","",50,[[["vec",["singletype"]],["loc"],["singletype"]],["type"]]],[0,"ir_translation","move_lang","",null,null],[5,"fix_syntax_and_write","move_lang::ir_translation","",null,[[["path"],["string"]]]],[0,"naming","move_lang","",null,null],[0,"ast","move_lang::naming","",null,null],[3,"Program","move_lang::naming::ast","",null,null],[12,"modules","","",64,null],[12,"scripts","","",64,null],[3,"Script","","",null,null],[12,"loc","","",65,null],[12,"function_name","","",65,null],[12,"function","","",65,null],[3,"ModuleDefinition","","",null,null],[12,"uses","","",66,null],[12,"is_source_module","","",66,null],[12,"dependency_order","","`dependency_order` is the topological order/rank in the…",66,null],[12,"structs","","",66,null],[12,"functions","","",66,null],[3,"StructDefinition","","",null,null],[12,"resource_opt","","",67,null],[12,"type_parameters","","",67,null],[12,"fields","","",67,null],[3,"FunctionSignature","","",null,null],[12,"type_parameters","","",68,null],[12,"parameters","","",68,null],[12,"return_type","","",68,null],[3,"Function","","",null,null],[12,"visibility","","",69,null],[12,"signature","","",69,null],[12,"acquires","","",69,null],[12,"body","","",69,null],[3,"TParamID","","",null,null],[12,"0","","",70,null],[3,"TParam","","",null,null],[12,"id","","",71,null],[12,"user_specified_name","","",71,null],[12,"kind","","",71,null],[3,"TVar","","",null,null],[4,"StructFields","","",null,null],[13,"Defined","","",72,null],[13,"Native","","",72,null],[4,"FunctionBody_","","",null,null],[13,"Defined","","",73,null],[13,"Native","","",73,null],[4,"BuiltinTypeName_","","",null,null],[13,"Address","","",74,null],[13,"U8","","",74,null],[13,"U64","","",74,null],[13,"U128","","",74,null],[13,"Vector","","",74,null],[13,"Bool","","",74,null],[4,"TypeName_","","",null,null],[13,"Multiple","","",75,null],[13,"Builtin","","",75,null],[13,"ModuleType","","",75,null],[4,"Type_","","",null,null],[13,"Unit","","",76,null],[13,"Ref","","",76,null],[13,"Param","","",76,null],[13,"Apply","","",76,null],[13,"Var","","",76,null],[13,"Anything","","",76,null],[13,"UnresolvedError","","",76,null],[4,"LValue_","","",null,null],[13,"Ignore","","",77,null],[13,"Var","","",77,null],[13,"Unpack","","",77,null],[4,"ExpDotted_","","",null,null],[13,"Exp","","",78,null],[13,"Dot","","",78,null],[4,"BuiltinFunction_","","",null,null],[13,"MoveToSender","","",79,null],[13,"MoveFrom","","",79,null],[13,"BorrowGlobal","","",79,null],[13,"Exists","","",79,null],[13,"Freeze","","",79,null],[4,"Exp_","","",null,null],[13,"Value","","",80,null],[13,"InferredNum","","",80,null],[13,"Move","","",80,null],[13,"Copy","","",80,null],[13,"Use","","",80,null],[13,"ModuleCall","","",80,null],[13,"Builtin","","",80,null],[13,"IfElse","","",80,null],[13,"While","","",80,null],[13,"Loop","","",80,null],[13,"Block","","",80,null],[13,"Assign","","",80,null],[13,"FieldMutate","","",80,null],[13,"Mutate","","",80,null],[13,"Return","","",80,null],[13,"Abort","","",80,null],[13,"Break","","",80,null],[13,"Continue","","",80,null],[13,"Dereference","","",80,null],[13,"UnaryExp","","",80,null],[13,"BinopExp","","",80,null],[13,"Pack","","",80,null],[13,"ExpList","","",80,null],[13,"Unit","","",80,null],[13,"DerefBorrow","","",80,null],[13,"Borrow","","",80,null],[13,"Cast","","",80,null],[13,"Annotate","","",80,null],[13,"Spec","","",80,null],[13,"UnresolvedError","","",80,null],[4,"SequenceItem_","","",null,null],[13,"Seq","","",81,null],[13,"Declare","","",81,null],[13,"Bind","","",81,null],[6,"FunctionBody","","",null,null],[6,"BuiltinTypeName","","",null,null],[6,"TypeName","","",null,null],[6,"Type","","",null,null],[6,"LValue","","",null,null],[6,"LValueList_","","",null,null],[6,"LValueList","","",null,null],[6,"ExpDotted","","",null,null],[6,"BuiltinFunction","","",null,null],[6,"Exp","","",null,null],[6,"Sequence","","",null,null],[6,"SequenceItem","","",null,null],[18,"ADDRESS","","",74,null],[18,"U_8","","",74,null],[18,"U_64","","",74,null],[18,"U_128","","",74,null],[18,"BOOL","","",74,null],[18,"VECTOR","","",74,null],[11,"all_names","","",74,[[],[["str"],["btreeset",["str"]]]]],[11,"numeric","","",74,[[],[["btreeset",["builtintypename_"]],["builtintypename_"]]]],[11,"bits","","",74,[[],[["btreeset",["builtintypename_"]],["builtintypename_"]]]],[11,"ordered","","",74,[[],[["btreeset",["builtintypename_"]],["builtintypename_"]]]],[11,"is_numeric","","",74,[[["self"]],["bool"]]],[11,"resolve","","",74,[[["str"]],["option"]]],[11,"tparam_constraints","","",74,[[["loc"],["self"]],[["kind"],["vec",["kind"]]]]],[11,"next","","",70,[[],["tparamid"]]],[11,"next","","",82,[[],["tvar"]]],[18,"MOVE_TO_SENDER","","",79,null],[18,"MOVE_FROM","","",79,null],[18,"BORROW_GLOBAL","","",79,null],[18,"BORROW_GLOBAL_MUT","","",79,null],[18,"EXISTS","","",79,null],[18,"FREEZE","","",79,null],[11,"all_names","","",79,[[],[["str"],["btreeset",["str"]]]]],[11,"resolve","","",79,[[["str"],["option",["type"]],["type"]],["option"]]],[11,"builtin_","","",76,[[["vec",["type"]],["builtintypename"],["type"]],["type_"]]],[11,"builtin","","",76,[[["loc"],["builtintypename"],["type"],["vec",["type"]]],["type"]]],[11,"bool","","",76,[[["loc"]],["type"]]],[11,"address","","",76,[[["loc"]],["type"]]],[11,"u8","","",76,[[["loc"]],["type"]]],[11,"u64","","",76,[[["loc"]],["type"]]],[11,"u128","","",76,[[["loc"]],["type"]]],[11,"vector","","",76,[[["loc"],["type"]],["type"]]],[11,"multiple","","",76,[[["vec",["type"]],["loc"],["type"]],["type"]]],[11,"multiple_","","",76,[[["vec",["type"]],["loc"],["type"]],["type_"]]],[11,"builtin_name","","",76,[[["self"]],[["option",["builtintypename"]],["builtintypename"]]]],[0,"parser","move_lang","",null,null],[0,"ast","move_lang::parser","",null,null],[3,"Program","move_lang::parser::ast","",null,null],[12,"source_definitions","","",83,null],[12,"lib_definitions","","",83,null],[3,"Script","","",null,null],[12,"loc","","",84,null],[12,"uses","","",84,null],[12,"function","","",84,null],[12,"specs","","",84,null],[3,"ModuleName","","",null,null],[12,"0","","",85,null],[3,"ModuleIdent_","","",null,null],[12,"name","","",86,null],[12,"address","","",86,null],[3,"ModuleIdent","","",null,null],[12,"0","","",87,null],[3,"ModuleDefinition","","",null,null],[12,"loc","","",88,null],[12,"uses","","",88,null],[12,"name","","",88,null],[12,"structs","","",88,null],[12,"functions","","",88,null],[12,"specs","","",88,null],[3,"Field","","",null,null],[12,"0","","",89,null],[3,"StructName","","",null,null],[12,"0","","",90,null],[3,"StructDefinition","","",null,null],[12,"loc","","",91,null],[12,"resource_opt","","",91,null],[12,"name","","",91,null],[12,"type_parameters","","",91,null],[12,"fields","","",91,null],[3,"FunctionName","","",null,null],[12,"0","","",92,null],[3,"FunctionSignature","","",null,null],[12,"type_parameters","","",93,null],[12,"parameters","","",93,null],[12,"return_type","","",93,null],[3,"Function","","",null,null],[12,"loc","","",94,null],[12,"visibility","","",94,null],[12,"signature","","",94,null],[12,"acquires","","",94,null],[12,"name","","",94,null],[12,"body","","",94,null],[3,"SpecBlock_","","",null,null],[12,"target","","",95,null],[12,"uses","","",95,null],[12,"members","","",95,null],[3,"PragmaProperty_","","",null,null],[12,"name","","",96,null],[12,"value","","",96,null],[3,"SpecApplyPattern_","","",null,null],[12,"visibility","","",97,null],[12,"name_pattern","","",97,null],[12,"type_parameters","","",97,null],[3,"Var","","",null,null],[12,"0","","",98,null],[4,"Definition","","",null,null],[13,"Module","","",99,null],[13,"Address","","",99,null],[13,"Script","","",99,null],[4,"StructFields","","",null,null],[13,"Defined","","",100,null],[13,"Native","","",100,null],[4,"FunctionVisibility","","",null,null],[13,"Public","","",101,null],[13,"Internal","","",101,null],[4,"FunctionBody_","","",null,null],[13,"Defined","","",102,null],[13,"Native","","",102,null],[4,"SpecBlockTarget_","","",null,null],[13,"Code","","",103,null],[13,"Module","","",103,null],[13,"Function","","",103,null],[13,"Structure","","",103,null],[13,"Schema","","",103,null],[4,"SpecApplyFragment_","","",null,null],[13,"Wildcard","","",104,null],[13,"NamePart","","",104,null],[4,"SpecBlockMember_","","",null,null],[13,"Condition","","",105,null],[12,"kind","move_lang::parser::ast::SpecBlockMember_","",106,null],[12,"exp","","",106,null],[13,"Function","move_lang::parser::ast","",105,null],[12,"name","move_lang::parser::ast::SpecBlockMember_","",107,null],[12,"signature","","",107,null],[12,"body","","",107,null],[13,"Variable","move_lang::parser::ast","",105,null],[12,"is_global","move_lang::parser::ast::SpecBlockMember_","",108,null],[12,"name","","",108,null],[12,"type_parameters","","",108,null],[12,"type_","","",108,null],[13,"Include","move_lang::parser::ast","",105,null],[12,"exp","move_lang::parser::ast::SpecBlockMember_","",109,null],[13,"Apply","move_lang::parser::ast","",105,null],[12,"exp","move_lang::parser::ast::SpecBlockMember_","",110,null],[12,"patterns","","",110,null],[12,"exclusion_patterns","","",110,null],[13,"Pragma","move_lang::parser::ast","",105,null],[12,"properties","move_lang::parser::ast::SpecBlockMember_","",111,null],[4,"SpecConditionKind","move_lang::parser::ast","",null,null],[13,"Assert","","",112,null],[13,"Assume","","",112,null],[13,"Decreases","","",112,null],[13,"AbortsIf","","",112,null],[13,"Ensures","","",112,null],[13,"Requires","","",112,null],[13,"RequiresModule","","",112,null],[13,"Invariant","","",112,null],[13,"InvariantUpdate","","",112,null],[13,"InvariantPack","","",112,null],[13,"InvariantUnpack","","",112,null],[13,"InvariantModule","","",112,null],[4,"InvariantKind","","",null,null],[13,"Data","","",113,null],[13,"Update","","",113,null],[13,"Pack","","",113,null],[13,"Unpack","","",113,null],[13,"Module","","",113,null],[4,"ModuleAccess_","","",null,null],[13,"Name","","",114,null],[13,"Global","","",114,null],[13,"ModuleAccess","","",114,null],[13,"QualifiedModuleAccess","","",114,null],[4,"Kind_","","",null,null],[13,"Unknown","","",115,null],[13,"Resource","","",115,null],[13,"Affine","","",115,null],[13,"Copyable","","",115,null],[4,"Type_","","",null,null],[13,"Apply","","",116,null],[13,"Ref","","",116,null],[13,"Fun","","",116,null],[13,"Unit","","",116,null],[13,"Multiple","","",116,null],[4,"Bind_","","",null,null],[13,"Var","","",117,null],[13,"Unpack","","",117,null],[4,"Value_","","",null,null],[13,"Address","","",118,null],[13,"U8","","",118,null],[13,"U64","","",118,null],[13,"U128","","",118,null],[13,"Bool","","",118,null],[13,"Bytearray","","",118,null],[4,"UnaryOp_","","",null,null],[13,"Not","","",119,null],[4,"BinOp_","","",null,null],[13,"Add","","",120,null],[13,"Sub","","",120,null],[13,"Mul","","",120,null],[13,"Mod","","",120,null],[13,"Div","","",120,null],[13,"BitOr","","",120,null],[13,"BitAnd","","",120,null],[13,"Xor","","",120,null],[13,"Shl","","",120,null],[13,"Shr","","",120,null],[13,"Range","","",120,null],[13,"Implies","","",120,null],[13,"And","","",120,null],[13,"Or","","",120,null],[13,"Eq","","",120,null],[13,"Neq","","",120,null],[13,"Lt","","",120,null],[13,"Gt","","",120,null],[13,"Le","","",120,null],[13,"Ge","","",120,null],[4,"Exp_","","",null,null],[13,"Value","","",121,null],[13,"InferredNum","","",121,null],[13,"Move","","",121,null],[13,"Copy","","",121,null],[13,"Name","","",121,null],[13,"Call","","",121,null],[13,"Pack","","",121,null],[13,"IfElse","","",121,null],[13,"While","","",121,null],[13,"Loop","","",121,null],[13,"Block","","",121,null],[13,"Lambda","","",121,null],[13,"ExpList","","",121,null],[13,"Unit","","",121,null],[13,"Assign","","",121,null],[13,"Return","","",121,null],[13,"Abort","","",121,null],[13,"Break","","",121,null],[13,"Continue","","",121,null],[13,"Dereference","","",121,null],[13,"UnaryExp","","",121,null],[13,"BinopExp","","",121,null],[13,"Borrow","","",121,null],[13,"Dot","","",121,null],[13,"Index","","",121,null],[13,"Cast","","",121,null],[13,"Annotate","","",121,null],[13,"Spec","","",121,null],[13,"UnresolvedError","","",121,null],[4,"SequenceItem_","","",null,null],[13,"Seq","","",122,null],[13,"Declare","","",122,null],[13,"Bind","","",122,null],[6,"ResourceLoc","","",null,null],[6,"FunctionBody","","",null,null],[6,"SpecBlock","","",null,null],[6,"SpecBlockTarget","","",null,null],[6,"PragmaProperty","","",null,null],[6,"SpecApplyPattern","","",null,null],[6,"SpecApplyFragment","","",null,null],[6,"SpecBlockMember","","",null,null],[6,"ModuleAccess","","",null,null],[6,"Kind","","",null,null],[6,"Type","","",null,null],[6,"Bind","","",null,null],[6,"BindList","","",null,null],[6,"Value","","",null,null],[6,"UnaryOp","","",null,null],[6,"BinOp","","",null,null],[6,"Exp","","",null,null],[6,"Sequence","","",null,null],[6,"SequenceItem","","",null,null],[11,"loc","","",87,[[["self"]],["loc"]]],[18,"SELF_NAME","","",85,null],[11,"starts_with_underscore","","",98,[[["self"]],["bool"]]],[18,"VALUE_CONSTRAINT","","",115,null],[18,"RESOURCE_CONSTRAINT","","",115,null],[11,"is_resourceful","","",115,[[["self"]],["bool"]]],[11,"unit","","",116,[[["loc"]],["type"]]],[18,"NOT","","",119,null],[11,"symbol","","",119,[[["self"]],["str"]]],[11,"is_pure","","",119,[[["self"]],["bool"]]],[18,"ADD","","",120,null],[18,"SUB","","",120,null],[18,"MUL","","",120,null],[18,"MOD","","",120,null],[18,"DIV","","",120,null],[18,"BIT_OR","","",120,null],[18,"BIT_AND","","",120,null],[18,"XOR","","",120,null],[18,"SHL","","",120,null],[18,"SHR","","",120,null],[18,"AND","","",120,null],[18,"OR","","",120,null],[18,"EQ","","",120,null],[18,"NEQ","","",120,null],[18,"LT","","",120,null],[18,"GT","","",120,null],[18,"LE","","",120,null],[18,"GE","","",120,null],[18,"IMPLIES","","",120,null],[18,"RANGE","","",120,null],[11,"symbol","","",120,[[["self"]],["str"]]],[11,"is_pure","","",120,[[["self"]],["bool"]]],[11,"is_spec_only","","",120,[[["self"]],["bool"]]],[0,"shared","move_lang","",null,null],[3,"Address","move_lang::shared","",null,null],[3,"Counter","","",null,null],[5,"shortest_cycle","","",null,[[["digraphmap"],["t"]],[["vec"],["t"]]]],[5,"format_delim","","",null,[[["str"],["intoiterator"]],["string"]]],[5,"format_comma","","",null,[[["intoiterator"]],["string"]]],[0,"ast_debug","","",null,null],[3,"AstWriter","move_lang::shared::ast_debug","",null,null],[5,"print","","",null,[[["t"]]]],[5,"print_verbose","","",null,[[["t"]]]],[8,"AstDebug","","Simple trait used for pretty printing the various AST",null,null],[10,"ast_debug","","",123,[[["self"],["astwriter"]]]],[11,"new_line","","",124,[[["self"]]]],[11,"write","","",124,[[["str"],["self"]]]],[11,"writeln","","",124,[[["str"],["self"]]]],[11,"indent","","",124,[[["self"],["usize"],["fnonce"]]]],[11,"block","","",124,[[["self"],["fnonce"]]]],[11,"annotate","","",124,[[["annot"],["self"],["fnonce"]]]],[11,"list","","",124,[[["str"],["fnmut"],["self"]]]],[11,"comma","","",124,[[["self"],["fnmut"]]]],[11,"semicolon","","",124,[[["self"],["fnmut"]]]],[0,"fake_natives","move_lang::shared","",null,null],[5,"is_fake_native","move_lang::shared::fake_natives","",null,[[["moduleident"]],["bool"]]],[0,"transaction","","'Native' functions that are actually bytecode isntructions…",null,null],[17,"MOD","move_lang::shared::fake_natives::transaction","",null,null],[17,"GAS_PRICE","","",null,null],[17,"MAX_GAS","","",null,null],[17,"GAS_REMAINING","","",null,null],[17,"SENDER","","",null,null],[17,"SEQUENCE_NUM","","",null,null],[17,"PUBLIC_KEY","","",null,null],[17,"ASSERT","","'Inlined' during hlir::translate",null,null],[0,"remembering_unique_map","move_lang::shared","",null,null],[3,"RememberingUniqueMap","move_lang::shared::remembering_unique_map","wrapper around `UniqueMap` that remembers which values…",null,null],[3,"IntoIter","","",null,null],[3,"Iter","","",null,null],[3,"IterMut","","",null,null],[11,"new","","",125,[[],["self"]]],[11,"is_empty","","",125,[[["self"]],["bool"]]],[11,"len","","",125,[[["self"]],["usize"]]],[11,"add","","",125,[[["self"],["k"],["v"]],["result"]]],[11,"contains_key","","",125,[[["k"],["self"]],["bool"]]],[11,"contains_key_","","",125,[[["self"]],["bool"]]],[11,"get","","",125,[[["k"],["self"]],[["option"],["v"]]]],[11,"get_mut","","",125,[[["k"],["self"]],[["option"],["v"]]]],[11,"get_loc","","",125,[[["k"],["self"]],["option"]]],[11,"remove","","",125,[[["k"],["self"]],["option"]]],[11,"map","","",125,[[["f"]],["rememberinguniquemap"]]],[11,"ref_map","","",125,[[["self"],["f"]],["rememberinguniquemap"]]],[11,"union_with","","",125,[[["self"],["f"]],["self"]]],[11,"iter","","",125,[[["self"]],["iter"]]],[11,"iter_mut","","",125,[[["self"]],["itermut"]]],[11,"maybe_from_opt_iter","","",125,[[],[["option",["result"]],["result",["rememberinguniquemap"]]]]],[11,"maybe_from_iter","","",125,[[],[["result",["rememberinguniquemap"]],["rememberinguniquemap"]]]],[11,"remember","","",125,[[],["btreeset"]]],[0,"unique_map","move_lang::shared","",null,null],[3,"UniqueMap","move_lang::shared::unique_map","Unique wrapper around `BTreeMap` that throws on duplicate…",null,null],[3,"IntoIter","","",null,null],[3,"Iter","","",null,null],[3,"IterMut","","",null,null],[11,"new","","",126,[[],["self"]]],[11,"is_empty","","",126,[[["self"]],["bool"]]],[11,"len","","",126,[[["self"]],["usize"]]],[11,"add","","",126,[[["self"],["k"],["v"]],["result"]]],[11,"contains_key","","",126,[[["k"],["self"]],["bool"]]],[11,"contains_key_","","",126,[[["self"]],["bool"]]],[11,"get","","",126,[[["k"],["self"]],[["option"],["v"]]]],[11,"get_","","",126,[[["self"]],[["option"],["v"]]]],[11,"get_mut","","",126,[[["k"],["self"]],[["option"],["v"]]]],[11,"get_mut_","","",126,[[["self"]],[["option"],["v"]]]],[11,"get_loc","","",126,[[["k"],["self"]],["option"]]],[11,"get_loc_","","",126,[[["self"]],["option"]]],[11,"remove","","",126,[[["k"],["self"]],["option"]]],[11,"remove_","","",126,[[["self"]],["option"]]],[11,"map","","",126,[[["f"]],["uniquemap"]]],[11,"ref_map","","",126,[[["self"],["f"]],["uniquemap"]]],[11,"union_with","","",126,[[["self"],["f"]],["self"]]],[11,"iter","","",126,[[["self"]],["iter"]]],[11,"iter_mut","","",126,[[["self"]],["itermut"]]],[11,"maybe_from_opt_iter","","",126,[[],[["option",["result"]],["result",["uniquemap"]]]]],[11,"maybe_from_iter","","",126,[[],[["result",["uniquemap"]],["uniquemap"]]]],[6,"Name","move_lang::shared","",null,null],[17,"ADDRESS_LENGTH","","",null,null],[8,"TName","","",null,null],[16,"Key","","",127,null],[16,"Loc","","",127,null],[10,"drop_loc","","",127,[[]]],[10,"clone_drop_loc","","",127,[[["self"]]]],[10,"add_loc","","",127,[[],["self"]]],[8,"Identifier","","",null,null],[10,"value","","",128,[[["self"]],["str"]]],[10,"loc","","",128,[[["self"]],["loc"]]],[18,"LIBRA_CORE","","",129,null],[11,"new","","",129,[[],["self"]]],[11,"to_u8","","",129,[[]]],[11,"parse_str","","",129,[[["str"]],[["result",["address","string"]],["address"],["string"]]]],[11,"next","","",130,[[],["u64"]]],[0,"test_utils","move_lang","",null,null],[3,"StringError","move_lang::test_utils","",null,null],[5,"stdlib_files","","We need to replicate the specification of the (non-staged)…",null,[[],[["vec",["string"]],["string"]]]],[5,"read_env_var","","",null,[[["str"]],["string"]]],[5,"read_bool_var","","",null,[[["str"]],["bool"]]],[5,"error","","",null,[[["string"]],["result"]]],[5,"ir_tests","","",null,[[]]],[5,"translated_ir_test_name","","",null,[[["str"],["bool"]],[["option",["string"]],["string"]]]],[17,"SENDER","","",null,null],[17,"STD_LIB_DIR","","",null,null],[17,"FUNCTIONAL_TEST_DIR","","",null,null],[17,"MOVE_CHECK_DIR","","",null,null],[17,"STD_LIB_TRANSACTION_SCRIPTS_DIR","","",null,null],[17,"PATH_TO_IR_TESTS","","",null,null],[17,"MIGRATION_SUB_DIR","","",null,null],[17,"TODO_EXTENSION","","",null,null],[17,"MOVE_EXTENSION","","",null,null],[17,"IR_EXTENSION","","",null,null],[17,"DEBUG_MODULE_FILE_NAME","","",null,null],[17,"COMPLETED_DIRECTORIES","","",null,null],[0,"typing","move_lang","",null,null],[0,"ast","move_lang::typing","",null,null],[3,"Program","move_lang::typing::ast","",null,null],[12,"modules","","",131,null],[12,"scripts","","",131,null],[3,"Script","","",null,null],[12,"loc","","",132,null],[12,"function_name","","",132,null],[12,"function","","",132,null],[3,"ModuleDefinition","","",null,null],[12,"is_source_module","","",133,null],[12,"dependency_order","","`dependency_order` is the topological order/rank in the…",133,null],[12,"structs","","",133,null],[12,"functions","","",133,null],[3,"Function","","",null,null],[12,"visibility","","",134,null],[12,"signature","","",134,null],[12,"acquires","","",134,null],[12,"body","","",134,null],[3,"ModuleCall","","",null,null],[12,"module","","",135,null],[12,"name","","",135,null],[12,"type_arguments","","",135,null],[12,"arguments","","",135,null],[12,"parameter_types","","",135,null],[12,"acquires","","",135,null],[3,"Exp","","",null,null],[12,"ty","","",136,null],[12,"exp","","",136,null],[4,"FunctionBody_","","",null,null],[13,"Defined","","",137,null],[13,"Native","","",137,null],[4,"LValue_","","",null,null],[13,"Ignore","","",138,null],[13,"Var","","",138,null],[13,"Unpack","","",138,null],[13,"BorrowUnpack","","",138,null],[4,"BuiltinFunction_","","",null,null],[13,"MoveToSender","","",139,null],[13,"MoveFrom","","",139,null],[13,"BorrowGlobal","","",139,null],[13,"Exists","","",139,null],[13,"Freeze","","",139,null],[4,"UnannotatedExp_","","",null,null],[13,"Unit","","",140,null],[13,"Value","","",140,null],[13,"InferredNum","","",140,null],[13,"Move","","",140,null],[12,"from_user","move_lang::typing::ast::UnannotatedExp_","",141,null],[12,"var","","",141,null],[13,"Copy","move_lang::typing::ast","",140,null],[12,"from_user","move_lang::typing::ast::UnannotatedExp_","",142,null],[12,"var","","",142,null],[13,"Use","move_lang::typing::ast","",140,null],[13,"ModuleCall","","",140,null],[13,"Builtin","","",140,null],[13,"IfElse","","",140,null],[13,"While","","",140,null],[13,"Loop","","",140,null],[12,"has_break","move_lang::typing::ast::UnannotatedExp_","",143,null],[12,"body","","",143,null],[13,"Block","move_lang::typing::ast","",140,null],[13,"Assign","","",140,null],[13,"Mutate","","",140,null],[13,"Return","","",140,null],[13,"Abort","","",140,null],[13,"Break","","",140,null],[13,"Continue","","",140,null],[13,"Dereference","","",140,null],[13,"UnaryExp","","",140,null],[13,"BinopExp","","",140,null],[13,"Pack","","",140,null],[13,"ExpList","","",140,null],[13,"Borrow","","",140,null],[13,"TempBorrow","","",140,null],[13,"BorrowLocal","","",140,null],[13,"Cast","","",140,null],[13,"Annotate","","",140,null],[13,"Spec","","",140,null],[13,"UnresolvedError","","",140,null],[4,"SequenceItem_","","",null,null],[13,"Seq","","",144,null],[13,"Declare","","",144,null],[13,"Bind","","",144,null],[4,"ExpListItem","","",null,null],[13,"Single","","",145,null],[13,"Splat","","",145,null],[5,"exp","","",null,[[["unannotatedexp"],["type"]],["exp"]]],[5,"single_item","","",null,[[["exp"]],["explistitem"]]],[5,"splat_item","","",null,[[["loc"],["exp"]],["explistitem"]]],[6,"FunctionBody","","",null,null],[6,"LValue","","",null,null],[6,"LValueList_","","",null,null],[6,"LValueList","","",null,null],[6,"BuiltinFunction","","",null,null],[6,"UnannotatedExp","","",null,null],[6,"Sequence","","",null,null],[6,"SequenceItem","","",null,null],[6,"CommentMap","move_lang","Types to represent comments.",null,null],[6,"MatchedFileCommentMap","","",null,null],[6,"FileCommentMap","","",null,null],[17,"MOVE_EXTENSION","","",null,null],[17,"MOVE_COMPILED_EXTENSION","","",null,null],[17,"SOURCE_MAP_EXTENSION","","",null,null],[11,"from","move_lang::cfgir::ast","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","move_lang::compiled_unit","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","move_lang::expansion::ast","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"to_string","","",34,[[["self"]],["string"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"vzip","","",34,[[],["v"]]],[11,"equivalent","","",34,[[["k"],["self"]],["bool"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"vzip","","",18,[[],["v"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"vzip","","",19,[[],["v"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"vzip","","",20,[[],["v"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"vzip","","",21,[[],["v"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"to_string","","",28,[[["self"]],["string"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"vzip","","",28,[[],["v"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_string","","",29,[[["self"]],["string"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"vzip","","",29,[[],["v"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"vzip","","",30,[[],["v"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"vzip","","",31,[[],["v"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"vzip","","",32,[[],["v"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"vzip","","",33,[[],["v"]]],[11,"from","move_lang::hlir::ast","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"vzip","","",35,[[],["v"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"vzip","","",36,[[],["v"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"vzip","","",37,[[],["v"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"vzip","","",38,[[],["v"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"vzip","","",39,[[],["v"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"vzip","","",40,[[],["v"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"to_string","","",41,[[["self"]],["string"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"vzip","","",41,[[],["v"]]],[11,"equivalent","","",41,[[["k"],["self"]],["bool"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"vzip","","",42,[[],["v"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"vzip","","",43,[[],["v"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"vzip","","",44,[[],["v"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"vzip","","",45,[[],["v"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"to_string","","",47,[[["self"]],["string"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"vzip","","",47,[[],["v"]]],[11,"equivalent","","",47,[[["k"],["self"]],["bool"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"vzip","","",48,[[],["v"]]],[11,"equivalent","","",48,[[["k"],["self"]],["bool"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"vzip","","",49,[[],["v"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"vzip","","",50,[[],["v"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"vzip","","",51,[[],["v"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"vzip","","",55,[[],["v"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"vzip","","",58,[[],["v"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"vzip","","",59,[[],["v"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"vzip","","",60,[[],["v"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"vzip","","",63,[[],["v"]]],[11,"from","move_lang::naming::ast","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"vzip","","",64,[[],["v"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"vzip","","",65,[[],["v"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"vzip","","",66,[[],["v"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"vzip","","",67,[[],["v"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"vzip","","",68,[[],["v"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"vzip","","",69,[[],["v"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"vzip","","",70,[[],["v"]]],[11,"equivalent","","",70,[[["k"],["self"]],["bool"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"vzip","","",71,[[],["v"]]],[11,"equivalent","","",71,[[["k"],["self"]],["bool"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"vzip","","",82,[[],["v"]]],[11,"equivalent","","",82,[[["k"],["self"]],["bool"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"vzip","","",72,[[],["v"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"vzip","","",73,[[],["v"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"to_string","","",74,[[["self"]],["string"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"vzip","","",74,[[],["v"]]],[11,"equivalent","","",74,[[["k"],["self"]],["bool"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"to_string","","",75,[[["self"]],["string"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"vzip","","",75,[[],["v"]]],[11,"equivalent","","",75,[[["k"],["self"]],["bool"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"vzip","","",76,[[],["v"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"vzip","","",77,[[],["v"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"vzip","","",78,[[],["v"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"vzip","","",79,[[],["v"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"vzip","","",80,[[],["v"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"vzip","","",81,[[],["v"]]],[11,"from","move_lang::parser::ast","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"vzip","","",83,[[],["v"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"vzip","","",84,[[],["v"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,[[["self"],["t"]]]],[11,"to_string","","",85,[[["self"]],["string"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"vzip","","",85,[[],["v"]]],[11,"equivalent","","",85,[[["k"],["self"]],["bool"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,[[["self"],["t"]]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"vzip","","",86,[[],["v"]]],[11,"equivalent","","",86,[[["k"],["self"]],["bool"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,[[["self"],["t"]]]],[11,"to_string","","",87,[[["self"]],["string"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"vzip","","",87,[[],["v"]]],[11,"equivalent","","",87,[[["k"],["self"]],["bool"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"vzip","","",88,[[],["v"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,[[["self"],["t"]]]],[11,"to_string","","",89,[[["self"]],["string"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"vzip","","",89,[[],["v"]]],[11,"equivalent","","",89,[[["k"],["self"]],["bool"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,[[["self"],["t"]]]],[11,"to_string","","",90,[[["self"]],["string"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"vzip","","",90,[[],["v"]]],[11,"equivalent","","",90,[[["k"],["self"]],["bool"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"vzip","","",91,[[],["v"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,[[["self"],["t"]]]],[11,"to_string","","",92,[[["self"]],["string"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"vzip","","",92,[[],["v"]]],[11,"equivalent","","",92,[[["k"],["self"]],["bool"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"vzip","","",93,[[],["v"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"vzip","","",94,[[],["v"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"vzip","","",95,[[],["v"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"vzip","","",96,[[],["v"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"vzip","","",97,[[],["v"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,[[["self"],["t"]]]],[11,"to_string","","",98,[[["self"]],["string"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"vzip","","",98,[[],["v"]]],[11,"equivalent","","",98,[[["k"],["self"]],["bool"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"vzip","","",99,[[],["v"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"vzip","","",100,[[],["v"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,[[["self"],["t"]]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"vzip","","",101,[[],["v"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"vzip","","",102,[[],["v"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"vzip","","",103,[[],["v"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"vzip","","",104,[[],["v"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"vzip","","",105,[[],["v"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[],["u"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"vzip","","",112,[[],["v"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[],["u"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"vzip","","",113,[[],["v"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[],["u"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"vzip","","",114,[[],["v"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,[[["self"],["t"]]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"vzip","","",115,[[],["v"]]],[11,"equivalent","","",115,[[["k"],["self"]],["bool"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[],["u"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"vzip","","",116,[[],["v"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[],["u"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"vzip","","",117,[[],["v"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[],["u"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"vzip","","",118,[[],["v"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[],["u"]]],[11,"to_string","","",119,[[["self"]],["string"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"vzip","","",119,[[],["v"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[],["u"]]],[11,"to_string","","",120,[[["self"]],["string"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"vzip","","",120,[[],["v"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[],["u"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"vzip","","",121,[[],["v"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[],["u"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"vzip","","",122,[[],["v"]]],[11,"from","move_lang::shared","",129,[[["t"]],["t"]]],[11,"into","","",129,[[],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,[[["self"],["t"]]]],[11,"to_string","","",129,[[["self"]],["string"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"vzip","","",129,[[],["v"]]],[11,"clear","","",129,[[["self"]]]],[11,"initialize","","",129,[[]]],[11,"encode_hex","","",129,[[["self"]],["u"]]],[11,"encode_hex_upper","","",129,[[["self"]],["u"]]],[11,"equivalent","","",129,[[["k"],["self"]],["bool"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,[[["self"],["t"]]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"vzip","","",130,[[],["v"]]],[11,"equivalent","","",130,[[["k"],["self"]],["bool"]]],[11,"from","move_lang::shared::ast_debug","",124,[[["t"]],["t"]]],[11,"into","","",124,[[],["u"]]],[11,"to_string","","",124,[[["self"]],["string"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"vzip","","",124,[[],["v"]]],[11,"from","move_lang::shared::remembering_unique_map","",125,[[["t"]],["t"]]],[11,"into","","",125,[[],["u"]]],[11,"into_iter","","",125,[[],["i"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,[[["self"],["t"]]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"vzip","","",125,[[],["v"]]],[11,"equivalent","","",125,[[["k"],["self"]],["bool"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[],["u"]]],[11,"into_iter","","",146,[[],["i"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"vzip","","",146,[[],["v"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[],["u"]]],[11,"into_iter","","",147,[[],["i"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"vzip","","",147,[[],["v"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[],["u"]]],[11,"into_iter","","",148,[[],["i"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"vzip","","",148,[[],["v"]]],[11,"from","move_lang::shared::unique_map","",126,[[["t"]],["t"]]],[11,"into","","",126,[[],["u"]]],[11,"into_iter","","",126,[[],["i"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,[[["self"],["t"]]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"vzip","","",126,[[],["v"]]],[11,"clear","","",126,[[["self"]]]],[11,"initialize","","",126,[[]]],[11,"equivalent","","",126,[[["k"],["self"]],["bool"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[],["u"]]],[11,"into_iter","","",149,[[],["i"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"vzip","","",149,[[],["v"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[],["u"]]],[11,"into_iter","","",150,[[],["i"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"vzip","","",150,[[],["v"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[],["u"]]],[11,"into_iter","","",151,[[],["i"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"vzip","","",151,[[],["v"]]],[11,"from","move_lang::test_utils","",152,[[["t"]],["t"]]],[11,"into","","",152,[[],["u"]]],[11,"to_string","","",152,[[["self"]],["string"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"vzip","","",152,[[],["v"]]],[11,"from","move_lang::typing::ast","",131,[[["t"]],["t"]]],[11,"into","","",131,[[],["u"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"vzip","","",131,[[],["v"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[],["u"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"vzip","","",132,[[],["v"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[],["u"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"vzip","","",133,[[],["v"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[],["u"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"vzip","","",134,[[],["v"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[],["u"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"vzip","","",135,[[],["v"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[],["u"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"vzip","","",136,[[],["v"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[],["u"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"vzip","","",137,[[],["v"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[],["u"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"vzip","","",138,[[],["v"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[],["u"]]],[11,"to_string","","",139,[[["self"]],["string"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"vzip","","",139,[[],["v"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[],["u"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"vzip","","",140,[[],["v"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[],["u"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"vzip","","",144,[[],["v"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[],["u"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"vzip","","",145,[[],["v"]]],[11,"ast_debug","move_lang::cfgir::ast","",0,[[["self"],["astwriter"]]]],[11,"ast_debug","","",1,[[["self"],["astwriter"]]]],[11,"ast_debug","","",2,[[["self"],["astwriter"]]]],[11,"ast_debug","move_lang","",153,[[["self"],["astwriter"]]]],[11,"ast_debug","move_lang::expansion::ast","",12,[[["self"],["astwriter"]]]],[11,"ast_debug","","",13,[[["self"],["astwriter"]]]],[11,"ast_debug","","",14,[[["self"],["astwriter"]]]],[11,"ast_debug","","",18,[[["self"],["astwriter"]]]],[11,"ast_debug","","",21,[[["self"],["astwriter"]]]],[11,"ast_debug","","",16,[[["self"],["astwriter"]]]],[11,"ast_debug","","",29,[[["self"],["astwriter"]]]],[11,"ast_debug","","",28,[[["self"],["astwriter"]]]],[11,"ast_debug","","",33,[[["self"],["astwriter"]]]],[11,"ast_debug","","",32,[[["self"],["astwriter"]]]],[11,"ast_debug","","",31,[[["self"],["astwriter"]]]],[11,"ast_debug","","",30,[[["self"],["astwriter"]]]],[11,"ast_debug","move_lang::hlir::ast","",35,[[["self"],["astwriter"]]]],[11,"ast_debug","","",36,[[["self"],["astwriter"]]]],[11,"ast_debug","","",37,[[["self"],["astwriter"]]]],[11,"ast_debug","","",39,[[["self"],["astwriter"]]]],[11,"ast_debug","","",47,[[["self"],["astwriter"]]]],[11,"ast_debug","","",48,[[["self"],["astwriter"]]]],[11,"ast_debug","","",49,[[["self"],["astwriter"]]]],[11,"ast_debug","","",50,[[["self"],["astwriter"]]]],[11,"ast_debug","","",51,[[["self"],["astwriter"]]]],[11,"ast_debug","","",55,[[["self"],["astwriter"]]]],[11,"ast_debug","","",43,[[["self"],["astwriter"]]]],[11,"ast_debug","","",60,[[["self"],["astwriter"]]]],[11,"ast_debug","","",42,[[["self"],["astwriter"]]]],[11,"ast_debug","","",59,[[["self"],["astwriter"]]]],[11,"ast_debug","","",63,[[["self"],["astwriter"]]]],[11,"ast_debug","","",58,[[["self"],["astwriter"]]]],[11,"ast_debug","move_lang::naming::ast","",64,[[["self"],["astwriter"]]]],[11,"ast_debug","","",65,[[["self"],["astwriter"]]]],[11,"ast_debug","","",66,[[["self"],["astwriter"]]]],[11,"ast_debug","","",68,[[["self"],["astwriter"]]]],[11,"ast_debug","","",74,[[["self"],["astwriter"]]]],[11,"ast_debug","","",75,[[["self"],["astwriter"]]]],[11,"ast_debug","","",71,[[["self"],["astwriter"]]]],[11,"ast_debug","","",76,[[["self"],["astwriter"]]]],[11,"ast_debug","","",81,[[["self"],["astwriter"]]]],[11,"ast_debug","","",80,[[["self"],["astwriter"]]]],[11,"ast_debug","","",79,[[["self"],["astwriter"]]]],[11,"ast_debug","","",78,[[["self"],["astwriter"]]]],[11,"ast_debug","","",77,[[["self"],["astwriter"]]]],[11,"ast_debug","move_lang::parser::ast","",83,[[["self"],["astwriter"]]]],[11,"ast_debug","","",99,[[["self"],["astwriter"]]]],[11,"ast_debug","","",84,[[["self"],["astwriter"]]]],[11,"ast_debug","","",88,[[["self"],["astwriter"]]]],[11,"ast_debug","","",91,[[["self"],["astwriter"]]]],[11,"ast_debug","","",95,[[["self"],["astwriter"]]]],[11,"ast_debug","","",103,[[["self"],["astwriter"]]]],[11,"ast_debug","","",112,[[["self"],["astwriter"]]]],[11,"ast_debug","","",105,[[["self"],["astwriter"]]]],[11,"ast_debug","","",97,[[["self"],["astwriter"]]]],[11,"ast_debug","","",104,[[["self"],["astwriter"]]]],[11,"ast_debug","","",96,[[["self"],["astwriter"]]]],[11,"ast_debug","","",94,[[["self"],["astwriter"]]]],[11,"ast_debug","","",101,[[["self"],["astwriter"]]]],[11,"ast_debug","","",93,[[["self"],["astwriter"]]]],[11,"ast_debug","","",115,[[["self"],["astwriter"]]]],[11,"ast_debug","","",116,[[["self"],["astwriter"]]]],[11,"ast_debug","","",114,[[["self"],["astwriter"]]]],[11,"ast_debug","","",122,[[["self"],["astwriter"]]]],[11,"ast_debug","","",121,[[["self"],["astwriter"]]]],[11,"ast_debug","","",120,[[["self"],["astwriter"]]]],[11,"ast_debug","","",119,[[["self"],["astwriter"]]]],[11,"ast_debug","","",118,[[["self"],["astwriter"]]]],[11,"ast_debug","","",117,[[["self"],["astwriter"]]]],[11,"ast_debug","move_lang::typing::ast","",131,[[["self"],["astwriter"]]]],[11,"ast_debug","","",132,[[["self"],["astwriter"]]]],[11,"ast_debug","","",133,[[["self"],["astwriter"]]]],[11,"ast_debug","","",144,[[["self"],["astwriter"]]]],[11,"ast_debug","","",140,[[["self"],["astwriter"]]]],[11,"ast_debug","","",136,[[["self"],["astwriter"]]]],[11,"ast_debug","","",135,[[["self"],["astwriter"]]]],[11,"ast_debug","","",139,[[["self"],["astwriter"]]]],[11,"ast_debug","","",145,[[["self"],["astwriter"]]]],[11,"ast_debug","","",138,[[["self"],["astwriter"]]]],[11,"drop_loc","move_lang::parser::ast","",85,[[]]],[11,"clone_drop_loc","","",85,[[["self"]]]],[11,"add_loc","","",85,[[["loc"],["string"]],["self"]]],[11,"drop_loc","","",89,[[]]],[11,"clone_drop_loc","","",89,[[["self"]]]],[11,"add_loc","","",89,[[["loc"],["string"]],["self"]]],[11,"drop_loc","","",90,[[]]],[11,"clone_drop_loc","","",90,[[["self"]]]],[11,"add_loc","","",90,[[["loc"],["string"]],["self"]]],[11,"drop_loc","","",92,[[]]],[11,"clone_drop_loc","","",92,[[["self"]]]],[11,"add_loc","","",92,[[["loc"],["string"]],["self"]]],[11,"drop_loc","","",98,[[]]],[11,"clone_drop_loc","","",98,[[["self"]]]],[11,"add_loc","","",98,[[["loc"],["string"]],["self"]]],[11,"drop_loc","","",87,[[]]],[11,"clone_drop_loc","","",87,[[["self"]]]],[11,"add_loc","","",87,[[],["moduleident"]]],[11,"drop_loc","move_lang","",154,[[]]],[11,"clone_drop_loc","","",154,[[["self"]]]],[11,"add_loc","","",154,[[["loc"],["string"]],["self"]]],[11,"value","move_lang::parser::ast","",85,[[["self"]],["str"]]],[11,"loc","","",85,[[["self"]],["loc"]]],[11,"value","","",89,[[["self"]],["str"]]],[11,"loc","","",89,[[["self"]],["loc"]]],[11,"value","","",90,[[["self"]],["str"]]],[11,"loc","","",90,[[["self"]],["loc"]]],[11,"value","","",92,[[["self"]],["str"]]],[11,"loc","","",92,[[["self"]],["loc"]]],[11,"value","","",98,[[["self"]],["str"]]],[11,"loc","","",98,[[["self"]],["loc"]]],[11,"as_ref","move_lang::shared","",129,[[["self"]]]],[11,"into_iter","move_lang::shared::remembering_unique_map","",125,[[]]],[11,"into_iter","move_lang::shared::unique_map","",126,[[]]],[11,"next","move_lang::shared::remembering_unique_map","",146,[[["self"]],["option"]]],[11,"next","","",147,[[["self"]],["option"]]],[11,"next","","",148,[[["self"]],["option"]]],[11,"next","move_lang::shared::unique_map","",149,[[["self"]],["option"]]],[11,"next","","",150,[[["self"]],["option"]]],[11,"next","","",151,[[["self"]],["option"]]],[11,"clone","move_lang::expansion::ast","",34,[[["self"]],["specid"]]],[11,"clone","","",28,[[["self"]],["moduleaccess_"]]],[11,"clone","move_lang::hlir::ast","",38,[[["self"]],["structdefinition"]]],[11,"clone","","",44,[[["self"]],["structfields"]]],[11,"clone","","",39,[[["self"]],["functionsignature"]]],[11,"clone","","",47,[[["self"]],["typename_"]]],[11,"clone","","",48,[[["self"]],["basetype_"]]],[11,"clone","","",49,[[["self"]],["singletype_"]]],[11,"clone","","",50,[[["self"]],["type_"]]],[11,"clone","","",41,[[["self"]],["label"]]],[11,"clone","move_lang::naming::ast","",67,[[["self"]],["structdefinition"]]],[11,"clone","","",72,[[["self"]],["structfields"]]],[11,"clone","","",68,[[["self"]],["functionsignature"]]],[11,"clone","","",74,[[["self"]],["builtintypename_"]]],[11,"clone","","",75,[[["self"]],["typename_"]]],[11,"clone","","",70,[[["self"]],["tparamid"]]],[11,"clone","","",71,[[["self"]],["tparam"]]],[11,"clone","","",82,[[["self"]],["tvar"]]],[11,"clone","","",76,[[["self"]],["type_"]]],[11,"clone","move_lang::parser::ast","",85,[[["self"]],["modulename"]]],[11,"clone","","",86,[[["self"]],["moduleident_"]]],[11,"clone","","",87,[[["self"]],["moduleident"]]],[11,"clone","","",89,[[["self"]],["field"]]],[11,"clone","","",90,[[["self"]],["structname"]]],[11,"clone","","",92,[[["self"]],["functionname"]]],[11,"clone","","",101,[[["self"]],["functionvisibility"]]],[11,"clone","","",115,[[["self"]],["kind_"]]],[11,"clone","","",98,[[["self"]],["var"]]],[11,"clone","move_lang::shared::remembering_unique_map","",125,[[["self"]],["rememberinguniquemap"]]],[11,"clone","move_lang::shared::unique_map","",126,[[["self"]],["uniquemap"]]],[11,"clone","move_lang::shared","",129,[[["self"]],["address"]]],[11,"clone","","",130,[[["self"]],["counter"]]],[11,"default","move_lang::shared::unique_map","",126,[[],["uniquemap"]]],[11,"default","move_lang::shared","",129,[[],["address"]]],[11,"cmp","move_lang::expansion::ast","",34,[[["self"],["specid"]],["ordering"]]],[11,"cmp","move_lang::hlir::ast","",47,[[["self"],["typename_"]],["ordering"]]],[11,"cmp","","",48,[[["basetype_"],["self"]],["ordering"]]],[11,"cmp","","",41,[[["label"],["self"]],["ordering"]]],[11,"cmp","move_lang::naming::ast","",74,[[["builtintypename_"],["self"]],["ordering"]]],[11,"cmp","","",75,[[["self"],["typename_"]],["ordering"]]],[11,"cmp","","",70,[[["self"],["tparamid"]],["ordering"]]],[11,"cmp","","",71,[[["tparam"],["self"]],["ordering"]]],[11,"cmp","","",82,[[["tvar"],["self"]],["ordering"]]],[11,"cmp","move_lang::parser::ast","",85,[[["modulename"],["self"]],["ordering"]]],[11,"cmp","","",86,[[["moduleident_"],["self"]],["ordering"]]],[11,"cmp","","",87,[[["self"],["moduleident"]],["ordering"]]],[11,"cmp","","",89,[[["self"],["field"]],["ordering"]]],[11,"cmp","","",90,[[["structname"],["self"]],["ordering"]]],[11,"cmp","","",92,[[["functionname"],["self"]],["ordering"]]],[11,"cmp","","",115,[[["self"],["kind_"]],["ordering"]]],[11,"cmp","","",98,[[["self"],["var"]],["ordering"]]],[11,"cmp","move_lang::shared","",129,[[["self"],["address"]],["ordering"]]],[11,"eq","move_lang::cfgir::ast","",4,[[["functionbody_"],["self"]],["bool"]]],[11,"ne","","",4,[[["functionbody_"],["self"]],["bool"]]],[11,"eq","","",3,[[["self"],["function"]],["bool"]]],[11,"ne","","",3,[[["self"],["function"]],["bool"]]],[11,"eq","move_lang::expansion::ast","",15,[[["self"],["structdefinition"]],["bool"]]],[11,"ne","","",15,[[["self"],["structdefinition"]],["bool"]]],[11,"eq","","",19,[[["self"],["structfields"]],["bool"]]],[11,"ne","","",19,[[["self"],["structfields"]],["bool"]]],[11,"eq","","",16,[[["self"],["functionsignature"]],["bool"]]],[11,"ne","","",16,[[["self"],["functionsignature"]],["bool"]]],[11,"eq","","",20,[[["functionbody_"],["self"]],["bool"]]],[11,"ne","","",20,[[["functionbody_"],["self"]],["bool"]]],[11,"eq","","",34,[[["self"],["specid"]],["bool"]]],[11,"ne","","",34,[[["self"],["specid"]],["bool"]]],[11,"eq","","",17,[[["function"],["self"]],["bool"]]],[11,"ne","","",17,[[["function"],["self"]],["bool"]]],[11,"eq","","",18,[[["specblock_"],["self"]],["bool"]]],[11,"ne","","",18,[[["specblock_"],["self"]],["bool"]]],[11,"eq","","",21,[[["specblockmember_"],["self"]],["bool"]]],[11,"ne","","",21,[[["specblockmember_"],["self"]],["bool"]]],[11,"eq","","",28,[[["moduleaccess_"],["self"]],["bool"]]],[11,"ne","","",28,[[["moduleaccess_"],["self"]],["bool"]]],[11,"eq","","",29,[[["type_"],["self"]],["bool"]]],[11,"ne","","",29,[[["type_"],["self"]],["bool"]]],[11,"eq","","",30,[[["lvalue_"],["self"]],["bool"]]],[11,"ne","","",30,[[["lvalue_"],["self"]],["bool"]]],[11,"eq","","",31,[[["expdotted_"],["self"]],["bool"]]],[11,"ne","","",31,[[["expdotted_"],["self"]],["bool"]]],[11,"eq","","",32,[[["exp_"],["self"]],["bool"]]],[11,"ne","","",32,[[["exp_"],["self"]],["bool"]]],[11,"eq","","",33,[[["sequenceitem_"],["self"]],["bool"]]],[11,"ne","","",33,[[["sequenceitem_"],["self"]],["bool"]]],[11,"eq","move_lang::hlir::ast","",38,[[["structdefinition"],["self"]],["bool"]]],[11,"ne","","",38,[[["structdefinition"],["self"]],["bool"]]],[11,"eq","","",44,[[["self"],["structfields"]],["bool"]]],[11,"ne","","",44,[[["self"],["structfields"]],["bool"]]],[11,"eq","","",39,[[["self"],["functionsignature"]],["bool"]]],[11,"ne","","",39,[[["self"],["functionsignature"]],["bool"]]],[11,"eq","","",45,[[["self"],["functionbody_"]],["bool"]]],[11,"ne","","",45,[[["self"],["functionbody_"]],["bool"]]],[11,"eq","","",40,[[["self"],["function"]],["bool"]]],[11,"ne","","",40,[[["self"],["function"]],["bool"]]],[11,"eq","","",47,[[["self"],["typename_"]],["bool"]]],[11,"ne","","",47,[[["self"],["typename_"]],["bool"]]],[11,"eq","","",48,[[["basetype_"],["self"]],["bool"]]],[11,"ne","","",48,[[["basetype_"],["self"]],["bool"]]],[11,"eq","","",49,[[["self"],["singletype_"]],["bool"]]],[11,"ne","","",49,[[["self"],["singletype_"]],["bool"]]],[11,"eq","","",50,[[["type_"],["self"]],["bool"]]],[11,"ne","","",50,[[["type_"],["self"]],["bool"]]],[11,"eq","","",51,[[["self"],["statement_"]],["bool"]]],[11,"ne","","",51,[[["self"],["statement_"]],["bool"]]],[11,"eq","","",41,[[["label"],["self"]],["bool"]]],[11,"ne","","",41,[[["label"],["self"]],["bool"]]],[11,"eq","","",55,[[["self"],["command_"]],["bool"]]],[11,"ne","","",55,[[["self"],["command_"]],["bool"]]],[11,"eq","","",58,[[["lvalue_"],["self"]],["bool"]]],[11,"ne","","",58,[[["lvalue_"],["self"]],["bool"]]],[11,"eq","","",42,[[["modulecall"],["self"]],["bool"]]],[11,"ne","","",42,[[["modulecall"],["self"]],["bool"]]],[11,"eq","","",59,[[["self"],["builtinfunction_"]],["bool"]]],[11,"ne","","",59,[[["self"],["builtinfunction_"]],["bool"]]],[11,"eq","","",60,[[["unannotatedexp_"],["self"]],["bool"]]],[11,"ne","","",60,[[["unannotatedexp_"],["self"]],["bool"]]],[11,"eq","","",43,[[["self"],["exp"]],["bool"]]],[11,"ne","","",43,[[["self"],["exp"]],["bool"]]],[11,"eq","","",63,[[["explistitem"],["self"]],["bool"]]],[11,"ne","","",63,[[["explistitem"],["self"]],["bool"]]],[11,"eq","move_lang::naming::ast","",67,[[["structdefinition"],["self"]],["bool"]]],[11,"ne","","",67,[[["structdefinition"],["self"]],["bool"]]],[11,"eq","","",72,[[["structfields"],["self"]],["bool"]]],[11,"ne","","",72,[[["structfields"],["self"]],["bool"]]],[11,"eq","","",68,[[["self"],["functionsignature"]],["bool"]]],[11,"ne","","",68,[[["self"],["functionsignature"]],["bool"]]],[11,"eq","","",73,[[["functionbody_"],["self"]],["bool"]]],[11,"ne","","",73,[[["functionbody_"],["self"]],["bool"]]],[11,"eq","","",69,[[["self"],["function"]],["bool"]]],[11,"ne","","",69,[[["self"],["function"]],["bool"]]],[11,"eq","","",74,[[["builtintypename_"],["self"]],["bool"]]],[11,"eq","","",75,[[["self"],["typename_"]],["bool"]]],[11,"ne","","",75,[[["self"],["typename_"]],["bool"]]],[11,"eq","","",70,[[["self"],["tparamid"]],["bool"]]],[11,"ne","","",70,[[["self"],["tparamid"]],["bool"]]],[11,"eq","","",71,[[["tparam"],["self"]],["bool"]]],[11,"ne","","",71,[[["tparam"],["self"]],["bool"]]],[11,"eq","","",82,[[["tvar"],["self"]],["bool"]]],[11,"ne","","",82,[[["tvar"],["self"]],["bool"]]],[11,"eq","","",76,[[["type_"],["self"]],["bool"]]],[11,"ne","","",76,[[["type_"],["self"]],["bool"]]],[11,"eq","","",77,[[["self"],["lvalue_"]],["bool"]]],[11,"ne","","",77,[[["self"],["lvalue_"]],["bool"]]],[11,"eq","","",78,[[["expdotted_"],["self"]],["bool"]]],[11,"ne","","",78,[[["expdotted_"],["self"]],["bool"]]],[11,"eq","","",79,[[["builtinfunction_"],["self"]],["bool"]]],[11,"ne","","",79,[[["builtinfunction_"],["self"]],["bool"]]],[11,"eq","","",80,[[["exp_"],["self"]],["bool"]]],[11,"ne","","",80,[[["exp_"],["self"]],["bool"]]],[11,"eq","","",81,[[["self"],["sequenceitem_"]],["bool"]]],[11,"ne","","",81,[[["self"],["sequenceitem_"]],["bool"]]],[11,"eq","move_lang::parser::ast","",85,[[["modulename"],["self"]],["bool"]]],[11,"ne","","",85,[[["modulename"],["self"]],["bool"]]],[11,"eq","","",86,[[["moduleident_"],["self"]],["bool"]]],[11,"ne","","",86,[[["moduleident_"],["self"]],["bool"]]],[11,"eq","","",87,[[["self"],["moduleident"]],["bool"]]],[11,"ne","","",87,[[["self"],["moduleident"]],["bool"]]],[11,"eq","","",89,[[["self"],["field"]],["bool"]]],[11,"ne","","",89,[[["self"],["field"]],["bool"]]],[11,"eq","","",90,[[["structname"],["self"]],["bool"]]],[11,"ne","","",90,[[["structname"],["self"]],["bool"]]],[11,"eq","","",91,[[["self"],["structdefinition"]],["bool"]]],[11,"ne","","",91,[[["self"],["structdefinition"]],["bool"]]],[11,"eq","","",100,[[["structfields"],["self"]],["bool"]]],[11,"ne","","",100,[[["structfields"],["self"]],["bool"]]],[11,"eq","","",92,[[["functionname"],["self"]],["bool"]]],[11,"ne","","",92,[[["functionname"],["self"]],["bool"]]],[11,"eq","","",93,[[["functionsignature"],["self"]],["bool"]]],[11,"ne","","",93,[[["functionsignature"],["self"]],["bool"]]],[11,"eq","","",101,[[["functionvisibility"],["self"]],["bool"]]],[11,"ne","","",101,[[["functionvisibility"],["self"]],["bool"]]],[11,"eq","","",102,[[["functionbody_"],["self"]],["bool"]]],[11,"ne","","",102,[[["functionbody_"],["self"]],["bool"]]],[11,"eq","","",94,[[["self"],["function"]],["bool"]]],[11,"ne","","",94,[[["self"],["function"]],["bool"]]],[11,"eq","","",95,[[["self"],["specblock_"]],["bool"]]],[11,"ne","","",95,[[["self"],["specblock_"]],["bool"]]],[11,"eq","","",103,[[["self"],["specblocktarget_"]],["bool"]]],[11,"ne","","",103,[[["self"],["specblocktarget_"]],["bool"]]],[11,"eq","","",96,[[["self"],["pragmaproperty_"]],["bool"]]],[11,"ne","","",96,[[["self"],["pragmaproperty_"]],["bool"]]],[11,"eq","","",97,[[["specapplypattern_"],["self"]],["bool"]]],[11,"ne","","",97,[[["specapplypattern_"],["self"]],["bool"]]],[11,"eq","","",104,[[["specapplyfragment_"],["self"]],["bool"]]],[11,"ne","","",104,[[["specapplyfragment_"],["self"]],["bool"]]],[11,"eq","","",105,[[["specblockmember_"],["self"]],["bool"]]],[11,"ne","","",105,[[["specblockmember_"],["self"]],["bool"]]],[11,"eq","","",112,[[["specconditionkind"],["self"]],["bool"]]],[11,"eq","","",113,[[["self"],["invariantkind"]],["bool"]]],[11,"eq","","",114,[[["moduleaccess_"],["self"]],["bool"]]],[11,"ne","","",114,[[["moduleaccess_"],["self"]],["bool"]]],[11,"eq","","",115,[[["self"],["kind_"]],["bool"]]],[11,"eq","","",116,[[["type_"],["self"]],["bool"]]],[11,"ne","","",116,[[["type_"],["self"]],["bool"]]],[11,"eq","","",98,[[["self"],["var"]],["bool"]]],[11,"ne","","",98,[[["self"],["var"]],["bool"]]],[11,"eq","","",117,[[["self"],["bind_"]],["bool"]]],[11,"ne","","",117,[[["self"],["bind_"]],["bool"]]],[11,"eq","","",118,[[["self"],["value_"]],["bool"]]],[11,"ne","","",118,[[["self"],["value_"]],["bool"]]],[11,"eq","","",119,[[["self"],["unaryop_"]],["bool"]]],[11,"eq","","",120,[[["binop_"],["self"]],["bool"]]],[11,"eq","","",121,[[["exp_"],["self"]],["bool"]]],[11,"ne","","",121,[[["exp_"],["self"]],["bool"]]],[11,"eq","","",122,[[["sequenceitem_"],["self"]],["bool"]]],[11,"ne","","",122,[[["sequenceitem_"],["self"]],["bool"]]],[11,"eq","move_lang::shared::remembering_unique_map","",125,[[["rememberinguniquemap"],["self"]],["bool"]]],[11,"eq","move_lang::shared::unique_map","",126,[[["self"],["uniquemap"]],["bool"]]],[11,"eq","move_lang::shared","",129,[[["self"],["address"]],["bool"]]],[11,"ne","","",129,[[["self"],["address"]],["bool"]]],[11,"eq","","",130,[[["self"],["counter"]],["bool"]]],[11,"ne","","",130,[[["self"],["counter"]],["bool"]]],[11,"eq","move_lang::typing::ast","",137,[[["functionbody_"],["self"]],["bool"]]],[11,"ne","","",137,[[["functionbody_"],["self"]],["bool"]]],[11,"eq","","",134,[[["self"],["function"]],["bool"]]],[11,"ne","","",134,[[["self"],["function"]],["bool"]]],[11,"eq","","",138,[[["lvalue_"],["self"]],["bool"]]],[11,"ne","","",138,[[["lvalue_"],["self"]],["bool"]]],[11,"eq","","",135,[[["self"],["modulecall"]],["bool"]]],[11,"ne","","",135,[[["self"],["modulecall"]],["bool"]]],[11,"eq","","",139,[[["self"],["builtinfunction_"]],["bool"]]],[11,"ne","","",139,[[["self"],["builtinfunction_"]],["bool"]]],[11,"eq","","",140,[[["unannotatedexp_"],["self"]],["bool"]]],[11,"ne","","",140,[[["unannotatedexp_"],["self"]],["bool"]]],[11,"eq","","",136,[[["self"],["exp"]],["bool"]]],[11,"ne","","",136,[[["self"],["exp"]],["bool"]]],[11,"eq","","",144,[[["sequenceitem_"],["self"]],["bool"]]],[11,"ne","","",144,[[["sequenceitem_"],["self"]],["bool"]]],[11,"eq","","",145,[[["self"],["explistitem"]],["bool"]]],[11,"ne","","",145,[[["self"],["explistitem"]],["bool"]]],[11,"partial_cmp","move_lang::expansion::ast","",34,[[["self"],["specid"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",34,[[["self"],["specid"]],["bool"]]],[11,"le","","",34,[[["self"],["specid"]],["bool"]]],[11,"gt","","",34,[[["self"],["specid"]],["bool"]]],[11,"ge","","",34,[[["self"],["specid"]],["bool"]]],[11,"partial_cmp","move_lang::hlir::ast","",47,[[["self"],["typename_"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",47,[[["self"],["typename_"]],["bool"]]],[11,"le","","",47,[[["self"],["typename_"]],["bool"]]],[11,"gt","","",47,[[["self"],["typename_"]],["bool"]]],[11,"ge","","",47,[[["self"],["typename_"]],["bool"]]],[11,"partial_cmp","","",48,[[["basetype_"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",48,[[["basetype_"],["self"]],["bool"]]],[11,"le","","",48,[[["basetype_"],["self"]],["bool"]]],[11,"gt","","",48,[[["basetype_"],["self"]],["bool"]]],[11,"ge","","",48,[[["basetype_"],["self"]],["bool"]]],[11,"partial_cmp","","",41,[[["label"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",41,[[["label"],["self"]],["bool"]]],[11,"le","","",41,[[["label"],["self"]],["bool"]]],[11,"gt","","",41,[[["label"],["self"]],["bool"]]],[11,"ge","","",41,[[["label"],["self"]],["bool"]]],[11,"partial_cmp","move_lang::naming::ast","",74,[[["builtintypename_"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",75,[[["self"],["typename_"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",75,[[["self"],["typename_"]],["bool"]]],[11,"le","","",75,[[["self"],["typename_"]],["bool"]]],[11,"gt","","",75,[[["self"],["typename_"]],["bool"]]],[11,"ge","","",75,[[["self"],["typename_"]],["bool"]]],[11,"partial_cmp","","",70,[[["self"],["tparamid"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",70,[[["self"],["tparamid"]],["bool"]]],[11,"le","","",70,[[["self"],["tparamid"]],["bool"]]],[11,"gt","","",70,[[["self"],["tparamid"]],["bool"]]],[11,"ge","","",70,[[["self"],["tparamid"]],["bool"]]],[11,"partial_cmp","","",71,[[["tparam"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",71,[[["tparam"],["self"]],["bool"]]],[11,"le","","",71,[[["tparam"],["self"]],["bool"]]],[11,"gt","","",71,[[["tparam"],["self"]],["bool"]]],[11,"ge","","",71,[[["tparam"],["self"]],["bool"]]],[11,"partial_cmp","","",82,[[["tvar"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",82,[[["tvar"],["self"]],["bool"]]],[11,"le","","",82,[[["tvar"],["self"]],["bool"]]],[11,"gt","","",82,[[["tvar"],["self"]],["bool"]]],[11,"ge","","",82,[[["tvar"],["self"]],["bool"]]],[11,"partial_cmp","move_lang::parser::ast","",85,[[["modulename"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",85,[[["modulename"],["self"]],["bool"]]],[11,"le","","",85,[[["modulename"],["self"]],["bool"]]],[11,"gt","","",85,[[["modulename"],["self"]],["bool"]]],[11,"ge","","",85,[[["modulename"],["self"]],["bool"]]],[11,"partial_cmp","","",86,[[["moduleident_"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",86,[[["moduleident_"],["self"]],["bool"]]],[11,"le","","",86,[[["moduleident_"],["self"]],["bool"]]],[11,"gt","","",86,[[["moduleident_"],["self"]],["bool"]]],[11,"ge","","",86,[[["moduleident_"],["self"]],["bool"]]],[11,"partial_cmp","","",87,[[["self"],["moduleident"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",87,[[["self"],["moduleident"]],["bool"]]],[11,"le","","",87,[[["self"],["moduleident"]],["bool"]]],[11,"gt","","",87,[[["self"],["moduleident"]],["bool"]]],[11,"ge","","",87,[[["self"],["moduleident"]],["bool"]]],[11,"partial_cmp","","",89,[[["self"],["field"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",89,[[["self"],["field"]],["bool"]]],[11,"le","","",89,[[["self"],["field"]],["bool"]]],[11,"gt","","",89,[[["self"],["field"]],["bool"]]],[11,"ge","","",89,[[["self"],["field"]],["bool"]]],[11,"partial_cmp","","",90,[[["structname"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",90,[[["structname"],["self"]],["bool"]]],[11,"le","","",90,[[["structname"],["self"]],["bool"]]],[11,"gt","","",90,[[["structname"],["self"]],["bool"]]],[11,"ge","","",90,[[["structname"],["self"]],["bool"]]],[11,"partial_cmp","","",92,[[["functionname"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",92,[[["functionname"],["self"]],["bool"]]],[11,"le","","",92,[[["functionname"],["self"]],["bool"]]],[11,"gt","","",92,[[["functionname"],["self"]],["bool"]]],[11,"ge","","",92,[[["functionname"],["self"]],["bool"]]],[11,"partial_cmp","","",115,[[["self"],["kind_"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",98,[[["self"],["var"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",98,[[["self"],["var"]],["bool"]]],[11,"le","","",98,[[["self"],["var"]],["bool"]]],[11,"gt","","",98,[[["self"],["var"]],["bool"]]],[11,"ge","","",98,[[["self"],["var"]],["bool"]]],[11,"partial_cmp","move_lang::shared","",129,[[["self"],["address"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",129,[[["self"],["address"]],["bool"]]],[11,"le","","",129,[[["self"],["address"]],["bool"]]],[11,"gt","","",129,[[["self"],["address"]],["bool"]]],[11,"ge","","",129,[[["self"],["address"]],["bool"]]],[11,"fmt","move_lang::cfgir::ast","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","move_lang::compiled_unit","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","move_lang::expansion::ast","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","move_lang::hlir::ast","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","move_lang::naming::ast","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",67,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",68,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",74,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",71,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",82,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",78,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",81,[[["formatter"],["self"]],["result"]]],[11,"fmt","move_lang::parser::ast","",83,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",99,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",84,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",85,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",86,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",87,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",88,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",89,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",90,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",91,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",100,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",92,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",93,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",101,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",102,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",94,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",95,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",103,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",96,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",97,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",104,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",105,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",112,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",113,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",114,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",115,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",116,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",98,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",117,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",118,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",119,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",120,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",121,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",122,[[["formatter"],["self"]],["result"]]],[11,"fmt","move_lang::shared::remembering_unique_map","",125,[[["formatter"],["self"]],["result"]]],[11,"fmt","move_lang::shared::unique_map","",126,[[["formatter"],["self"]],["result"]]],[11,"fmt","move_lang::shared","",129,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",130,[[["formatter"],["self"]],["result"]]],[11,"fmt","move_lang::test_utils","",152,[[["formatter"],["self"]],["result"]]],[11,"fmt","move_lang::typing::ast","",131,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",132,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",133,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",137,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",134,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",138,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",135,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",139,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",140,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",136,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",144,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",145,[[["formatter"],["self"]],["result"]]],[11,"fmt","move_lang::expansion::ast","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","move_lang::hlir::ast","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","move_lang::naming::ast","",74,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","move_lang::parser::ast","",85,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",89,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",90,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",92,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",98,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",87,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",119,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",120,[[["formatter"],["self"]],["result"]]],[11,"fmt","move_lang::shared::ast_debug","",124,[[["formatter"],["self"]],["result"]]],[11,"fmt","move_lang::shared","",129,[[["formatter"],["self"]],["result"]]],[11,"fmt","move_lang::test_utils","",152,[[["formatter"],["self"]],["result"]]],[11,"fmt","move_lang::typing::ast","",139,[[["formatter"],["self"]],["result"]]],[11,"hash","move_lang::expansion::ast","",34,[[["self"],["__h"]]]],[11,"hash","move_lang::hlir::ast","",41,[[["self"],["__h"]]]],[11,"hash","move_lang::naming::ast","",70,[[["self"],["__h"]]]],[11,"hash","","",71,[[["self"],["__h"]]]],[11,"hash","","",82,[[["self"],["__h"]]]],[11,"hash","move_lang::parser::ast","",85,[[["self"],["__h"]]]],[11,"hash","","",86,[[["self"],["__h"]]]],[11,"hash","","",87,[[["self"],["__h"]]]],[11,"hash","","",89,[[["self"],["__h"]]]],[11,"hash","","",90,[[["self"],["__h"]]]],[11,"hash","","",92,[[["self"],["__h"]]]],[11,"hash","","",115,[[["self"],["__h"]]]],[11,"hash","","",98,[[["self"],["__h"]]]],[11,"hash","move_lang::shared","",129,[[["self"],["__h"]]]],[11,"hash","","",130,[[["self"],["__h"]]]],[11,"try_from","","",129,[[],[["result",["address","string"]],["address"],["string"]]]],[11,"fmt","","",129,[[["formatter"],["self"]],["result"]]],[11,"description","move_lang::test_utils","",152,[[["self"]],["str"]]],[11,"type_","move_lang::parser::ast","",118,[[["loc"],["self"]],["type"]]]],"p":[[3,"Program"],[3,"Script"],[3,"ModuleDefinition"],[3,"Function"],[4,"FunctionBody_"],[13,"Defined"],[3,"VarInfo"],[3,"SpecInfo"],[3,"FunctionInfo"],[4,"CompiledUnit"],[13,"Module"],[13,"Script"],[3,"Program"],[3,"Script"],[3,"ModuleDefinition"],[3,"StructDefinition"],[3,"FunctionSignature"],[3,"Function"],[3,"SpecBlock_"],[4,"StructFields"],[4,"FunctionBody_"],[4,"SpecBlockMember_"],[13,"Condition"],[13,"Function"],[13,"Variable"],[13,"Include"],[13,"Apply"],[13,"Pragma"],[4,"ModuleAccess_"],[4,"Type_"],[4,"LValue_"],[4,"ExpDotted_"],[4,"Exp_"],[4,"SequenceItem_"],[3,"SpecId"],[3,"Program"],[3,"Script"],[3,"ModuleDefinition"],[3,"StructDefinition"],[3,"FunctionSignature"],[3,"Function"],[3,"Label"],[3,"ModuleCall"],[3,"Exp"],[4,"StructFields"],[4,"FunctionBody_"],[13,"Defined"],[4,"TypeName_"],[4,"BaseType_"],[4,"SingleType_"],[4,"Type_"],[4,"Statement_"],[13,"IfElse"],[13,"While"],[13,"Loop"],[4,"Command_"],[13,"IgnoreAndPop"],[13,"JumpIf"],[4,"LValue_"],[4,"BuiltinFunction_"],[4,"UnannotatedExp_"],[13,"Move"],[13,"Copy"],[4,"ExpListItem"],[3,"Program"],[3,"Script"],[3,"ModuleDefinition"],[3,"StructDefinition"],[3,"FunctionSignature"],[3,"Function"],[3,"TParamID"],[3,"TParam"],[4,"StructFields"],[4,"FunctionBody_"],[4,"BuiltinTypeName_"],[4,"TypeName_"],[4,"Type_"],[4,"LValue_"],[4,"ExpDotted_"],[4,"BuiltinFunction_"],[4,"Exp_"],[4,"SequenceItem_"],[3,"TVar"],[3,"Program"],[3,"Script"],[3,"ModuleName"],[3,"ModuleIdent_"],[3,"ModuleIdent"],[3,"ModuleDefinition"],[3,"Field"],[3,"StructName"],[3,"StructDefinition"],[3,"FunctionName"],[3,"FunctionSignature"],[3,"Function"],[3,"SpecBlock_"],[3,"PragmaProperty_"],[3,"SpecApplyPattern_"],[3,"Var"],[4,"Definition"],[4,"StructFields"],[4,"FunctionVisibility"],[4,"FunctionBody_"],[4,"SpecBlockTarget_"],[4,"SpecApplyFragment_"],[4,"SpecBlockMember_"],[13,"Condition"],[13,"Function"],[13,"Variable"],[13,"Include"],[13,"Apply"],[13,"Pragma"],[4,"SpecConditionKind"],[4,"InvariantKind"],[4,"ModuleAccess_"],[4,"Kind_"],[4,"Type_"],[4,"Bind_"],[4,"Value_"],[4,"UnaryOp_"],[4,"BinOp_"],[4,"Exp_"],[4,"SequenceItem_"],[8,"AstDebug"],[3,"AstWriter"],[3,"RememberingUniqueMap"],[3,"UniqueMap"],[8,"TName"],[8,"Identifier"],[3,"Address"],[3,"Counter"],[3,"Program"],[3,"Script"],[3,"ModuleDefinition"],[3,"Function"],[3,"ModuleCall"],[3,"Exp"],[4,"FunctionBody_"],[4,"LValue_"],[4,"BuiltinFunction_"],[4,"UnannotatedExp_"],[13,"Move"],[13,"Copy"],[13,"Loop"],[4,"SequenceItem_"],[4,"ExpListItem"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"StringError"],[6,"BasicBlocks"],[6,"Name"]]};
searchIndex["move_prover"] = {"doc":"","i":[[5,"run_move_prover","move_prover","",null,[[["w"],["options"]],["result"]]],[5,"extract_matches","","Extracts matches out of some text file. `pat` must be a…",null,[[["str"],["path"]],[["vec",["string"]],["result",["vec"]]]]],[0,"cli","","Functionality related to the command line interface of the…",null,null],[3,"Options","move_prover::cli","Represents options provided to the tool.",null,null],[12,"prelude_path","","Path to the boogie prelude. The special string…",0,null],[12,"output_path","","The path to the boogie output which represents the…",0,null],[12,"account_address","","An account address to use if none is specified in the…",0,null],[12,"verbosity_level","","Verbosity level for logging.",0,null],[12,"move_sources","","The paths to the move sources.",0,null],[12,"move_deps","","The paths to any dependencies for the move sources. Those…",0,null],[12,"search_path","","Paths to directories where dependencies are looked up…",0,null],[12,"boogie_exe","","Path to the boogie executable.",0,null],[12,"z3_exe","","Path to the z3 executable.",0,null],[12,"use_cvc4","","Whether to use cvc4.",0,null],[12,"cvc4_exe","","Path to the cvc4 executable.",0,null],[12,"boogie_flags","","List of flags to pass on to boogie.",0,null],[12,"generate_only","","Whether to only generate boogie.",0,null],[12,"native_stubs","","Whether to generate stubs for native functions.",0,null],[12,"minimize_execution_trace","","Whether to minimize execution traces in errors.",0,null],[12,"omit_model_debug","","Whether to omit debug information in generated model.",0,null],[12,"use_array_theory","","Whether to use native array theory.",0,null],[12,"stable_test_output","","Whether output for e.g. diagnosis shall be stable/redacted…",0,null],[12,"verify_scope","","Scope of what functions to verify",0,null],[12,"template_context","","Template context for prelude. This is map from variable…",0,null],[12,"bench_repeat","","How many times to call boogie on the verification problem.…",0,null],[12,"generate_smt","","Whether to produce an SMT file for each verification…",0,null],[3,"PreludeTemplateContext","","Options used for prelude template. See `prelude.bpl` for…",null,null],[12,"array_theory","","",1,null],[12,"native_equality","","",1,null],[12,"type_requires","","",1,null],[12,"stratification_depth","","",1,null],[12,"aggressive_func_inline","","",1,null],[12,"func_inline","","",1,null],[12,"serialize_bound","","",1,null],[4,"VerificationScope","","Default for what functions to verify.",null,null],[13,"Public","","Verify only public functions.",2,null],[13,"All","","Verify all functions.",2,null],[13,"None","","Verify no functions",2,null],[17,"INLINE_PRELUDE","","Represents the virtual path to the boogie prelude which is…",null,null],[11,"initialize_from_args","","",0,[[["self"]],["result"]]],[11,"setup_logging","","Sets up logging based on provided options. This should be…",0,[[["self"]]]],[11,"setup_logging_for_test","","",0,[[["self"]]]],[11,"get_boogie_command","","Returns command line to call boogie.",0,[[["str"],["self"]],[["vec",["string"]],["string"]]]],[11,"get_boogie_log_file","","Returns name of file where to log boogie output.",0,[[["str"],["self"]],["string"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"clear","","",0,[[["self"]]]],[11,"initialize","","",0,[[]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"test_only_hash","","",1,[[["self"]],["hashvalue"]]],[11,"vzip","","",1,[[],["v"]]],[11,"clear","","",1,[[["self"]]]],[11,"initialize","","",1,[[]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"default","","",1,[[],["self"]]],[11,"default","","",0,[[],["self"]]],[11,"eq","","",2,[[["verificationscope"],["self"]],["bool"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"serialize","","",1,[[["self"],["__s"]],["result"]]]],"p":[[3,"Options"],[3,"PreludeTemplateContext"],[4,"VerificationScope"]]};
searchIndex["move_vm_natives"] = {"doc":"","i":[[0,"account","move_vm_natives","",null,null],[5,"native_save_account","move_vm_natives::account","",null,[[["vecdeque",["value"]],["type"],["value"],["vec",["type"]]],[["vmresult",["nativeresult"]],["nativeresult"]]]],[0,"event","move_vm_natives","",null,null],[5,"native_emit_event","move_vm_natives::event","",null,[[["vecdeque",["value"]],["type"],["value"],["vec",["type"]]],[["vmresult",["nativeresult"]],["nativeresult"]]]],[0,"hash","move_vm_natives","",null,null],[5,"native_sha2_256","move_vm_natives::hash","",null,[[["type"],["value"],["vec",["type"]],["vecdeque",["value"]]],[["vmresult",["nativeresult"]],["nativeresult"]]]],[5,"native_sha3_256","","",null,[[["type"],["value"],["vec",["type"]],["vecdeque",["value"]]],[["vmresult",["nativeresult"]],["nativeresult"]]]],[0,"lcs","move_vm_natives","",null,null],[5,"native_to_bytes","move_vm_natives::lcs","Rust implementation of Move's `native public fun…",null,[[["vecdeque",["value"]],["type"],["value"],["vec",["type"]]],[["vmresult",["nativeresult"]],["nativeresult"]]]],[0,"signature","move_vm_natives","",null,null],[5,"native_ed25519_signature_verification","move_vm_natives::signature","",null,[[["type"],["value"],["vec",["type"]],["vecdeque",["value"]]],[["vmresult",["nativeresult"]],["nativeresult"]]]],[5,"native_ed25519_threshold_signature_verification","","Batch verify a collection of signatures using a bitmap for…",null,[[["type"],["value"],["vec",["type"]],["vecdeque",["value"]]],[["vmresult",["nativeresult"]],["nativeresult"]]]]],"p":[]};
searchIndex["move_vm_runtime"] = {"doc":"The core Move VM logic.","i":[[3,"MoveVM","move_vm_runtime","",null,null],[11,"new","","",0,[[],["self"]]],[11,"execute_function","","",0,[[["costtable"],["vec",["value"]],["vec",["typetag"]],["typetag"],["s"],["value"],["identstr"],["moduleid"],["self"],["transactionmetadata"]],["vmresult"]]],[11,"execute_script","","",0,[[["self"],["costtable"],["u8"],["vec",["typetag"]],["typetag"],["s"],["vec",["value"]],["value"],["vec",["u8"]],["transactionmetadata"]],["vmresult"]]],[11,"publish_module","","",0,[[["vec",["u8"]],["transactionmetadata"],["s"],["self"],["u8"]],["vmresult"]]],[11,"cache_module","","",0,[[["s"],["self"],["verifiedmodule"]],["vmresult"]]],[14,"gas","","",null,null],[14,"trace","","",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"clear","","",0,[[["self"]]]],[11,"initialize","","",0,[[]]],[11,"default","","",0,[[],["self"]]]],"p":[[3,"MoveVM"]]};
searchIndex["move_vm_state"] = {"doc":"State management for the Move VM.","i":[[0,"data_cache","move_vm_state","Scratchpad for on chain values during the execution.",null,null],[3,"BlockDataCache","move_vm_state::data_cache","The wrapper around the StateVersionView for the block. It…",null,null],[3,"RemoteStorage","","Adapter to convert a `StateView` into a `RemoteCache`.",null,null],[3,"TransactionDataCache","","Global cache for a transaction. Materializes Values from…",null,null],[8,"RemoteCache","","Trait for the StateVersionView or a mock implementation of…",null,null],[10,"get","","",0,[[["accesspath"],["self"]],[["option",["vec"]],["vmresult",["option"]]]]],[11,"new","","",1,[[["stateview"]],["self"]]],[11,"get","","",1,[[["accesspath"],["self"]],[["option",["vec"]],["vmresult",["option"]]]]],[11,"push_write_set","","",1,[[["self"],["writeset"]]]],[11,"is_genesis","","",1,[[["self"]],["bool"]]],[11,"new","","",2,[[["stateview"]],["self"]]],[11,"new","","",3,[[["remotecache"]],["self"]]],[11,"exists_module","","",3,[[["self"],["moduleid"]],["bool"]]],[11,"load_module","","",3,[[["self"],["moduleid"]],[["vec",["u8"]],["vmresult",["vec"]]]]],[11,"publish_module","","",3,[[["moduleid"],["self"],["vec",["u8"]],["u8"]],["vmresult"]]],[11,"publish_resource","","",3,[[["self"],["accesspath"]],["vmresult"]]],[11,"make_write_set","","Make a write set from the updated (dirty, deleted) global…",3,[[["self"]],[["writeset"],["vmresult",["writeset"]]]]],[11,"clear","","Flush out the cache and restart from a clean state",3,[[["self"]]]],[0,"execution_context","move_vm_state","",null,null],[3,"TransactionExecutionContext","move_vm_state::execution_context","A TransactionExecutionContext holds the mutable data that…",null,null],[3,"SystemExecutionContext","","",null,null],[8,"ExecutionContext","","An `ExecutionContext` represents mutable state that is…",null,null],[10,"events","","Returns the list of events emmitted during execution.",4,[[["self"]]]],[10,"make_write_set","","Generates a `WriteSet` as a result of an execution.",4,[[["self"]],[["writeset"],["vmresult",["writeset"]]]]],[10,"clear","","Clears all the in-memory writes local to this execution.",4,[[["self"]]]],[11,"new","","",5,[[["gasunits",["gascarrier"]],["gascarrier"],["remotecache"]],["self"]]],[11,"new","","",6,[[["gasunits",["gascarrier"]],["gascarrier"],["remotecache"]],["self"]]],[11,"from","move_vm_state::data_cache","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","move_vm_state::execution_context","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"move_resource_to","","",5,[[["accesspath"],["fatstructtype"],["self"],["struct"]],[["result",["vmstatus"]],["vmstatus"]]]],[11,"move_resource_from","","",5,[[["self"],["accesspath"],["fatstructtype"]],[["result",["value","vmstatus"]],["value"],["vmstatus"]]]],[11,"resource_exists","","",5,[[["self"],["accesspath"],["fatstructtype"]],[["result",["vmstatus"]],["vmstatus"]]]],[11,"borrow_global","","",5,[[["self"],["accesspath"],["fatstructtype"]],[["globalvalue"],["result",["globalvalue","vmstatus"]],["vmstatus"]]]],[11,"push_event","","",5,[[["self"],["contractevent"]]]],[11,"remaining_gas","","",5,[[["self"]],[["u64"],["gasunits",["u64"]]]]],[11,"deduct_gas","","",5,[[["self"],["u64"],["gasunits",["u64"]]],[["result",["vmstatus"]],["vmstatus"]]]],[11,"exists_module","","",5,[[["moduleid"],["self"]],["bool"]]],[11,"load_module","","",5,[[["moduleid"],["self"]],[["vec",["u8"]],["vmstatus"],["result",["vec","vmstatus"]]]]],[11,"publish_module","","",5,[[["vec",["u8"]],["moduleid"],["self"],["u8"]],[["result",["vmstatus"]],["vmstatus"]]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"move_resource_to","","",6,[[["accesspath"],["fatstructtype"],["self"],["struct"]],[["result",["vmstatus"]],["vmstatus"]]]],[11,"move_resource_from","","",6,[[["self"],["accesspath"],["fatstructtype"]],[["result",["value","vmstatus"]],["value"],["vmstatus"]]]],[11,"resource_exists","","",6,[[["self"],["accesspath"],["fatstructtype"]],[["result",["vmstatus"]],["vmstatus"]]]],[11,"borrow_global","","",6,[[["self"],["accesspath"],["fatstructtype"]],[["globalvalue"],["result",["globalvalue","vmstatus"]],["vmstatus"]]]],[11,"push_event","","",6,[[["self"],["contractevent"]]]],[11,"remaining_gas","","",6,[[["self"]],[["u64"],["gasunits",["u64"]]]]],[11,"deduct_gas","","",6,[[["self"],["u64"],["gasunits",["u64"]]],[["result",["vmstatus"]],["vmstatus"]]]],[11,"exists_module","","",6,[[["moduleid"],["self"]],["bool"]]],[11,"load_module","","",6,[[["moduleid"],["self"]],[["vec",["u8"]],["vmstatus"],["result",["vec","vmstatus"]]]]],[11,"publish_module","","",6,[[["vec",["u8"]],["moduleid"],["self"],["u8"]],[["result",["vmstatus"]],["vmstatus"]]]],[11,"get","move_vm_state::data_cache","",1,[[["accesspath"],["self"]],[["option",["vec"]],["vmresult",["option"]]]]],[11,"get","","",2,[[["accesspath"],["self"]],[["option",["vec"]],["vmresult",["option"]]]]],[11,"events","move_vm_state::execution_context","",5,[[["self"]]]],[11,"make_write_set","","",5,[[["self"]],[["writeset"],["vmresult",["writeset"]]]]],[11,"clear","","",5,[[["self"]]]],[11,"events","","",6,[[["self"]]]],[11,"make_write_set","","",6,[[["self"]],[["writeset"],["vmresult",["writeset"]]]]],[11,"clear","","",6,[[["self"]]]],[11,"from","","",6,[[["transactionexecutioncontext"]],["self"]]],[11,"deduct_gas","","",5,[[["self"],["gasunits",["gascarrier"]],["gascarrier"]],["vmresult"]]],[11,"remaining_gas","","",5,[[["self"]],[["gasunits",["gascarrier"]],["gascarrier"]]]],[11,"borrow_resource","","",5,[[["self"],["accesspath"],["fatstructtype"]],[["option",["globalvalue"]],["vmresult",["option"]]]]],[11,"move_resource_from","","",5,[[["self"],["accesspath"],["fatstructtype"]],[["vmresult",["option"]],["option",["globalvalue"]]]]],[11,"load_module","","",5,[[["self"],["moduleid"]],[["vec",["u8"]],["vmresult",["vec"]]]]],[11,"publish_module","","",5,[[["moduleid"],["self"],["vec",["u8"]],["u8"]],["vmresult"]]],[11,"publish_resource","","",5,[[["self"],["accesspath"]],["vmresult"]]],[11,"exists_module","","",5,[[["self"],["moduleid"]],["bool"]]],[11,"emit_event","","",5,[[["self"],["contractevent"]]]],[11,"deduct_gas","","",6,[[["self"],["gasunits",["gascarrier"]],["gascarrier"]],["vmresult"]]],[11,"publish_resource","","",6,[[["self"],["accesspath"]],["vmresult"]]],[11,"remaining_gas","","",6,[[["self"]],[["gasunits",["gascarrier"]],["gascarrier"]]]],[11,"borrow_resource","","",6,[[["self"],["accesspath"],["fatstructtype"]],[["option",["globalvalue"]],["vmresult",["option"]]]]],[11,"move_resource_from","","",6,[[["self"],["accesspath"],["fatstructtype"]],[["vmresult",["option"]],["option",["globalvalue"]]]]],[11,"load_module","","",6,[[["self"],["moduleid"]],[["vec",["u8"]],["vmresult",["vec"]]]]],[11,"exists_module","","",6,[[["self"],["moduleid"]],["bool"]]],[11,"publish_module","","",6,[[["moduleid"],["self"],["vec",["u8"]],["u8"]],["vmresult"]]],[11,"emit_event","","",6,[[["self"],["contractevent"]]]]],"p":[[8,"RemoteCache"],[3,"BlockDataCache"],[3,"RemoteStorage"],[3,"TransactionDataCache"],[8,"ExecutionContext"],[3,"TransactionExecutionContext"],[3,"SystemExecutionContext"]]};
searchIndex["move_vm_types"] = {"doc":"","i":[[0,"chain_state","move_vm_types","",null,null],[8,"ChainState","move_vm_types::chain_state","Trait that describes what Move bytecode runtime expects…",null,null],[10,"deduct_gas","","",0,[[["gascarrier"],["self"],["gasunits",["gascarrier"]]],["vmresult"]]],[10,"remaining_gas","","",0,[[["self"]],[["gascarrier"],["gasunits",["gascarrier"]]]]],[10,"load_module","","Get the serialized format of a `CompiledModule` from chain…",0,[[["moduleid"],["self"]],[["vmresult",["vec"]],["vec",["u8"]]]]],[10,"borrow_resource","","Get a reference to a resource stored on chain.",0,[[["self"],["accesspath"],["fatstructtype"]],[["option",["globalvalue"]],["vmresult",["option"]]]]],[10,"move_resource_from","","Transfer ownership of a resource stored on chain to the VM.",0,[[["self"],["accesspath"],["fatstructtype"]],[["vmresult",["option"]],["option",["globalvalue"]]]]],[10,"publish_module","","Publish a module to be stored on chain.",0,[[["u8"],["self"],["vec",["u8"]],["moduleid"]],["vmresult"]]],[10,"publish_resource","","Publish a resource to be stored on chain.",0,[[["self"],["accesspath"]],["vmresult"]]],[10,"exists_module","","Check if this module exists on chain.",0,[[["moduleid"],["self"]],["bool"]]],[10,"emit_event","","Emit an event to the EventStore",0,[[["contractevent"],["self"]]]],[0,"gas_schedule","move_vm_types","This module lays out the basic abstract costing schedule…",null,null],[4,"NativeCostIndex","move_vm_types::gas_schedule","",null,null],[13,"SHA2_256","","",1,null],[13,"SHA3_256","","",1,null],[13,"ED25519_VERIFY","","",1,null],[13,"ED25519_THRESHOLD_VERIFY","","",1,null],[13,"LCS_TO_BYTES","","",1,null],[13,"LENGTH","","",1,null],[13,"EMPTY","","",1,null],[13,"BORROW","","",1,null],[13,"BORROW_MUT","","",1,null],[13,"PUSH_BACK","","",1,null],[13,"POP_BACK","","",1,null],[13,"DESTROY_EMPTY","","",1,null],[13,"SWAP","","",1,null],[13,"SAVE_ACCOUNT","","",1,null],[5,"new_from_instructions","","",null,[[["vec",["gascost"]],["vec"],["gascost"]],["costtable"]]],[5,"zero_cost_schedule","","",null,[[],["costtable"]]],[5,"calculate_intrinsic_gas","","Calculate the intrinsic gas for the transaction based upon…",null,[[["abstractmemorysize",["gascarrier"]],["gascarrier"],["gasconstants"]],[["gascarrier"],["gasunits",["gascarrier"]]]]],[0,"interpreter_context","move_vm_types","",null,null],[8,"InterpreterContext","move_vm_types::interpreter_context","The `InterpreterContext` context trait specifies the…",null,null],[10,"move_resource_to","","",2,[[["accesspath"],["struct"],["self"],["fatstructtype"]],["vmresult"]]],[10,"move_resource_from","","",2,[[["self"],["accesspath"],["fatstructtype"]],[["vmresult",["value"]],["value"]]]],[10,"resource_exists","","",2,[[["self"],["accesspath"],["fatstructtype"]],["vmresult"]]],[10,"borrow_global","","",2,[[["self"],["accesspath"],["fatstructtype"]],[["globalvalue"],["vmresult",["globalvalue"]]]]],[10,"push_event","","",2,[[["contractevent"],["self"]]]],[10,"deduct_gas","","",2,[[["gascarrier"],["self"],["gasunits",["gascarrier"]]],["vmresult"]]],[10,"remaining_gas","","",2,[[["self"]],[["gascarrier"],["gasunits",["gascarrier"]]]]],[10,"exists_module","","",2,[[["moduleid"],["self"]],["bool"]]],[10,"load_module","","",2,[[["moduleid"],["self"]],[["vmresult",["vec"]],["vec",["u8"]]]]],[10,"publish_module","","",2,[[["u8"],["self"],["vec",["u8"]],["moduleid"]],["vmresult"]]],[0,"loaded_data","move_vm_types","Loaded definition of code data used in runtime.",null,null],[0,"runtime_types","move_vm_types::loaded_data","",null,null],[3,"StructType","move_vm_types::loaded_data::runtime_types","",null,null],[12,"fields","","",3,null],[12,"is_resource","","",3,null],[12,"type_parameters","","",3,null],[12,"name","","",3,null],[12,"module","","",3,null],[12,"struct_def","","",3,null],[4,"Type","","",null,null],[13,"Bool","","",4,null],[13,"U8","","",4,null],[13,"U64","","",4,null],[13,"U128","","",4,null],[13,"Address","","",4,null],[13,"Vector","","",4,null],[13,"Struct","","",4,null],[13,"StructInstantiation","","",4,null],[13,"Reference","","",4,null],[13,"MutableReference","","",4,null],[13,"TyParam","","",4,null],[8,"TypeConverter","","",null,null],[10,"type_to_fat_type","","",5,[[["type"],["self"]],[["vmresult",["fattype"]],["fattype"]]]],[11,"subst","","",4,[[["self"]],[["type"],["vmresult",["type"]]]]],[0,"types","move_vm_types::loaded_data","Loaded representation for runtime types.",null,null],[3,"FatStructType","move_vm_types::loaded_data::types","VM representation of a struct type in Move.",null,null],[12,"address","","",6,null],[12,"module","","",6,null],[12,"name","","",6,null],[12,"is_resource","","",6,null],[12,"ty_args","","",6,null],[12,"layout","","",6,null],[4,"FatType","","VM representation of a Move type that gives access to both…",null,null],[13,"Bool","","",7,null],[13,"U8","","",7,null],[13,"U64","","",7,null],[13,"U128","","",7,null],[13,"Address","","",7,null],[13,"Vector","","",7,null],[13,"Struct","","",7,null],[13,"Reference","","",7,null],[13,"MutableReference","","",7,null],[13,"TyParam","","",7,null],[0,"prop","","",null,null],[11,"single_value_strategy","","Generate a random primitive Type, no Struct or Vector.",7,[[]]],[11,"nested_strategy","","Generate a primitive Value, a Struct or a Vector.",7,[[["u32"]]]],[11,"resource_path","","",6,[[["self"]],[["vmresult",["vec"]],["vec",["u8"]]]]],[11,"subst","","",6,[[["self"]],[["vmresult",["fatstructtype"]],["fatstructtype"]]]],[11,"struct_tag","","",6,[[["self"]],[["structtag"],["vmresult",["structtag"]]]]],[11,"debug_print","","",6,[[["self"],["b"]],["vmresult"]]],[11,"subst","","",7,[[["self"]],[["vmresult",["fattype"]],["fattype"]]]],[11,"type_tag","","",7,[[["self"]],[["typetag"],["vmresult",["typetag"]]]]],[11,"is_resource","","",7,[[["self"]],[["bool"],["vmresult",["bool"]]]]],[11,"debug_print","","",7,[[["self"],["b"]],["vmresult"]]],[0,"natives","move_vm_types","",null,null],[0,"function","move_vm_types::natives","Native Function Support",null,null],[3,"NativeResult","move_vm_types::natives::function","Result of a native function execution requires charges for…",null,null],[12,"cost","","The cost for running that function, whether successfully…",8,null],[12,"result","","Result of execution. This is either the return values or…",8,null],[5,"native_gas","","Return the native gas entry in `CostTable` for the given…",null,[[["nativecostindex"],["usize"],["costtable"]],[["gascarrier"],["gasunits",["gascarrier"]]]]],[8,"NativeContext","","`NativeContext` - Native function context.",null,null],[10,"print_stack_trace","","Prints stack trace.",9,[[["self"],["b"]],["vmresult"]]],[10,"cost_table","","Gets cost table ref.",9,[[["self"]],["costtable"]]],[10,"save_under_address","","",9,[[["moduleid"],["identstr"],["struct"],["self"],["accountaddress"]],["vmresult"]]],[10,"save_event","","Saves contract event.",9,[[["contractevent"],["self"]],["vmresult"]]],[10,"convert_to_fat_types","","Converts types to fet types.",9,[[["type"],["self"],["vec",["type"]]],[["vmresult",["vec"]],["vec",["fattype"]]]]],[11,"ok","","Return values of a successful execution.",8,[[["gascarrier"],["value"],["vec",["value"]],["gasunits",["gascarrier"]]],["self"]]],[11,"err","","`VMStatus` of a failed execution. The failure is a runtime…",8,[[["gascarrier"],["vmstatus"],["gasunits",["gascarrier"]]],["self"]]],[0,"transaction_metadata","move_vm_types","",null,null],[3,"TransactionMetadata","move_vm_types::transaction_metadata","",null,null],[12,"sender","","",10,null],[12,"authentication_key_preimage","","",10,null],[12,"sequence_number","","",10,null],[12,"max_gas_amount","","",10,null],[12,"gas_unit_price","","",10,null],[12,"transaction_size","","",10,null],[12,"expiration_time","","",10,null],[11,"new","","",10,[[["signedtransaction"]],["self"]]],[11,"max_gas_amount","","",10,[[["self"]],[["gascarrier"],["gasunits",["gascarrier"]]]]],[11,"gas_unit_price","","",10,[[["self"]],[["gascarrier"],["gasprice",["gascarrier"]]]]],[11,"sender","","",10,[[["self"]],["accountaddress"]]],[11,"authentication_key_preimage","","",10,[[["self"]]]],[11,"sequence_number","","",10,[[["self"]],["u64"]]],[11,"transaction_size","","",10,[[["self"]],[["abstractmemorysize",["gascarrier"]],["gascarrier"]]]],[11,"expiration_time","","",10,[[["self"]],["u64"]]],[0,"values","move_vm_types","",null,null],[0,"values_impl","move_vm_types::values","",null,null],[3,"StructRef","move_vm_types::values::values_impl","A reference to a Move struct that allows you to take a…",null,null],[3,"Reference","","A generic Move reference that offers two functinalities:…",null,null],[3,"Value","","A Move value -- a wrapper around `ValueImpl` which can be…",null,null],[3,"Locals","","The locals for a function frame. It allows values to be…",null,null],[3,"Struct","","A Move struct.",null,null],[3,"GlobalValue","","A special value that lives in global storage.",null,null],[4,"IntegerValue","","An integer value in Move.",null,null],[13,"U8","","",11,null],[13,"U64","","",11,null],[13,"U128","","",11,null],[0,"vector","","",null,null],[5,"native_empty","move_vm_types::values::values_impl::vector","",null,[[["type"],["vecdeque",["value"]],["value"],["vec",["type"]]],[["nativeresult"],["vmresult",["nativeresult"]]]]],[5,"native_length","","",null,[[["type"],["vecdeque",["value"]],["value"],["vec",["type"]]],[["nativeresult"],["vmresult",["nativeresult"]]]]],[5,"native_push_back","","",null,[[["type"],["vecdeque",["value"]],["value"],["vec",["type"]]],[["nativeresult"],["vmresult",["nativeresult"]]]]],[5,"native_borrow","","",null,[[["type"],["vecdeque",["value"]],["value"],["vec",["type"]]],[["nativeresult"],["vmresult",["nativeresult"]]]]],[5,"native_pop","","",null,[[["type"],["vecdeque",["value"]],["value"],["vec",["type"]]],[["nativeresult"],["vmresult",["nativeresult"]]]]],[5,"native_destroy_empty","","",null,[[["type"],["vecdeque",["value"]],["value"],["vec",["type"]]],[["nativeresult"],["vmresult",["nativeresult"]]]]],[5,"native_swap","","",null,[[["type"],["vecdeque",["value"]],["value"],["vec",["type"]]],[["nativeresult"],["vmresult",["nativeresult"]]]]],[17,"INDEX_OUT_OF_BOUNDS","","",null,null],[17,"POP_EMPTY_VEC","","",null,null],[17,"DESTROY_NON_EMPTY_VEC","","",null,null],[0,"debug","move_vm_types::values::values_impl","",null,null],[5,"print_locals","move_vm_types::values::values_impl::debug","",null,[[["locals"],["b"]],["vmresult"]]],[5,"native_print","","",null,[[["type"],["vecdeque",["value"]],["value"],["vec",["type"]]],[["nativeresult"],["vmresult",["nativeresult"]]]]],[5,"native_print_stack_trace","","",null,[[["type"],["vecdeque",["value"]],["value"],["vec",["type"]]],[["nativeresult"],["vmresult",["nativeresult"]]]]],[0,"prop","move_vm_types::values::values_impl","",null,null],[5,"value_strategy_with_layout","move_vm_types::values::values_impl::prop","",null,[[["fattype"]]]],[5,"layout_and_value_strategy","","",null,[[]]],[8,"VMValueCast","move_vm_types::values::values_impl","",null,null],[10,"cast","","",12,[[],["vmresult"]]],[11,"is_valid_script_arg","","",13,[[["signaturetoken"],["self"]],["bool"]]],[11,"copy_value","","",13,[[["self"]],["self"]]],[11,"equals","","",13,[[["self"]],[["bool"],["vmresult",["bool"]]]]],[11,"read_ref","","",14,[[],[["vmresult",["value"]],["value"]]]],[11,"read_ref","","",15,[[],[["vmresult",["value"]],["value"]]]],[11,"write_ref","","",15,[[["value"]],["vmresult"]]],[11,"borrow_field","","",14,[[["self"],["usize"]],[["vmresult",["value"]],["value"]]]],[11,"borrow_loc","","",16,[[["self"],["usize"]],[["vmresult",["value"]],["value"]]]],[11,"new","","",16,[[["usize"]],["self"]]],[11,"copy_loc","","",16,[[["self"],["usize"]],[["vmresult",["value"]],["value"]]]],[11,"move_loc","","",16,[[["self"],["usize"]],[["vmresult",["value"]],["value"]]]],[11,"store_loc","","",16,[[["self"],["usize"],["value"]],["vmresult"]]],[11,"u8","","",13,[[["u8"]],["self"]]],[11,"u64","","",13,[[["u64"]],["self"]]],[11,"u128","","",13,[[["u128"]],["self"]]],[11,"bool","","",13,[[["bool"]],["self"]]],[11,"address","","",13,[[["accountaddress"]],["self"]]],[11,"struct_","","",13,[[["struct"]],["self"]]],[11,"vector_u8","","",13,[[],["self"]]],[11,"vector_u64","","",13,[[],["self"]]],[11,"vector_u128","","",13,[[],["self"]]],[11,"vector_bool","","",13,[[],["self"]]],[11,"vector_address","","",13,[[],["self"]]],[11,"value_as","","",13,[[],["vmresult"]]],[11,"value_as","","",11,[[],["vmresult"]]],[11,"add_checked","","",11,[[],["vmresult"]]],[11,"sub_checked","","",11,[[],["vmresult"]]],[11,"mul_checked","","",11,[[],["vmresult"]]],[11,"div_checked","","",11,[[],["vmresult"]]],[11,"rem_checked","","",11,[[],["vmresult"]]],[11,"bit_or","","",11,[[],["vmresult"]]],[11,"bit_and","","",11,[[],["vmresult"]]],[11,"bit_xor","","",11,[[],["vmresult"]]],[11,"shl_checked","","",11,[[["u8"]],["vmresult"]]],[11,"shr_checked","","",11,[[["u8"]],["vmresult"]]],[11,"lt","","",11,[[],[["bool"],["vmresult",["bool"]]]]],[11,"le","","",11,[[],[["bool"],["vmresult",["bool"]]]]],[11,"gt","","",11,[[],[["bool"],["vmresult",["bool"]]]]],[11,"ge","","",11,[[],[["bool"],["vmresult",["bool"]]]]],[11,"into_value","","",11,[[],["value"]]],[11,"cast_u8","","",11,[[],[["vmresult",["u8"]],["u8"]]]],[11,"cast_u64","","",11,[[],[["vmresult",["u64"]],["u64"]]]],[11,"cast_u128","","",11,[[],[["vmresult",["u128"]],["u128"]]]],[11,"size","","",17,[[["self"]],[["abstractmemorysize",["gascarrier"]],["gascarrier"]]]],[11,"size","","",13,[[["self"]],[["abstractmemorysize",["gascarrier"]],["gascarrier"]]]],[11,"size","","",15,[[["self"]],[["abstractmemorysize",["gascarrier"]],["gascarrier"]]]],[11,"size","","",18,[[["self"]],[["abstractmemorysize",["gascarrier"]],["gascarrier"]]]],[11,"pack","","",17,[[["intoiterator"]],["self"]]],[11,"unpack","","",17,[[],["vmresult"]]],[11,"new","","",18,[[["value"]],["vmresult"]]],[11,"borrow_global","","",18,[[["self"]],[["vmresult",["value"]],["value"]]]],[11,"mark_dirty","","",18,[[["self"]],["vmresult"]]],[11,"is_clean","","",18,[[["self"]],[["bool"],["vmresult",["bool"]]]]],[11,"is_dirty","","",18,[[["self"]],[["bool"],["vmresult",["bool"]]]]],[11,"into_owned_struct","","",18,[[],[["vmresult",["struct"]],["struct"]]]],[11,"simple_deserialize","","",13,[[["fattype"]],[["vmresult",["value"]],["value"]]]],[11,"simple_serialize","","",13,[[["self"],["fattype"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"simple_deserialize","","",17,[[["fatstructtype"]],[["vmresult",["struct"]],["struct"]]]],[11,"simple_serialize","","",17,[[["self"],["fatstructtype"]],[["option",["vec"]],["vec",["u8"]]]]],[11,"deserialize_constant","","",13,[[["constant"]],[["option",["value"]],["value"]]]],[11,"serialize_constant","","",13,[[["value"],["signaturetoken"]],[["option",["constant"]],["constant"]]]],[14,"pop_arg","move_vm_types","Return the argument at the top of the stack.",null,null],[11,"from","move_vm_types::gas_schedule","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","move_vm_types::loaded_data::runtime_types","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","move_vm_types::loaded_data::types","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"test_only_hash","","",6,[[["self"]],["hashvalue"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"test_only_hash","","",7,[[["self"]],["hashvalue"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","move_vm_types::natives::function","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","move_vm_types::transaction_metadata","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"clear","","",10,[[["self"]]]],[11,"initialize","","",10,[[]]],[11,"from","move_vm_types::values::values_impl","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_string","","",16,[[["self"]],["string"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"vzip","","",18,[[],["v"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"cast","","",13,[[],[["vmresult",["u8"]],["u8"]]]],[11,"cast","","",13,[[],[["vmresult",["u64"]],["u64"]]]],[11,"cast","","",13,[[],[["vmresult",["u128"]],["u128"]]]],[11,"cast","","",13,[[],[["bool"],["vmresult",["bool"]]]]],[11,"cast","","",13,[[],[["accountaddress"],["vmresult",["accountaddress"]]]]],[11,"cast","","",13,[[],[["vmresult",["integervalue"]],["integervalue"]]]],[11,"cast","","",13,[[],[["vmresult",["reference"]],["reference"]]]],[11,"cast","","",13,[[],[["vmresult",["vec"]],["vec",["value"]]]]],[11,"cast","","",13,[[],[["vmresult",["struct"]],["struct"]]]],[11,"cast","","",13,[[],[["vmresult",["structref"]],["structref"]]]],[11,"cast","","",13,[[],[["vmresult",["vec"]],["vec",["u8"]]]]],[11,"cast","","",11,[[],[["vmresult",["u8"]],["u8"]]]],[11,"cast","","",11,[[],[["vmresult",["u64"]],["u64"]]]],[11,"cast","","",11,[[],[["vmresult",["u128"]],["u128"]]]],[11,"clone","move_vm_types::gas_schedule","",1,[[["self"]],["nativecostindex"]]],[11,"clone","move_vm_types::loaded_data::runtime_types","",3,[[["self"]],["structtype"]]],[11,"clone","","",4,[[["self"]],["type"]]],[11,"clone","move_vm_types::loaded_data::types","",6,[[["self"]],["fatstructtype"]]],[11,"clone","","",7,[[["self"]],["fattype"]]],[11,"default","move_vm_types::transaction_metadata","",10,[[],["self"]]],[11,"cmp","move_vm_types::gas_schedule","",1,[[["self"],["nativecostindex"]],["ordering"]]],[11,"cmp","move_vm_types::loaded_data::runtime_types","",3,[[["self"],["structtype"]],["ordering"]]],[11,"cmp","","",4,[[["type"],["self"]],["ordering"]]],[11,"eq","move_vm_types::gas_schedule","",1,[[["self"],["nativecostindex"]],["bool"]]],[11,"eq","move_vm_types::loaded_data::runtime_types","",3,[[["self"],["structtype"]],["bool"]]],[11,"ne","","",3,[[["self"],["structtype"]],["bool"]]],[11,"eq","","",4,[[["type"],["self"]],["bool"]]],[11,"ne","","",4,[[["type"],["self"]],["bool"]]],[11,"eq","move_vm_types::loaded_data::types","",6,[[["self"],["fatstructtype"]],["bool"]]],[11,"ne","","",6,[[["self"],["fatstructtype"]],["bool"]]],[11,"eq","","",7,[[["self"],["fattype"]],["bool"]]],[11,"ne","","",7,[[["self"],["fattype"]],["bool"]]],[11,"partial_cmp","move_vm_types::gas_schedule","",1,[[["self"],["nativecostindex"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","move_vm_types::loaded_data::runtime_types","",3,[[["self"],["structtype"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",3,[[["self"],["structtype"]],["bool"]]],[11,"le","","",3,[[["self"],["structtype"]],["bool"]]],[11,"gt","","",3,[[["self"],["structtype"]],["bool"]]],[11,"ge","","",3,[[["self"],["structtype"]],["bool"]]],[11,"partial_cmp","","",4,[[["type"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",4,[[["type"],["self"]],["bool"]]],[11,"le","","",4,[[["type"],["self"]],["bool"]]],[11,"gt","","",4,[[["type"],["self"]],["bool"]]],[11,"ge","","",4,[[["type"],["self"]],["bool"]]],[11,"fmt","move_vm_types::gas_schedule","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","move_vm_types::loaded_data::runtime_types","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","move_vm_types::loaded_data::types","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","move_vm_types::values::values_impl","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"hash","move_vm_types::gas_schedule","",1,[[["self"],["__h"]]]],[11,"hash","move_vm_types::loaded_data::runtime_types","",3,[[["self"],["__h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"deserialize","move_vm_types::loaded_data::types","",6,[[["__d"]],["result"]]],[11,"deserialize","","",7,[[["__d"]],["result"]]],[11,"serialize","","",6,[[["self"],["__s"]],["result"]]],[11,"serialize","","",7,[[["self"],["__s"]],["result"]]],[11,"arbitrary_with","","",7,[[]]]],"p":[[8,"ChainState"],[4,"NativeCostIndex"],[8,"InterpreterContext"],[3,"StructType"],[4,"Type"],[8,"TypeConverter"],[3,"FatStructType"],[4,"FatType"],[3,"NativeResult"],[8,"NativeContext"],[3,"TransactionMetadata"],[4,"IntegerValue"],[8,"VMValueCast"],[3,"Value"],[3,"StructRef"],[3,"Reference"],[3,"Locals"],[3,"Struct"],[3,"GlobalValue"]]};
searchIndex["netcore"] = {"doc":"Core types and traits for building Peer to Peer networks.","i":[[0,"compat","netcore","This module provides a compatibility shim between traits…",null,null],[3,"IoCompat","netcore::compat","`IoCompat` provides a compatibility shim between the…",null,null],[11,"new","","",0,[[["t"]],["self"]]],[0,"framing","netcore","",null,null],[5,"read_u16frame","netcore::framing","Read a u16 length prefixed frame from `Stream` into `buf`.",null,[[["bytesmut"],["tsocket"]]]],[5,"write_u16frame","","Write the contents of `buf` to `stream` prefixed with a…",null,[[["tsocket"]]]],[0,"negotiate","netcore","Protocol negotiation on AsyncRead/AsyncWrite streams",null,null],[5,"negotiate_inbound","netcore::negotiate","Perform protocol negotiation on an inbound `stream`…",null,[[["tsocket"],["tprotocols"]]]],[5,"negotiate_outbound_interactive","","Perform protocol negotiation on an outbound `stream` using…",null,[[["tsocket"],["tprotocols"]]]],[5,"negotiate_outbound_select","","Perform an optimistic protocol negotiation on `stream`…",null,[[["tsocket"],["tproto"]]]],[0,"transport","netcore","Low-level module for establishing connections with peers",null,null],[4,"ConnectionOrigin","netcore::transport","Origin of how a Connection was established.",null,null],[13,"Inbound","","`Inbound` indicates that we are the listener for this…",1,null],[13,"Outbound","","`Outbound` indicates that we are the dialer for this…",1,null],[0,"and_then","","",null,null],[3,"AndThen","netcore::transport::and_then","An [`AndThen`] is a transport which applies a closure (F)…",null,null],[3,"AndThenStream","","Listener stream returned by listen_on on an AndThen…",null,null],[3,"AndThenFuture","","Future generated by the [`AndThen`] transport.",null,null],[0,"boxed","netcore::transport","",null,null],[3,"BoxedTransport","netcore::transport::boxed","See the boxed method for more information.",null,null],[6,"Listener","","",null,null],[6,"Inbound","","",null,null],[6,"Outbound","","",null,null],[0,"memory","netcore::transport","",null,null],[3,"MemoryTransport","netcore::transport::memory","Transport to build in-memory connections",null,null],[3,"Listener","","",null,null],[0,"tcp","netcore::transport","TCP Transport",null,null],[3,"TcpTransport","netcore::transport::tcp","Transport to build TCP connections",null,null],[12,"recv_buffer_size","","Size of the recv buffer size to set for opened sockets, or…",2,null],[12,"send_buffer_size","","Size of the send buffer size to set for opened sockets, or…",2,null],[12,"ttl","","TTL to set for opened sockets, or `None` to keep default.",2,null],[12,"keepalive","","Keep alive duration to set for opened sockets, or `None`…",2,null],[12,"nodelay","","`TCP_NODELAY` to set for opened sockets, or `None` to keep…",2,null],[3,"TcpListenerStream","","",null,null],[3,"TcpOutbound","","",null,null],[3,"TcpSocket","","A wrapper around a tokio TcpStream",null,null],[0,"timeout","netcore::transport","",null,null],[3,"TimeoutTransport","netcore::transport::timeout","A [`TimeoutTransport`] is a transport which wraps another…",null,null],[3,"TimeoutStream","","Listener stream returned by listen_on on a TimeoutTransport.",null,null],[3,"TimeoutFuture","","Future which wraps an inner Future with a timeout.",null,null],[4,"TimeoutTransportError","","",null,null],[13,"Timeout","","",3,null],[13,"TimerError","","",3,null],[13,"TransportError","","",3,null],[8,"Transport","netcore::transport","A Transport is responsible for establishing connections…",null,null],[16,"Output","","The result of establishing a connection.",4,null],[16,"Error","","The Error type of errors which can happen while…",4,null],[16,"Listener","","A stream of `Inbound` connections and the address of the…",4,null],[16,"Inbound","","A pending `Output` for an inbound connection, obtained…",4,null],[16,"Outbound","","A pending `Output` for an outbound connection, obtained…",4,null],[10,"listen_on","","Listens on the given [`NetworkAddress`], returning a…",4,[[["networkaddress"],["self"]],["result"]]],[10,"dial","","Dials the given [`NetworkAddress`], returning a future for…",4,[[["networkaddress"],["self"]],["result"]]],[8,"TransportExt","","An extension trait for [`Transport`]s that provides a…",null,null],[11,"boxed","","Turns a [`Transport`] into an abstract boxed transport.",5,[[],["boxedtransport"]]],[11,"and_then","","Applies a function producing an asynchronous result to…",5,[[["f"]],["andthen"]]],[11,"with_timeout","","Wraps a [`Transport`] with a timeout to the Inbound and…",5,[[["duration"]],["timeouttransport"]]],[11,"from","netcore::compat","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","netcore::transport","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","netcore::transport::and_then","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"try_poll_next","","",7,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"try_poll","","",8,[[["pin"],["f"],["context"]],["poll"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","netcore::transport::boxed","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","netcore::transport::memory","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"clear","","",10,[[["self"]]]],[11,"initialize","","",10,[[]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"try_poll_next","","",11,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","netcore::transport::tcp","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"clear","","",2,[[["self"]]]],[11,"initialize","","",2,[[]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"try_poll_next","","",12,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"try_poll","","",13,[[["pin"],["f"],["context"]],["poll"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","netcore::transport::timeout","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"try_poll_next","","",16,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"try_poll","","",17,[[["pin"],["f"],["context"]],["poll"]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","","",3,[[],["t"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"listen_on","netcore::transport::and_then","",6,[[["networkaddress"],["self"]],["result"]]],[11,"dial","","",6,[[["networkaddress"],["self"]],["result"]]],[11,"listen_on","netcore::transport::boxed","",9,[[["networkaddress"],["self"]],["result"]]],[11,"dial","","",9,[[["networkaddress"],["self"]],["result"]]],[11,"listen_on","netcore::transport::memory","",10,[[["networkaddress"],["self"]],["result"]]],[11,"dial","","",10,[[["networkaddress"],["self"]],["result"]]],[11,"listen_on","netcore::transport::tcp","",2,[[["networkaddress"],["self"]],["result"]]],[11,"dial","","",2,[[["networkaddress"],["self"]],["result"]]],[11,"listen_on","netcore::transport::timeout","",15,[[["networkaddress"],["self"]],["result"]]],[11,"dial","","",15,[[["networkaddress"],["self"]],["result"]]],[11,"from","","",3,[[["e"]],["self"]]],[11,"clone","netcore::compat","",0,[[["self"]],["iocompat"]]],[11,"clone","netcore::transport::tcp","",2,[[["self"]],["tcptransport"]]],[11,"clone","netcore::transport","",1,[[["self"]],["connectionorigin"]]],[11,"default","netcore::transport::memory","",10,[[],["memorytransport"]]],[11,"default","netcore::transport::tcp","",2,[[],["tcptransport"]]],[11,"eq","netcore::transport","",1,[[["connectionorigin"],["self"]],["bool"]]],[11,"fmt","netcore::compat","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","netcore::transport::and_then","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","netcore::transport::memory","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","netcore::transport::tcp","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","netcore::transport::timeout","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","netcore::transport","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","netcore::transport::timeout","",3,[[["self"],["formatter"]],["result"]]],[11,"source","","",3,[[["self"]],[["error"],["option",["error"]]]]],[11,"poll","netcore::transport::and_then","",8,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","netcore::transport::tcp","",13,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","netcore::transport::timeout","",17,[[["pin"],["self"],["context"]],["poll"]]],[11,"drop","netcore::compat","",0,[[["self"],["pin"]]]],[11,"drop","netcore::transport::and_then","",7,[[["self"],["pin"]]]],[11,"drop","","",8,[[["self"],["pin"]]]],[11,"drop","netcore::transport::timeout","",16,[[["self"],["pin"]]]],[11,"drop","","",17,[[["self"],["pin"]]]],[11,"poll_next","netcore::transport::and_then","",7,[[["pin"],["self"],["context"]],[["option"],["poll",["option"]]]]],[11,"poll_next","netcore::transport::memory","",11,[[["pin"],["self"],["context"]],[["option"],["poll",["option"]]]]],[11,"poll_next","netcore::transport::tcp","",12,[[["pin"],["self"],["context"]],[["option"],["poll",["option"]]]]],[11,"poll_next","netcore::transport::timeout","",16,[[["pin"],["self"],["context"]],[["option"],["poll",["option"]]]]],[11,"poll_read","netcore::compat","",0,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_read","netcore::transport::tcp","",14,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_write","netcore::compat","",0,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_flush","","",0,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",0,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_write","netcore::transport::tcp","",14,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_flush","","",14,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",14,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_read","netcore::compat","",0,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_write","","",0,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_flush","","",0,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_shutdown","","",0,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]]],"p":[[3,"IoCompat"],[4,"ConnectionOrigin"],[3,"TcpTransport"],[4,"TimeoutTransportError"],[8,"Transport"],[8,"TransportExt"],[3,"AndThen"],[3,"AndThenStream"],[3,"AndThenFuture"],[3,"BoxedTransport"],[3,"MemoryTransport"],[3,"Listener"],[3,"TcpListenerStream"],[3,"TcpOutbound"],[3,"TcpSocket"],[3,"TimeoutTransport"],[3,"TimeoutStream"],[3,"TimeoutFuture"]]};
searchIndex["network"] = {"doc":"","i":[[0,"common","network","",null,null],[3,"NegotiatedSubstream","network::common","A Negotiated substream encapsulates a protocol and a…",null,null],[12,"protocol","","Protocol we have negotiated to use on the substream.",0,null],[12,"substream","","Opened substream.",0,null],[6,"NetworkPublicKeys","","Public keys used at the network layer",null,null],[0,"connectivity_manager","network","The ConnectivityManager actor is responsible for ensuring…",null,null],[3,"ConnectivityManager","network::connectivity_manager","The ConnectivityManager actor.",null,null],[4,"DiscoverySource","","Different sources for peer addresses, ordered by priority…",null,null],[13,"OnChain","","",1,null],[13,"Gossip","","",1,null],[13,"Config","","",1,null],[4,"ConnectivityRequest","","Requests received by the [`ConnectivityManager`] manager…",null,null],[13,"UpdateAddresses","","Request to update known addresses of peer with id `PeerId`…",2,null],[13,"UpdateEligibleNodes","","Update set of nodes eligible to join the network.",2,null],[13,"GetDialQueueSize","","Gets current size of dial queue. This is useful in tests.",2,null],[18,"NUM_VARIANTS","","The number of variants in this enum.",1,null],[11,"new","","Creates a new instance of the [`ConnectivityManager`] actor.",3,[[["receiver",["connectivityrequest"]],["connectivityrequest"],["vec",["networkaddress"]],["rwlock",["hashmap"]],["arc",["rwlock"]],["tticker"],["hashmap",["peerid","vec"]],["peerid"],["tbackoff"],["connectionrequestsender"],["receiver"],["u64"]],["self"]]],[11,"start","","Starts the [`ConnectivityManager`] actor.",3,[[]]],[0,"error","network","",null,null],[3,"NetworkError","network::error","Errors propagated from the network module.",null,null],[4,"NetworkErrorKind","","",null,null],[13,"IoError","","",4,null],[13,"LcsError","","",4,null],[13,"ProtobufParseError","","",4,null],[13,"SignatureError","","",4,null],[13,"MpscSendError","","",4,null],[13,"OneshotCanceled","","",4,null],[13,"TimerError","","",4,null],[13,"TimedOut","","",4,null],[13,"UnknownTimerError","","",4,null],[13,"PeerManagerError","","",4,null],[13,"ParsingError","","",4,null],[13,"NotConnected","","",4,null],[0,"interface","network","Module exposing generic network interface to a single…",null,null],[3,"NetworkProvider","network::interface","",null,null],[4,"NetworkRequest","","Requests [`NetworkProvider`] receives from the network…",null,null],[13,"SendRpc","","Send an RPC request to peer.",5,null],[13,"SendMessage","","Fire-and-forget style message send to peer.",5,null],[4,"NetworkNotification","","Notifications that [`NetworkProvider`] sends to consumers…",null,null],[13,"RecvRpc","","A new RPC request has been received from peer.",6,null],[13,"RecvMessage","","A new message has been received from peer.",6,null],[11,"start","","",7,[[["transportnotification"],["handle"],["connection"],["sender",["transportnotification"]],["usize"]]]],[0,"peer_manager","network","The PeerManager module is responsible for establishing…",null,null],[3,"PeerManagerRequestSender","network::peer_manager","Convenience wrapper which makes it easy to issue…",null,null],[3,"ConnectionRequestSender","","Convenience wrapper which makes it easy to issue…",null,null],[3,"PeerManager","","Responsible for handling and maintaining connections to…",null,null],[4,"PeerManagerError","","",null,null],[13,"Error","","",8,null],[13,"IoError","","",8,null],[13,"TransportError","","",8,null],[13,"ShuttingDownPeer","","",8,null],[13,"NotConnected","","",8,null],[13,"AlreadyConnected","","",8,null],[13,"OneshotSenderDropped","","",8,null],[13,"MpscSendError","","",8,null],[13,"LcsError","","",8,null],[4,"PeerManagerRequest","","Request received by PeerManager from upstream actors.",null,null],[13,"SendRpc","","Send an RPC request to a remote peer.",9,null],[13,"SendMessage","","Fire-and-forget style message send to a remote peer.",9,null],[4,"PeerManagerNotification","","Notifications sent by PeerManager to upstream actors.",null,null],[13,"RecvRpc","","A new RPC request has been received from a remote peer.",10,null],[13,"RecvMessage","","A new message has been received from a remote peer.",10,null],[4,"ConnectionRequest","","",null,null],[13,"DialPeer","","",11,null],[13,"DisconnectPeer","","",11,null],[4,"ConnectionNotification","","",null,null],[13,"NewPeer","","Connection with a new peer has been established.",12,null],[13,"LostPeer","","Connection to a peer has been terminated. This could have…",12,null],[4,"TransportNotification","","",null,null],[13,"NewConnection","","",13,null],[13,"Disconnected","","",13,null],[0,"conn_notifs_channel","","`conn_notifs_channel` is a channel which delivers to the…",null,null],[5,"new","network::peer_manager::conn_notifs_channel","",null,[[]]],[6,"Sender","","",null,null],[6,"Receiver","","",null,null],[11,"from_transport_error","network::peer_manager","",8,[[["into",["error"]],["error"]],["self"]]],[11,"new","","Construct a new PeerManagerRequestSender with a raw…",14,[[["sender",["peermanagerrequest"]],["peermanagerrequest"]],["self"]]],[11,"send_to","","Send a fire-and-forget direct-send message to remote peer.",14,[[["bytes"],["self"],["protocolid"],["peerid"]],[["result",["peermanagererror"]],["peermanagererror"]]]],[11,"send_to_many","","Send the same message to many recipients using the…",14,[[["bytes"],["self"],["protocolid"]],[["result",["peermanagererror"]],["peermanagererror"]]]],[11,"send_rpc","","Sends a unary RPC to a remote peer and waits to either…",14,[[["self"],["bytes"],["duration"],["protocolid"],["peerid"]]]],[11,"new","","Construct a new ConnectionRequestSender with a raw…",15,[[["connectionrequest"],["sender",["peerid","connectionrequest"]],["peerid"]],["self"]]],[11,"dial_peer","","",15,[[["peerid"],["networkaddress"],["self"]]]],[11,"disconnect_peer","","",15,[[["peerid"],["self"]]]],[11,"new","","Construct a new PeerManager actor",16,[[["handle"],["hashmap",["protocolid","sender"]],["receiver",["peerid","connectionrequest"]],["protocolid"],["vec",["sender"]],["sender",["peermanagernotification"]],["ttransport"],["roletype"],["receiver",["peermanagerrequest"]],["networkaddress"],["peermanagerrequest"],["peerid"],["usize"],["connectionrequest"],["sender"]],["self"]]],[11,"listen_addr","","Get the [`NetworkAddress`] we're listening for incoming…",16,[[["self"]],["networkaddress"]]],[11,"start","","Start listening on the set address and return a future…",16,[[]]],[0,"protocols","network","Protocols used by network module for external APIs and…",null,null],[0,"direct_send","network::protocols","Implementation of DirectSend as per Libra wire protocol v1.",null,null],[3,"Message","network::protocols::direct_send","",null,null],[12,"protocol","","Message type.",17,null],[12,"mdata","","Serialized message data.",17,null],[3,"DirectSend","","The DirectSend actor.",null,null],[4,"DirectSendRequest","","",null,null],[13,"SendMessage","","A request to send out a message.",18,null],[4,"DirectSendNotification","","",null,null],[13,"RecvMessage","","A notification that a DirectSend message is received.",19,null],[11,"new","","",20,[[["receiver",["directsendrequest"]],["sender",["directsendnotification"]],["peerhandle"],["peernotification"],["directsendrequest"],["directsendnotification"],["receiver",["peernotification"]]],["self"]]],[11,"start","","",20,[[]]],[0,"network","network::protocols","Convenience Network API for Libra",null,null],[3,"NetworkEvents","network::protocols::network","A `Stream` of `Event<TMessage>` from the lower network…",null,null],[3,"NetworkSender","","`NetworkSender` is the generic interface from upper…",null,null],[4,"Event","","Events received by network clients in a validator",null,null],[13,"Message","","New inbound direct-send message from peer.",21,null],[13,"RpcRequest","","New inbound rpc request. The request is fulfilled by…",21,null],[13,"NewPeer","","Peer which we have a newly established connection with.",21,null],[13,"LostPeer","","Peer with which we've lost our connection.",21,null],[8,"Message","","",null,null],[11,"new","","",22,[[["receiver",["peermanagernotification"]],["peermanagernotification"],["receiver",["peerid","connectionnotification"]],["connectionnotification"],["peerid"]],["self"]]],[11,"new","","",23,[[["connectionrequestsender"],["peermanagerrequestsender"]],["self"]]],[11,"dial_peer","","Request that a given Peer be dialed at the provided…",23,[[["peerid"],["networkaddress"],["self"]]]],[11,"disconnect_peer","","Request that a given Peer be disconnected and…",23,[[["peerid"],["self"]]]],[11,"send_to","","Send a protobuf message to a single recipient. Provides a…",23,[[["tmessage"],["self"],["protocolid"],["peerid"]],[["result",["networkerror"]],["networkerror"]]]],[11,"send_to_many","","Send a protobuf message to a many recipients. Provides a…",23,[[["tmessage"],["self"],["protocolid"]],[["result",["networkerror"]],["networkerror"]]]],[11,"send_rpc","","Send a protobuf rpc request to a single recipient while…",23,[[["self"],["tmessage"],["duration"],["protocolid"],["peerid"]]]],[0,"rpc","network::protocols","Implementation of the RPC protocol as per Libra wire…",null,null],[3,"InboundRpcRequest","network::protocols::rpc","A wrapper struct for an inbound rpc request and its…",null,null],[12,"protocol","","Rpc method identifier, e.g.,…",24,null],[12,"data","","The serialized request data received from the sender.",24,null],[12,"res_tx","","Channel over which the rpc response is sent from the upper…",24,null],[3,"OutboundRpcRequest","","A wrapper struct for an outbound rpc request and its…",null,null],[12,"protocol","","Rpc method identifier, e.g.,…",25,null],[12,"data","","The serialized request data to be sent to the receiver.",25,null],[12,"res_tx","","Channel over which the rpc response is sent from the rpc…",25,null],[12,"timeout","","The timeout duration for the entire rpc call. If the…",25,null],[3,"Rpc","","The rpc actor.",null,null],[4,"RpcNotification","","Events sent from the [`Rpc`] actor to the…",null,null],[13,"RecvRpc","","A new inbound rpc request has been received from a remote…",26,null],[0,"error","","Rpc protocol errors",null,null],[4,"RpcError","network::protocols::rpc::error","",null,null],[13,"Error","","",27,null],[13,"IoError","","",27,null],[13,"LcsError","","",27,null],[13,"NotConnected","","",27,null],[13,"InvalidRpcResponse","","",27,null],[13,"UnexpectedRpcResponse","","",27,null],[13,"UnexpectedRpcRequest","","",27,null],[13,"UnexpectedResponseChannelCancel","","",27,null],[13,"ApplicationError","","",27,null],[13,"MpscSendError","","",27,null],[13,"TooManyPending","","",27,null],[13,"TimedOut","","",27,null],[0,"fuzzing","network::protocols::rpc","fuzzing module for the rpc protocol",null,null],[5,"generate_corpus","network::protocols::rpc::fuzzing","",null,[[["valuegenerator"]],[["vec",["u8"]],["u8"]]]],[5,"fuzzer","","",null,[[]]],[11,"new","network::protocols::rpc","Create a new instance of the [`Rpc`] protocol actor.",28,[[["duration"],["u32"],["sender",["rpcnotification"]],["peernotification"],["rpcnotification"],["outboundrpcrequest"],["receiver",["outboundrpcrequest"]],["peerhandle"],["receiver",["peernotification"]]],["self"]]],[11,"start","","Start the [`Rpc`] actor's event loop.",28,[[]]],[0,"discovery","network::protocols","Protocol to discover network addresses of other peers on…",null,null],[3,"DiscoveryNetworkSender","network::protocols::discovery","The interface from Discovery to Networking layer.",null,null],[3,"Discovery","","The actor running the discovery protocol.",null,null],[3,"DiscoveryMsg","","A Discovery message contains notes collected from other…",null,null],[3,"VerifiedNote","","",null,null],[3,"Note","","A `Note` contains a validator's signed `PeerInfo` as well…",null,null],[3,"SignedPeerInfo","","A `PeerInfo` authenticated by the peer's root…",null,null],[3,"PeerInfo","","A `PeerInfo` represents the network address(es) of a Peer.",null,null],[3,"SignedFullNodeInfo","","A `FullNodeInfo` authenticated by the peer's root…",null,null],[3,"FullNodeInfo","","Discovery information relevant to public full nodes and…",null,null],[5,"add_to_network","","Register the discovery sender and event handler with…",null,[[["networkbuilder"]]]],[6,"DiscoveryNetworkEvents","","The interface from Network to Discovery module.",null,null],[11,"new","","Create a new Discovery sender",29,[[["connectionrequestsender"],["peermanagerrequestsender"]],["self"]]],[11,"send_to","","Send a DiscoveryMsg to a peer.",29,[[["discoverymsg"],["self"],["peerid"]],[["result",["networkerror"]],["networkerror"]]]],[11,"new","","",30,[[["roletype"],["networkaddress"],["connectivityrequest"],["rwlock",["hashmap"]],["vec",["networkaddress"]],["arc",["rwlock"]],["peerid"],["ed25519privatekey"],["tticker"],["discoverynetworksender"],["discoverynetworkevents"],["sender",["connectivityrequest"]]],["self"]]],[11,"start","","",30,[[]]],[0,"health_checker","network::protocols","Protocol used to ensure peer liveness",null,null],[3,"HealthCheckerNetworkSender","network::protocols::health_checker","The interface from HealthChecker to Networking layer.",null,null],[3,"Ping","","",null,null],[3,"Pong","","",null,null],[3,"HealthChecker","","The actor performing health checks by running the Ping…",null,null],[4,"HealthCheckerMsg","","",null,null],[13,"Ping","","",31,null],[13,"Pong","","",31,null],[5,"add_to_network","","",null,[[["networkbuilder"]]]],[6,"HealthCheckerNetworkEvents","","The interface from Network to HealthChecker layer.",null,null],[11,"new","","",32,[[["connectionrequestsender"],["peermanagerrequestsender"]],["self"]]],[11,"send_rpc","","Send a HealthChecker Ping RPC request to remote peer…",32,[[["self"],["duration"],["healthcheckermsg"],["peerid"]]]],[11,"disconnect_peer","","",32,[[["peerid"],["self"]]]],[11,"new","","Create new instance of the [`HealthChecker`] actor.",33,[[["duration"],["tticker"],["healthcheckernetworksender"],["u64"],["healthcheckernetworkevents"]],["self"]]],[11,"start","","",33,[[]]],[0,"identity","network::protocols","Protocol used to identify key information about a remote",null,null],[5,"exchange_peerid","network::protocols::identity","The PeerId exchange protocol.",null,[[["peerid"],["t"]]]],[5,"exchange_handshake","","The Handshake exchange protocol.",null,[[["t"],["handshakemsg"]]]],[0,"wire","network::protocols","This module defines the structs transported during the…",null,null],[0,"handshake","network::protocols::wire","",null,null],[0,"v1","network::protocols::wire::handshake","This module defines the structs transported during the…",null,null],[3,"SupportedProtocols","network::protocols::wire::handshake::v1","",null,null],[3,"HandshakeMsg","","The HandshakeMsg contains a mapping from…",null,null],[12,"supported_protocols","","",34,null],[4,"ProtocolId","","Unique identifier associated with each application…",null,null],[13,"ConsensusRpc","","",35,null],[13,"ConsensusDirectSend","","",35,null],[13,"MempoolDirectSend","","",35,null],[13,"StateSynchronizerDirectSend","","",35,null],[13,"DiscoveryDirectSend","","",35,null],[13,"HealthCheckerRpc","","",35,null],[13,"IdentityDirectSend","","",35,null],[13,"OnchainDiscoveryRpc","","",35,null],[4,"MessagingProtocolVersion","","Enum representing different versions of the Libra network…",null,null],[13,"V1","","",36,null],[11,"as_str","","",35,[[],["str"]]],[11,"new","","",34,[[],["self"]]],[11,"add","","",34,[[["self"],["supportedprotocols"],["messagingprotocolversion"]]]],[11,"find_common_protocols","","",34,[[["self"],["handshakemsg"]],["option"]]],[0,"messaging","network::protocols::wire","",null,null],[0,"v1","network::protocols::wire::messaging","This module defines the structs transported during the…",null,null],[3,"Nonce","network::protocols::wire::messaging::v1","Nonces used by Ping and Pong message types.",null,null],[12,"0","","",37,null],[3,"RpcRequest","","",null,null],[12,"request_id","","RequestId for the RPC Request.",38,null],[12,"protocol_id","","`protocol_id` is a variant of the ProtocolId enum.",38,null],[12,"priority","","Request priority in the range 0..=255.",38,null],[12,"raw_request","","Request payload. This will be parsed by the…",38,null],[3,"RpcResponse","","",null,null],[12,"request_id","","RequestId for corresponding request. This is copied as is…",39,null],[12,"priority","","Response priority in the range 0..=255. This will likely…",39,null],[12,"raw_response","","Response payload.",39,null],[3,"DirectSendMsg","","",null,null],[12,"protocol_id","","`protocol_id` is a variant of the ProtocolId enum.",40,null],[12,"priority","","Message priority in the range 0..=255.",40,null],[12,"raw_msg","","Message payload.",40,null],[4,"NetworkMessage","","Message variants that are sent on the wire. New variants…",null,null],[13,"Error","","",41,null],[13,"Ping","","",41,null],[13,"Pong","","",41,null],[13,"RpcRequest","","",41,null],[13,"RpcResponse","","",41,null],[13,"DirectSendMsg","","",41,null],[4,"ErrorCode","","Enum representing various error codes that can be embedded…",null,null],[13,"TimedOut","","Ping timed out.",42,null],[13,"ParsingError","","Failed to parse NetworkMessage when interpreting according…",42,null],[13,"NotSupported","","A message was received for a protocol that is not…",42,null],[6,"RequestId","","Create alias RequestId for u32.",null,null],[6,"Priority","","Create alias Priority for u8.",null,null],[0,"validator_network","network","Network API for Libra",null,null],[0,"network_builder","network::validator_network","Remotely authenticated vs. unauthenticated network…",null,null],[3,"NetworkBuilder","network::validator_network::network_builder","Build Network module with custom configuration values.…",null,null],[4,"TransportType","","The type of the transport layer, i.e., running on memory…",null,null],[13,"Memory","","",43,null],[13,"MemoryNoise","","",43,null],[13,"PermissionlessMemoryNoise","","",43,null],[13,"Tcp","","",43,null],[13,"TcpNoise","","",43,null],[13,"PermissionlessTcpNoise","","",43,null],[17,"NETWORK_CHANNEL_SIZE","","",null,null],[17,"DISCOVERY_INTERVAL_MS","","",null,null],[17,"PING_INTERVAL_MS","","",null,null],[17,"PING_TIMEOUT_MS","","",null,null],[17,"DISOVERY_MSG_TIMEOUT_MS","","",null,null],[17,"CONNECTIVITY_CHECK_INTERNAL_MS","","",null,null],[17,"INBOUND_RPC_TIMEOUT_MS","","",null,null],[17,"MAX_CONCURRENT_OUTBOUND_RPCS","","",null,null],[17,"MAX_CONCURRENT_INBOUND_RPCS","","",null,null],[17,"PING_FAILURES_TOLERATED","","",null,null],[17,"MAX_CONCURRENT_NETWORK_REQS","","",null,null],[17,"MAX_CONCURRENT_NETWORK_NOTIFS","","",null,null],[17,"MAX_CONNECTION_DELAY_MS","","",null,null],[11,"new","","Return a new NetworkBuilder initialized with default…",44,[[["roletype"],["handle"],["networkaddress"],["peerid"]],["networkbuilder"]]],[11,"transport","","Set transport type, i.e., Memory or Tcp transports.",44,[[["transporttype"],["self"]],["self"]]],[11,"advertised_address","","Set and address to advertise, if different from the listen…",44,[[["self"],["networkaddress"]],["self"]]],[11,"trusted_peers","","Set trusted peers.",44,[[["hashmap",["peerid","networkpublickeys"]],["networkpublickeys"],["self"],["peerid"]],["self"]]],[11,"signing_keypair","","Set signing keys of local node.",44,[[["self"]],["self"]]],[11,"seed_peers","","Set seed peers to bootstrap discovery",44,[[["hashmap",["peerid","vec"]],["self"],["vec",["networkaddress"]],["peerid"]],["self"]]],[11,"discovery_interval_ms","","Set discovery ticker interval",44,[[["self"],["u64"]],["self"]]],[11,"ping_interval_ms","","Set ping interval.",44,[[["self"],["u64"]],["self"]]],[11,"ping_failures_tolerated","","Set number of ping failures tolerated.",44,[[["self"],["u64"]],["self"]]],[11,"ping_timeout_ms","","Set ping timeout.",44,[[["self"],["u64"]],["self"]]],[11,"connectivity_check_interval_ms","","Set connectivity check ticker interval",44,[[["self"],["u64"]],["self"]]],[11,"inbound_rpc_timeout_ms","","Set inbound rpc timeout.",44,[[["self"],["u64"]],["self"]]],[11,"max_concurrent_outbound_rpcs","","The maximum number of concurrent outbound rpc requests we…",44,[[["self"],["u32"]],["self"]]],[11,"max_concurrent_inbound_rpcs","","The maximum number of concurrent inbound rpc requests we…",44,[[["self"],["u32"]],["self"]]],[11,"max_concurrent_network_reqs","","The maximum number of concurrent NetworkRequests we will…",44,[[["self"],["usize"]],["self"]]],[11,"max_concurrent_network_notifs","","The maximum number of concurrent Notifications from each…",44,[[["self"],["usize"]],["self"]]],[11,"max_connection_delay_ms","","The maximum duration (in milliseconds) we should wait…",44,[[["self"],["u64"]],["self"]]],[11,"channel_size","","Set the size of the channels between different network…",44,[[["self"],["usize"]],["self"]]],[11,"enable_remote_authentication","","Set the enable_remote_authentication flag to make the…",44,[[["self"],["bool"]],["self"]]],[11,"conn_mgr_reqs_tx","","",44,[[["self"]],[["option",["sender"]],["sender",["connectivityrequest"]]]]],[11,"add_protocol_handler","","Add a handler for given protocols using raw bytes.",44,[[["queuestyle"],["intcountervec"],["usize"],["option",["intcountervec"]],["self"],["vec",["protocolid"]],["protocolid"]]]],[11,"add_connection_event_listener","","",44,[[["self"]],["receiver"]]],[11,"add_connectivity_manager","","Add a [`ConnectivityManager`] to the network.",44,[[["self"]],["self"]]],[11,"add_gossip_discovery","","Add the (gossip) [`Discovery`] protocol to the network.",44,[[["self"]],["self"]]],[11,"add_connection_monitoring","","",44,[[["self"]],["self"]]],[11,"build","","Create the configured transport and start PeerManager.…",44,[[],["networkaddress"]]],[6,"DisconnectReason","network","",null,null],[6,"ConnectivityRequest","","",null,null],[6,"ProtocolId","","",null,null],[11,"from","network::common","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","network::connectivity_manager","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"equivalent","","",1,[[["k"],["self"]],["bool"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","network::error","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_string","","",45,[[["self"]],["string"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"vzip","","",45,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"equivalent","","",4,[[["k"],["self"]],["bool"]]],[11,"from","network::interface","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","network::peer_manager","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"equivalent","","",12,[[["k"],["self"]],["bool"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","network::protocols::direct_send","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"equivalent","","",17,[[["k"],["self"]],["bool"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"vzip","","",20,[[],["v"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"vzip","","",18,[[],["v"]]],[11,"equivalent","","",18,[[["k"],["self"]],["bool"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"vzip","","",19,[[],["v"]]],[11,"equivalent","","",19,[[["k"],["self"]],["bool"]]],[11,"from","network::protocols::network","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"vzip","","",22,[[],["v"]]],[11,"try_poll_next","","",22,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"vzip","","",23,[[],["v"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"vzip","","",21,[[],["v"]]],[11,"from","network::protocols::rpc","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"vzip","","",24,[[],["v"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"vzip","","",25,[[],["v"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"vzip","","",28,[[],["v"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"vzip","","",26,[[],["v"]]],[11,"from","network::protocols::rpc::error","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_string","","",27,[[["self"]],["string"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"vzip","","",27,[[],["v"]]],[11,"from","network::protocols::discovery","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"vzip","","",29,[[],["v"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"vzip","","",30,[[],["v"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"vzip","","",46,[[],["v"]]],[11,"test_only_hash","","",46,[[["self"]],["hashvalue"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"vzip","","",47,[[],["v"]]],[11,"test_only_hash","","",47,[[["self"]],["hashvalue"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"vzip","","",48,[[],["v"]]],[11,"test_only_hash","","",48,[[["self"]],["hashvalue"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"vzip","","",49,[[],["v"]]],[11,"test_only_hash","","",49,[[["self"]],["hashvalue"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"vzip","","",50,[[],["v"]]],[11,"test_only_hash","","",50,[[["self"]],["hashvalue"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"vzip","","",51,[[],["v"]]],[11,"test_only_hash","","",51,[[["self"]],["hashvalue"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"vzip","","",52,[[],["v"]]],[11,"test_only_hash","","",52,[[["self"]],["hashvalue"]]],[11,"from","network::protocols::health_checker","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"vzip","","",32,[[],["v"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"vzip","","",53,[[],["v"]]],[11,"test_only_hash","","",53,[[["self"]],["hashvalue"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"vzip","","",54,[[],["v"]]],[11,"test_only_hash","","",54,[[["self"]],["hashvalue"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"vzip","","",33,[[],["v"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"vzip","","",31,[[],["v"]]],[11,"test_only_hash","","",31,[[["self"]],["hashvalue"]]],[11,"from","network::protocols::wire::handshake::v1","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"vzip","","",55,[[],["v"]]],[11,"test_only_hash","","",55,[[["self"]],["hashvalue"]]],[11,"clear","","",55,[[["self"]]]],[11,"initialize","","",55,[[]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"vzip","","",34,[[],["v"]]],[11,"test_only_hash","","",34,[[["self"]],["hashvalue"]]],[11,"clear","","",34,[[["self"]]]],[11,"initialize","","",34,[[]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"to_string","","",35,[[["self"]],["string"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"vzip","","",35,[[],["v"]]],[11,"test_only_hash","","",35,[[["self"]],["hashvalue"]]],[11,"equivalent","","",35,[[["k"],["self"]],["bool"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"vzip","","",36,[[],["v"]]],[11,"test_only_hash","","",36,[[["self"]],["hashvalue"]]],[11,"equivalent","","",36,[[["k"],["self"]],["bool"]]],[11,"from","network::protocols::wire::messaging::v1","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"vzip","","",37,[[],["v"]]],[11,"test_only_hash","","",37,[[["self"]],["hashvalue"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"vzip","","",38,[[],["v"]]],[11,"test_only_hash","","",38,[[["self"]],["hashvalue"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"vzip","","",39,[[],["v"]]],[11,"test_only_hash","","",39,[[["self"]],["hashvalue"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"vzip","","",40,[[],["v"]]],[11,"test_only_hash","","",40,[[["self"]],["hashvalue"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"vzip","","",41,[[],["v"]]],[11,"test_only_hash","","",41,[[["self"]],["hashvalue"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"vzip","","",42,[[],["v"]]],[11,"test_only_hash","","",42,[[["self"]],["hashvalue"]]],[11,"from","network::validator_network::network_builder","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"vzip","","",44,[[],["v"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"vzip","","",43,[[],["v"]]],[11,"from","network::error","",45,[[["networkerrorkind"]],["networkerror"]]],[11,"from","","",45,[[["error"]],["networkerror"]]],[11,"from","","",45,[[["error"]],["networkerror"]]],[11,"from","","",45,[[["error"]],["networkerror"]]],[11,"from","","",45,[[["verifyerror"]],["networkerror"]]],[11,"from","","",45,[[["senderror"]],["networkerror"]]],[11,"from","","",45,[[["canceled"]],["networkerror"]]],[11,"from","","",45,[[["peermanagererror"]],["networkerror"]]],[11,"from","","",45,[[["elapsed"]],["networkerror"]]],[11,"from","network::peer_manager","",8,[[["error"]],["self"]]],[11,"from","","",8,[[["error"]],["self"]]],[11,"from","","",8,[[["canceled"]],["self"]]],[11,"from","","",8,[[["error"]],["self"]]],[11,"from","","",8,[[["senderror"]],["self"]]],[11,"from","network::protocols::rpc::error","",27,[[["error"]],["self"]]],[11,"from","","",27,[[["error"]],["self"]]],[11,"from","","",27,[[["error"]],["self"]]],[11,"from","","",27,[[["senderror"]],["self"]]],[11,"from","","",27,[[["peermanagererror"]],["self"]]],[11,"from","","",27,[[["canceled"]],["self"]]],[11,"from","","",27,[[["elapsed"]],["rpcerror"]]],[11,"from","network::protocols::wire::handshake::v1","",55,[[["t"]],["self"]]],[11,"clone","network::connectivity_manager","",1,[[["self"]],["discoverysource"]]],[11,"clone","network::error","",4,[[["self"]],["networkerrorkind"]]],[11,"clone","network::peer_manager","",14,[[["self"]],["peermanagerrequestsender"]]],[11,"clone","","",15,[[["self"]],["connectionrequestsender"]]],[11,"clone","network::protocols::direct_send","",18,[[["self"]],["directsendrequest"]]],[11,"clone","","",19,[[["self"]],["directsendnotification"]]],[11,"clone","","",17,[[["self"]],["message"]]],[11,"clone","network::protocols::network","",23,[[["self"]],["networksender"]]],[11,"clone","network::protocols::discovery","",29,[[["self"]],["discoverynetworksender"]]],[11,"clone","","",46,[[["self"]],["discoverymsg"]]],[11,"clone","","",47,[[["self"]],["verifiednote"]]],[11,"clone","","",48,[[["self"]],["note"]]],[11,"clone","","",49,[[["self"]],["signedpeerinfo"]]],[11,"clone","","",50,[[["self"]],["peerinfo"]]],[11,"clone","","",51,[[["self"]],["signedfullnodeinfo"]]],[11,"clone","","",52,[[["self"]],["fullnodeinfo"]]],[11,"clone","network::protocols::health_checker","",32,[[["self"]],["healthcheckernetworksender"]]],[11,"clone","","",31,[[["self"]],["healthcheckermsg"]]],[11,"clone","","",53,[[["self"]],["ping"]]],[11,"clone","","",54,[[["self"]],["pong"]]],[11,"clone","network::protocols::wire::handshake::v1","",35,[[["self"]],["protocolid"]]],[11,"clone","","",55,[[["self"]],["supportedprotocols"]]],[11,"clone","","",34,[[["self"]],["handshakemsg"]]],[11,"clone","","",36,[[["self"]],["messagingprotocolversion"]]],[11,"clone","network::protocols::wire::messaging::v1","",41,[[["self"]],["networkmessage"]]],[11,"clone","","",42,[[["self"]],["errorcode"]]],[11,"clone","","",37,[[["self"]],["nonce"]]],[11,"clone","","",38,[[["self"]],["rpcrequest"]]],[11,"clone","","",39,[[["self"]],["rpcresponse"]]],[11,"clone","","",40,[[["self"]],["directsendmsg"]]],[11,"default","network::protocols::wire::handshake::v1","",55,[[],["supportedprotocols"]]],[11,"default","","",34,[[],["handshakemsg"]]],[11,"cmp","network::connectivity_manager","",1,[[["self"],["discoverysource"]],["ordering"]]],[11,"cmp","network::protocols::wire::handshake::v1","",36,[[["messagingprotocolversion"],["self"]],["ordering"]]],[11,"eq","network::connectivity_manager","",1,[[["self"],["discoverysource"]],["bool"]]],[11,"eq","network::error","",4,[[["self"],["networkerrorkind"]],["bool"]]],[11,"eq","network::peer_manager","",12,[[["connectionnotification"],["self"]],["bool"]]],[11,"ne","","",12,[[["connectionnotification"],["self"]],["bool"]]],[11,"eq","network::protocols::direct_send","",18,[[["self"],["directsendrequest"]],["bool"]]],[11,"ne","","",18,[[["self"],["directsendrequest"]],["bool"]]],[11,"eq","","",19,[[["directsendnotification"],["self"]],["bool"]]],[11,"ne","","",19,[[["directsendnotification"],["self"]],["bool"]]],[11,"eq","","",17,[[["message"],["self"]],["bool"]]],[11,"ne","","",17,[[["message"],["self"]],["bool"]]],[11,"eq","network::protocols::network","",21,[[["event"],["self"]],["bool"]]],[11,"eq","network::protocols::wire::handshake::v1","",35,[[["protocolid"],["self"]],["bool"]]],[11,"eq","","",55,[[["supportedprotocols"],["self"]],["bool"]]],[11,"ne","","",55,[[["supportedprotocols"],["self"]],["bool"]]],[11,"eq","","",36,[[["messagingprotocolversion"],["self"]],["bool"]]],[11,"eq","network::protocols::wire::messaging::v1","",41,[[["networkmessage"],["self"]],["bool"]]],[11,"ne","","",41,[[["networkmessage"],["self"]],["bool"]]],[11,"eq","","",42,[[["errorcode"],["self"]],["bool"]]],[11,"ne","","",42,[[["errorcode"],["self"]],["bool"]]],[11,"eq","","",37,[[["nonce"],["self"]],["bool"]]],[11,"ne","","",37,[[["nonce"],["self"]],["bool"]]],[11,"eq","","",38,[[["self"],["rpcrequest"]],["bool"]]],[11,"ne","","",38,[[["self"],["rpcrequest"]],["bool"]]],[11,"eq","","",39,[[["rpcresponse"],["self"]],["bool"]]],[11,"ne","","",39,[[["rpcresponse"],["self"]],["bool"]]],[11,"eq","","",40,[[["self"],["directsendmsg"]],["bool"]]],[11,"ne","","",40,[[["self"],["directsendmsg"]],["bool"]]],[11,"partial_cmp","network::connectivity_manager","",1,[[["self"],["discoverysource"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","network::protocols::wire::handshake::v1","",36,[[["messagingprotocolversion"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"fmt","network::common","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","network::connectivity_manager","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","network::error","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","network::interface","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","network::peer_manager","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","network::protocols::direct_send","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","network::protocols::network","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","network::protocols::rpc::error","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","network::protocols::rpc","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","network::protocols::discovery","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","network::protocols::health_checker","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","network::protocols::wire::handshake::v1","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","network::protocols::wire::messaging::v1","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","network::error","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","network::peer_manager","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","network::protocols::rpc::error","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","network::protocols::wire::handshake::v1","",35,[[["formatter"],["self"]],["result"]]],[11,"hash","","",35,[[["self"],["__h"]]]],[11,"hash","","",36,[[["self"],["__h"]]]],[11,"try_into","","",55,[[],[["vec",["protocolid"]],["result",["vec"]]]]],[11,"source","network::peer_manager","",8,[[["self"]],[["option",["error"]],["error"]]]],[11,"source","network::protocols::rpc::error","",27,[[["self"]],[["option",["error"]],["error"]]]],[11,"serialize","network::protocols::discovery","",46,[[["self"],["__s"]],["result"]]],[11,"serialize","","",47,[[["self"],["__s"]],["result"]]],[11,"serialize","","",48,[[["self"],["__s"]],["result"]]],[11,"serialize","","",49,[[["self"],["__s"]],["result"]]],[11,"serialize","","",50,[[["self"],["__s"]],["result"]]],[11,"serialize","","",51,[[["self"],["__s"]],["result"]]],[11,"serialize","","",52,[[["self"],["__s"]],["result"]]],[11,"serialize","network::protocols::health_checker","",31,[[["self"],["__s"]],["result"]]],[11,"serialize","","",53,[[["self"],["__s"]],["result"]]],[11,"serialize","","",54,[[["self"],["__s"]],["result"]]],[11,"serialize","network::protocols::wire::handshake::v1","",35,[[["self"],["__s"]],["result"]]],[11,"serialize","","",55,[[["self"],["__s"]],["result"]]],[11,"serialize","","",34,[[["self"],["__s"]],["result"]]],[11,"serialize","","",36,[[["self"],["__s"]],["result"]]],[11,"serialize","network::protocols::wire::messaging::v1","",41,[[["self"],["__s"]],["result"]]],[11,"serialize","","",42,[[["self"],["__s"]],["result"]]],[11,"serialize","","",37,[[["self"],["__s"]],["result"]]],[11,"serialize","","",38,[[["self"],["__s"]],["result"]]],[11,"serialize","","",39,[[["self"],["__s"]],["result"]]],[11,"serialize","","",40,[[["self"],["__s"]],["result"]]],[11,"deserialize","network::protocols::discovery","",46,[[["__d"]],["result"]]],[11,"deserialize","","",47,[[["__d"]],["result"]]],[11,"deserialize","","",48,[[["__d"]],["result"]]],[11,"deserialize","","",49,[[["__d"]],["result"]]],[11,"deserialize","","",50,[[["__d"]],["result"]]],[11,"deserialize","","",51,[[["__d"]],["result"]]],[11,"deserialize","","",52,[[["__d"]],["result"]]],[11,"deserialize","network::protocols::health_checker","",31,[[["__d"]],["result"]]],[11,"deserialize","","",53,[[["__d"]],["result"]]],[11,"deserialize","","",54,[[["__d"]],["result"]]],[11,"deserialize","network::protocols::wire::handshake::v1","",35,[[["__d"]],["result"]]],[11,"deserialize","","",55,[[["__d"]],["result"]]],[11,"deserialize","","",34,[[["__d"]],["result"]]],[11,"deserialize","","",36,[[["__d"]],["result"]]],[11,"deserialize","network::protocols::wire::messaging::v1","",41,[[["__d"]],["result"]]],[11,"deserialize","","",42,[[["__d"]],["result"]]],[11,"deserialize","","",37,[[["__d"]],["result"]]],[11,"deserialize","","",38,[[["__d"]],["result"]]],[11,"deserialize","","",39,[[["__d"]],["result"]]],[11,"deserialize","","",40,[[["__d"]],["result"]]],[11,"is_terminated","network::protocols::network","",22,[[["self"]],["bool"]]],[11,"poll_next","","",22,[[["pin"],["self"],["context"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",22,[[["self"]]]],[11,"drop","","",22,[[["self"],["pin"]]]]],"p":[[3,"NegotiatedSubstream"],[4,"DiscoverySource"],[4,"ConnectivityRequest"],[3,"ConnectivityManager"],[4,"NetworkErrorKind"],[4,"NetworkRequest"],[4,"NetworkNotification"],[3,"NetworkProvider"],[4,"PeerManagerError"],[4,"PeerManagerRequest"],[4,"PeerManagerNotification"],[4,"ConnectionRequest"],[4,"ConnectionNotification"],[4,"TransportNotification"],[3,"PeerManagerRequestSender"],[3,"ConnectionRequestSender"],[3,"PeerManager"],[3,"Message"],[4,"DirectSendRequest"],[4,"DirectSendNotification"],[3,"DirectSend"],[4,"Event"],[3,"NetworkEvents"],[3,"NetworkSender"],[3,"InboundRpcRequest"],[3,"OutboundRpcRequest"],[4,"RpcNotification"],[4,"RpcError"],[3,"Rpc"],[3,"DiscoveryNetworkSender"],[3,"Discovery"],[4,"HealthCheckerMsg"],[3,"HealthCheckerNetworkSender"],[3,"HealthChecker"],[3,"HandshakeMsg"],[4,"ProtocolId"],[4,"MessagingProtocolVersion"],[3,"Nonce"],[3,"RpcRequest"],[3,"RpcResponse"],[3,"DirectSendMsg"],[4,"NetworkMessage"],[4,"ErrorCode"],[4,"TransportType"],[3,"NetworkBuilder"],[3,"NetworkError"],[3,"DiscoveryMsg"],[3,"VerifiedNote"],[3,"Note"],[3,"SignedPeerInfo"],[3,"PeerInfo"],[3,"SignedFullNodeInfo"],[3,"FullNodeInfo"],[3,"Ping"],[3,"Pong"],[3,"SupportedProtocols"]]};
searchIndex["noise"] = {"doc":"[Noise protocol framework][noise] support for use in Libra.","i":[[3,"NoiseSocket","noise","A Noise session with a remote",null,null],[3,"NoiseConfig","","The Noise protocol configuration to be used to perform a…",null,null],[11,"get_remote_static","","Pull out the static public key of the remote",0,[[["self"]],["option"]]],[0,"noise_fuzzing","","",null,null],[5,"generate_corpus","noise::noise_fuzzing","",null,[[["valuegenerator"]],[["vec",["u8"]],["u8"]]]],[5,"fuzz_initiator","","",null,[[]]],[5,"fuzz_responder","","",null,[[]]],[7,"NOISE_KEYPAIR","","",null,null],[11,"new","noise","Create a new NoiseConfig with the provided keypair",1,[[["privatekey"]],["self"]]],[11,"new_random","","Create a new NoiseConfig with an ephemeral static key.",1,[[],["self"]]],[11,"upgrade_connection","","Perform a protocol upgrade on an underlying connection. In…",1,[[["tsocket"],["self"],["connectionorigin"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"poll_read","","",0,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_write","","",0,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_flush","","",0,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",0,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]]],"p":[[3,"NoiseSocket"],[3,"NoiseConfig"]]};
searchIndex["num_variants"] = {"doc":"Add an associated constant to an enum describing the…","i":[[24,"NumVariants","num_variants","Derives an associated constant with the number of variants…",null,null]],"p":[]};
searchIndex["onchain_discovery"] = {"doc":"Protocol for discovering validator + validator full node…","i":[[0,"client","onchain_discovery","",null,null],[3,"OnchainDiscovery","onchain_discovery::client","Actor for querying various sources (remote peers, local…",null,null],[11,"new","","",0,[[["dbreader"],["arc",["dbreader"]],["peerid"],["receiver"],["roletype"],["waypoint"],["tticker"],["onchaindiscoverynetworksender"],["duration"]],["self"]]],[11,"start","","",0,[[]]],[0,"network_interface","onchain_discovery","Protobuf based interface between OnchainDiscovery and…",null,null],[3,"OnchainDiscoveryNetworkSender","onchain_discovery::network_interface","The interface from OnchainDiscovery to Networking layer.",null,null],[5,"add_to_network","","Construct OnchainDiscoveryNetworkSender/Events and…",null,[[["networkbuilder"]]]],[11,"new","","",1,[[["sender",["connectivityrequest"]],["connectionrequestsender"],["peermanagerrequestsender"],["connectivityrequest"]],["self"]]],[11,"query_discovery_set","","",1,[[["self"],["querydiscoverysetrequest"],["duration"],["peerid"]]]],[11,"send_connectivity_request","","",1,[[["connectivityrequest"],["self"]]]],[0,"service","onchain_discovery","",null,null],[3,"OnchainDiscoveryService","onchain_discovery::service","A LibraNet service for handling…",null,null],[11,"new","","",2,[[["handle"],["dbreader"],["usize"],["receiver",["peermanagernotification"]],["peermanagernotification"],["arc",["dbreader"]]],["self"]]],[11,"start","","",2,[[]]],[0,"types","onchain_discovery","",null,null],[3,"QueryDiscoverySetRequest","onchain_discovery::types","A request for another peer's latest validator set and a…",null,null],[12,"known_version","","",3,null],[3,"QueryDiscoverySetResponse","","A response to a [`QueryDiscoverySetRequest`]. The server…",null,null],[12,"latest_li","","",4,null],[12,"epoch_change_proof","","",4,null],[12,"accumulator_proof","","",4,null],[12,"account_state","","",4,null],[3,"DiscoverySetInternal","","An internal representation of the DiscoverySet.",null,null],[12,"0","","",5,null],[3,"DiscoveryInfoInternal","","",null,null],[12,"0","","",6,null],[12,"1","","",6,null],[4,"OnchainDiscoveryMsg","","OnchainDiscovery LibraNet message types. These are sent…",null,null],[13,"QueryDiscoverySetRequest","","",7,null],[13,"QueryDiscoverySetResponse","","",7,null],[11,"verify_and_ratchet","","Verify and ratchet the given trusted state, returning the…",4,[[["trustedstate"],["self"],["querydiscoverysetrequest"]],["result"]]],[11,"from_validator_set","","",5,[[["roletype"],["validatorset"]],["self"]]],[11,"empty","","",5,[[],["self"]]],[11,"is_empty","","",5,[[["self"]],["bool"]]],[11,"len","","",5,[[["self"]],["usize"]]],[11,"try_from_validator_info","","",6,[[["roletype"],["validatorinfo"]],["result"]]],[11,"from","onchain_discovery::client","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","onchain_discovery::network_interface","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","onchain_discovery::service","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","onchain_discovery::types","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"test_only_hash","","",3,[[["self"]],["hashvalue"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"test_only_hash","","",4,[[["self"]],["hashvalue"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"equivalent","","",5,[[["k"],["self"]],["bool"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"equivalent","","",6,[[["k"],["self"]],["bool"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"test_only_hash","","",7,[[["self"]],["hashvalue"]]],[11,"vzip","","",7,[[],["v"]]],[11,"clone","onchain_discovery::network_interface","",1,[[["self"]],["onchaindiscoverynetworksender"]]],[11,"clone","onchain_discovery::types","",7,[[["self"]],["onchaindiscoverymsg"]]],[11,"clone","","",3,[[["self"]],["querydiscoverysetrequest"]]],[11,"clone","","",4,[[["self"]],["querydiscoverysetresponse"]]],[11,"clone","","",5,[[["self"]],["discoverysetinternal"]]],[11,"clone","","",6,[[["self"]],["discoveryinfointernal"]]],[11,"eq","","",5,[[["discoverysetinternal"],["self"]],["bool"]]],[11,"ne","","",5,[[["discoverysetinternal"],["self"]],["bool"]]],[11,"eq","","",6,[[["discoveryinfointernal"],["self"]],["bool"]]],[11,"ne","","",6,[[["discoveryinfointernal"],["self"]],["bool"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"deserialize","","",7,[[["__d"]],["result"]]],[11,"deserialize","","",3,[[["__d"]],["result"]]],[11,"deserialize","","",4,[[["__d"]],["result"]]],[11,"serialize","","",7,[[["self"],["__s"]],["result"]]],[11,"serialize","","",3,[[["self"],["__s"]],["result"]]],[11,"serialize","","",4,[[["self"],["__s"]],["result"]]]],"p":[[3,"OnchainDiscovery"],[3,"OnchainDiscoveryNetworkSender"],[3,"OnchainDiscoveryService"],[3,"QueryDiscoverySetRequest"],[3,"QueryDiscoverySetResponse"],[3,"DiscoverySetInternal"],[3,"DiscoveryInfoInternal"],[4,"OnchainDiscoveryMsg"]]};
searchIndex["option_future"] = {"doc":"","i":[[3,"OptionFuture","option_future","Effectively a size=1 future queue, or a slot with…",null,null],[11,"new","","",0,[[["option"]],["self"]]],[11,"or_insert_with","","If the slot is empty, call the given closure to generate a…",0,[[["self"],["g"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"try_poll","","",0,[[["pin"],["f"],["context"]],["poll"]]],[11,"poll","","",0,[[["pin"],["self"],["context"]],["poll"]]],[11,"is_terminated","","",0,[[["self"]],["bool"]]]],"p":[[3,"OptionFuture"]]};
searchIndex["resource_viewer"] = {"doc":"","i":[[3,"AnnotatedAccountStateBlob","resource_viewer","",null,null],[3,"AnnotatedMoveStruct","","",null,null],[3,"MoveValueAnnotator","","",null,null],[3,"NullStateView","","",null,null],[4,"AnnotatedMoveValue","","AnnotatedMoveValue is a fully expanded version of on chain…",null,null],[13,"U8","","",0,null],[13,"U64","","",0,null],[13,"U128","","",0,null],[13,"Bool","","",0,null],[13,"Address","","",0,null],[13,"Vector","","",0,null],[13,"Bytes","","",0,null],[13,"Struct","","",0,null],[5,"update_mapping","","",null,[[]]],[0,"value","","",null,null],[3,"MoveStruct","resource_viewer::value","",null,null],[3,"MoveStructLayout","","",null,null],[4,"MoveValue","","",null,null],[13,"U8","","",1,null],[13,"U64","","",1,null],[13,"U128","","",1,null],[13,"Bool","","",1,null],[13,"Address","","",1,null],[13,"Vector","","",1,null],[13,"Struct","","",1,null],[4,"MoveTypeLayout","","",null,null],[13,"Bool","","",2,null],[13,"U8","","",2,null],[13,"U64","","",2,null],[13,"U128","","",2,null],[13,"Address","","",2,null],[13,"Vector","","",2,null],[13,"Struct","","",2,null],[11,"simple_deserialize","","",1,[[["movetypelayout"]],["aresult"]]],[11,"new","","",3,[[["vec",["movevalue"]],["movevalue"]],["self"]]],[11,"simple_deserialize","","",3,[[["movestructlayout"]],["aresult"]]],[11,"fields","","",3,[[["self"]]]],[11,"into_inner","","",3,[[],[["movevalue"],["vec",["movevalue"]]]]],[11,"new","","",4,[[["vec",["movetypelayout"]],["movetypelayout"]],["self"]]],[11,"fields","","",4,[[["self"]]]],[11,"new","resource_viewer","",5,[[["stateview"]],["self"]]],[11,"view_access_path","","",5,[[["self"],["accesspath"]],[["result",["annotatedmovestruct"]],["annotatedmovestruct"]]]],[11,"view_contract_event","","",5,[[["self"],["contractevent"]],[["result",["annotatedmovevalue"]],["annotatedmovevalue"]]]],[11,"view_account_state","","",5,[[["accountstate"],["self"]],[["result",["annotatedaccountstateblob"]],["annotatedaccountstateblob"]]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"clear","","",8,[[["self"]]]],[11,"initialize","","",8,[[]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","resource_viewer::value","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"default","resource_viewer","",8,[[],["nullstateview"]]],[11,"fmt","resource_viewer::value","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","resource_viewer","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"try_from","resource_viewer::value","",4,[[["fatstructtype"]],["result"]]],[11,"try_from","","",2,[[["fattype"]],["result"]]],[11,"get","resource_viewer","",8,[[["self"],["accesspath"]],[["result",["option"]],["option",["vec"]]]]],[11,"multi_get","","",8,[[["self"]],[["result",["vec"]],["vec",["option"]]]]],[11,"is_genesis","","",8,[[["self"]],["bool"]]]],"p":[[4,"AnnotatedMoveValue"],[4,"MoveValue"],[4,"MoveTypeLayout"],[3,"MoveStruct"],[3,"MoveStructLayout"],[3,"MoveValueAnnotator"],[3,"AnnotatedAccountStateBlob"],[3,"AnnotatedMoveStruct"],[3,"NullStateView"]]};
searchIndex["safety_rules"] = {"doc":"","i":[[3,"ConsensusState","safety_rules","Public representation of the internal state of SafetyRules…",null,null],[3,"PersistentSafetyStorage","","SafetyRules needs an abstract storage interface to act as…",null,null],[3,"Process","","",null,null],[3,"SafetyRules","","SafetyRules is responsible for the safety of the…",null,null],[3,"SafetyRulesManager","","",null,null],[4,"Error","","Different reasons for proposal rejection",null,null],[13,"BadTimeoutLastVotedRound","","",0,null],[13,"BadTimeoutPreferredRound","","",0,null],[13,"IncorrectEpoch","","",0,null],[13,"InternalError","","",0,null],[12,"error","safety_rules::Error","",1,null],[13,"InvalidAccumulatorExtension","safety_rules","",0,null],[12,"error","safety_rules::Error","",2,null],[13,"InvalidLedgerInfo","safety_rules","",0,null],[13,"InvalidQuorumCertificate","","",0,null],[13,"NotInitialized","","",0,null],[13,"ProposalRoundLowerThenPreferredBlock","","This proposal's round is less than round of preferred…",0,null],[12,"preferred_round","safety_rules::Error","",3,null],[13,"OldProposal","safety_rules","This proposal is too old - return last_voted_round",0,null],[12,"last_voted_round","safety_rules::Error","",4,null],[12,"proposal_round","","",4,null],[13,"SerializationError","safety_rules","",0,null],[13,"WaypointMismatch","","",0,null],[11,"new","","",5,[[["round"],["u64"],["waypoint"]],["self"]]],[11,"epoch","","Returns the current epoch",5,[[["self"]],["u64"]]],[11,"last_voted_round","","Returns the last round that was voted on",5,[[["self"]],["round"]]],[11,"preferred_round","","A \"preferred block\" is the two-chain head with the highest…",5,[[["self"]],["round"]]],[11,"waypoint","","Last known checkpoint this should map to a LedgerInfo that…",5,[[["self"]],["waypoint"]]],[11,"in_memory","","",6,[[["ed25519privatekey"]],["self"]]],[11,"initialize","","Use this to instantiate a PersistentStorage for a new data…",6,[[["box",["storage"]],["storage"],["ed25519privatekey"],["waypoint"]],["self"]]],[11,"new","","Use this to instantiate a PersistentStorage with an…",6,[[["storage"],["box",["storage"]]],["self"]]],[11,"consensus_key","","",6,[[["self"]],[["ed25519privatekey"],["result",["ed25519privatekey"]]]]],[11,"set_consensus_key","","",6,[[["self"],["ed25519privatekey"]],["result"]]],[11,"epoch","","",6,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"set_epoch","","",6,[[["self"],["u64"]],["result"]]],[11,"last_voted_round","","",6,[[["self"]],[["round"],["result",["round"]]]]],[11,"set_last_voted_round","","",6,[[["self"],["round"]],["result"]]],[11,"preferred_round","","",6,[[["self"]],[["round"],["result",["round"]]]]],[11,"set_preferred_round","","",6,[[["self"],["round"]],["result"]]],[11,"waypoint","","",6,[[["self"]],[["waypoint"],["result",["waypoint"]]]]],[11,"set_waypoint","","",6,[[["self"],["waypoint"]],["result"]]],[11,"new","","",7,[[["nodeconfig"]],["self"]]],[11,"start","","",7,[[["self"]]]],[11,"new","","Constructs a new instance of SafetyRules with the given…",8,[[["persistentsafetystorage"],["author"]],["self"]]],[11,"construct_ledger_info","","Produces a LedgerInfo that either commits a block based…",8,[[["self"],["block"]],["ledgerinfo"]]],[11,"new","","",9,[[["nodeconfig"]],["self"]]],[11,"new_local","","",9,[[["persistentsafetystorage"],["author"]],["self"]]],[11,"new_process","","",9,[[["socketaddr"]],["self"]]],[11,"new_serializer","","",9,[[["persistentsafetystorage"],["author"]],["self"]]],[11,"new_spawned_process","","",9,[[["nodeconfig"]],["self"]]],[11,"new_thread","","",9,[[["persistentsafetystorage"],["author"]],["self"]]],[11,"client","","",9,[[["self"]],[["tsafetyrules"],["box",["tsafetyrules"]]]]],[0,"process_client_wrapper","","",null,null],[3,"ProcessClientWrapper","safety_rules::process_client_wrapper","This container exists only so that we can kill the spawned…",null,null],[11,"new","","",10,[[["securebackend"]],["self"]]],[11,"signer","","",10,[[["self"]],["validatorsigner"]]],[0,"test_utils","safety_rules","",null,null],[5,"empty_proof","safety_rules::test_utils","",null,[[],["proof"]]],[5,"make_proposal_with_qc_and_proof","","",null,[[["validatorsigner"],["payload"],["proof"],["round"],["quorumcert"]],[["payload"],["voteproposal"]]]],[5,"make_proposal_with_qc","","",null,[[["round"],["quorumcert"],["validatorsigner"]],[["payload"],["voteproposal"]]]],[5,"make_proposal_with_parent","","",null,[[["validatorsigner"],["payload"],["voteproposal"],["round"],["option",["voteproposal"]]],[["payload"],["voteproposal"]]]],[5,"validator_signers_to_ledger_info","","",null,[[],["ledgerinfo"]]],[5,"validator_signers_to_waypoints","","",null,[[],["waypoint"]]],[5,"test_storage","","",null,[[["validatorsigner"]],["persistentsafetystorage"]]],[6,"Proof","","",null,null],[7,"COUNTERS","safety_rules","",null,null],[8,"TSafetyRules","","Interface for SafetyRules",null,null],[10,"consensus_state","","Provides the internal state of SafetyRules for monitoring…",11,[[["self"]],[["result",["consensusstate","error"]],["consensusstate"],["error"]]]],[10,"initialize","","Initialize SafetyRules using an Epoch ending LedgerInfo,…",11,[[["self"],["epochchangeproof"]],[["error"],["result",["error"]]]]],[10,"update","","Learn about a new quorum certificate. This can lead to…",11,[[["self"],["quorumcert"]],[["error"],["result",["error"]]]]],[10,"construct_and_sign_vote","","Attempts to vote for a given proposal following the voting…",11,[[["self"],["voteproposal"]],[["result",["vote","error"]],["vote"],["error"]]]],[10,"sign_proposal","","As the holder of the private key, SafetyRules also signs…",11,[[["self"],["blockdata"]],[["result",["block","error"]],["block"],["error"]]]],[10,"sign_timeout","","As the holder of the private key, SafetyRules also signs…",11,[[["self"],["timeout"]],[["result",["ed25519signature","error"]],["ed25519signature"],["error"]]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"test_only_hash","","",5,[[["self"]],["hashvalue"]]],[11,"vzip","","",5,[[],["v"]]],[11,"clear","","",5,[[["self"]]]],[11,"initialize","","",5,[[]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"test_only_hash","","",0,[[["self"]],["hashvalue"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","safety_rules::process_client_wrapper","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"consensus_state","safety_rules","",8,[[["self"]],[["result",["consensusstate","error"]],["consensusstate"],["error"]]]],[11,"initialize","","",8,[[["self"],["epochchangeproof"]],[["error"],["result",["error"]]]]],[11,"update","","Verify the QC is correct and up to date, if it is either…",8,[[["self"],["quorumcert"]],[["error"],["result",["error"]]]]],[11,"construct_and_sign_vote","","@TODO verify signature on vote proposal @TODO verify QC…",8,[[["self"],["voteproposal"]],[["result",["vote","error"]],["vote"],["error"]]]],[11,"sign_proposal","","@TODO only sign blocks that are later than…",8,[[["self"],["blockdata"]],[["result",["block","error"]],["block"],["error"]]]],[11,"sign_timeout","","Only sign the timeout if it is greater than or equal to…",8,[[["self"],["timeout"]],[["result",["ed25519signature","error"]],["ed25519signature"],["error"]]]],[11,"consensus_state","safety_rules::process_client_wrapper","",10,[[["self"]],[["result",["consensusstate","error"]],["consensusstate"],["error"]]]],[11,"initialize","","",10,[[["self"],["epochchangeproof"]],[["error"],["result",["error"]]]]],[11,"update","","",10,[[["self"],["quorumcert"]],[["error"],["result",["error"]]]]],[11,"construct_and_sign_vote","","",10,[[["self"],["voteproposal"]],[["result",["vote","error"]],["vote"],["error"]]]],[11,"sign_proposal","","",10,[[["self"],["blockdata"]],[["result",["block","error"]],["block"],["error"]]]],[11,"sign_timeout","","",10,[[["self"],["timeout"]],[["result",["ed25519signature","error"]],["ed25519signature"],["error"]]]],[11,"from","safety_rules","",0,[[["error"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"clone","","",5,[[["self"]],["consensusstate"]]],[11,"default","","",5,[[],["consensusstate"]]],[11,"eq","","",5,[[["consensusstate"],["self"]],["bool"]]],[11,"ne","","",5,[[["consensusstate"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["error"]],["bool"]]],[11,"ne","","",0,[[["self"],["error"]],["bool"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"deserialize","","",5,[[["__d"]],["result"]]],[11,"deserialize","","",0,[[["__d"]],["result"]]],[11,"serialize","","",5,[[["self"],["__s"]],["result"]]],[11,"serialize","","",0,[[["self"],["__s"]],["result"]]]],"p":[[4,"Error"],[13,"InternalError"],[13,"InvalidAccumulatorExtension"],[13,"ProposalRoundLowerThenPreferredBlock"],[13,"OldProposal"],[3,"ConsensusState"],[3,"PersistentSafetyStorage"],[3,"Process"],[3,"SafetyRules"],[3,"SafetyRulesManager"],[3,"ProcessClientWrapper"],[8,"TSafetyRules"]]};
searchIndex["schemadb"] = {"doc":"This library implements a schematized DB on top of…","i":[[3,"SchemaBatch","schemadb","`SchemaBatch` holds a collection of updates that can be…",null,null],[3,"SchemaIterator","","DB Iterator parameterized on [`Schema`] that seeks with…",null,null],[3,"DB","","This DB is a schematized RocksDB wrapper where all data…",null,null],[0,"schema","","This module provides traits that define the behavior of a…",null,null],[5,"assert_encode_decode","schemadb::schema","Helper used in tests to assert a (key, value) pair for a…",null,[[]]],[8,"KeyCodec","","This trait defines a type that can serve as a…",null,null],[10,"encode_key","","Converts `self` to bytes to be stored in DB.",0,[[["self"]],[["result",["vec"]],["vec",["u8"]]]]],[10,"decode_key","","Converts bytes fetched from DB to `Self`.",0,[[],["result"]]],[8,"ValueCodec","","This trait defines a type that can serve as a…",null,null],[10,"encode_value","","Converts `self` to bytes to be stored in DB.",1,[[["self"]],[["result",["vec"]],["vec",["u8"]]]]],[10,"decode_value","","Converts bytes fetched from DB to `Self`.",1,[[],["result"]]],[8,"SeekKeyCodec","","This defines a type that can be used to seek a…",null,null],[10,"encode_seek_key","","Converts `self` to bytes which is used to seek the…",2,[[["self"]],[["result",["vec"]],["vec",["u8"]]]]],[8,"Schema","","This trait defines a schema: an association of a column…",null,null],[18,"COLUMN_FAMILY_NAME","","The column family name associated with this struct. Note:…",3,null],[16,"Key","","Type of the key.",3,null],[16,"Value","","Type of the value.",3,null],[6,"ReadOptions","schemadb","Type alias to `rocksdb::ReadOptions`. See `rocksdb doc`",null,null],[6,"ColumnFamilyName","","Type alias to improve readability.",null,null],[17,"DEFAULT_CF_NAME","","Name for the `default` column family that's always open by…",null,null],[11,"new","","Creates an empty batch.",4,[[],["self"]]],[11,"put","","Adds an insert/update operation to the batch.",4,[[["self"]],["result"]]],[11,"delete","","Adds a delete operation to the batch.",4,[[["self"]],["result"]]],[11,"seek_to_first","","Seeks to the first key.",5,[[["self"]]]],[11,"seek_to_last","","Seeks to the last key.",5,[[["self"]]]],[11,"seek","","Seeks to the first key whose binary representation is…",5,[[["self"],["sk"]],["result"]]],[11,"seek_for_prev","","Seeks to the last key whose binary representation is less…",5,[[["self"],["sk"]],["result"]]],[11,"open","","Create db with all the column families provided if it…",6,[[["str"],["columnfamilyname"],["vec",["columnfamilyname"]]],["result"]]],[11,"open_readonly","","Open db in readonly mode",6,[[["str"],["columnfamilyname"],["vec",["columnfamilyname"]]],["result"]]],[11,"get","","Reads single record by key.",6,[[["self"]],[["option"],["result",["option"]]]]],[11,"put","","Writes single record.",6,[[["self"]],["result"]]],[11,"range_delete","","Delete all keys in range [begin, end).",6,[[["self"],["sk"]],["result"]]],[11,"iter","","Returns a [`SchemaIterator`] on a certain schema.",6,[[["readoptions"],["self"]],[["schemaiterator"],["result",["schemaiterator"]]]]],[11,"write_schemas","","Writes a group of records wrapped in a [`SchemaBatch`].",6,[[["schemabatch"],["self"]],["result"]]],[11,"get_approximate_sizes_cf","","Returns the approximate size of each non-empty column…",6,[[["self"]],[["btreemap",["columnfamilyname","u64"]],["result",["btreemap"]]]]],[11,"flush_all","","Flushes all memtable data. This is only used for testing…",6,[[["self"]],["result"]]],[14,"define_schema","","Macro for defining a SchemaDB schema.",null,null],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"next","","",5,[[["self"]],["option"]]],[11,"default","","",4,[[],["schemabatch"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]]],"p":[[8,"KeyCodec"],[8,"ValueCodec"],[8,"SeekKeyCodec"],[8,"Schema"],[3,"SchemaBatch"],[3,"SchemaIterator"],[3,"DB"]]};
searchIndex["scratchpad"] = {"doc":"This crate provides in-memory representation of Libra core…","i":[[3,"SparseMerkleTree","scratchpad","The Sparse Merkle Tree implementation.",null,null],[4,"AccountStatus","","`AccountStatus` describes the result of querying an…",null,null],[13,"ExistsInScratchPad","","The account exists in the tree, therefore we can give its…",0,null],[13,"ExistsInDB","","The account does not exist in the tree, but exists in DB.…",0,null],[13,"DoesNotExist","","The account does not exist in either the tree or DB. This…",0,null],[13,"Unknown","","We do not know if this account exists or not and need to…",0,null],[11,"new","","Constructs a Sparse Merkle Tree with a root hash. This is…",1,[[["hashvalue"]],["self"]]],[11,"update","","Constructs a new Sparse Merkle Tree as if we are updating…",1,[[["self"],["vec"]],[["updateerror"],["result",["updateerror"]]]]],[11,"get","","Queries a `key` in this `SparseMerkleTree`.",1,[[["self"],["hashvalue"]],["accountstatus"]]],[11,"root_hash","","Returns the root hash of this tree.",1,[[["self"]],["hashvalue"]]],[11,"prune","","Prunes a tree by replacing every node reachable from root…",1,[[["self"]]]],[8,"ProofRead","","A type that implements `ProofRead` can provide proof for…",null,null],[10,"get_proof","","Gets verified proof for this key in persistent storage.",2,[[["self"],["hashvalue"]],[["option",["sparsemerkleproof"]],["sparsemerkleproof"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"clear","","",1,[[["self"]]]],[11,"initialize","","",1,[[]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"default","","",1,[[],["self"]]],[11,"eq","","",0,[[["accountstatus"],["self"]],["bool"]]],[11,"ne","","",0,[[["accountstatus"],["self"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]]],"p":[[4,"AccountStatus"],[3,"SparseMerkleTree"],[8,"ProofRead"]]};
searchIndex["serializer_tests"] = {"doc":"","i":[],"p":[]};
searchIndex["simple_storage_client"] = {"doc":"","i":[[3,"SimpleStorageClient","simple_storage_client","",null,null],[11,"new","","",0,[[["socketaddr"]],["self"]]],[11,"get_account_state_with_proof_by_version","","",0,[[["version"],["self"],["accountaddress"]],[["result",["error"]],["error"]]]],[11,"get_startup_info","","",0,[[["self"]],[["option",["startupinfo"]],["result",["option","error"]],["error"]]]],[11,"save_transactions","","",0,[[["vec",["transactiontocommit"]],["option",["ledgerinfowithsignatures"]],["ledgerinfowithsignatures"],["version"],["transactiontocommit"],["self"]],[["result",["error"]],["error"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"get_account_state_with_proof_by_version","","",0,[[["u64"],["self"],["accountaddress"]],["result"]]],[11,"get_startup_info","","",0,[[["self"]],[["option",["startupinfo"]],["result",["option"]]]]],[11,"get_latest_account_state","","",0,[[["self"],["accountaddress"]],[["result",["option"]],["option",["accountstateblob"]]]]],[11,"get_latest_ledger_info","","",0,[[["self"]],[["result",["ledgerinfowithsignatures"]],["ledgerinfowithsignatures"]]]],[11,"get_txn_by_account","","",0,[[["accountaddress"],["bool"],["u64"],["self"]],[["result",["option"]],["option",["transactionwithproof"]]]]],[11,"get_transactions","","",0,[[["bool"],["self"],["u64"]],[["result",["transactionlistwithproof"]],["transactionlistwithproof"]]]],[11,"get_events","","",0,[[["bool"],["eventkey"],["u64"],["self"]],[["result",["vec"]],["vec"]]]],[11,"get_state_proof","","",0,[[["self"],["u64"]],["result"]]],[11,"get_state_proof_with_ledger_info","","",0,[[["ledgerinfowithsignatures"],["self"],["u64"]],["result"]]],[11,"get_account_state_with_proof","","",0,[[["version"],["self"],["accountaddress"]],[["result",["accountstatewithproof"]],["accountstatewithproof"]]]],[11,"get_latest_state_root","","",0,[[["self"]],["result"]]],[11,"get_latest_tree_state","","",0,[[["self"]],[["treestate"],["result",["treestate"]]]]],[11,"get_epoch_change_ledger_infos","","",0,[[["self"],["u64"]],[["epochchangeproof"],["result",["epochchangeproof"]]]]],[11,"get_ledger_info","","",0,[[["self"],["u64"]],[["result",["ledgerinfowithsignatures"]],["ledgerinfowithsignatures"]]]],[11,"save_transactions","","",0,[[["ledgerinfowithsignatures"],["option",["ledgerinfowithsignatures"]],["self"],["version"]],["result"]]]],"p":[[3,"SimpleStorageClient"]]};
searchIndex["socket_bench_server"] = {"doc":"","i":[[3,"Args","socket_bench_server","",null,null],[12,"tcp_addr","","",0,null],[12,"tcp_noise_addr","","",0,null],[12,"msg_lens","","",0,null],[5,"build_memsocket_noise_transport","","Build a MemorySocket + Noise transport",null,[[]]],[5,"build_tcp_noise_transport","","Build a Tcp + Noise transport",null,[[]]],[5,"server_stream_handler","","Server side handler for send throughput benchmark when the…",null,[[["l"]]]],[5,"start_stream_server","","",null,[[["handle"],["t"],["networkaddress"]],["networkaddress"]]],[11,"from_env","","",0,[[],["self"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[3,"Args"]]};
searchIndex["spec_lang"] = {"doc":"","i":[[5,"run_spec_lang_compiler","spec_lang","",null,[[["str"],["vec",["string"]],["option",["str"]],["string"]],[["globalenv"],["result",["globalenv"]]]]],[0,"ast","","Contains AST definitions for the specification language…",null,null],[3,"SpecVarDecl","spec_lang::ast","Declarations",null,null],[12,"loc","","",0,null],[12,"name","","",0,null],[12,"type_params","","",0,null],[12,"type_","","",0,null],[3,"SpecFunDecl","","",null,null],[12,"loc","","",1,null],[12,"name","","",1,null],[12,"type_params","","",1,null],[12,"params","","",1,null],[12,"result_type","","",1,null],[12,"used_spec_vars","","",1,null],[12,"is_pure","","",1,null],[12,"body","","",1,null],[3,"Condition","","",null,null],[12,"loc","","",2,null],[12,"kind","","",2,null],[12,"exp","","",2,null],[3,"Spec","","Specification and properties associated with a language…",null,null],[12,"conditions","","",3,null],[12,"properties","","",3,null],[12,"on_impl","","",3,null],[3,"LocalVarDecl","","",null,null],[12,"id","","",4,null],[12,"name","","",4,null],[12,"binding","","",4,null],[3,"ModuleName","","Names Represents a module name, consisting of address and…",null,null],[3,"ModuleNameDisplay","","A helper to support module names in formatting.",null,null],[3,"QualifiedSymbol","","",null,null],[12,"module_name","","",5,null],[12,"symbol","","",5,null],[3,"QualifiedSymbolDisplay","","A helper to support qualified symbols in formatting.",null,null],[4,"ConditionKind","","Conditions",null,null],[13,"Assert","","",6,null],[13,"Assume","","",6,null],[13,"Decreases","","",6,null],[13,"AbortsIf","","",6,null],[13,"Ensures","","",6,null],[13,"Requires","","",6,null],[13,"RequiresModule","","",6,null],[13,"Invariant","","",6,null],[13,"InvariantModule","","",6,null],[13,"InvariantUpdate","","",6,null],[13,"VarUpdate","","",6,null],[13,"VarPack","","",6,null],[13,"VarUnpack","","",6,null],[4,"Exp","","Expressions",null,null],[13,"Error","","",7,null],[13,"Value","","",7,null],[13,"LocalVar","","",7,null],[13,"SpecVar","","",7,null],[13,"Call","","",7,null],[13,"Invoke","","",7,null],[13,"Lambda","","",7,null],[13,"Block","","",7,null],[13,"IfElse","","",7,null],[4,"Operation","","",null,null],[13,"Function","","",8,null],[13,"Pack","","",8,null],[13,"Tuple","","",8,null],[13,"Select","","",8,null],[13,"Local","","",8,null],[13,"Result","","",8,null],[13,"Index","","",8,null],[13,"Slice","","",8,null],[13,"Range","","",8,null],[13,"Add","","",8,null],[13,"Sub","","",8,null],[13,"Mul","","",8,null],[13,"Mod","","",8,null],[13,"Div","","",8,null],[13,"BitOr","","",8,null],[13,"BitAnd","","",8,null],[13,"Xor","","",8,null],[13,"Shl","","",8,null],[13,"Shr","","",8,null],[13,"Implies","","",8,null],[13,"And","","",8,null],[13,"Or","","",8,null],[13,"Eq","","",8,null],[13,"Neq","","",8,null],[13,"Lt","","",8,null],[13,"Gt","","",8,null],[13,"Le","","",8,null],[13,"Ge","","",8,null],[13,"Not","","",8,null],[13,"Len","","",8,null],[13,"All","","",8,null],[13,"Any","","",8,null],[13,"Global","","",8,null],[13,"Exists","","",8,null],[13,"Old","","",8,null],[13,"Update","","",8,null],[13,"Sender","","",8,null],[13,"MaxU8","","",8,null],[13,"MaxU64","","",8,null],[13,"MaxU128","","",8,null],[4,"Value","","",null,null],[13,"Address","","",9,null],[13,"Number","","",9,null],[13,"Bool","","",9,null],[13,"ByteArray","","",9,null],[6,"PropertyBag","","Specifications A set of properties stemming from pragmas.",null,null],[11,"get_spec_var_target","","If this is an assignment to a spec var, return it.",6,[[["self"]],["option"]]],[11,"allows_old","","Returns true of this condition allows the `old(..)`…",6,[[["self"]],["bool"]]],[11,"allowed_on_public_fun_decl","","Returns true if this condition is allowed on a public…",6,[[["self"]],["bool"]]],[11,"allowed_on_private_fun_decl","","Returns true if this condition is allowed on a private…",6,[[["self"]],["bool"]]],[11,"allowed_on_fun_impl","","Returns true if this condition is allowed in a function…",6,[[["self"]],["bool"]]],[11,"allowed_on_struct","","Returns true if this condition is allowed on a struct.",6,[[["self"]],["bool"]]],[11,"allowed_on_module","","Returns true if this condition is allowed on a module.",6,[[["self"]],["bool"]]],[11,"has_conditions","","",3,[[["self"]],["bool"]]],[11,"filter","","",3,[[["self"],["p"]]]],[11,"filter_kind","","",3,[[["self"],["conditionkind"]]]],[11,"any","","",3,[[["self"],["p"]],["bool"]]],[11,"any_kind","","",3,[[["self"],["conditionkind"]],["bool"]]],[11,"node_id","","",7,[[["self"]],["nodeid"]]],[11,"visit","","Visits expression, calling visitor on each sub-expression,…",7,[[["f"],["self"]]]],[11,"is_pure","","Determines whether this operation is pure (does not depend…",8,[[["f"],["self"]],["bool"]]],[11,"is_pure","","Determines whether this expression is pure (does not…",7,[[["f"],["self"]],["bool"]]],[11,"new","","",10,[[["biguint"],["symbol"]],["modulename"]]],[11,"from_str","","",10,[[["str"],["symbol"]],["modulename"]]],[11,"addr","","",10,[[["self"]],["biguint"]]],[11,"name","","",10,[[["self"]],["symbol"]]],[11,"display","","Creates a value implementing the Display trait which shows…",10,[[["self"],["symbolpool"]],["modulenamedisplay"]]],[11,"display_full","","Creates a value implementing the Display trait which shows…",10,[[["self"],["symbolpool"]],["modulenamedisplay"]]],[11,"display","","Creates a value implementing the Display trait which shows…",5,[[["self"],["symbolpool"]],["qualifiedsymboldisplay"]]],[11,"display_simple","","Creates a value implementing the Display trait which shows…",5,[[["self"],["symbolpool"]],["qualifiedsymboldisplay"]]],[11,"display_full","","Creates a value implementing the Display trait which shows…",5,[[["self"],["symbolpool"]],["qualifiedsymboldisplay"]]],[0,"env","spec_lang","Provides an environment -- global state -- for…",null,null],[3,"Loc","spec_lang::env","Locations A location, consisting of a FileId and a span in…",null,null],[3,"ModuleId","","Identifier for a module.",null,null],[3,"StructId","","Identifier for a structure/resource, relative to module.",null,null],[3,"FieldId","","Identifier for a field of a structure, relative to struct.",null,null],[3,"FunId","","Identifier for a Move function, relative to module.",null,null],[3,"SpecFunId","","Identifier for a specification function, relative to module.",null,null],[3,"SpecVarId","","Identifier for a specification variable, relative to module.",null,null],[3,"NodeId","","Identifier for a node in the AST, relative to a module.…",null,null],[3,"GlobalEnv","","Global Environment Global environment for a set of modules.",null,null],[3,"ModuleData","","Module Environment Represents data for a module.",null,null],[12,"name","","Module name.",11,null],[12,"id","","Id of this module in the global env.",11,null],[12,"module","","Module byte code.",11,null],[12,"struct_data","","Struct data.",11,null],[12,"struct_idx_to_id","","Mapping from struct definition index to id in above map.",11,null],[12,"function_data","","Function data.",11,null],[12,"function_idx_to_id","","Mapping from function definition index to id in above map.",11,null],[12,"spec_vars","","Specification variables, in SpecVarId order.",11,null],[12,"spec_funs","","Specification functions, in SpecFunId order.",11,null],[12,"module_spec","","Module level specification.",11,null],[12,"source_map","","Module source location information.",11,null],[12,"loc","","The location of this module.",11,null],[12,"loc_map","","A map from node id to associated location.",11,null],[12,"type_map","","A map from node id to associated type.",11,null],[12,"instantiation_map","","A map from node id to associated instantiation of type…",11,null],[3,"ModuleEnv","","Represents a module environment.",null,null],[12,"env","","Reference to the outer env.",12,null],[3,"StructData","","Struct Environment",null,null],[3,"StructEnv","","",null,null],[12,"module_env","","Reference to enclosing module.",13,null],[3,"FieldData","","Field Environment",null,null],[3,"FieldEnv","","",null,null],[12,"struct_env","","Reference to enclosing struct.",14,null],[3,"TypeParameter","","Function Environment Represents a type parameter.",null,null],[12,"0","","",15,null],[12,"1","","",15,null],[3,"Parameter","","Represents a parameter.",null,null],[12,"0","","",16,null],[12,"1","","",16,null],[3,"FunctionData","","",null,null],[3,"FunctionEnv","","",null,null],[12,"module_env","","Reference to enclosing module.",17,null],[6,"MoveIrLoc","","Alias for the Loc variant of MoveIR. This uses a `&static…",null,null],[17,"SCRIPT_MODULE_NAME","","Constants A name we use to represent a script as a module.",null,null],[17,"SCRIPT_BYTECODE_FUN_NAME","","Names used in the bytecode/AST to represent the main…",null,null],[17,"SCRIPT_AST_FUN_NAME","","",null,null],[11,"new","","",18,[[["fileid"],["span"]],["loc"]]],[11,"span","","",18,[[["self"]],["span"]]],[11,"file_id","","",18,[[["self"]],["fileid"]]],[11,"at_end","","",18,[[["self"]],["loc"]]],[11,"at_start","","",18,[[["self"]],["loc"]]],[11,"new","","",19,[[["symbol"]],["self"]]],[11,"symbol","","",19,[[],["symbol"]]],[11,"new","","",20,[[["symbol"]],["self"]]],[11,"symbol","","",20,[[],["symbol"]]],[11,"new","","",21,[[["symbol"]],["self"]]],[11,"symbol","","",21,[[],["symbol"]]],[11,"new","","",22,[[["usize"]],["self"]]],[11,"as_usize","","",22,[[],["usize"]]],[11,"new","","",23,[[["usize"]],["self"]]],[11,"as_usize","","",23,[[],["usize"]]],[11,"new","","",24,[[["usize"]],["self"]]],[11,"new","","",25,[[["usize"]],["self"]]],[11,"to_usize","","",25,[[],["usize"]]],[11,"new","","Creates a new environment.",26,[[],["self"]]],[11,"symbol_pool","","Returns a reference to the symbol pool owned by this…",26,[[["self"]],["symbolpool"]]],[11,"add_source","","Adds a source to this environment, returning a FileId for…",26,[[["str"],["self"],["bool"]],["fileid"]]],[11,"add_diag","","Adds diagnostic to the environment.",26,[[["self"],["diagnostic"]]]],[11,"error_with_notes","","Adds an error to this environment, with notes.",26,[[["str"],["vec",["string"]],["string"],["self"],["loc"]]]],[11,"error","","Adds an error to this environment, without notes.",26,[[["str"],["self"],["loc"]]]],[11,"unknown_loc","","Returns the unknown location.",26,[[["self"]],["loc"]]],[11,"unknown_move_ir_loc","","Returns a Move IR version of the unknown location which is…",26,[[["self"]],["moveirloc"]]],[11,"internal_loc","","Returns the internal location.",26,[[["self"]],["loc"]]],[11,"to_loc","","Converts a Loc as used by the move-lang compiler to the…",26,[[["self"],["moveirloc"]],["loc"]]],[11,"file_id_to_idx","","Maps a FileId to an index which can be mapped back to a…",26,[[["fileid"],["self"]],["u16"]]],[11,"file_idx_to_id","","Maps a an index which was obtained by `file_id_to_idx`…",26,[[["u16"],["self"]],["fileid"]]],[11,"get_position","","Returns file name and line/column position for a location,…",26,[[["self"],["loc"]],["option"]]],[11,"get_file_count","","",26,[[["self"]],["usize"]]],[11,"has_errors","","Returns true if diagnostics have error severity or worse.",26,[[["self"]],["bool"]]],[11,"report_errors","","Writes accumulated diagnostics to writer.",26,[[["w"],["self"]]]],[11,"add","","Adds a new module to the environment. StructData and…",26,[[["structid"],["funid"],["btreemap",["nodeid","loc"]],["moveirloc"],["functiondata"],["vec",["specvardecl"]],["btreemap",["nodeid","vec"]],["self"],["nodeid"],["sourcemap",["moveirloc"]],["type"],["btreemap",["structid","structdata"]],["loc"],["structdata"],["compiledmodule"],["specfundecl"],["vec",["specfundecl"]],["spec"],["btreemap",["nodeid","type"]],["btreemap",["funid","functiondata"]],["specvardecl"],["vec",["type"]]]]],[11,"create_function_data","","Creates data for a function, adding any information not…",26,[[["compiledmodule"],["functiondefinitionindex"],["vec",["symbol"]],["loc"],["spec"],["self"],["symbol"]],["functiondata"]]],[11,"create_struct_data","","Creates data for a struct. Currently all information is…",26,[[["compiledmodule"],["symbol"],["spec"],["loc"],["self"],["structdefinitionindex"]],["structdata"]]],[11,"find_module","","Finds a module by name and returns an environment for it.",26,[[["self"],["modulename"]],[["option",["moduleenv"]],["moduleenv"]]]],[11,"find_module_by_name","","Finds a module by simple name and returns an environment…",26,[[["self"],["symbol"]],[["option",["moduleenv"]],["moduleenv"]]]],[11,"get_enclosing_module","","Return the module enclosing this location.",26,[[["self"],["loc"]],[["option",["moduleenv"]],["moduleenv"]]]],[11,"get_enclosing_function","","Returns the function enclosing this location.",26,[[["self"],["loc"]],[["option",["functionenv"]],["functionenv"]]]],[11,"get_enclosing_struct","","Returns the struct enclosing this location.",26,[[["self"],["loc"]],[["option",["structenv"]],["structenv"]]]],[11,"get_module_count","","",26,[[["self"]],["usize"]]],[11,"get_module","","Gets a module by id.",26,[[["self"],["moduleid"]],["moduleenv"]]],[11,"get_modules","","Returns an iterator for all modules in the environment.",26,[[["self"]]]],[11,"get_bytecode_modules","","Returns an iterator for all bytecode modules in the…",26,[[["self"]]]],[11,"get_all_structs_with_conditions","","Returns all structs in all modules which carry invariants.",26,[[["self"]],[["type"],["vec",["type"]]]]],[11,"get_id","","Returns the id of this module in the global env.",12,[[["self"]],["moduleid"]]],[11,"get_name","","Returns the name of this module.",12,[[["self"]],["modulename"]]],[11,"is_script_module","","Returns true if this is a module representing a script.",12,[[["self"]],["bool"]]],[11,"is_in_dependency","","Returns true of this module is from a dependency, i.e. not…",12,[[["self"]],["bool"]]],[11,"symbol_pool","","Shortcut for accessing the symbol pool.",12,[[["self"]],["symbolpool"]]],[11,"get_verified_module","","Gets the underlying bytecode module.",12,[[["self"]],["compiledmodule"]]],[11,"find_function","","Gets a FunctionEnv in this module by name.",12,[[["self"],["symbol"]],[["option",["functionenv"]],["functionenv"]]]],[11,"get_function","","Gets a FunctionEnv by id.",12,[[["funid"],["self"]],["functionenv"]]],[11,"into_function","","Gets a FunctionEnv by id.",12,[[["funid"]],["functionenv"]]],[11,"get_function_count","","Gets the number of functions in this module.",12,[[["self"]],["usize"]]],[11,"get_functions","","Returns iterator over FunctionEnvs in this module.",12,[[["self"]]]],[11,"into_functions","","Returns iterator over FunctionEnvs in this module.",12,[[]]],[11,"get_called_function","","Get FunctionEnv for a function used in this module, via…",12,[[["self"],["functionhandleindex"]],["functionenv"]]],[11,"find_struct","","Gets a StructEnv in this module by name.",12,[[["self"],["symbol"]],[["option",["structenv"]],["structenv"]]]],[11,"get_struct_id","","Gets the struct id from a definition index which must be…",12,[[["self"],["structdefinitionindex"]],["structid"]]],[11,"get_struct","","Gets a StructEnv by id.",12,[[["self"],["structid"]],["structenv"]]],[11,"get_struct_by_def_idx","","",12,[[["self"],["structdefinitionindex"]],["structenv"]]],[11,"get_function_id","","Gets the function id from a definition index which must be…",12,[[["functiondefinitionindex"],["self"]],["funid"]]],[11,"into_struct","","Gets a StructEnv by id, consuming this module env.",12,[[["structid"]],["structenv"]]],[11,"get_struct_count","","Gets the number of structs in this module.",12,[[["self"]],["usize"]]],[11,"get_structs","","Returns iterator over structs in this module.",12,[[["self"]]]],[11,"into_structs","","Returns iterator over structs in this module.",12,[[]]],[11,"globalize_signature","","Globalizes a signature local to this module.",12,[[["signaturetoken"],["self"]],["type"]]],[11,"globalize_signatures","","Globalizes a list of signatures.",12,[[["self"]],[["type"],["vec",["type"]]]]],[11,"get_type_actuals","","Gets a list of type actuals associated with the index in…",12,[[["option",["signatureindex"]],["self"],["signatureindex"]],[["type"],["vec",["type"]]]]],[11,"get_constant","","Retrieve a constant from the pool",12,[[["self"],["constantpoolindex"]],["vmconstant"]]],[11,"get_constant_value","","Converts a constant to the specified type. The type must…",12,[[["vmconstant"],["self"]],["vmvalue"]]],[11,"get_address_identifier","","Retrieve an address identifier from the pool",12,[[["self"],["addressidentifierindex"]],["biguint"]]],[11,"addr_to_big_uint","","Converts an address identifier to a number representing…",12,[[["accountaddress"]],["biguint"]]],[11,"get_spec_vars","","Returns specification variables of this module.",12,[[["self"]]]],[11,"get_spec_var","","Gets spec var by id.",12,[[["self"],["specvarid"]],["specvardecl"]]],[11,"get_spec_funs","","Returns specification functions of this module.",12,[[["self"]]]],[11,"get_spec_fun","","Gets spec fun by id.",12,[[["self"],["specfunid"]],["specfundecl"]]],[11,"get_spec","","Gets module specification.",12,[[["self"]],["spec"]]],[11,"get_spec_funs_of_name","","Get all spec fun overloads with the given name.",12,[[["self"],["symbol"]]]],[11,"get_node_loc","","Gets the location of the given node.",12,[[["self"],["nodeid"]],["loc"]]],[11,"get_node_type","","Gets the type of the given node.",12,[[["self"],["nodeid"]],["type"]]],[11,"get_node_instantiation","","Gets the type parameter instantiation associated with the…",12,[[["self"],["nodeid"]],[["type"],["vec",["type"]]]]],[11,"get_name","","Returns the name of this struct.",13,[[["self"]],["symbol"]]],[11,"symbol_pool","","Shortcut for accessing the symbol pool.",13,[[["self"]],["symbolpool"]]],[11,"get_loc","","Returns the location of this struct.",13,[[["self"]],["loc"]]],[11,"get_properties","","Returns properties from pragmas.",13,[[["self"]],["propertybag"]]],[11,"get_id","","Gets the definition index associated with this struct.",13,[[["self"]],["structid"]]],[11,"is_native","","Determines whether this struct is native.",13,[[["self"]],["bool"]]],[11,"is_vector","","Determines whether this struct is the well-known vector…",13,[[["self"]],["bool"]]],[11,"is_resource","","Determines whether this struct is a resource type.",13,[[["self"]],["bool"]]],[11,"get_fields","","Get an iterator for the fields, ordered by offset.",13,[[["self"]]]],[11,"get_field_count","","Return the number of fields in the struct.",13,[[["self"]],["usize"]]],[11,"get_field","","Gets a field by its id.",13,[[["self"],["fieldid"]],["fieldenv"]]],[11,"find_field","","Find a field by its name.",13,[[["self"],["symbol"]],[["option",["fieldenv"]],["fieldenv"]]]],[11,"get_field_by_offset","","Gets a field by its offset.",13,[[["self"],["usize"]],["fieldenv"]]],[11,"get_type_parameters","","Returns the type parameters associated with this struct.",13,[[["self"]],[["typeparameter"],["vec",["typeparameter"]]]]],[11,"has_conditions","","Returns true if this struct has specifcation conditions.",13,[[["self"]],["bool"]]],[11,"get_spec","","Returns the data invariants associated with this struct.",13,[[["self"]],["spec"]]],[11,"get_name","","Gets the name of this field.",14,[[["self"]],["symbol"]]],[11,"get_id","","Gets the id of this field.",14,[[["self"]],["fieldid"]]],[11,"get_type","","Gets the type of this field.",14,[[["self"]],["type"]]],[11,"get_offset","","Get field offset.",14,[[["self"]],["usize"]]],[11,"get_name","","Returns the name of this function.",17,[[["self"]],["symbol"]]],[11,"get_id","","Gets the id of this function.",17,[[["self"]],["funid"]]],[11,"get_def_idx","","Gets the definition index of this function.",17,[[["self"]],["functiondefinitionindex"]]],[11,"symbol_pool","","Shortcut for accessing the symbol pool.",17,[[["self"]],["symbolpool"]]],[11,"get_loc","","Returns the location of this function.",17,[[["self"]],["loc"]]],[11,"get_bytecode_loc","","Returns the location of the bytecode at the given offset.",17,[[["u16"],["self"]],["loc"]]],[11,"get_bytecode","","Returns the bytecode associated with this function.",17,[[["self"]]]],[11,"is_pragma_true","","Returns the value of a boolean pragma for this function.…",17,[[["str"],["self"]],["bool"]]],[11,"is_native","","Returns true if this function is native. The function is…",17,[[["self"]],["bool"]]],[11,"is_public","","Returns true if this function is public.",17,[[["self"]],["bool"]]],[11,"is_mutating","","Returns true if this function mutates any references (i.e.…",17,[[["self"]],["bool"]]],[11,"get_type_parameters","","Returns the type parameters associated with this function.",17,[[["self"]],[["typeparameter"],["vec",["typeparameter"]]]]],[11,"get_parameter_count","","",17,[[["self"]],["usize"]]],[11,"get_parameters","","Returns the regular parameters associated with this…",17,[[["self"]],[["vec",["parameter"]],["parameter"]]]],[11,"get_return_types","","Returns return types of this function.",17,[[["self"]],[["type"],["vec",["type"]]]]],[11,"get_return_count","","Returns the number of return values of this function.",17,[[["self"]],["usize"]]],[11,"get_local_name","","Get the name to be used for a local. If the local is an…",17,[[["self"],["usize"]],["symbol"]]],[11,"get_local_count","","Gets the number of proper locals of this function. Those…",17,[[["self"]],["usize"]]],[11,"get_local_type","","Gets the type of the local at index. This must use an…",17,[[["self"],["usize"]],["type"]]],[11,"get_spec","","Returns associated specification.",17,[[["self"]],["spec"]]],[11,"get_acquires_global_resources","","Returns the acquired global resource types.",17,[[["self"]],[["structid"],["vec",["structid"]]]]],[0,"symbol","spec_lang","Contains definitions of symbols -- internalized strings…",null,null],[3,"Symbol","spec_lang::symbol","Representation of a symbol.",null,null],[3,"SymbolDisplay","","A helper to support symbols in formatting.",null,null],[3,"SymbolPool","","A pool of symbols. Allows to lookup a symbol by a string…",null,null],[11,"display","","",27,[[["self"],["symbolpool"]],["symboldisplay"]]],[11,"new","","Creates a new SymbolPool.",28,[[],["symbolpool"]]],[11,"make","","Looks up a symbol by its string representation. If a…",28,[[["str"],["self"]],["symbol"]]],[11,"string","","Returns the string representation of this symbol, as an…",28,[[["self"],["symbol"]],[["rc",["string"]],["string"]]]],[0,"ty","spec_lang","Contains types and related functions.",null,null],[3,"Substitution","spec_lang::ty","A type substitution.",null,null],[3,"TypeError","","Represents an type error resulting from unification.",null,null],[12,"message","","",29,null],[3,"TypeDisplay","","Helper for type displays.",null,null],[4,"Type","","Represents a type.",null,null],[13,"Primitive","","",30,null],[13,"Tuple","","",30,null],[13,"Vector","","",30,null],[13,"Struct","","",30,null],[13,"TypeParameter","","",30,null],[13,"Reference","","",30,null],[13,"Fun","","",30,null],[13,"Error","","",30,null],[13,"Var","","",30,null],[4,"PrimitiveType","","Represents a primitive (builtin) type.",null,null],[13,"Bool","","",31,null],[13,"U8","","",31,null],[13,"U64","","",31,null],[13,"U128","","",31,null],[13,"Address","","",31,null],[13,"Num","","",31,null],[13,"Range","","",31,null],[4,"TypeDisplayContext","","Data providing context for displaying types.",null,null],[13,"WithoutEnv","","",32,null],[12,"symbol_pool","spec_lang::ty::TypeDisplayContext","",33,null],[12,"reverse_struct_table","","",33,null],[13,"WithEnv","spec_lang::ty","",32,null],[12,"env","spec_lang::ty::TypeDisplayContext","",34,null],[17,"BOOL_TYPE","spec_lang::ty","",null,null],[17,"NUM_TYPE","","",null,null],[11,"new_prim","","",30,[[["primitivetype"]],["type"]]],[11,"is_reference","","Determines whether this is a reference.",30,[[["self"]],["bool"]]],[11,"is_mutable_reference","","Determines whether this is a mutable reference.",30,[[["self"]],["bool"]]],[11,"is_immutable_reference","","Determines whether this is an immutable reference.",30,[[["self"]],["bool"]]],[11,"is_number","","Returns true if this is any number type.",30,[[["self"]],["bool"]]],[11,"replace_struct_instantiation","","If this is a struct type, replace the type instantiation.",30,[[["self"]],["type"]]],[11,"get_struct","","If this is a struct type, return the associated struct env…",30,[[["self"],["globalenv"]],["option"]]],[11,"instantiate","","Instantiates type parameters in this type.",30,[[["self"]],["type"]]],[11,"contains","","Checks whether this type contains a type for which the…",30,[[["self"],["p"]],["bool"]]],[11,"is_incomplete","","Returns true if this type is incomplete, i.e. contains any…",30,[[["self"]],["bool"]]],[11,"new","","Creates a new substitution.",35,[[],["self"]]],[11,"specialize","","Specializes the type, substituting all variables bound in…",35,[[["self"],["type"]],["type"]]],[11,"unify","","Unify two types, returning the unified type.",35,[[["typedisplaycontext"],["self"],["type"]],[["typeerror"],["result",["type","typeerror"]],["type"]]]],[11,"display","","",30,[[["self"],["typedisplaycontext"]],["typedisplay"]]],[11,"from","spec_lang::ast","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"clear","","",3,[[["self"]]]],[11,"initialize","","",3,[[]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"equivalent","","",10,[[["k"],["self"]],["bool"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_string","","",36,[[["self"]],["string"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"vzip","","",36,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"equivalent","","",5,[[["k"],["self"]],["bool"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_string","","",37,[[["self"]],["string"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"vzip","","",37,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","spec_lang::env","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"vzip","","",18,[[],["v"]]],[11,"equivalent","","",18,[[["k"],["self"]],["bool"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"vzip","","",25,[[],["v"]]],[11,"equivalent","","",25,[[["k"],["self"]],["bool"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"vzip","","",20,[[],["v"]]],[11,"equivalent","","",20,[[["k"],["self"]],["bool"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"vzip","","",21,[[],["v"]]],[11,"equivalent","","",21,[[["k"],["self"]],["bool"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"vzip","","",19,[[],["v"]]],[11,"equivalent","","",19,[[["k"],["self"]],["bool"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"vzip","","",22,[[],["v"]]],[11,"equivalent","","",22,[[["k"],["self"]],["bool"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"vzip","","",23,[[],["v"]]],[11,"equivalent","","",23,[[["k"],["self"]],["bool"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"vzip","","",24,[[],["v"]]],[11,"equivalent","","",24,[[["k"],["self"]],["bool"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"vzip","","",26,[[],["v"]]],[11,"clear","","",26,[[["self"]]]],[11,"initialize","","",26,[[]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"vzip","","",38,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"vzip","","",39,[[],["v"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"vzip","","",40,[[],["v"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","spec_lang::symbol","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"vzip","","",27,[[],["v"]]],[11,"equivalent","","",27,[[["k"],["self"]],["bool"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_string","","",41,[[["self"]],["string"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"vzip","","",41,[[],["v"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"vzip","","",28,[[],["v"]]],[11,"clear","","",28,[[["self"]]]],[11,"initialize","","",28,[[]]],[11,"from","spec_lang::ty","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"vzip","","",35,[[],["v"]]],[11,"clear","","",35,[[["self"]]]],[11,"initialize","","",35,[[]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"vzip","","",29,[[],["v"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_string","","",42,[[["self"]],["string"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"vzip","","",42,[[],["v"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"vzip","","",30,[[],["v"]]],[11,"equivalent","","",30,[[["k"],["self"]],["bool"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"to_string","","",31,[[["self"]],["string"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"vzip","","",31,[[],["v"]]],[11,"equivalent","","",31,[[["k"],["self"]],["bool"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"vzip","","",32,[[],["v"]]],[11,"clone","spec_lang::ast","",6,[[["self"]],["conditionkind"]]],[11,"clone","","",2,[[["self"]],["condition"]]],[11,"clone","","",3,[[["self"]],["spec"]]],[11,"clone","","",7,[[["self"]],["exp"]]],[11,"clone","","",8,[[["self"]],["operation"]]],[11,"clone","","",4,[[["self"]],["localvardecl"]]],[11,"clone","","",9,[[["self"]],["value"]]],[11,"clone","","",10,[[["self"]],["modulename"]]],[11,"clone","","",5,[[["self"]],["qualifiedsymbol"]]],[11,"clone","spec_lang::env","",18,[[["self"]],["loc"]]],[11,"clone","","",25,[[["self"]],["moduleid"]]],[11,"clone","","",20,[[["self"]],["structid"]]],[11,"clone","","",21,[[["self"]],["fieldid"]]],[11,"clone","","",19,[[["self"]],["funid"]]],[11,"clone","","",22,[[["self"]],["specfunid"]]],[11,"clone","","",23,[[["self"]],["specvarid"]]],[11,"clone","","",24,[[["self"]],["nodeid"]]],[11,"clone","","",12,[[["self"]],["moduleenv"]]],[11,"clone","","",13,[[["self"]],["structenv"]]],[11,"clone","","",15,[[["self"]],["typeparameter"]]],[11,"clone","","",16,[[["self"]],["parameter"]]],[11,"clone","","",17,[[["self"]],["functionenv"]]],[11,"clone","spec_lang::symbol","",27,[[["self"]],["symbol"]]],[11,"clone","spec_lang::ty","",30,[[["self"]],["type"]]],[11,"clone","","",31,[[["self"]],["primitivetype"]]],[11,"clone","","",35,[[["self"]],["substitution"]]],[11,"default","spec_lang::ast","",3,[[],["spec"]]],[11,"default","spec_lang::env","",26,[[],["self"]]],[11,"default","spec_lang::symbol","",28,[[],["self"]]],[11,"default","spec_lang::ty","",35,[[],["self"]]],[11,"cmp","spec_lang::ast","",10,[[["self"],["modulename"]],["ordering"]]],[11,"cmp","","",5,[[["self"],["qualifiedsymbol"]],["ordering"]]],[11,"cmp","spec_lang::env","",18,[[["self"],["loc"]],["ordering"]]],[11,"cmp","","",25,[[["moduleid"],["self"]],["ordering"]]],[11,"cmp","","",20,[[["self"],["structid"]],["ordering"]]],[11,"cmp","","",21,[[["fieldid"],["self"]],["ordering"]]],[11,"cmp","","",19,[[["funid"],["self"]],["ordering"]]],[11,"cmp","","",22,[[["self"],["specfunid"]],["ordering"]]],[11,"cmp","","",23,[[["specvarid"],["self"]],["ordering"]]],[11,"cmp","","",24,[[["self"],["nodeid"]],["ordering"]]],[11,"cmp","spec_lang::symbol","",27,[[["self"],["symbol"]],["ordering"]]],[11,"cmp","spec_lang::ty","",30,[[["self"],["type"]],["ordering"]]],[11,"cmp","","",31,[[["self"],["primitivetype"]],["ordering"]]],[11,"eq","spec_lang::ast","",6,[[["conditionkind"],["self"]],["bool"]]],[11,"ne","","",6,[[["conditionkind"],["self"]],["bool"]]],[11,"eq","","",7,[[["self"],["exp"]],["bool"]]],[11,"ne","","",7,[[["self"],["exp"]],["bool"]]],[11,"eq","","",8,[[["self"],["operation"]],["bool"]]],[11,"ne","","",8,[[["self"],["operation"]],["bool"]]],[11,"eq","","",4,[[["self"],["localvardecl"]],["bool"]]],[11,"ne","","",4,[[["self"],["localvardecl"]],["bool"]]],[11,"eq","","",9,[[["self"],["value"]],["bool"]]],[11,"ne","","",9,[[["self"],["value"]],["bool"]]],[11,"eq","","",10,[[["self"],["modulename"]],["bool"]]],[11,"ne","","",10,[[["self"],["modulename"]],["bool"]]],[11,"eq","","",5,[[["self"],["qualifiedsymbol"]],["bool"]]],[11,"ne","","",5,[[["self"],["qualifiedsymbol"]],["bool"]]],[11,"eq","spec_lang::env","",18,[[["self"],["loc"]],["bool"]]],[11,"ne","","",18,[[["self"],["loc"]],["bool"]]],[11,"eq","","",25,[[["moduleid"],["self"]],["bool"]]],[11,"ne","","",25,[[["moduleid"],["self"]],["bool"]]],[11,"eq","","",20,[[["self"],["structid"]],["bool"]]],[11,"ne","","",20,[[["self"],["structid"]],["bool"]]],[11,"eq","","",21,[[["fieldid"],["self"]],["bool"]]],[11,"ne","","",21,[[["fieldid"],["self"]],["bool"]]],[11,"eq","","",19,[[["funid"],["self"]],["bool"]]],[11,"ne","","",19,[[["funid"],["self"]],["bool"]]],[11,"eq","","",22,[[["self"],["specfunid"]],["bool"]]],[11,"ne","","",22,[[["self"],["specfunid"]],["bool"]]],[11,"eq","","",23,[[["specvarid"],["self"]],["bool"]]],[11,"ne","","",23,[[["specvarid"],["self"]],["bool"]]],[11,"eq","","",24,[[["self"],["nodeid"]],["bool"]]],[11,"ne","","",24,[[["self"],["nodeid"]],["bool"]]],[11,"eq","spec_lang::symbol","",27,[[["self"],["symbol"]],["bool"]]],[11,"ne","","",27,[[["self"],["symbol"]],["bool"]]],[11,"eq","spec_lang::ty","",30,[[["self"],["type"]],["bool"]]],[11,"ne","","",30,[[["self"],["type"]],["bool"]]],[11,"eq","","",31,[[["self"],["primitivetype"]],["bool"]]],[11,"partial_cmp","spec_lang::ast","",10,[[["self"],["modulename"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",10,[[["self"],["modulename"]],["bool"]]],[11,"le","","",10,[[["self"],["modulename"]],["bool"]]],[11,"gt","","",10,[[["self"],["modulename"]],["bool"]]],[11,"ge","","",10,[[["self"],["modulename"]],["bool"]]],[11,"partial_cmp","","",5,[[["self"],["qualifiedsymbol"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",5,[[["self"],["qualifiedsymbol"]],["bool"]]],[11,"le","","",5,[[["self"],["qualifiedsymbol"]],["bool"]]],[11,"gt","","",5,[[["self"],["qualifiedsymbol"]],["bool"]]],[11,"ge","","",5,[[["self"],["qualifiedsymbol"]],["bool"]]],[11,"partial_cmp","spec_lang::env","",18,[[["self"],["loc"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",18,[[["self"],["loc"]],["bool"]]],[11,"le","","",18,[[["self"],["loc"]],["bool"]]],[11,"gt","","",18,[[["self"],["loc"]],["bool"]]],[11,"ge","","",18,[[["self"],["loc"]],["bool"]]],[11,"partial_cmp","","",25,[[["moduleid"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",25,[[["moduleid"],["self"]],["bool"]]],[11,"le","","",25,[[["moduleid"],["self"]],["bool"]]],[11,"gt","","",25,[[["moduleid"],["self"]],["bool"]]],[11,"ge","","",25,[[["moduleid"],["self"]],["bool"]]],[11,"partial_cmp","","",20,[[["self"],["structid"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",20,[[["self"],["structid"]],["bool"]]],[11,"le","","",20,[[["self"],["structid"]],["bool"]]],[11,"gt","","",20,[[["self"],["structid"]],["bool"]]],[11,"ge","","",20,[[["self"],["structid"]],["bool"]]],[11,"partial_cmp","","",21,[[["fieldid"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",21,[[["fieldid"],["self"]],["bool"]]],[11,"le","","",21,[[["fieldid"],["self"]],["bool"]]],[11,"gt","","",21,[[["fieldid"],["self"]],["bool"]]],[11,"ge","","",21,[[["fieldid"],["self"]],["bool"]]],[11,"partial_cmp","","",19,[[["funid"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",19,[[["funid"],["self"]],["bool"]]],[11,"le","","",19,[[["funid"],["self"]],["bool"]]],[11,"gt","","",19,[[["funid"],["self"]],["bool"]]],[11,"ge","","",19,[[["funid"],["self"]],["bool"]]],[11,"partial_cmp","","",22,[[["self"],["specfunid"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",22,[[["self"],["specfunid"]],["bool"]]],[11,"le","","",22,[[["self"],["specfunid"]],["bool"]]],[11,"gt","","",22,[[["self"],["specfunid"]],["bool"]]],[11,"ge","","",22,[[["self"],["specfunid"]],["bool"]]],[11,"partial_cmp","","",23,[[["specvarid"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",23,[[["specvarid"],["self"]],["bool"]]],[11,"le","","",23,[[["specvarid"],["self"]],["bool"]]],[11,"gt","","",23,[[["specvarid"],["self"]],["bool"]]],[11,"ge","","",23,[[["specvarid"],["self"]],["bool"]]],[11,"partial_cmp","","",24,[[["self"],["nodeid"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",24,[[["self"],["nodeid"]],["bool"]]],[11,"le","","",24,[[["self"],["nodeid"]],["bool"]]],[11,"gt","","",24,[[["self"],["nodeid"]],["bool"]]],[11,"ge","","",24,[[["self"],["nodeid"]],["bool"]]],[11,"partial_cmp","spec_lang::symbol","",27,[[["self"],["symbol"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",27,[[["self"],["symbol"]],["bool"]]],[11,"le","","",27,[[["self"],["symbol"]],["bool"]]],[11,"gt","","",27,[[["self"],["symbol"]],["bool"]]],[11,"ge","","",27,[[["self"],["symbol"]],["bool"]]],[11,"partial_cmp","spec_lang::ty","",30,[[["self"],["type"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",30,[[["self"],["type"]],["bool"]]],[11,"le","","",30,[[["self"],["type"]],["bool"]]],[11,"gt","","",30,[[["self"],["type"]],["bool"]]],[11,"ge","","",30,[[["self"],["type"]],["bool"]]],[11,"partial_cmp","","",31,[[["self"],["primitivetype"]],[["option",["ordering"]],["ordering"]]]],[11,"fmt","spec_lang::ast","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","spec_lang::env","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","spec_lang::symbol","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","spec_lang::ty","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","spec_lang::ast","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",37,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","spec_lang::symbol","",41,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","spec_lang::ty","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"hash","spec_lang::ast","",10,[[["self"],["__h"]]]],[11,"hash","","",5,[[["self"],["__h"]]]],[11,"hash","spec_lang::env","",25,[[["self"],["__h"]]]],[11,"hash","","",20,[[["self"],["__h"]]]],[11,"hash","","",21,[[["self"],["__h"]]]],[11,"hash","","",19,[[["self"],["__h"]]]],[11,"hash","","",22,[[["self"],["__h"]]]],[11,"hash","","",23,[[["self"],["__h"]]]],[11,"hash","","",24,[[["self"],["__h"]]]],[11,"hash","spec_lang::symbol","",27,[[["self"],["__h"]]]],[11,"hash","spec_lang::ty","",30,[[["self"],["__h"]]]],[11,"hash","","",31,[[["self"],["__h"]]]]],"p":[[3,"SpecVarDecl"],[3,"SpecFunDecl"],[3,"Condition"],[3,"Spec"],[3,"LocalVarDecl"],[3,"QualifiedSymbol"],[4,"ConditionKind"],[4,"Exp"],[4,"Operation"],[4,"Value"],[3,"ModuleName"],[3,"ModuleData"],[3,"ModuleEnv"],[3,"StructEnv"],[3,"FieldEnv"],[3,"TypeParameter"],[3,"Parameter"],[3,"FunctionEnv"],[3,"Loc"],[3,"FunId"],[3,"StructId"],[3,"FieldId"],[3,"SpecFunId"],[3,"SpecVarId"],[3,"NodeId"],[3,"ModuleId"],[3,"GlobalEnv"],[3,"Symbol"],[3,"SymbolPool"],[3,"TypeError"],[4,"Type"],[4,"PrimitiveType"],[4,"TypeDisplayContext"],[13,"WithoutEnv"],[13,"WithEnv"],[3,"Substitution"],[3,"ModuleNameDisplay"],[3,"QualifiedSymbolDisplay"],[3,"StructData"],[3,"FieldData"],[3,"FunctionData"],[3,"SymbolDisplay"],[3,"TypeDisplay"]]};
searchIndex["stackless_bytecode_generator"] = {"doc":"","i":[[0,"annotations","stackless_bytecode_generator","",null,null],[3,"Annotations","stackless_bytecode_generator::annotations","A container for an extensible, dynamically typed set of…",null,null],[11,"has","","Tests whether annotation of type T is present.",0,[[["self"]],["bool"]]],[11,"get","","Gets annotation of type T.",0,[[["self"]],[["t"],["option"]]]],[11,"set","","Sets annotation of type T.",0,[[["self"],["any"]]]],[11,"remove","","Removes annotation of type T.",0,[[["self"]],[["option",["box"]],["box"]]]],[0,"borrow_analysis","stackless_bytecode_generator","",null,null],[3,"BorrowInfo","stackless_bytecode_generator::borrow_analysis","",null,null],[12,"live_refs","","",1,null],[12,"borrowed_by","","",1,null],[12,"borrows_from","","",1,null],[3,"BorrowInfoAtCodeOffset","","",null,null],[12,"before","","",2,null],[12,"after","","",2,null],[3,"BorrowAnnotation","","Borrow annotation computed by the borrow analysis processor.",null,null],[3,"BorrowAnalysisProcessor","","Borrow analysis processor.",null,null],[5,"format_borrow_annotation","","Format a borrow annotation.",null,[[["functiontarget"],["codeoffset"]],[["option",["string"]],["string"]]]],[11,"get_borrow_info_at","","",3,[[["self"],["codeoffset"]],[["option",["borrowinfoatcodeoffset"]],["borrowinfoatcodeoffset"]]]],[11,"new","","",4,[[],["box"]]],[0,"dataflow_analysis","stackless_bytecode_generator","Adapted from AbstractInterpreter for Bytecode, this module…",null,null],[3,"BlockState","stackless_bytecode_generator::dataflow_analysis","",null,null],[12,"pre","","",5,null],[12,"post","","",5,null],[4,"JoinResult","","",null,null],[13,"Unchanged","","",6,null],[13,"Changed","","",6,null],[13,"Error","","",6,null],[6,"StateMap","","",null,null],[8,"AbstractDomain","","",null,null],[10,"join","","",7,[[["self"],["self"]],["joinresult"]]],[8,"TransferFunctions","","Take a pre-state + instruction and mutate it to produce a…",null,null],[16,"State","","",8,null],[16,"AnalysisError","","",8,null],[10,"execute_block","","",8,[[["stacklesscontrolflowgraph"],["blockid"],["self"]],["result"]]],[8,"DataflowAnalysis","","",null,null],[11,"analyze_function","","",9,[[["stacklesscontrolflowgraph"],["self"]],["statemap"]]],[0,"eliminate_imm_refs","stackless_bytecode_generator","",null,null],[3,"EliminateImmRefsProcessor","stackless_bytecode_generator::eliminate_imm_refs","",null,null],[3,"EliminateImmRefs","","",null,null],[11,"new","","",10,[[],["box"]]],[0,"eliminate_mut_refs","stackless_bytecode_generator","",null,null],[3,"EliminateMutRefsProcessor","stackless_bytecode_generator::eliminate_mut_refs","",null,null],[3,"EliminateMutRefs","","",null,null],[11,"new","","",11,[[],["box"]]],[0,"function_target","stackless_bytecode_generator","",null,null],[3,"FunctionTarget","stackless_bytecode_generator::function_target","A FunctionTarget is a drop-in replacement for a…",null,null],[12,"func_env","","",12,null],[12,"data","","",12,null],[12,"name_to_index","","",12,null],[3,"FunctionTargetData","","Holds the owned data belonging to a FunctionTarget, which…",null,null],[12,"code","","",13,null],[12,"local_types","","",13,null],[12,"return_types","","",13,null],[12,"acquires_global_resources","","",13,null],[12,"locations","","",13,null],[12,"annotations","","",13,null],[12,"given_spec_blocks","","Map of spec block ids as given by the source, to the code…",13,null],[12,"generated_spec_blocks","","Map of spec block ids to generated by transformations, to…",13,null],[6,"AnnotationFormatter","","A function which is called to display the value of an…",null,null],[11,"new","","",12,[[["functionenv"],["functiontargetdata"]],["functiontarget"]]],[11,"get_name","","Returns the name of this function.",12,[[["self"]],["symbol"]]],[11,"get_id","","Gets the id of this function.",12,[[["self"]],["funid"]]],[11,"symbol_pool","","Shortcut for accessing the symbol pool.",12,[[["self"]],["symbolpool"]]],[11,"module_env","","Shortcut for accessing the module env of this function.",12,[[["self"]],["moduleenv"]]],[11,"global_env","","Shortcut for accessing the global env of this function.",12,[[["self"]],["globalenv"]]],[11,"get_loc","","Returns the location of this function.",12,[[["self"]],["loc"]]],[11,"get_bytecode_loc","","Returns the location of the bytecode at the given offset.",12,[[["attrid"],["self"]],["loc"]]],[11,"is_native","","Returns true if this function is native.",12,[[["self"]],["bool"]]],[11,"is_public","","Returns true if this function is public.",12,[[["self"]],["bool"]]],[11,"is_mutating","","Returns true if this function mutates any references (i.e.…",12,[[["self"]],["bool"]]],[11,"get_type_parameters","","Returns the type parameters associated with this function.",12,[[["self"]],[["typeparameter"],["vec",["typeparameter"]]]]],[11,"get_return_type","","Returns return type at given index.",12,[[["self"],["usize"]],["type"]]],[11,"get_return_types","","Returns return types of this function.",12,[[["self"]]]],[11,"get_return_count","","Returns the number of return values of this function.",12,[[["self"]],["usize"]]],[11,"get_parameter_count","","",12,[[["self"]],["usize"]]],[11,"get_local_name","","Get the name to be used for a local. If the local is an…",12,[[["self"],["usize"]],["symbol"]]],[11,"get_local_index","","Get the index corresponding to a local name",12,[[["self"],["symbol"]],[["option",["usize"]],["usize"]]]],[11,"get_local_count","","Gets the number of locals of this function, including…",12,[[["self"]],["usize"]]],[11,"get_user_local_count","","Gets the number of user declared locals of this function,…",12,[[["self"]],["usize"]]],[11,"get_local_type","","Gets the type of the local at index. This must use an…",12,[[["self"],["usize"]],["type"]]],[11,"get_spec","","Returns specification associated with this function.",12,[[["self"]],["spec"]]],[11,"get_spec_on_impl","","Returns specification conditions associated with this…",12,[[["self"],["specblockid"]],["spec"]]],[11,"is_pragma_true","","Returns the value of a boolean pragma for this function.…",12,[[["str"],["self"]],["bool"]]],[11,"get_bytecode","","Gets the bytecode.",12,[[["self"]]]],[11,"get_annotations","","Gets annotations.",12,[[["self"]],["annotations"]]],[11,"get_acquires_global_resources","","Gets acquired resources",12,[[["self"]]]],[11,"register_annotation_formatter","","Register a formatter. Each function target processor which…",12,[[["box",["annotationformatter"]],["self"],["annotationformatter"]]]],[11,"register_annotation_formatters_for_test","","Tests use this function to register all relevant…",12,[[["self"]]]],[0,"function_target_pipeline","stackless_bytecode_generator","",null,null],[3,"FunctionTargetsHolder","stackless_bytecode_generator::function_target_pipeline","A data structure which holds data for multiple function…",null,null],[3,"FunctionTargetPipeline","","A processing pipeline for function targets.",null,null],[8,"FunctionTargetProcessor","","A trait for processing a function target. Takes as…",null,null],[10,"process","","",14,[[["functionenv"],["functiontargetsholder"],["functiontargetdata"],["self"]],["functiontargetdata"]]],[11,"add_target","","Adds a new function target. The target will be initialized…",15,[[["self"],["functionenv"]]]],[11,"get_target","","Gets a function target for read-only consumption.",15,[[["self"],["functionenv"]],["functiontarget"]]],[11,"add_processor","","Adds a processor to this pipeline. Processor will be…",16,[[["self"],["box",["functiontargetprocessor"]],["functiontargetprocessor"]]]],[11,"run","","Runs the pipeline on all functions in the targets holder.…",16,[[["functiontargetsholder"],["self"],["globalenv"]]]],[0,"lifetime_analysis","stackless_bytecode_generator","",null,null],[3,"LifetimeAnnotation","stackless_bytecode_generator::lifetime_analysis","Function target annotation computed by the lifetime…",null,null],[3,"LifetimeAnalysisProcessor","","Lifetime analysis processor.",null,null],[5,"format_lifetime_annotation","","Format a lifetime annotation.",null,[[["functiontarget"],["codeoffset"]],[["option",["string"]],["string"]]]],[11,"get_dead_refs","","",17,[[["self"],["codeoffset"]],[["option",["btreeset"]],["btreeset"]]]],[11,"new","","",18,[[],["box"]]],[0,"livevar_analysis","stackless_bytecode_generator","",null,null],[3,"LiveVarInfoAtCodeOffset","stackless_bytecode_generator::livevar_analysis","The annotation for live variable analysis. For each code…",null,null],[12,"before","","",19,null],[12,"after","","",19,null],[3,"LiveVarAnnotation","","",null,null],[3,"LiveVarAnalysisProcessor","","",null,null],[5,"format_livevar_annotation","","Format a live variable annotation.",null,[[["functiontarget"],["codeoffset"]],[["option",["string"]],["string"]]]],[11,"get_live_var_info_at","","",20,[[["self"],["codeoffset"]],[["option",["livevarinfoatcodeoffset"]],["livevarinfoatcodeoffset"]]]],[11,"new","","",21,[[],["box"]]],[0,"packref_analysis","stackless_bytecode_generator","",null,null],[3,"PackrefAnalysisProcessor","stackless_bytecode_generator::packref_analysis","",null,null],[3,"PackrefInstrumentation","","",null,null],[12,"before","","",22,null],[12,"after","","",22,null],[3,"PackrefAnnotation","","",null,null],[3,"PackrefAnalysis","","",null,null],[5,"format_packref_annotation","","Format a packref annotation.",null,[[["functiontarget"],["codeoffset"]],[["option",["string"]],["string"]]]],[11,"new","","",23,[[],["box"]]],[11,"get_packref_instrumentation_at","","",24,[[["self"],["codeoffset"]],[["packrefinstrumentation"],["option",["packrefinstrumentation"]]]]],[0,"reaching_def_analysis","stackless_bytecode_generator","",null,null],[3,"ReachingDefAnnotation","stackless_bytecode_generator::reaching_def_analysis","The annotation for reaching definitions. For each code…",null,null],[3,"ReachingDefProcessor","","",null,null],[4,"Def","","The definitions we are capturing. Currently we only…",null,null],[13,"Const","","",25,null],[13,"Alias","","",25,null],[5,"format_reaching_def_annotation","","Format a reaching definition annotation.",null,[[["functiontarget"],["codeoffset"]],[["option",["string"]],["string"]]]],[11,"new","","",26,[[],["box"]]],[0,"stackless_bytecode","stackless_bytecode_generator","",null,null],[3,"Label","stackless_bytecode_generator::stackless_bytecode","A label for a branch destination.",null,null],[3,"AttrId","","An id for an attribute attached to an instruction.",null,null],[3,"SpecBlockId","","An id for a spec block. A spec block can contain assumes…",null,null],[3,"StructDecl","","",null,null],[12,"module_id","","",27,null],[12,"struct_id","","",27,null],[3,"BorrowNodeDisplay","","A display object for a borrow node.",null,null],[3,"BytecodeDisplay","","A display object for a bytecode.",null,null],[3,"OperationDisplay","","A display object for an operation.",null,null],[4,"AssignKind","","The kind of an assignment in the bytecode.",null,null],[13,"Copy","","The assign copies the lhs value.",28,null],[13,"Move","","The assign moves the lhs value.",28,null],[13,"Store","","The assign stores the lhs value.",28,null],[4,"Constant","","A constant value.",null,null],[13,"Bool","","",29,null],[13,"U8","","",29,null],[13,"U64","","",29,null],[13,"U128","","",29,null],[13,"Address","","",29,null],[13,"ByteArray","","",29,null],[13,"TxnSenderAddress","","",29,null],[4,"Operation","","An operation -- target of a call. This contains user…",null,null],[13,"Function","","",30,null],[13,"Pack","","",30,null],[13,"Unpack","","",30,null],[13,"MoveToSender","","",30,null],[13,"MoveFrom","","",30,null],[13,"Exists","","",30,null],[13,"BorrowLoc","","",30,null],[13,"BorrowField","","",30,null],[13,"BorrowGlobal","","",30,null],[13,"GetField","","",30,null],[13,"GetGlobal","","",30,null],[13,"Destroy","","",30,null],[13,"ReadRef","","",30,null],[13,"WriteRef","","",30,null],[13,"FreezeRef","","",30,null],[13,"CastU8","","",30,null],[13,"CastU64","","",30,null],[13,"CastU128","","",30,null],[13,"Not","","",30,null],[13,"Add","","",30,null],[13,"Sub","","",30,null],[13,"Mul","","",30,null],[13,"Div","","",30,null],[13,"Mod","","",30,null],[13,"BitOr","","",30,null],[13,"BitAnd","","",30,null],[13,"Xor","","",30,null],[13,"Shl","","",30,null],[13,"Shr","","",30,null],[13,"Lt","","",30,null],[13,"Gt","","",30,null],[13,"Le","","",30,null],[13,"Ge","","",30,null],[13,"Or","","",30,null],[13,"And","","",30,null],[13,"Eq","","",30,null],[13,"Neq","","",30,null],[4,"BorrowNode","","",null,null],[13,"GlobalRoot","","",31,null],[13,"LocalRoot","","",31,null],[13,"Reference","","",31,null],[4,"Bytecode","","",null,null],[13,"SpecBlock","","",32,null],[13,"Assign","","",32,null],[13,"Call","","",32,null],[13,"Ret","","",32,null],[13,"Load","","",32,null],[13,"Branch","","",32,null],[13,"Jump","","",32,null],[13,"Label","","",32,null],[13,"Abort","","",32,null],[13,"Nop","","",32,null],[13,"WriteBack","","",32,null],[13,"UnpackRef","","",32,null],[13,"PackRef","","",32,null],[13,"Splice","","",32,null],[6,"TempIndex","","",null,null],[11,"new","","",33,[[["usize"]],["self"]]],[11,"as_usize","","",33,[[],["usize"]]],[11,"new","","",34,[[["usize"]],["self"]]],[11,"as_usize","","",34,[[],["usize"]]],[11,"new","","",35,[[["usize"]],["self"]]],[11,"as_usize","","",35,[[],["usize"]]],[11,"display","","Creates a format object for a borrow node in context of a…",31,[[["functiontarget"],["self"]],["borrownodedisplay"]]],[11,"get_attr_id","","",32,[[["self"]],["attrid"]]],[11,"is_return","","",32,[[["self"]],["bool"]]],[11,"is_unconditional_branch","","",32,[[["self"]],["bool"]]],[11,"is_conditional_branch","","",32,[[["self"]],["bool"]]],[11,"is_branch","","",32,[[["self"]],["bool"]]],[11,"branch_dests","","Return the destination(s) if self is a branch/jump…",32,[[["self"]],[["vec",["label"]],["label"]]]],[11,"label_offsets","","Returns a mapping from labels to code offsets.",32,[[],[["codeoffset"],["btreemap",["label","codeoffset"]],["label"]]]],[11,"get_successors","","Return the successor offsets of this instruction. In…",32,[[["btreemap"],["codeoffset"]],[["vec",["codeoffset"]],["codeoffset"]]]],[11,"display","","Creates a format object for a bytecode in context of a…",32,[[["functiontarget"],["self"]],["bytecodedisplay"]]],[11,"display","","Creates a format object for a bytecode in context of a…",30,[[["functiontarget"],["self"]],["operationdisplay"]]],[0,"stackless_bytecode_generator","stackless_bytecode_generator","",null,null],[3,"StacklessBytecodeGenerator","stackless_bytecode_generator::stackless_bytecode_generator","",null,null],[11,"new","","",36,[[["functionenv"]],["self"]]],[11,"generate_function","","",36,[[],["functiontargetdata"]]],[11,"generate_bytecode","","",36,[[["btreemap"],["codeoffset"],["movebytecode"],["btreemap"],["self"]]]],[0,"stackless_control_flow_graph","stackless_bytecode_generator","Adapted from control_flow_graph for Bytecode, this module…",null,null],[3,"StacklessControlFlowGraph","stackless_bytecode_generator::stackless_control_flow_graph","",null,null],[6,"BlockId","","",null,null],[11,"new_forward","","",37,[[],["self"]]],[11,"new_backward","","",37,[[],["self"]]],[11,"block_start","","",37,[[["self"],["blockid"]],["codeoffset"]]],[11,"block_end","","",37,[[["self"],["blockid"]],["codeoffset"]]],[11,"successors","","",37,[[["self"],["blockid"]],["vec"]]],[11,"blocks","","",37,[[["self"]],[["vec",["blockid"]],["blockid"]]]],[11,"entry_blocks","","",37,[[["self"]],[["vec",["blockid"]],["blockid"]]]],[11,"instr_indexes","","",37,[[["self"],["blockid"]],[["doubleendediterator"],["box",["doubleendediterator"]]]]],[11,"num_blocks","","",37,[[["self"]],["u16"]]],[0,"writeback_analysis","stackless_bytecode_generator","",null,null],[3,"WritebackAnalysisProcessor","stackless_bytecode_generator::writeback_analysis","",null,null],[3,"WritebackAnnotation","","",null,null],[3,"WritebackAnalysis","","",null,null],[5,"format_writeback_annotation","","Format a writeback annotation.",null,[[["functiontarget"],["codeoffset"]],[["option",["string"]],["string"]]]],[11,"new","","",38,[[],["box"]]],[11,"get_writeback_instrs_at","","",39,[[["self"],["codeoffset"]],[["option",["vec"]],["vec"]]]],[11,"from","stackless_bytecode_generator::annotations","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"clear","","",0,[[["self"]]]],[11,"initialize","","",0,[[]]],[11,"from","stackless_bytecode_generator::borrow_analysis","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","stackless_bytecode_generator::dataflow_analysis","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"equivalent","","",5,[[["k"],["self"]],["bool"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","stackless_bytecode_generator::eliminate_imm_refs","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"vzip","","",40,[[],["v"]]],[11,"from","stackless_bytecode_generator::eliminate_mut_refs","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"vzip","","",41,[[],["v"]]],[11,"from","stackless_bytecode_generator::function_target","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","stackless_bytecode_generator::function_target_pipeline","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"clear","","",15,[[["self"]]]],[11,"initialize","","",15,[[]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"clear","","",16,[[["self"]]]],[11,"initialize","","",16,[[]]],[11,"from","stackless_bytecode_generator::lifetime_analysis","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"vzip","","",18,[[],["v"]]],[11,"from","stackless_bytecode_generator::livevar_analysis","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"vzip","","",19,[[],["v"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"vzip","","",20,[[],["v"]]],[11,"clear","","",20,[[["self"]]]],[11,"initialize","","",20,[[]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"vzip","","",21,[[],["v"]]],[11,"from","stackless_bytecode_generator::packref_analysis","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"vzip","","",23,[[],["v"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"vzip","","",22,[[],["v"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"vzip","","",24,[[],["v"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"vzip","","",42,[[],["v"]]],[11,"from","stackless_bytecode_generator::reaching_def_analysis","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"vzip","","",43,[[],["v"]]],[11,"clear","","",43,[[["self"]]]],[11,"initialize","","",43,[[]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"vzip","","",26,[[],["v"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"vzip","","",25,[[],["v"]]],[11,"equivalent","","",25,[[["k"],["self"]],["bool"]]],[11,"from","stackless_bytecode_generator::stackless_bytecode","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"vzip","","",33,[[],["v"]]],[11,"equivalent","","",33,[[["k"],["self"]],["bool"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"vzip","","",34,[[],["v"]]],[11,"equivalent","","",34,[[["k"],["self"]],["bool"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"vzip","","",35,[[],["v"]]],[11,"equivalent","","",35,[[["k"],["self"]],["bool"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"vzip","","",27,[[],["v"]]],[11,"equivalent","","",27,[[["k"],["self"]],["bool"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_string","","",44,[[["self"]],["string"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"vzip","","",44,[[],["v"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_string","","",45,[[["self"]],["string"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"vzip","","",45,[[],["v"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_string","","",46,[[["self"]],["string"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"vzip","","",46,[[],["v"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"vzip","","",28,[[],["v"]]],[11,"equivalent","","",28,[[["k"],["self"]],["bool"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"to_string","","",29,[[["self"]],["string"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"vzip","","",29,[[],["v"]]],[11,"equivalent","","",29,[[["k"],["self"]],["bool"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"vzip","","",30,[[],["v"]]],[11,"equivalent","","",30,[[["k"],["self"]],["bool"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"vzip","","",31,[[],["v"]]],[11,"equivalent","","",31,[[["k"],["self"]],["bool"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"vzip","","",32,[[],["v"]]],[11,"equivalent","","",32,[[["k"],["self"]],["bool"]]],[11,"from","stackless_bytecode_generator::stackless_bytecode_generator","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"vzip","","",36,[[],["v"]]],[11,"from","stackless_bytecode_generator::stackless_control_flow_graph","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"vzip","","",37,[[],["v"]]],[11,"from","stackless_bytecode_generator::writeback_analysis","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"vzip","","",38,[[],["v"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"vzip","","",39,[[],["v"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"vzip","","",47,[[],["v"]]],[11,"process","stackless_bytecode_generator::borrow_analysis","",4,[[["functionenv"],["functiontargetsholder"],["functiontargetdata"],["self"]],["functiontargetdata"]]],[11,"process","stackless_bytecode_generator::eliminate_imm_refs","",10,[[["functionenv"],["functiontargetsholder"],["functiontargetdata"],["self"]],["functiontargetdata"]]],[11,"process","stackless_bytecode_generator::eliminate_mut_refs","",11,[[["functionenv"],["functiontargetsholder"],["functiontargetdata"],["self"]],["functiontargetdata"]]],[11,"process","stackless_bytecode_generator::lifetime_analysis","",18,[[["functionenv"],["functiontargetsholder"],["functiontargetdata"],["self"]],["functiontargetdata"]]],[11,"process","stackless_bytecode_generator::livevar_analysis","",21,[[["functionenv"],["functiontargetsholder"],["functiontargetdata"],["self"]],["functiontargetdata"]]],[11,"process","stackless_bytecode_generator::packref_analysis","",23,[[["functionenv"],["functiontargetsholder"],["functiontargetdata"],["self"]],["functiontargetdata"]]],[11,"process","stackless_bytecode_generator::reaching_def_analysis","",26,[[["functionenv"],["functiontargetsholder"],["functiontargetdata"],["self"]],["functiontargetdata"]]],[11,"process","stackless_bytecode_generator::writeback_analysis","",38,[[["functionenv"],["functiontargetsholder"],["functiontargetdata"],["self"]],["functiontargetdata"]]],[11,"clone","stackless_bytecode_generator::borrow_analysis","",1,[[["self"]],["borrowinfo"]]],[11,"clone","stackless_bytecode_generator::dataflow_analysis","",5,[[["self"]],["blockstate"]]],[11,"clone","stackless_bytecode_generator::reaching_def_analysis","",25,[[["self"]],["def"]]],[11,"clone","stackless_bytecode_generator::stackless_bytecode","",33,[[["self"]],["label"]]],[11,"clone","","",34,[[["self"]],["attrid"]]],[11,"clone","","",35,[[["self"]],["specblockid"]]],[11,"clone","","",28,[[["self"]],["assignkind"]]],[11,"clone","","",29,[[["self"]],["constant"]]],[11,"clone","","",30,[[["self"]],["operation"]]],[11,"clone","","",27,[[["self"]],["structdecl"]]],[11,"clone","","",31,[[["self"]],["borrownode"]]],[11,"clone","","",32,[[["self"]],["bytecode"]]],[11,"default","stackless_bytecode_generator::annotations","",0,[[],["annotations"]]],[11,"default","stackless_bytecode_generator::function_target_pipeline","",15,[[],["functiontargetsholder"]]],[11,"default","","",16,[[],["functiontargetpipeline"]]],[11,"default","stackless_bytecode_generator::livevar_analysis","",20,[[],["livevarannotation"]]],[11,"default","stackless_bytecode_generator::reaching_def_analysis","",43,[[],["reachingdefannotation"]]],[11,"cmp","stackless_bytecode_generator::dataflow_analysis","",5,[[["self"],["blockstate"]],["ordering"]]],[11,"cmp","stackless_bytecode_generator::reaching_def_analysis","",25,[[["self"],["def"]],["ordering"]]],[11,"cmp","stackless_bytecode_generator::stackless_bytecode","",33,[[["label"],["self"]],["ordering"]]],[11,"cmp","","",34,[[["attrid"],["self"]],["ordering"]]],[11,"cmp","","",35,[[["self"],["specblockid"]],["ordering"]]],[11,"cmp","","",28,[[["assignkind"],["self"]],["ordering"]]],[11,"cmp","","",29,[[["self"],["constant"]],["ordering"]]],[11,"cmp","","",27,[[["self"],["structdecl"]],["ordering"]]],[11,"cmp","","",31,[[["self"],["borrownode"]],["ordering"]]],[11,"eq","stackless_bytecode_generator::dataflow_analysis","",5,[[["self"],["blockstate"]],["bool"]]],[11,"ne","","",5,[[["self"],["blockstate"]],["bool"]]],[11,"eq","stackless_bytecode_generator::reaching_def_analysis","",25,[[["self"],["def"]],["bool"]]],[11,"ne","","",25,[[["self"],["def"]],["bool"]]],[11,"eq","stackless_bytecode_generator::stackless_bytecode","",33,[[["label"],["self"]],["bool"]]],[11,"ne","","",33,[[["label"],["self"]],["bool"]]],[11,"eq","","",34,[[["attrid"],["self"]],["bool"]]],[11,"ne","","",34,[[["attrid"],["self"]],["bool"]]],[11,"eq","","",35,[[["self"],["specblockid"]],["bool"]]],[11,"ne","","",35,[[["self"],["specblockid"]],["bool"]]],[11,"eq","","",28,[[["assignkind"],["self"]],["bool"]]],[11,"eq","","",29,[[["self"],["constant"]],["bool"]]],[11,"ne","","",29,[[["self"],["constant"]],["bool"]]],[11,"eq","","",30,[[["operation"],["self"]],["bool"]]],[11,"ne","","",30,[[["operation"],["self"]],["bool"]]],[11,"eq","","",27,[[["self"],["structdecl"]],["bool"]]],[11,"ne","","",27,[[["self"],["structdecl"]],["bool"]]],[11,"eq","","",31,[[["self"],["borrownode"]],["bool"]]],[11,"ne","","",31,[[["self"],["borrownode"]],["bool"]]],[11,"eq","","",32,[[["self"],["bytecode"]],["bool"]]],[11,"ne","","",32,[[["self"],["bytecode"]],["bool"]]],[11,"partial_cmp","stackless_bytecode_generator::dataflow_analysis","",5,[[["self"],["blockstate"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",5,[[["self"],["blockstate"]],["bool"]]],[11,"le","","",5,[[["self"],["blockstate"]],["bool"]]],[11,"gt","","",5,[[["self"],["blockstate"]],["bool"]]],[11,"ge","","",5,[[["self"],["blockstate"]],["bool"]]],[11,"partial_cmp","stackless_bytecode_generator::reaching_def_analysis","",25,[[["self"],["def"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",25,[[["self"],["def"]],["bool"]]],[11,"le","","",25,[[["self"],["def"]],["bool"]]],[11,"gt","","",25,[[["self"],["def"]],["bool"]]],[11,"ge","","",25,[[["self"],["def"]],["bool"]]],[11,"partial_cmp","stackless_bytecode_generator::stackless_bytecode","",33,[[["label"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",33,[[["label"],["self"]],["bool"]]],[11,"le","","",33,[[["label"],["self"]],["bool"]]],[11,"gt","","",33,[[["label"],["self"]],["bool"]]],[11,"ge","","",33,[[["label"],["self"]],["bool"]]],[11,"partial_cmp","","",34,[[["attrid"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",34,[[["attrid"],["self"]],["bool"]]],[11,"le","","",34,[[["attrid"],["self"]],["bool"]]],[11,"gt","","",34,[[["attrid"],["self"]],["bool"]]],[11,"ge","","",34,[[["attrid"],["self"]],["bool"]]],[11,"partial_cmp","","",35,[[["self"],["specblockid"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",35,[[["self"],["specblockid"]],["bool"]]],[11,"le","","",35,[[["self"],["specblockid"]],["bool"]]],[11,"gt","","",35,[[["self"],["specblockid"]],["bool"]]],[11,"ge","","",35,[[["self"],["specblockid"]],["bool"]]],[11,"partial_cmp","","",28,[[["assignkind"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",29,[[["self"],["constant"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",29,[[["self"],["constant"]],["bool"]]],[11,"le","","",29,[[["self"],["constant"]],["bool"]]],[11,"gt","","",29,[[["self"],["constant"]],["bool"]]],[11,"ge","","",29,[[["self"],["constant"]],["bool"]]],[11,"partial_cmp","","",27,[[["self"],["structdecl"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",27,[[["self"],["structdecl"]],["bool"]]],[11,"le","","",27,[[["self"],["structdecl"]],["bool"]]],[11,"gt","","",27,[[["self"],["structdecl"]],["bool"]]],[11,"ge","","",27,[[["self"],["structdecl"]],["bool"]]],[11,"partial_cmp","","",31,[[["self"],["borrownode"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",31,[[["self"],["borrownode"]],["bool"]]],[11,"le","","",31,[[["self"],["borrownode"]],["bool"]]],[11,"gt","","",31,[[["self"],["borrownode"]],["bool"]]],[11,"ge","","",31,[[["self"],["borrownode"]],["bool"]]],[11,"fmt","stackless_bytecode_generator::annotations","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","stackless_bytecode_generator::borrow_analysis","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","stackless_bytecode_generator::dataflow_analysis","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","stackless_bytecode_generator::function_target","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","stackless_bytecode_generator::function_target_pipeline","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","stackless_bytecode_generator::reaching_def_analysis","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","stackless_bytecode_generator::stackless_bytecode","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","stackless_bytecode_generator::function_target","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","stackless_bytecode_generator::stackless_bytecode","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"hash","","",33,[[["self"],["__h"]]]],[11,"hash","","",34,[[["self"],["__h"]]]],[11,"hash","","",35,[[["self"],["__h"]]]]],"p":[[3,"Annotations"],[3,"BorrowInfo"],[3,"BorrowInfoAtCodeOffset"],[3,"BorrowAnnotation"],[3,"BorrowAnalysisProcessor"],[3,"BlockState"],[4,"JoinResult"],[8,"AbstractDomain"],[8,"TransferFunctions"],[8,"DataflowAnalysis"],[3,"EliminateImmRefsProcessor"],[3,"EliminateMutRefsProcessor"],[3,"FunctionTarget"],[3,"FunctionTargetData"],[8,"FunctionTargetProcessor"],[3,"FunctionTargetsHolder"],[3,"FunctionTargetPipeline"],[3,"LifetimeAnnotation"],[3,"LifetimeAnalysisProcessor"],[3,"LiveVarInfoAtCodeOffset"],[3,"LiveVarAnnotation"],[3,"LiveVarAnalysisProcessor"],[3,"PackrefInstrumentation"],[3,"PackrefAnalysisProcessor"],[3,"PackrefAnnotation"],[4,"Def"],[3,"ReachingDefProcessor"],[3,"StructDecl"],[4,"AssignKind"],[4,"Constant"],[4,"Operation"],[4,"BorrowNode"],[4,"Bytecode"],[3,"Label"],[3,"AttrId"],[3,"SpecBlockId"],[3,"StacklessBytecodeGenerator"],[3,"StacklessControlFlowGraph"],[3,"WritebackAnalysisProcessor"],[3,"WritebackAnnotation"],[3,"EliminateImmRefs"],[3,"EliminateMutRefs"],[3,"PackrefAnalysis"],[3,"ReachingDefAnnotation"],[3,"BorrowNodeDisplay"],[3,"BytecodeDisplay"],[3,"OperationDisplay"],[3,"WritebackAnalysis"]]};
searchIndex["state_synchronizer"] = {"doc":"Used to perform catching up between nodes for committed…","i":[[3,"StateSyncClient","state_synchronizer","",null,null],[3,"StateSynchronizer","","",null,null],[3,"SynchronizerState","","The state distinguishes between the following fields: *…",null,null],[12,"highest_local_li","","",0,null],[12,"synced_trees","","",0,null],[12,"trusted_epoch","","",0,null],[0,"network","","Interface between StateSynchronizer and Network layers.",null,null],[3,"StateSynchronizerSender","state_synchronizer::network","The interface from StateSynchronizer to Networking layer.",null,null],[4,"StateSynchronizerMsg","","StateSynchronizer network messages",null,null],[13,"GetChunkRequest","","",1,null],[13,"GetChunkResponse","","",1,null],[5,"add_to_network","","",null,[[["networkbuilder"]]]],[6,"StateSynchronizerEvents","","The interface from Network to StateSynchronizer layer.",null,null],[11,"new","","",2,[[["peermanagerrequestsender"],["connectionrequestsender"]],["self"]]],[11,"send_to","","",2,[[["statesynchronizermsg"],["self"],["peerid"]],[["result",["networkerror"]],["networkerror"]]]],[11,"bootstrap","state_synchronizer","Setup state synchronizer. spawns coordinator and…",3,[[["sender",["commitnotification"]],["arc",["dbreader"]],["chunkexecutor"],["nodeconfig"],["vec",["reconfigsubscription"]],["dbreader"],["reconfigsubscription"],["commitnotification"],["vec"],["box",["chunkexecutor"]]],["self"]]],[11,"bootstrap_with_executor_proxy","","",3,[[["sender",["commitnotification"]],["commitnotification"],["waypoint"],["roletype"],["executorproxytrait"],["statesyncconfig"],["upstreamconfig"],["runtime"],["option",["waypoint"]],["vec"]],["self"]]],[11,"create_client","","",3,[[["self"]],[["arc",["statesyncclient"]],["statesyncclient"]]]],[11,"wait_until_initialized","","The function returns a future that is fulfilled when the…",3,[[["self"]]]],[11,"sync_to","","Sync validator's state to target. In case of success…",4,[[["self"],["ledgerinfowithsignatures"]]]],[11,"commit","","Notifies state synchronizer about new version",4,[[["vec",["transaction"]],["vec",["contractevent"]],["contractevent"],["self"],["transaction"]]]],[11,"get_state","","Returns information about StateSynchronizer internal state",4,[[["self"]]]],[11,"new","","",0,[[["epochinfo"],["ledgerinfowithsignatures"],["executedtrees"]],["self"]]],[11,"highest_version_in_local_storage","","The highest available version in the local storage (even…",0,[[["self"]],["u64"]]],[11,"epoch","","",0,[[["self"]],["u64"]]],[11,"verifier","","",0,[[["self"]],["validatorverifier"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"into_request","","",4,[[],["request"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"into_request","","",3,[[],["request"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"into_request","","",0,[[],["request"]]],[11,"from","state_synchronizer::network","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"into_request","","",2,[[],["request"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"test_only_hash","","",1,[[["self"]],["hashvalue"]]],[11,"vzip","","",1,[[],["v"]]],[11,"into_request","","",1,[[],["request"]]],[11,"clone","","",1,[[["self"]],["statesynchronizermsg"]]],[11,"clone","","",2,[[["self"]],["statesynchronizersender"]]],[11,"clone","state_synchronizer","",0,[[["self"]],["synchronizerstate"]]],[11,"fmt","state_synchronizer::network","",1,[[["formatter"],["self"]],["result"]]],[11,"deserialize","","",1,[[["__d"]],["result"]]],[11,"serialize","","",1,[[["self"],["__s"]],["result"]]]],"p":[[3,"SynchronizerState"],[4,"StateSynchronizerMsg"],[3,"StateSynchronizerSender"],[3,"StateSynchronizer"],[3,"StateSyncClient"]]};
searchIndex["stdlib"] = {"doc":"","i":[[4,"StdLibOptions","stdlib","An enum specifying whether the staged stdlib/scripts…",null,null],[13,"Staged","","",0,null],[13,"Fresh","","",0,null],[5,"stdlib_modules","","Returns a reference to the standard library. Depending…",null,[[["stdliboptions"]]]],[5,"env_stdlib_modules","","Returns a reference to the standard library built by…",null,[[]]],[5,"use_staged","","A predicate detailing whether the staged versions of…",null,[[],["bool"]]],[5,"filter_move_files","","",null,[[]]],[5,"stdlib_files","","",null,[[],[["vec",["string"]],["string"]]]],[5,"build_stdlib","","",null,[[],[["vec",["verifiedmodule"]],["verifiedmodule"]]]],[5,"compile_script","","",null,[[["string"]],[["vec",["u8"]],["u8"]]]],[0,"transaction_scripts","","Rust representation of a Move transaction script that can…",null,null],[3,"CompiledBytes","stdlib::transaction_scripts","Bytes produced by compiling a Move source language script…",null,null],[4,"StdlibScript","","All of the Move transaction scripts that can be executed…",null,null],[13,"AddValidator","","",1,null],[13,"AddCurrency","","",1,null],[13,"AddCurrencyToAccount","","",1,null],[13,"AllowChildAccounts","","",1,null],[13,"ApplyForAssociationAddress","","",1,null],[13,"ApplyForAssociationPrivilege","","",1,null],[13,"ApplyForChildVaspCredential","","",1,null],[13,"ApplyForParentCapability","","",1,null],[13,"ApplyForRootVasp","","",1,null],[13,"ApprovedPayment","","",1,null],[13,"Burn","","",1,null],[13,"CancelBurn","","",1,null],[13,"CreateAccount","","",1,null],[13,"CreateEmptyAccount","","",1,null],[13,"EmptyScript","","",1,null],[13,"GrantAssociationAddress","","",1,null],[13,"GrantAssociationPrivilege","","",1,null],[13,"GrantChildAccount","","",1,null],[13,"GrantParentAccount","","",1,null],[13,"GrantVaspAccount","","",1,null],[13,"Mint","","",1,null],[13,"MintLbr","","",1,null],[13,"ModifyPublishingOption","","",1,null],[13,"PeerToPeer","","",1,null],[13,"PeerToPeerWithMetadata","","",1,null],[13,"Preburn","","",1,null],[13,"PublishSharedEd2551PublicKey","","",1,null],[13,"RecertifyChildAccount","","",1,null],[13,"RegisterApprovedPayment","","",1,null],[13,"RegisterPreburner","","",1,null],[13,"RegisterValidator","","",1,null],[13,"RemoveAssociationAddress","","",1,null],[13,"RemoveAssociationPrivilege","","",1,null],[13,"RemoveChildAccount","","",1,null],[13,"RemoveParentAccount","","",1,null],[13,"RemoveValidator","","",1,null],[13,"RotateAuthenticationKey","","",1,null],[13,"RotateConsensusPubkey","","",1,null],[13,"RotateSharedEd2551PublicKey","","",1,null],[13,"UnmintLbr","","",1,null],[13,"UpdateLibraVersion","","",1,null],[13,"UpdateExchangeRate","","",1,null],[13,"UpdateMintingAbility","","",1,null],[11,"all","","Return a vector containing all of the standard library…",1,[[],["vec"]]],[11,"whitelist","","Construct the whitelist of script hashes used to determine…",1,[[],["vec"]]],[11,"name","","Return a lowercase-underscore style name for this script",1,[[],["string"]]],[11,"is","","Return true if `code_bytes` is the bytecode of one of the…",1,[[],["bool"]]],[11,"compiled_bytes","","Return the Move bytecode produced by compiling this…",1,[[],["compiledbytes"]]],[11,"hash","","Return the sha3-256 hash of the compiled script bytes",1,[[],["hashvalue"]]],[11,"hash","","Return the sha3-256 hash of the script bytes",2,[[["self"]],["hashvalue"]]],[11,"into_vec","","Convert this newtype wrapper into a vector of bytes",2,[[],[["vec",["u8"]],["u8"]]]],[17,"STD_LIB_DIR","stdlib","",null,null],[17,"MOVE_EXTENSION","","",null,null],[17,"NO_USE_STAGED","","",null,null],[17,"TRANSACTION_SCRIPTS","","",null,null],[17,"STAGED_OUTPUT_PATH","","The output path under which staged files will be put",null,null],[17,"STAGED_STDLIB_NAME","","The file name for the staged stdlib",null,null],[17,"STAGED_EXTENSION","","The extension for staged files",null,null],[17,"DEBUG_MODULE_FILE_NAME","","The file name of the debug module",null,null],[17,"STAGED_STDLIB_BYTES","","The staged library needs to be included in the Rust binary…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"equivalent","","",0,[[["k"],["self"]],["bool"]]],[11,"from","stdlib::transaction_scripts","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"equivalent","","",1,[[["k"],["self"]],["bool"]]],[11,"clone","","",1,[[["self"]],["stdlibscript"]]],[11,"clone","","",2,[[["self"]],["compiledbytes"]]],[11,"eq","","",1,[[["self"],["stdlibscript"]],["bool"]]],[11,"eq","stdlib","",0,[[["self"],["stdliboptions"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","stdlib::transaction_scripts","",1,[[["formatter"],["self"]],["result"]]],[11,"try_from","","Return `Some(<script_name>)` if `code_bytes` is the…",1,[[],["result"]]]],"p":[[4,"StdLibOptions"],[4,"StdlibScript"],[3,"CompiledBytes"]]};
searchIndex["storage_client"] = {"doc":"This crate implements a client library for storage that…","i":[[3,"StorageReadServiceClient","storage_client","This provides storage read interfaces backed by real…",null,null],[3,"StorageWriteServiceClient","","This provides storage write interfaces backed by real…",null,null],[3,"SyncStorageClient","","",null,null],[8,"StorageRead","","This trait defines interfaces to be implemented by a…",null,null],[10,"update_to_latest_ledger","","See [`LibraDB::update_to_latest_ledger`].",0,[[["version"],["self"],["requestitem"],["vec",["requestitem"]]],[["pin",["box"]],["box",["future"]]]]],[10,"get_transactions","","See [`LibraDB::get_transactions`].",0,[[["version"],["self"],["u64"],["bool"]],[["box",["future"]],["pin",["box"]]]]],[10,"get_latest_state_root","","See [`LibraDB::get_latest_state_root`].",0,[[["self"]],[["box",["future"]],["pin",["box"]]]]],[10,"get_latest_account_state","","See [`LibraDB::get_latest_account_state`].",0,[[["self"],["accountaddress"]],[["pin",["box"]],["box",["future"]]]]],[10,"get_account_state_with_proof_by_version","","See [`LibraDB::get_account_state_with_proof_by_version`].",0,[[["version"],["self"],["accountaddress"]],[["pin",["box"]],["box",["future"]]]]],[10,"get_startup_info","","See [`LibraDB::get_startup_info`].",0,[[["self"]],[["pin",["box"]],["box",["future"]]]]],[10,"get_epoch_change_ledger_infos","","See [`LibraDB::get_epoch_change_ledger_infos`].",0,[[["self"],["u64"]],[["box",["future"]],["pin",["box"]]]]],[10,"backup_account_state","","See [`LibraDB::backup_account_state`].",0,[[["self"],["u64"]],[["pin",["box"]],["box",["future"]]]]],[10,"get_account_state_range_proof","","See [`LibraDB::get_account_state_range_proof`].",0,[[["hashvalue"],["self"],["version"]],[["box",["future"]],["pin",["box"]]]]],[10,"backup_transaction","","Gets a stream of transactions (for backup purpose).",0,[[["version"],["self"],["u64"]],[["pin",["box"]],["box",["future"]]]]],[10,"backup_transaction_info","","Gets a stream of transaction infos (for backup purpose).",0,[[["version"],["self"],["u64"]],[["pin",["box"]],["box",["future"]]]]],[10,"batch_fetch_config","","Returns a vector of on-chain configs as serialized byte…",0,[[["self"],["accesspath"],["vec",["accesspath"]]],[["pin",["box"]],["box",["future"]]]]],[8,"StorageWrite","","This trait defines interfaces to be implemented by a…",null,null],[10,"save_transactions","","See [`LibraDB::save_transactions`].",1,[[["transactiontocommit"],["self"],["version"],["option",["ledgerinfowithsignatures"]],["ledgerinfowithsignatures"],["vec",["transactiontocommit"]]],[["pin",["box"]],["box",["future"]]]]],[11,"new","","Constructs a `StorageReadServiceClient` with given…",2,[[["socketaddr"]],["self"]]],[11,"new","","Constructs a `StorageWriteServiceClient` with given…",3,[[["socketaddr"]],["self"]]],[11,"new","","",4,[[["socketaddr"]],["self"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"into_request","","",2,[[],["request"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"into_request","","",3,[[],["request"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"into_request","","",4,[[],["request"]]],[11,"update_to_latest_ledger","","",2,[[["version"],["self"],["requestitem"],["vec",["requestitem"]]],[["pin",["box"]],["box",["future"]]]]],[11,"get_transactions","","",2,[[["version"],["self"],["u64"],["bool"]],[["box",["future"]],["pin",["box"]]]]],[11,"get_latest_state_root","","",2,[[["self"]],[["box",["future"]],["pin",["box"]]]]],[11,"get_latest_account_state","","",2,[[["self"],["accountaddress"]],[["pin",["box"]],["box",["future"]]]]],[11,"get_account_state_with_proof_by_version","","",2,[[["version"],["self"],["accountaddress"]],[["pin",["box"]],["box",["future"]]]]],[11,"get_startup_info","","",2,[[["self"]],[["pin",["box"]],["box",["future"]]]]],[11,"get_epoch_change_ledger_infos","","",2,[[["self"],["u64"]],[["box",["future"]],["pin",["box"]]]]],[11,"backup_account_state","","",2,[[["version"],["self"]],[["pin",["box"]],["box",["future"]]]]],[11,"get_account_state_range_proof","","",2,[[["hashvalue"],["self"],["version"]],[["box",["future"]],["pin",["box"]]]]],[11,"backup_transaction","","",2,[[["version"],["self"],["u64"]],[["pin",["box"]],["box",["future"]]]]],[11,"backup_transaction_info","","",2,[[["version"],["self"],["u64"]],[["pin",["box"]],["box",["future"]]]]],[11,"batch_fetch_config","","",2,[[["self"],["accesspath"],["vec",["accesspath"]]],[["pin",["box"]],["box",["future"]]]]],[11,"save_transactions","","",3,[[["transactiontocommit"],["self"],["version"],["option",["ledgerinfowithsignatures"]],["ledgerinfowithsignatures"],["vec",["transactiontocommit"]]],[["pin",["box"]],["box",["future"]]]]],[11,"get_transactions","","",4,[[["bool"],["self"],["u64"]],[["transactionlistwithproof"],["result",["transactionlistwithproof"]]]]],[11,"get_events","","",4,[[["bool"],["eventkey"],["u64"],["self"]],[["vec"],["result",["vec"]]]]],[11,"get_latest_account_state","","",4,[[["self"],["accountaddress"]],[["result",["option"]],["option",["accountstateblob"]]]]],[11,"get_latest_ledger_info","","",4,[[["self"]],[["ledgerinfowithsignatures"],["result",["ledgerinfowithsignatures"]]]]],[11,"get_startup_info","","",4,[[["self"]],[["result",["option"]],["option",["startupinfo"]]]]],[11,"get_txn_by_account","","",4,[[["accountaddress"],["bool"],["u64"],["self"]],[["option",["transactionwithproof"]],["result",["option"]]]]],[11,"get_state_proof_with_ledger_info","","",4,[[["ledgerinfowithsignatures"],["self"],["u64"]],["result"]]],[11,"get_state_proof","","",4,[[["self"],["u64"]],["result"]]],[11,"get_account_state_with_proof","","",4,[[["accountaddress"],["u64"],["self"]],[["result",["accountstatewithproof"]],["accountstatewithproof"]]]],[11,"get_account_state_with_proof_by_version","","",4,[[["u64"],["self"],["accountaddress"]],["result"]]],[11,"get_latest_state_root","","",4,[[["self"]],["result"]]],[11,"get_latest_tree_state","","",4,[[["self"]],[["treestate"],["result",["treestate"]]]]],[11,"get_epoch_change_ledger_infos","","",4,[[["self"],["u64"]],[["epochchangeproof"],["result",["epochchangeproof"]]]]],[11,"get_ledger_info","","",4,[[["self"],["u64"]],[["ledgerinfowithsignatures"],["result",["ledgerinfowithsignatures"]]]]],[11,"save_transactions","","",4,[[["option",["ledgerinfowithsignatures"]],["ledgerinfowithsignatures"],["u64"],["self"]],["result"]]]],"p":[[8,"StorageRead"],[8,"StorageWrite"],[3,"StorageReadServiceClient"],[3,"StorageWriteServiceClient"],[3,"SyncStorageClient"]]};
searchIndex["storage_interface"] = {"doc":"","i":[[3,"StartupInfo","storage_interface","",null,null],[12,"latest_ledger_info","","The latest ledger info.",0,null],[12,"latest_epoch_info","","If the above ledger info doesn't carry a validator set,…",0,null],[12,"committed_tree_state","","",0,null],[12,"synced_tree_state","","",0,null],[3,"TreeState","","",null,null],[12,"num_transactions","","",1,null],[12,"ledger_frozen_subtree_hashes","","",1,null],[12,"account_state_root_hash","","",1,null],[3,"DbReaderWriter","","",null,null],[12,"reader","","",2,null],[12,"writer","","",2,null],[3,"GetAccountStateWithProofByVersionRequest","","",null,null],[12,"address","","The access path to query with.",3,null],[12,"version","","The version the query is based on.",3,null],[3,"SaveTransactionsRequest","","",null,null],[12,"txns_to_commit","","",4,null],[12,"first_version","","",4,null],[12,"ledger_info_with_signatures","","",4,null],[4,"Error","","",null,null],[13,"ServiceError","","",5,null],[12,"error","storage_interface::Error","",6,null],[13,"SerializationError","storage_interface","",5,null],[4,"StorageRequest","","Network types for storage service",null,null],[13,"GetAccountStateWithProofByVersionRequest","","",7,null],[13,"GetStartupInfoRequest","","",7,null],[13,"SaveTransactionsRequest","","",7,null],[0,"mock","","This module provides mock dbreader for tests.",null,null],[3,"MockDbReader","storage_interface::mock","This is a mock of the dbreader in tests.",null,null],[0,"state_view","storage_interface","",null,null],[3,"VerifiedStateView","storage_interface::state_view","`VerifiedStateView` is like a snapshot of the global state…",null,null],[11,"new","","Constructs a [`VerifiedStateView`] with persistent state…",8,[[["version"],["hashvalue"],["sparsemerkletree"],["arc",["dbreader"]],["dbreader"],["option",["version"]]],["self"]]],[8,"DbReader","storage_interface","Trait that is implemented by a DB that supports certain…",null,null],[11,"update_to_latest_ledger","","",9,[[["version"],["vec",["requestitem"]],["requestitem"],["self"]],["result"]]],[10,"get_epoch_change_ledger_infos","","See [`LibraDB::get_epoch_change_ledger_infos`].",9,[[["self"],["u64"]],[["result",["epochchangeproof"]],["epochchangeproof"]]]],[10,"get_transactions","","See [`LibraDB::get_transactions`].",9,[[["version"],["bool"],["self"],["u64"]],[["result",["transactionlistwithproof"]],["transactionlistwithproof"]]]],[10,"get_events","","Returns events by given event key",9,[[["bool"],["eventkey"],["u64"],["self"]],[["result",["vec"]],["vec"]]]],[10,"get_latest_account_state","","See [`LibraDB::get_latest_account_state`].",9,[[["self"],["accountaddress"]],[["result",["option"]],["option",["accountstateblob"]]]]],[10,"get_latest_ledger_info","","Returns the latest ledger info.",9,[[["self"]],[["result",["ledgerinfowithsignatures"]],["ledgerinfowithsignatures"]]]],[11,"get_latest_version","","Returns the latest ledger info.",9,[[["self"]],[["version"],["result",["version"]]]]],[11,"get_latest_commit_metadata","","Returns the latest version and committed block timestamp",9,[[["self"]],["result"]]],[10,"get_startup_info","","Gets information needed from storage during the main node…",9,[[["self"]],[["result",["option"]],["option",["startupinfo"]]]]],[10,"get_txn_by_account","","",9,[[["accountaddress"],["version"],["bool"],["u64"],["self"]],[["option",["transactionwithproof"]],["result",["option"]]]]],[10,"get_state_proof_with_ledger_info","","Returns proof of new state for a given ledger info with…",9,[[["ledgerinfowithsignatures"],["self"],["u64"]],["result"]]],[10,"get_state_proof","","Returns proof of new state relative to version known to…",9,[[["self"],["u64"]],["result"]]],[10,"get_account_state_with_proof","","Returns the account state corresponding to the given…",9,[[["version"],["self"],["accountaddress"]],[["result",["accountstatewithproof"]],["accountstatewithproof"]]]],[10,"get_account_state_with_proof_by_version","","",9,[[["version"],["self"],["accountaddress"]],["result"]]],[10,"get_latest_state_root","","See [`LibraDB::get_latest_state_root`].",9,[[["self"]],["result"]]],[10,"get_latest_tree_state","","Gets the latest TreeState no matter if db has been…",9,[[["self"]],[["result",["treestate"]],["treestate"]]]],[10,"get_ledger_info","","Get the ledger info of the epoch that `known_version`…",9,[[["self"],["u64"]],[["result",["ledgerinfowithsignatures"]],["ledgerinfowithsignatures"]]]],[8,"DbWriter","","Trait that is implemented by a DB that supports certain…",null,null],[10,"save_transactions","","Persist transactions. Called by the executor module when…",10,[[["version"],["ledgerinfowithsignatures"],["self"],["option",["ledgerinfowithsignatures"]]],["result"]]],[11,"new","","",0,[[["treestate"],["ledgerinfowithsignatures"],["option",["treestate"]],["epochinfo"],["option",["epochinfo"]]],["self"]]],[11,"get_epoch_info","","",0,[[["self"]],["epochinfo"]]],[11,"new","","",1,[[["leafcount"],["vec",["hashvalue"]],["hashvalue"]],["self"]]],[11,"is_empty","","",1,[[["self"]],["bool"]]],[11,"new","","",2,[[["dbreader"],["dbwriter"]],["self"]]],[11,"wrap","","",2,[[["dbreader"],["dbwriter"]]]],[11,"new","","Constructor.",3,[[["version"],["accountaddress"]],["self"]]],[11,"new","","Constructor.",4,[[["version"],["ledgerinfowithsignatures"],["transactiontocommit"],["vec",["transactiontocommit"]],["option",["ledgerinfowithsignatures"]]],["self"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"test_only_hash","","",0,[[["self"]],["hashvalue"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"test_only_hash","","",1,[[["self"]],["hashvalue"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"test_only_hash","","",3,[[["self"]],["hashvalue"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"test_only_hash","","",4,[[["self"]],["hashvalue"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"test_only_hash","","",5,[[["self"]],["hashvalue"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"test_only_hash","","",7,[[["self"]],["hashvalue"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","storage_interface::mock","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","storage_interface::state_view","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"get_epoch_change_ledger_infos","storage_interface::mock","",11,[[["self"],["u64"]],[["result",["epochchangeproof"]],["epochchangeproof"]]]],[11,"get_transactions","","",11,[[["version"],["bool"],["self"],["u64"]],[["result",["transactionlistwithproof"]],["transactionlistwithproof"]]]],[11,"get_events","","Returns events by given event key",11,[[["bool"],["eventkey"],["u64"],["self"]],[["result",["vec"]],["vec"]]]],[11,"get_latest_account_state","","",11,[[["self"],["accountaddress"]],[["result",["option"]],["option",["accountstateblob"]]]]],[11,"get_latest_ledger_info","","Returns the latest ledger info.",11,[[["self"]],[["result",["ledgerinfowithsignatures"]],["ledgerinfowithsignatures"]]]],[11,"get_startup_info","","",11,[[["self"]],[["result",["option"]],["option",["startupinfo"]]]]],[11,"get_txn_by_account","","",11,[[["accountaddress"],["version"],["bool"],["u64"],["self"]],[["option",["transactionwithproof"]],["result",["option"]]]]],[11,"get_state_proof_with_ledger_info","","",11,[[["ledgerinfowithsignatures"],["self"],["u64"]],["result"]]],[11,"get_state_proof","","",11,[[["self"],["u64"]],["result"]]],[11,"get_account_state_with_proof","","",11,[[["version"],["self"],["accountaddress"]],[["result",["accountstatewithproof"]],["accountstatewithproof"]]]],[11,"get_account_state_with_proof_by_version","","",11,[[["version"],["self"],["accountaddress"]],["result"]]],[11,"get_latest_state_root","","",11,[[["self"]],["result"]]],[11,"get_latest_tree_state","","",11,[[["self"]],[["result",["treestate"]],["treestate"]]]],[11,"get_ledger_info","","",11,[[["self"],["u64"]],[["result",["ledgerinfowithsignatures"]],["ledgerinfowithsignatures"]]]],[11,"from","storage_interface","",5,[[["error"]],["self"]]],[11,"from","","",5,[[["error"]],["self"]]],[11,"from","","",5,[[["error"]],["self"]]],[11,"from","","",2,[[["d"]],["self"]]],[11,"into","storage_interface::state_view","",8,[[]]],[11,"clone","storage_interface","",0,[[["self"]],["startupinfo"]]],[11,"clone","","",1,[[["self"]],["treestate"]]],[11,"clone","","",2,[[["self"]],["dbreaderwriter"]]],[11,"clone","","",7,[[["self"]],["storagerequest"]]],[11,"clone","","",3,[[["self"]],["getaccountstatewithproofbyversionrequest"]]],[11,"clone","","",4,[[["self"]],["savetransactionsrequest"]]],[11,"eq","","",0,[[["startupinfo"],["self"]],["bool"]]],[11,"ne","","",0,[[["startupinfo"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["treestate"]],["bool"]]],[11,"ne","","",1,[[["self"],["treestate"]],["bool"]]],[11,"eq","","",5,[[["self"],["error"]],["bool"]]],[11,"ne","","",5,[[["self"],["error"]],["bool"]]],[11,"eq","","",3,[[["getaccountstatewithproofbyversionrequest"],["self"]],["bool"]]],[11,"ne","","",3,[[["getaccountstatewithproofbyversionrequest"],["self"]],["bool"]]],[11,"eq","","",4,[[["savetransactionsrequest"],["self"]],["bool"]]],[11,"ne","","",4,[[["savetransactionsrequest"],["self"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"deserialize","","",0,[[["__d"]],["result"]]],[11,"deserialize","","",1,[[["__d"]],["result"]]],[11,"deserialize","","",5,[[["__d"]],["result"]]],[11,"deserialize","","",7,[[["__d"]],["result"]]],[11,"deserialize","","",3,[[["__d"]],["result"]]],[11,"deserialize","","",4,[[["__d"]],["result"]]],[11,"serialize","","",0,[[["self"],["__s"]],["result"]]],[11,"serialize","","",1,[[["self"],["__s"]],["result"]]],[11,"serialize","","",5,[[["self"],["__s"]],["result"]]],[11,"serialize","","",7,[[["self"],["__s"]],["result"]]],[11,"serialize","","",3,[[["self"],["__s"]],["result"]]],[11,"serialize","","",4,[[["self"],["__s"]],["result"]]],[11,"get","storage_interface::state_view","",8,[[["accesspath"],["self"]],[["result",["option"]],["option",["vec"]]]]],[11,"multi_get","","",8,[[["self"]],[["result",["vec"]],["vec",["option"]]]]],[11,"is_genesis","","",8,[[["self"]],["bool"]]]],"p":[[3,"StartupInfo"],[3,"TreeState"],[3,"DbReaderWriter"],[3,"GetAccountStateWithProofByVersionRequest"],[3,"SaveTransactionsRequest"],[4,"Error"],[13,"ServiceError"],[4,"StorageRequest"],[3,"VerifiedStateView"],[8,"DbReader"],[8,"DbWriter"],[3,"MockDbReader"]]};
searchIndex["storage_proto"] = {"doc":"This crate provides Protocol Buffers definitions for the…","i":[[3,"GetLatestStateRootResponse","storage_proto","",null,null],[12,"version","","",0,null],[12,"state_root_hash","","",0,null],[3,"GetLatestAccountStateRequest","","",null,null],[12,"address","","",1,null],[3,"GetLatestAccountStateResponse","","",null,null],[12,"account_state_blob","","",2,null],[3,"GetAccountStateWithProofByVersionRequest","","Helper to construct and parse…",null,null],[12,"address","","The access path to query with.",3,null],[12,"version","","The version the query is based on.",3,null],[3,"GetAccountStateWithProofByVersionResponse","","Helper to construct and parse…",null,null],[12,"account_state_blob","","The account state blob requested.",4,null],[12,"sparse_merkle_proof","","The state root hash the query is based on.",4,null],[3,"GetAccountStateRangeProofRequest","","",null,null],[12,"rightmost_key","","",5,null],[12,"version","","",5,null],[3,"GetAccountStateRangeProofResponse","","",null,null],[3,"SaveTransactionsRequest","","Helper to construct and parse…",null,null],[12,"txns_to_commit","","",6,null],[12,"first_version","","",6,null],[12,"ledger_info_with_signatures","","",6,null],[3,"GetTransactionsRequest","","Helper to construct and parse…",null,null],[12,"start_version","","",7,null],[12,"batch_size","","",7,null],[12,"ledger_version","","",7,null],[12,"fetch_events","","",7,null],[3,"GetTransactionsResponse","","Helper to construct and parse…",null,null],[12,"txn_list_with_proof","","",8,null],[3,"GetStartupInfoResponse","","Helper to construct and parse…",null,null],[12,"info","","",9,null],[3,"GetEpochChangeLedgerInfosRequest","","Helper to construct and parse…",null,null],[12,"start_epoch","","",10,null],[12,"end_epoch","","",10,null],[3,"BackupAccountStateRequest","","Helper to construct and parse…",null,null],[12,"version","","The version of state to backup.",11,null],[3,"BackupAccountStateResponse","","Helper to construct and parse…",null,null],[12,"account_key","","The hashed account address",12,null],[12,"account_state_blob","","The accompanying account state blob",12,null],[3,"BackupTransactionRequest","","",null,null],[12,"start_version","","",13,null],[12,"num_transactions","","",13,null],[3,"BackupTransactionResponse","","",null,null],[12,"transaction","","",14,null],[3,"BackupTransactionInfoRequest","","",null,null],[12,"start_version","","",15,null],[12,"num_transactions","","",15,null],[3,"BackupTransactionInfoResponse","","",null,null],[12,"transaction_info","","",16,null],[0,"proto","","",null,null],[0,"storage","storage_proto::proto","",null,null],[3,"SaveTransactionsRequest","storage_proto::proto::storage","",null,null],[12,"txns_to_commit","","Transactions to persist.",17,null],[12,"first_version","","The version of the first transaction in `txns_to_commit`.",17,null],[12,"ledger_info_with_signatures","","If this is set, Storage will check its state after…",17,null],[3,"SaveTransactionsResponse","","",null,null],[3,"GetTransactionsRequest","","",null,null],[12,"start_version","","The version to start with.",18,null],[12,"batch_size","","The size of the transaction batch.",18,null],[12,"ledger_version","","All the proofs returned in the response should be relative…",18,null],[12,"fetch_events","","Used to return the events associated with each transaction",18,null],[3,"GetTransactionsResponse","","",null,null],[12,"txn_list_with_proof","","",19,null],[3,"GetLatestStateRootRequest","","",null,null],[3,"GetLatestStateRootResponse","","",null,null],[12,"version","","",20,null],[12,"state_root_hash","","",20,null],[3,"GetLatestAccountStateRequest","","",null,null],[12,"address","","",21,null],[3,"GetLatestAccountStateResponse","","",null,null],[12,"account_state_blob","","",22,null],[3,"GetAccountStateWithProofByVersionRequest","","",null,null],[12,"address","","",23,null],[12,"version","","",23,null],[3,"GetAccountStateWithProofByVersionResponse","","",null,null],[12,"account_state_blob","","",24,null],[12,"sparse_merkle_proof","","",24,null],[3,"GetStartupInfoRequest","","",null,null],[3,"GetStartupInfoResponse","","",null,null],[12,"info","","When this is empty, Storage needs to be bootstrapped via…",25,null],[3,"TreeState","","",null,null],[12,"num_transactions","","The number of transactions in the accumulator. \"0\" means…",26,null],[12,"ledger_frozen_subtree_hashes","","From left to right, root hashes of all frozen subtrees.",26,null],[12,"account_state_root_hash","","The latest account state root hash.",26,null],[3,"StartupInfo","","",null,null],[12,"latest_ledger_info","","The latest committed LedgerInfo. Note that at start up…",27,null],[12,"latest_epoch_info","","If the above LedgerInfo doesn't carry a epoch info (which…",27,null],[12,"committed_tree_state","","The latest committed tree state matching the ledger info…",27,null],[12,"synced_tree_state","","The latest synced tree state when the number of…",27,null],[3,"GetEpochChangeLedgerInfosRequest","","",null,null],[12,"start_epoch","","",28,null],[12,"end_epoch","","",28,null],[3,"BackupAccountStateRequest","","",null,null],[12,"version","","Version at which to start the backup",29,null],[3,"BackupAccountStateResponse","","",null,null],[12,"account_key","","Account Key (32-byte hash value)",30,null],[12,"account_state_blob","","Raw account state",30,null],[3,"GetAccountStateRangeProofRequest","","",null,null],[12,"rightmost_key","","The rightmost key in the range to prove.",31,null],[12,"version","","The version of the state.",31,null],[3,"GetAccountStateRangeProofResponse","","",null,null],[12,"proof","","",32,null],[3,"BackupTransactionRequest","","",null,null],[12,"start_version","","The version of the first transaction.",33,null],[12,"num_transactions","","Number of transactions to request.",33,null],[3,"BackupTransactionResponse","","",null,null],[12,"transaction","","",34,null],[3,"BackupTransactionInfoRequest","","",null,null],[12,"start_version","","The version of the first transaction info.",35,null],[12,"num_transactions","","Number of transaction infos to request.",35,null],[3,"BackupTransactionInfoResponse","","",null,null],[12,"transaction_info","","",36,null],[0,"storage_client","","Generated client implementations.",null,null],[3,"StorageClient","storage_proto::proto::storage::storage_client","…",null,null],[11,"connect","","Attempt to create a new client by connecting to a given…",37,[[["d"]]]],[11,"new","","",37,[[["t"]],["self"]]],[11,"with_interceptor","","",37,[[["t"]],["self"]]],[11,"save_transactions","","Persist transactions. Called by Execution when either…",37,[[["self"]]]],[11,"update_to_latest_ledger","","Used to get a piece of data and return the proof of it. If…",37,[[["self"]]]],[11,"get_transactions","","When we receive a request from a peer validator asking a…",37,[[["self"]]]],[11,"get_latest_state_root","","",37,[[["self"]]]],[11,"get_latest_account_state","","",37,[[["self"]]]],[11,"get_account_state_with_proof_by_version","","",37,[[["self"]]]],[11,"get_startup_info","","Returns information needed for libra core to start up.",37,[[["self"]]]],[11,"get_epoch_change_ledger_infos","","Returns latest ledger infos per epoch.",37,[[["self"]]]],[11,"backup_account_state","","Returns a stream of account states.",37,[[["self"]]]],[11,"get_account_state_range_proof","","",37,[[["self"]]]],[11,"backup_transaction","","Returns a stream of transactions.",37,[[["self"]]]],[11,"backup_transaction_info","","Returns a stream of transaction infos.",37,[[["self"]]]],[0,"storage_server","storage_proto::proto::storage","Generated server implementations.",null,null],[8,"Storage","storage_proto::proto::storage::storage_server","Generated trait containing gRPC methods that should be…",null,null],[10,"save_transactions","","Persist transactions. Called by Execution when either…",38,[[["request",["savetransactionsrequest"]],["self"],["savetransactionsrequest"]],[["pin",["box"]],["box",["future"]]]]],[10,"update_to_latest_ledger","","Used to get a piece of data and return the proof of it. If…",38,[[["request",["updatetolatestledgerrequest"]],["self"],["updatetolatestledgerrequest"]],[["box",["future"]],["pin",["box"]]]]],[10,"get_transactions","","When we receive a request from a peer validator asking a…",38,[[["self"],["request",["gettransactionsrequest"]],["gettransactionsrequest"]],[["pin",["box"]],["box",["future"]]]]],[10,"get_latest_state_root","","",38,[[["request",["getlateststaterootrequest"]],["self"],["getlateststaterootrequest"]],[["box",["future"]],["pin",["box"]]]]],[10,"get_latest_account_state","","",38,[[["self"],["request",["getlatestaccountstaterequest"]],["getlatestaccountstaterequest"]],[["box",["future"]],["pin",["box"]]]]],[10,"get_account_state_with_proof_by_version","","",38,[[["getaccountstatewithproofbyversionrequest"],["self"],["request",["getaccountstatewithproofbyversionrequest"]]],[["pin",["box"]],["box",["future"]]]]],[10,"get_startup_info","","Returns information needed for libra core to start up.",38,[[["self"],["getstartupinforequest"],["request",["getstartupinforequest"]]],[["pin",["box"]],["box",["future"]]]]],[10,"get_epoch_change_ledger_infos","","Returns latest ledger infos per epoch.",38,[[["self"],["request",["getepochchangeledgerinfosrequest"]],["getepochchangeledgerinfosrequest"]],[["box",["future"]],["pin",["box"]]]]],[16,"BackupAccountStateStream","","Server streaming response type for the BackupAccountState…",38,null],[10,"backup_account_state","","Returns a stream of account states.",38,[[["self"],["request",["backupaccountstaterequest"]],["backupaccountstaterequest"]],[["box",["future"]],["pin",["box"]]]]],[10,"get_account_state_range_proof","","",38,[[["getaccountstaterangeproofrequest"],["self"],["request",["getaccountstaterangeproofrequest"]]],[["pin",["box"]],["box",["future"]]]]],[16,"BackupTransactionStream","","Server streaming response type for the BackupTransaction…",38,null],[10,"backup_transaction","","Returns a stream of transactions.",38,[[["self"],["request",["backuptransactionrequest"]],["backuptransactionrequest"]],[["box",["future"]],["pin",["box"]]]]],[16,"BackupTransactionInfoStream","","Server streaming response type for the…",38,null],[10,"backup_transaction_info","","Returns a stream of transaction infos.",38,[[["self"],["request",["backuptransactioninforequest"]],["backuptransactioninforequest"]],[["box",["future"]],["pin",["box"]]]]],[0,"prelude","storage_proto","",null,null],[11,"new","","",0,[[["version"],["hashvalue"]],["self"]]],[11,"new","","",1,[[["accountaddress"]],["self"]]],[11,"new","","",2,[[["option",["accountstateblob"]],["accountstateblob"]],["self"]]],[11,"new","","Constructor.",3,[[["version"],["accountaddress"]],["self"]]],[11,"new","","Constructor.",4,[[["option",["accountstateblob"]],["accountstateblob"],["sparsemerkleproof"]],["self"]]],[11,"new","","",5,[[["version"],["hashvalue"]],["self"]]],[11,"new","","",39,[[["sparsemerklerangeproof"]],["self"]]],[11,"new","","Constructor.",6,[[["vec",["transactiontocommit"]],["option",["ledgerinfowithsignatures"]],["ledgerinfowithsignatures"],["version"],["transactiontocommit"]],["self"]]],[11,"new","","Constructor.",7,[[["version"],["u64"],["bool"]],["self"]]],[11,"new","","Constructor.",8,[[["transactionlistwithproof"]],["self"]]],[11,"new","","Constructor.",10,[[["u64"]],["self"]]],[11,"new","","Constructor.",11,[[["version"]],["self"]]],[11,"new","","Constructor.",12,[[["accountstateblob"],["hashvalue"]],["self"]]],[11,"new","","",13,[[["version"],["u64"]],["self"]]],[11,"new","","",15,[[["version"],["u64"]],["self"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"into_request","","",0,[[],["request"]]],[11,"equivalent","","",0,[[["k"],["self"]],["bool"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"into_request","","",1,[[],["request"]]],[11,"equivalent","","",1,[[["k"],["self"]],["bool"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"into_request","","",2,[[],["request"]]],[11,"equivalent","","",2,[[["k"],["self"]],["bool"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"into_request","","",3,[[],["request"]]],[11,"equivalent","","",3,[[["k"],["self"]],["bool"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"into_request","","",4,[[],["request"]]],[11,"equivalent","","",4,[[["k"],["self"]],["bool"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"into_request","","",5,[[],["request"]]],[11,"equivalent","","",5,[[["k"],["self"]],["bool"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"vzip","","",39,[[],["v"]]],[11,"into_request","","",39,[[],["request"]]],[11,"equivalent","","",39,[[["k"],["self"]],["bool"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"into_request","","",6,[[],["request"]]],[11,"equivalent","","",6,[[["k"],["self"]],["bool"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"into_request","","",7,[[],["request"]]],[11,"equivalent","","",7,[[["k"],["self"]],["bool"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"into_request","","",8,[[],["request"]]],[11,"equivalent","","",8,[[["k"],["self"]],["bool"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"into_request","","",9,[[],["request"]]],[11,"equivalent","","",9,[[["k"],["self"]],["bool"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"into_request","","",10,[[],["request"]]],[11,"equivalent","","",10,[[["k"],["self"]],["bool"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"into_request","","",11,[[],["request"]]],[11,"equivalent","","",11,[[["k"],["self"]],["bool"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"into_request","","",12,[[],["request"]]],[11,"equivalent","","",12,[[["k"],["self"]],["bool"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"into_request","","",13,[[],["request"]]],[11,"equivalent","","",13,[[["k"],["self"]],["bool"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"into_request","","",14,[[],["request"]]],[11,"equivalent","","",14,[[["k"],["self"]],["bool"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"into_request","","",15,[[],["request"]]],[11,"equivalent","","",15,[[["k"],["self"]],["bool"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"into_request","","",16,[[],["request"]]],[11,"equivalent","","",16,[[["k"],["self"]],["bool"]]],[11,"from","storage_proto::proto::storage","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"clear","","",17,[[["self"]]]],[11,"initialize","","",17,[[]]],[11,"into_request","","",17,[[],["request"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"vzip","","",40,[[],["v"]]],[11,"clear","","",40,[[["self"]]]],[11,"initialize","","",40,[[]]],[11,"into_request","","",40,[[],["request"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"vzip","","",18,[[],["v"]]],[11,"clear","","",18,[[["self"]]]],[11,"initialize","","",18,[[]]],[11,"into_request","","",18,[[],["request"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"vzip","","",19,[[],["v"]]],[11,"clear","","",19,[[["self"]]]],[11,"initialize","","",19,[[]]],[11,"into_request","","",19,[[],["request"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"vzip","","",41,[[],["v"]]],[11,"clear","","",41,[[["self"]]]],[11,"initialize","","",41,[[]]],[11,"into_request","","",41,[[],["request"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"vzip","","",20,[[],["v"]]],[11,"clear","","",20,[[["self"]]]],[11,"initialize","","",20,[[]]],[11,"into_request","","",20,[[],["request"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"vzip","","",21,[[],["v"]]],[11,"clear","","",21,[[["self"]]]],[11,"initialize","","",21,[[]]],[11,"into_request","","",21,[[],["request"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"vzip","","",22,[[],["v"]]],[11,"clear","","",22,[[["self"]]]],[11,"initialize","","",22,[[]]],[11,"into_request","","",22,[[],["request"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"vzip","","",23,[[],["v"]]],[11,"clear","","",23,[[["self"]]]],[11,"initialize","","",23,[[]]],[11,"into_request","","",23,[[],["request"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"vzip","","",24,[[],["v"]]],[11,"clear","","",24,[[["self"]]]],[11,"initialize","","",24,[[]]],[11,"into_request","","",24,[[],["request"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"vzip","","",42,[[],["v"]]],[11,"clear","","",42,[[["self"]]]],[11,"initialize","","",42,[[]]],[11,"into_request","","",42,[[],["request"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"vzip","","",25,[[],["v"]]],[11,"clear","","",25,[[["self"]]]],[11,"initialize","","",25,[[]]],[11,"into_request","","",25,[[],["request"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"vzip","","",26,[[],["v"]]],[11,"clear","","",26,[[["self"]]]],[11,"initialize","","",26,[[]]],[11,"into_request","","",26,[[],["request"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"vzip","","",27,[[],["v"]]],[11,"clear","","",27,[[["self"]]]],[11,"initialize","","",27,[[]]],[11,"into_request","","",27,[[],["request"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"vzip","","",28,[[],["v"]]],[11,"clear","","",28,[[["self"]]]],[11,"initialize","","",28,[[]]],[11,"into_request","","",28,[[],["request"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"vzip","","",29,[[],["v"]]],[11,"clear","","",29,[[["self"]]]],[11,"initialize","","",29,[[]]],[11,"into_request","","",29,[[],["request"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"vzip","","",30,[[],["v"]]],[11,"clear","","",30,[[["self"]]]],[11,"initialize","","",30,[[]]],[11,"into_request","","",30,[[],["request"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"vzip","","",31,[[],["v"]]],[11,"clear","","",31,[[["self"]]]],[11,"initialize","","",31,[[]]],[11,"into_request","","",31,[[],["request"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"vzip","","",32,[[],["v"]]],[11,"clear","","",32,[[["self"]]]],[11,"initialize","","",32,[[]]],[11,"into_request","","",32,[[],["request"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"vzip","","",33,[[],["v"]]],[11,"clear","","",33,[[["self"]]]],[11,"initialize","","",33,[[]]],[11,"into_request","","",33,[[],["request"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"vzip","","",34,[[],["v"]]],[11,"clear","","",34,[[["self"]]]],[11,"initialize","","",34,[[]]],[11,"into_request","","",34,[[],["request"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"vzip","","",35,[[],["v"]]],[11,"clear","","",35,[[["self"]]]],[11,"initialize","","",35,[[]]],[11,"into_request","","",35,[[],["request"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"vzip","","",36,[[],["v"]]],[11,"clear","","",36,[[["self"]]]],[11,"initialize","","",36,[[]]],[11,"into_request","","",36,[[],["request"]]],[11,"from","storage_proto::proto::storage::storage_client","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"vzip","","",37,[[],["v"]]],[11,"into_request","","",37,[[],["request"]]],[11,"from","storage_proto::proto::storage","",20,[[["getlateststaterootresponse"]],["self"]]],[11,"from","","",21,[[["getlatestaccountstaterequest"]],["self"]]],[11,"from","","",22,[[["getlatestaccountstateresponse"]],["self"]]],[11,"from","","",23,[[["getaccountstatewithproofbyversionrequest"]],["self"]]],[11,"from","","",24,[[["getaccountstatewithproofbyversionresponse"]],["self"]]],[11,"from","","",31,[[["getaccountstaterangeproofrequest"]],["self"]]],[11,"from","","",32,[[["getaccountstaterangeproofresponse"]],["self"]]],[11,"from","","",17,[[["savetransactionsrequest"]],["self"]]],[11,"from","","",18,[[["gettransactionsrequest"]],["self"]]],[11,"from","","",19,[[["gettransactionsresponse"]],["self"]]],[11,"from","","",26,[[["treestate"]],["self"]]],[11,"from","","",27,[[["startupinfo"]],["self"]]],[11,"from","","",25,[[["getstartupinforesponse"]],["self"]]],[11,"from","","",28,[[["getepochchangeledgerinfosrequest"]],["self"]]],[11,"from","","",29,[[["backupaccountstaterequest"]],["self"]]],[11,"from","","",30,[[["backupaccountstateresponse"]],["self"]]],[11,"from","","",33,[[["backuptransactionrequest"]],["self"]]],[11,"from","","",34,[[["backuptransactionresponse"]],["self"]]],[11,"from","","",35,[[["backuptransactioninforequest"]],["self"]]],[11,"from","","",36,[[["backuptransactioninforesponse"]],["self"]]],[11,"into","storage_proto","",0,[[]]],[11,"into","","",4,[[]]],[11,"into","","",39,[[],["sparsemerklerangeproof"]]],[11,"into","","",12,[[]]],[11,"clone","storage_proto::proto::storage","",17,[[["self"]],["savetransactionsrequest"]]],[11,"clone","","",40,[[["self"]],["savetransactionsresponse"]]],[11,"clone","","",18,[[["self"]],["gettransactionsrequest"]]],[11,"clone","","",19,[[["self"]],["gettransactionsresponse"]]],[11,"clone","","",41,[[["self"]],["getlateststaterootrequest"]]],[11,"clone","","",20,[[["self"]],["getlateststaterootresponse"]]],[11,"clone","","",21,[[["self"]],["getlatestaccountstaterequest"]]],[11,"clone","","",22,[[["self"]],["getlatestaccountstateresponse"]]],[11,"clone","","",23,[[["self"]],["getaccountstatewithproofbyversionrequest"]]],[11,"clone","","",24,[[["self"]],["getaccountstatewithproofbyversionresponse"]]],[11,"clone","","",42,[[["self"]],["getstartupinforequest"]]],[11,"clone","","",25,[[["self"]],["getstartupinforesponse"]]],[11,"clone","","",26,[[["self"]],["treestate"]]],[11,"clone","","",27,[[["self"]],["startupinfo"]]],[11,"clone","","",28,[[["self"]],["getepochchangeledgerinfosrequest"]]],[11,"clone","","",29,[[["self"]],["backupaccountstaterequest"]]],[11,"clone","","",30,[[["self"]],["backupaccountstateresponse"]]],[11,"clone","","",31,[[["self"]],["getaccountstaterangeproofrequest"]]],[11,"clone","","",32,[[["self"]],["getaccountstaterangeproofresponse"]]],[11,"clone","","",33,[[["self"]],["backuptransactionrequest"]]],[11,"clone","","",34,[[["self"]],["backuptransactionresponse"]]],[11,"clone","","",35,[[["self"]],["backuptransactioninforequest"]]],[11,"clone","","",36,[[["self"]],["backuptransactioninforesponse"]]],[11,"clone","storage_proto::proto::storage::storage_client","",37,[[["self"]],["self"]]],[11,"clone","storage_proto","",0,[[["self"]],["getlateststaterootresponse"]]],[11,"clone","","",1,[[["self"]],["getlatestaccountstaterequest"]]],[11,"clone","","",2,[[["self"]],["getlatestaccountstateresponse"]]],[11,"clone","","",3,[[["self"]],["getaccountstatewithproofbyversionrequest"]]],[11,"clone","","",4,[[["self"]],["getaccountstatewithproofbyversionresponse"]]],[11,"clone","","",5,[[["self"]],["getaccountstaterangeproofrequest"]]],[11,"clone","","",39,[[["self"]],["getaccountstaterangeproofresponse"]]],[11,"clone","","",6,[[["self"]],["savetransactionsrequest"]]],[11,"clone","","",7,[[["self"]],["gettransactionsrequest"]]],[11,"clone","","",8,[[["self"]],["gettransactionsresponse"]]],[11,"clone","","",9,[[["self"]],["getstartupinforesponse"]]],[11,"clone","","",10,[[["self"]],["getepochchangeledgerinfosrequest"]]],[11,"clone","","",11,[[["self"]],["backupaccountstaterequest"]]],[11,"clone","","",12,[[["self"]],["backupaccountstateresponse"]]],[11,"clone","","",13,[[["self"]],["backuptransactionrequest"]]],[11,"clone","","",14,[[["self"]],["backuptransactionresponse"]]],[11,"clone","","",15,[[["self"]],["backuptransactioninforequest"]]],[11,"clone","","",16,[[["self"]],["backuptransactioninforesponse"]]],[11,"default","storage_proto::proto::storage","",17,[[],["savetransactionsrequest"]]],[11,"default","","",40,[[],["savetransactionsresponse"]]],[11,"default","","",18,[[],["gettransactionsrequest"]]],[11,"default","","",19,[[],["gettransactionsresponse"]]],[11,"default","","",41,[[],["getlateststaterootrequest"]]],[11,"default","","",20,[[],["getlateststaterootresponse"]]],[11,"default","","",21,[[],["getlatestaccountstaterequest"]]],[11,"default","","",22,[[],["getlatestaccountstateresponse"]]],[11,"default","","",23,[[],["getaccountstatewithproofbyversionrequest"]]],[11,"default","","",24,[[],["getaccountstatewithproofbyversionresponse"]]],[11,"default","","",42,[[],["getstartupinforequest"]]],[11,"default","","",25,[[],["getstartupinforesponse"]]],[11,"default","","",26,[[],["treestate"]]],[11,"default","","",27,[[],["startupinfo"]]],[11,"default","","",28,[[],["getepochchangeledgerinfosrequest"]]],[11,"default","","",29,[[],["backupaccountstaterequest"]]],[11,"default","","",30,[[],["backupaccountstateresponse"]]],[11,"default","","",31,[[],["getaccountstaterangeproofrequest"]]],[11,"default","","",32,[[],["getaccountstaterangeproofresponse"]]],[11,"default","","",33,[[],["backuptransactionrequest"]]],[11,"default","","",34,[[],["backuptransactionresponse"]]],[11,"default","","",35,[[],["backuptransactioninforequest"]]],[11,"default","","",36,[[],["backuptransactioninforesponse"]]],[11,"eq","","",17,[[["self"],["savetransactionsrequest"]],["bool"]]],[11,"ne","","",17,[[["self"],["savetransactionsrequest"]],["bool"]]],[11,"eq","","",40,[[["self"],["savetransactionsresponse"]],["bool"]]],[11,"eq","","",18,[[["gettransactionsrequest"],["self"]],["bool"]]],[11,"ne","","",18,[[["gettransactionsrequest"],["self"]],["bool"]]],[11,"eq","","",19,[[["self"],["gettransactionsresponse"]],["bool"]]],[11,"ne","","",19,[[["self"],["gettransactionsresponse"]],["bool"]]],[11,"eq","","",41,[[["getlateststaterootrequest"],["self"]],["bool"]]],[11,"eq","","",20,[[["self"],["getlateststaterootresponse"]],["bool"]]],[11,"ne","","",20,[[["self"],["getlateststaterootresponse"]],["bool"]]],[11,"eq","","",21,[[["self"],["getlatestaccountstaterequest"]],["bool"]]],[11,"ne","","",21,[[["self"],["getlatestaccountstaterequest"]],["bool"]]],[11,"eq","","",22,[[["getlatestaccountstateresponse"],["self"]],["bool"]]],[11,"ne","","",22,[[["getlatestaccountstateresponse"],["self"]],["bool"]]],[11,"eq","","",23,[[["getaccountstatewithproofbyversionrequest"],["self"]],["bool"]]],[11,"ne","","",23,[[["getaccountstatewithproofbyversionrequest"],["self"]],["bool"]]],[11,"eq","","",24,[[["getaccountstatewithproofbyversionresponse"],["self"]],["bool"]]],[11,"ne","","",24,[[["getaccountstatewithproofbyversionresponse"],["self"]],["bool"]]],[11,"eq","","",42,[[["getstartupinforequest"],["self"]],["bool"]]],[11,"eq","","",25,[[["self"],["getstartupinforesponse"]],["bool"]]],[11,"ne","","",25,[[["self"],["getstartupinforesponse"]],["bool"]]],[11,"eq","","",26,[[["self"],["treestate"]],["bool"]]],[11,"ne","","",26,[[["self"],["treestate"]],["bool"]]],[11,"eq","","",27,[[["startupinfo"],["self"]],["bool"]]],[11,"ne","","",27,[[["startupinfo"],["self"]],["bool"]]],[11,"eq","","",28,[[["self"],["getepochchangeledgerinfosrequest"]],["bool"]]],[11,"ne","","",28,[[["self"],["getepochchangeledgerinfosrequest"]],["bool"]]],[11,"eq","","",29,[[["backupaccountstaterequest"],["self"]],["bool"]]],[11,"ne","","",29,[[["backupaccountstaterequest"],["self"]],["bool"]]],[11,"eq","","",30,[[["self"],["backupaccountstateresponse"]],["bool"]]],[11,"ne","","",30,[[["self"],["backupaccountstateresponse"]],["bool"]]],[11,"eq","","",31,[[["self"],["getaccountstaterangeproofrequest"]],["bool"]]],[11,"ne","","",31,[[["self"],["getaccountstaterangeproofrequest"]],["bool"]]],[11,"eq","","",32,[[["getaccountstaterangeproofresponse"],["self"]],["bool"]]],[11,"ne","","",32,[[["getaccountstaterangeproofresponse"],["self"]],["bool"]]],[11,"eq","","",33,[[["self"],["backuptransactionrequest"]],["bool"]]],[11,"ne","","",33,[[["self"],["backuptransactionrequest"]],["bool"]]],[11,"eq","","",34,[[["self"],["backuptransactionresponse"]],["bool"]]],[11,"ne","","",34,[[["self"],["backuptransactionresponse"]],["bool"]]],[11,"eq","","",35,[[["self"],["backuptransactioninforequest"]],["bool"]]],[11,"ne","","",35,[[["self"],["backuptransactioninforequest"]],["bool"]]],[11,"eq","","",36,[[["backuptransactioninforesponse"],["self"]],["bool"]]],[11,"ne","","",36,[[["backuptransactioninforesponse"],["self"]],["bool"]]],[11,"eq","storage_proto","",0,[[["getlateststaterootresponse"],["self"]],["bool"]]],[11,"ne","","",0,[[["getlateststaterootresponse"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["getlatestaccountstaterequest"]],["bool"]]],[11,"ne","","",1,[[["self"],["getlatestaccountstaterequest"]],["bool"]]],[11,"eq","","",2,[[["self"],["getlatestaccountstateresponse"]],["bool"]]],[11,"ne","","",2,[[["self"],["getlatestaccountstateresponse"]],["bool"]]],[11,"eq","","",3,[[["getaccountstatewithproofbyversionrequest"],["self"]],["bool"]]],[11,"ne","","",3,[[["getaccountstatewithproofbyversionrequest"],["self"]],["bool"]]],[11,"eq","","",4,[[["getaccountstatewithproofbyversionresponse"],["self"]],["bool"]]],[11,"ne","","",4,[[["getaccountstatewithproofbyversionresponse"],["self"]],["bool"]]],[11,"eq","","",5,[[["getaccountstaterangeproofrequest"],["self"]],["bool"]]],[11,"ne","","",5,[[["getaccountstaterangeproofrequest"],["self"]],["bool"]]],[11,"eq","","",39,[[["self"],["getaccountstaterangeproofresponse"]],["bool"]]],[11,"ne","","",39,[[["self"],["getaccountstaterangeproofresponse"]],["bool"]]],[11,"eq","","",6,[[["savetransactionsrequest"],["self"]],["bool"]]],[11,"ne","","",6,[[["savetransactionsrequest"],["self"]],["bool"]]],[11,"eq","","",7,[[["self"],["gettransactionsrequest"]],["bool"]]],[11,"ne","","",7,[[["self"],["gettransactionsrequest"]],["bool"]]],[11,"eq","","",8,[[["gettransactionsresponse"],["self"]],["bool"]]],[11,"ne","","",8,[[["gettransactionsresponse"],["self"]],["bool"]]],[11,"eq","","",9,[[["self"],["getstartupinforesponse"]],["bool"]]],[11,"ne","","",9,[[["self"],["getstartupinforesponse"]],["bool"]]],[11,"eq","","",10,[[["self"],["getepochchangeledgerinfosrequest"]],["bool"]]],[11,"ne","","",10,[[["self"],["getepochchangeledgerinfosrequest"]],["bool"]]],[11,"eq","","",11,[[["self"],["backupaccountstaterequest"]],["bool"]]],[11,"ne","","",11,[[["self"],["backupaccountstaterequest"]],["bool"]]],[11,"eq","","",12,[[["backupaccountstateresponse"],["self"]],["bool"]]],[11,"ne","","",12,[[["backupaccountstateresponse"],["self"]],["bool"]]],[11,"eq","","",13,[[["backuptransactionrequest"],["self"]],["bool"]]],[11,"ne","","",13,[[["backuptransactionrequest"],["self"]],["bool"]]],[11,"eq","","",14,[[["self"],["backuptransactionresponse"]],["bool"]]],[11,"ne","","",14,[[["self"],["backuptransactionresponse"]],["bool"]]],[11,"eq","","",15,[[["backuptransactioninforequest"],["self"]],["bool"]]],[11,"ne","","",15,[[["backuptransactioninforequest"],["self"]],["bool"]]],[11,"eq","","",16,[[["backuptransactioninforesponse"],["self"]],["bool"]]],[11,"ne","","",16,[[["backuptransactioninforesponse"],["self"]],["bool"]]],[11,"fmt","storage_proto::proto::storage","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","storage_proto::proto::storage::storage_client","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","storage_proto","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"try_from","","",0,[[["getlateststaterootresponse"]],["result"]]],[11,"try_from","","",1,[[["getlatestaccountstaterequest"]],["result"]]],[11,"try_from","","",2,[[["getlatestaccountstateresponse"]],["result"]]],[11,"try_from","","",3,[[["getaccountstatewithproofbyversionrequest"]],["result"]]],[11,"try_from","","",4,[[["getaccountstatewithproofbyversionresponse"]],["result"]]],[11,"try_from","","",5,[[["getaccountstaterangeproofrequest"]],["result"]]],[11,"try_from","","",39,[[["getaccountstaterangeproofresponse"]],["result"]]],[11,"try_from","","",6,[[["savetransactionsrequest"]],["result"]]],[11,"try_from","","",7,[[["gettransactionsrequest"]],["result"]]],[11,"try_from","","",8,[[["gettransactionsresponse"]],["result"]]],[11,"try_from","","",9,[[["getstartupinforesponse"]],["result"]]],[11,"try_from","","",10,[[["getepochchangeledgerinfosrequest"]],["result"]]],[11,"try_from","","",11,[[["backupaccountstaterequest"]],["result"]]],[11,"try_from","","",12,[[["backupaccountstateresponse"]],["result"]]],[11,"try_from","","",13,[[["backuptransactionrequest"]],["result"]]],[11,"try_from","","",14,[[["backuptransactionresponse"]],["result"]]],[11,"try_from","","",15,[[["backuptransactioninforequest"]],["result"]]],[11,"try_from","","",16,[[["backuptransactioninforesponse"]],["result"]]],[11,"encode_raw","storage_proto::proto::storage","",17,[[["self"],["b"]]]],[11,"merge_field","","",17,[[["u32"],["wiretype"],["b"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",17,[[["self"]],["usize"]]],[11,"clear","","",17,[[["self"]]]],[11,"encode_raw","","",40,[[["self"],["b"]]]],[11,"merge_field","","",40,[[["u32"],["wiretype"],["b"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",40,[[["self"]],["usize"]]],[11,"clear","","",40,[[["self"]]]],[11,"encode_raw","","",18,[[["self"],["b"]]]],[11,"merge_field","","",18,[[["u32"],["wiretype"],["b"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",18,[[["self"]],["usize"]]],[11,"clear","","",18,[[["self"]]]],[11,"encode_raw","","",19,[[["self"],["b"]]]],[11,"merge_field","","",19,[[["u32"],["wiretype"],["b"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",19,[[["self"]],["usize"]]],[11,"clear","","",19,[[["self"]]]],[11,"encode_raw","","",41,[[["self"],["b"]]]],[11,"merge_field","","",41,[[["u32"],["wiretype"],["b"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",41,[[["self"]],["usize"]]],[11,"clear","","",41,[[["self"]]]],[11,"encode_raw","","",20,[[["self"],["b"]]]],[11,"merge_field","","",20,[[["u32"],["wiretype"],["b"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",20,[[["self"]],["usize"]]],[11,"clear","","",20,[[["self"]]]],[11,"encode_raw","","",21,[[["self"],["b"]]]],[11,"merge_field","","",21,[[["u32"],["wiretype"],["b"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",21,[[["self"]],["usize"]]],[11,"clear","","",21,[[["self"]]]],[11,"encode_raw","","",22,[[["self"],["b"]]]],[11,"merge_field","","",22,[[["u32"],["wiretype"],["b"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",22,[[["self"]],["usize"]]],[11,"clear","","",22,[[["self"]]]],[11,"encode_raw","","",23,[[["self"],["b"]]]],[11,"merge_field","","",23,[[["u32"],["wiretype"],["b"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",23,[[["self"]],["usize"]]],[11,"clear","","",23,[[["self"]]]],[11,"encode_raw","","",24,[[["self"],["b"]]]],[11,"merge_field","","",24,[[["u32"],["wiretype"],["b"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",24,[[["self"]],["usize"]]],[11,"clear","","",24,[[["self"]]]],[11,"encode_raw","","",42,[[["self"],["b"]]]],[11,"merge_field","","",42,[[["u32"],["wiretype"],["b"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",42,[[["self"]],["usize"]]],[11,"clear","","",42,[[["self"]]]],[11,"encode_raw","","",25,[[["self"],["b"]]]],[11,"merge_field","","",25,[[["u32"],["wiretype"],["b"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",25,[[["self"]],["usize"]]],[11,"clear","","",25,[[["self"]]]],[11,"encode_raw","","",26,[[["self"],["b"]]]],[11,"merge_field","","",26,[[["u32"],["wiretype"],["b"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",26,[[["self"]],["usize"]]],[11,"clear","","",26,[[["self"]]]],[11,"encode_raw","","",27,[[["self"],["b"]]]],[11,"merge_field","","",27,[[["u32"],["wiretype"],["b"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",27,[[["self"]],["usize"]]],[11,"clear","","",27,[[["self"]]]],[11,"encode_raw","","",28,[[["self"],["b"]]]],[11,"merge_field","","",28,[[["u32"],["wiretype"],["b"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",28,[[["self"]],["usize"]]],[11,"clear","","",28,[[["self"]]]],[11,"encode_raw","","",29,[[["self"],["b"]]]],[11,"merge_field","","",29,[[["u32"],["wiretype"],["b"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",29,[[["self"]],["usize"]]],[11,"clear","","",29,[[["self"]]]],[11,"encode_raw","","",30,[[["self"],["b"]]]],[11,"merge_field","","",30,[[["u32"],["wiretype"],["b"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",30,[[["self"]],["usize"]]],[11,"clear","","",30,[[["self"]]]],[11,"encode_raw","","",31,[[["self"],["b"]]]],[11,"merge_field","","",31,[[["u32"],["wiretype"],["b"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",31,[[["self"]],["usize"]]],[11,"clear","","",31,[[["self"]]]],[11,"encode_raw","","",32,[[["self"],["b"]]]],[11,"merge_field","","",32,[[["u32"],["wiretype"],["b"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",32,[[["self"]],["usize"]]],[11,"clear","","",32,[[["self"]]]],[11,"encode_raw","","",33,[[["self"],["b"]]]],[11,"merge_field","","",33,[[["u32"],["wiretype"],["b"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",33,[[["self"]],["usize"]]],[11,"clear","","",33,[[["self"]]]],[11,"encode_raw","","",34,[[["self"],["b"]]]],[11,"merge_field","","",34,[[["u32"],["wiretype"],["b"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",34,[[["self"]],["usize"]]],[11,"clear","","",34,[[["self"]]]],[11,"encode_raw","","",35,[[["self"],["b"]]]],[11,"merge_field","","",35,[[["u32"],["wiretype"],["b"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",35,[[["self"]],["usize"]]],[11,"clear","","",35,[[["self"]]]],[11,"encode_raw","","",36,[[["self"],["b"]]]],[11,"merge_field","","",36,[[["u32"],["wiretype"],["b"],["self"],["decodecontext"]],[["result",["decodeerror"]],["decodeerror"]]]],[11,"encoded_len","","",36,[[["self"]],["usize"]]],[11,"clear","","",36,[[["self"]]]]],"p":[[3,"GetLatestStateRootResponse"],[3,"GetLatestAccountStateRequest"],[3,"GetLatestAccountStateResponse"],[3,"GetAccountStateWithProofByVersionRequest"],[3,"GetAccountStateWithProofByVersionResponse"],[3,"GetAccountStateRangeProofRequest"],[3,"SaveTransactionsRequest"],[3,"GetTransactionsRequest"],[3,"GetTransactionsResponse"],[3,"GetStartupInfoResponse"],[3,"GetEpochChangeLedgerInfosRequest"],[3,"BackupAccountStateRequest"],[3,"BackupAccountStateResponse"],[3,"BackupTransactionRequest"],[3,"BackupTransactionResponse"],[3,"BackupTransactionInfoRequest"],[3,"BackupTransactionInfoResponse"],[3,"SaveTransactionsRequest"],[3,"GetTransactionsRequest"],[3,"GetTransactionsResponse"],[3,"GetLatestStateRootResponse"],[3,"GetLatestAccountStateRequest"],[3,"GetLatestAccountStateResponse"],[3,"GetAccountStateWithProofByVersionRequest"],[3,"GetAccountStateWithProofByVersionResponse"],[3,"GetStartupInfoResponse"],[3,"TreeState"],[3,"StartupInfo"],[3,"GetEpochChangeLedgerInfosRequest"],[3,"BackupAccountStateRequest"],[3,"BackupAccountStateResponse"],[3,"GetAccountStateRangeProofRequest"],[3,"GetAccountStateRangeProofResponse"],[3,"BackupTransactionRequest"],[3,"BackupTransactionResponse"],[3,"BackupTransactionInfoRequest"],[3,"BackupTransactionInfoResponse"],[3,"StorageClient"],[8,"Storage"],[3,"GetAccountStateRangeProofResponse"],[3,"SaveTransactionsResponse"],[3,"GetLatestStateRootRequest"],[3,"GetStartupInfoRequest"]]};
searchIndex["storage_service"] = {"doc":"This crate implements the storage GRPC service.","i":[[3,"SimpleStorageService","storage_service","",null,null],[3,"StorageService","","The implementation of the storage GRPC service.",null,null],[5,"start_simple_storage_service_with_db","","Starts storage service with a given LibraDB",null,[[["arc",["libradb"]],["libradb"],["nodeconfig"]],["joinhandle"]]],[5,"start_storage_service_with_db","","Starts storage service with a given LibraDB",null,[[["arc",["libradb"]],["libradb"],["nodeconfig"]],["runtime"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"into_request","","",0,[[],["request"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"into_request","","",1,[[],["request"]]],[11,"clone","","",0,[[["self"]],["simplestorageservice"]]],[11,"clone","","",1,[[["self"]],["storageservice"]]],[11,"save_transactions","","",1,[[["savetransactionsrequest"],["self"],["request",["savetransactionsrequest"]]],[["pin",["box"]],["box",["future"]]]]],[11,"update_to_latest_ledger","","",1,[[["self"],["request",["updatetolatestledgerrequest"]],["updatetolatestledgerrequest"]],[["box",["future"]],["pin",["box"]]]]],[11,"get_transactions","","",1,[[["request",["gettransactionsrequest"]],["self"],["gettransactionsrequest"]],[["box",["future"]],["pin",["box"]]]]],[11,"get_latest_state_root","","",1,[[["request",["getlateststaterootrequest"]],["self"],["getlateststaterootrequest"]],[["pin",["box"]],["box",["future"]]]]],[11,"get_latest_account_state","","",1,[[["getlatestaccountstaterequest"],["self"],["request",["getlatestaccountstaterequest"]]],[["pin",["box"]],["box",["future"]]]]],[11,"get_account_state_with_proof_by_version","","",1,[[["request",["getaccountstatewithproofbyversionrequest"]],["self"],["getaccountstatewithproofbyversionrequest"]],[["pin",["box"]],["box",["future"]]]]],[11,"get_startup_info","","",1,[[["getstartupinforequest"],["self"],["request",["getstartupinforequest"]]],[["pin",["box"]],["box",["future"]]]]],[11,"get_epoch_change_ledger_infos","","",1,[[["getepochchangeledgerinfosrequest"],["self"],["request",["getepochchangeledgerinfosrequest"]]],[["box",["future"]],["pin",["box"]]]]],[11,"backup_account_state","","",1,[[["self"],["request",["backupaccountstaterequest"]],["backupaccountstaterequest"]],[["pin",["box"]],["box",["future"]]]]],[11,"get_account_state_range_proof","","",1,[[["getaccountstaterangeproofrequest"],["self"],["request",["getaccountstaterangeproofrequest"]]],[["box",["future"]],["pin",["box"]]]]],[11,"backup_transaction","","",1,[[["self"],["request",["backuptransactionrequest"]],["backuptransactionrequest"]],[["box",["future"]],["pin",["box"]]]]],[11,"backup_transaction_info","","",1,[[["backuptransactioninforequest"],["self"],["request",["backuptransactioninforequest"]]],[["pin",["box"]],["box",["future"]]]]]],"p":[[3,"SimpleStorageService"],[3,"StorageService"]]};
searchIndex["stream_ratelimiter"] = {"doc":"`RateLimiter` converts any [`futures::stream::Stream`]…","i":[[3,"RateLimiter","stream_ratelimiter","Stream for the `RateLimit::ratelimit` function.",null,null],[8,"RateLimit","","Config parameters for a rate-limiter. `capacity`: Max…",null,null],[11,"ratelimit","","",0,[[["usize"],["duration"]],["ratelimiter"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"try_poll_next","","",1,[[["pin"],["s"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"poll_next","","",1,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"drop","","",1,[[["self"],["pin"]]]]],"p":[[8,"RateLimit"],[3,"RateLimiter"]]};
searchIndex["subscription_service"] = {"doc":"Generic pub/sub service framework","i":[[3,"SubscriptionService","subscription_service","",null,null],[6,"ReconfigSubscription","","A subscription service for on-chain reconfiguration…",null,null],[11,"subscribe","","Constructs an reconfig subscription object for a set of…",0,[[]]],[11,"publish","","",0,[[["onchainconfigpayload"],["self"]],["result"]]],[11,"subscribed_configs","","",0,[[["self"]],[["hashset",["configid"]],["configid"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]]],"p":[[3,"SubscriptionService"]]};
searchIndex["test_generation"] = {"doc":"","i":[[4,"Status","test_generation","",null,null],[13,"VerificationFailure","","",0,null],[13,"ExecutionFailure","","",0,null],[13,"Valid","","",0,null],[5,"module_frame_generation","","",null,[[["option",["u64"]],["receiver",["status"]],["sender",["compiledmodulemut"]],["compiledmodulemut"],["u64"],["status"]]]],[5,"bytecode_generation","","",null,[[["option",["string"]],["status"],["compiledmodulemut"],["u64"],["stdrng"],["receiver",["compiledmodulemut"]],["sender",["status"]],["string"]]]],[5,"run_generation","","Run generate_bytecode for the range passed in and test…",null,[[["args"]]]],[5,"kind","","",null,[[["signaturetoken"]],["kind"]]],[0,"abstract_state","","",null,null],[3,"AbstractValue","test_generation::abstract_state","This models a value on the stack or in the locals",null,null],[12,"token","","Represents the type of the value",1,null],[12,"kind","","Represents the kind of the value",1,null],[3,"CallGraph","","",null,null],[3,"InstantiableModule","","During the generation of a bytecode sequence, specific…",null,null],[12,"module","","",2,null],[3,"AbstractState","","An AbstractState represents an abstract view of the…",null,null],[12,"instantiation","","A vector of type kinds for any generic function type…",3,null],[12,"module","","The module state",3,null],[12,"acquires_global_resources","","The global resources acquired by the function…",3,null],[12,"call_graph","","",3,null],[4,"BorrowState","","The BorrowState denotes whether a local is `Available` or…",null,null],[13,"Available","","",4,null],[13,"Unavailable","","",4,null],[4,"Mutability","","This models the mutability of a reference",null,null],[13,"Mutable","","Represents a mutable reference",5,null],[13,"Immutable","","Represents an immutable reference",5,null],[13,"Either","","When we don't need to specify whether the reference is…",5,null],[11,"new_primitive","","Create a new primitive `AbstractValue` given its type; the…",1,[[["signaturetoken"]],["abstractvalue"]]],[11,"new_reference","","Create a new reference `AbstractValue` given its type and…",1,[[["signaturetoken"],["kind"]],["abstractvalue"]]],[11,"new_struct","","Create a new struct `AbstractValue` given its type and kind",1,[[["signaturetoken"],["kind"]],["abstractvalue"]]],[11,"new_value","","",1,[[["signaturetoken"],["kind"]],["abstractvalue"]]],[11,"is_generic","","Predicate on whether the type of the abstract value is…",1,[[["self"]],["bool"]]],[11,"new","","",6,[[["usize"]],["self"]]],[11,"add_call","","",6,[[["functionhandleindex"],["self"]]]],[11,"can_call","","",6,[[["functionhandleindex"],["self"]],[["functionhandleindex"],["vec",["functionhandleindex"]]]]],[11,"max_calling_depth","","",6,[[["functionhandleindex"],["self"]],["usize"]]],[11,"call_depth","","None if recursive, Some(index) if non-recursive, and index…",6,[[["functionhandleindex"],["self"]],[["usize"],["option",["usize"]]]]],[11,"new","","",2,[[["compiledmodule"]],["self"]]],[11,"add_instantiation","","If the `instantiant` is not in the `instantiations` table,…",2,[[["self"],["signaturetoken"],["vec",["signaturetoken"]]],["signatureindex"]]],[11,"add_struct_instantiation","","If the `instantiant` is not in the `struct_instantiations`…",2,[[["structdefinstantiation"],["self"]],["structdefinstantiationindex"]]],[11,"add_function_instantiation","","If the `instantiant` is not in the…",2,[[["self"],["functioninstantiation"]],["functioninstantiationindex"]]],[11,"add_field_instantiation","","If the `instantiant` is not in the `field_instantiations`…",2,[[["fieldinstantiation"],["self"]],["fieldinstantiationindex"]]],[11,"instantiantiation_at","","Returns the type instantiation at `index`. Errors if the…",2,[[["self"],["signatureindex"]],["vec"]]],[11,"struct_instantiantiation_at","","Returns the struct instantiation at `index`. Errors if the…",2,[[["structdefinstantiationindex"],["self"]],["structdefinstantiation"]]],[11,"function_instantiantiation_at","","Returns the struct instantiation at `index`. Errors if the…",2,[[["self"],["functioninstantiationindex"]],["functioninstantiation"]]],[11,"field_instantiantiation_at","","Returns the struct instantiation at `index`. Errors if the…",2,[[["self"],["fieldinstantiationindex"]],["fieldinstantiation"]]],[11,"instantiate","","Consumes self, and adds the instantiations that have been…",2,[[],["compiledmodulemut"]]],[11,"new","","Create a new AbstractState with empty stack, locals, and…",3,[[],["abstractstate"]]],[11,"from_locals","","Create a new AbstractState given a list of…",3,[[["vec",["structdefinitionindex"]],["compiledmodulemut"],["vec",["kind"]],["hashmap",["usize"]],["usize"],["kind"],["callgraph"],["structdefinitionindex"]],["abstractstate"]]],[11,"register_copy","","Get the register value",3,[[["self"]],[["abstractvalue"],["option",["abstractvalue"]]]]],[11,"register_move","","Get the register value and set it to `None`",3,[[["self"]],[["abstractvalue"],["option",["abstractvalue"]]]]],[11,"register_set","","Set the register value and set it to `None`",3,[[["abstractvalue"],["self"]]]],[11,"stack_push","","Add a `AbstractValue` to the stack",3,[[["abstractvalue"],["self"]]]],[11,"stack_push_register","","Add a `AbstractValue` to the stack from the register If…",3,[[["self"]],[["result",["vmerror"]],["vmerror"]]]],[11,"stack_pop","","Remove an `AbstractValue` from the stack if it exists to…",3,[[["self"]],[["result",["vmerror"]],["vmerror"]]]],[11,"stack_peek","","Get the `AbstractValue` at index `index` on the stack if…",3,[[["self"],["usize"]],[["abstractvalue"],["option",["abstractvalue"]]]]],[11,"stack_len","","Get the length of the stack.",3,[[["self"]],["usize"]]],[11,"local_exists","","Check if the local at index `i` exists",3,[[["self"],["usize"]],["bool"]]],[11,"local_get","","Get the local at index `i` if it exists",3,[[["self"],["usize"]],["option"]]],[11,"local_take","","Place the local at index `i` if it exists into the…",3,[[["self"],["usize"]],[["result",["vmerror"]],["vmerror"]]]],[11,"local_take_borrow","","Place a reference to the local at index `i` if it exists…",3,[[["self"],["usize"],["mutability"]],[["result",["vmerror"]],["vmerror"]]]],[11,"local_set","","Set the availability of the local at index `i` If it does…",3,[[["borrowstate"],["self"],["usize"]],[["result",["vmerror"]],["vmerror"]]]],[11,"local_availability_is","","Check whether a local is in a particular `BorrowState` If…",3,[[["borrowstate"],["self"],["usize"]],[["vmerror"],["result",["bool","vmerror"]],["bool"]]]],[11,"local_kind_is","","Check whether a local is in a particular `Kind` If the…",3,[[["kind"],["self"],["usize"]],[["vmerror"],["result",["bool","vmerror"]],["bool"]]]],[11,"local_insert","","Insert a local at index `i` as `Available`",3,[[["abstractvalue"],["borrowstate"],["usize"],["self"]]]],[11,"local_place","","Insert a local at index `i` as `Available` from the…",3,[[["self"],["usize"]],[["result",["vmerror"]],["vmerror"]]]],[11,"get_locals","","Get all of the locals",3,[[["self"]],["hashmap"]]],[11,"abort","","Set the abstract state to be `aborted` when a precondition…",3,[[["self"]]]],[11,"has_aborted","","Whether the state is aborted",3,[[["self"]],["bool"]]],[11,"allow_control_flow","","Set the abstract state to allow generation of control flow…",3,[[["self"]]]],[11,"is_control_flow_allowed","","Predicate determining if control flow instructions can be…",3,[[["self"]],["bool"]]],[11,"is_final","","The final state is one where the stack is empty",3,[[["self"]],["bool"]]],[0,"borrow_graph","test_generation","",null,null],[3,"BorrowGraph","test_generation::borrow_graph","The `BorrowGraph` stores information sufficient to…",null,null],[4,"EdgeType","","The `EdgeType` is either weak or strong. A weak edge…",null,null],[13,"Weak","","",7,null],[13,"Strong","","",7,null],[11,"new","","Construct a new `BorrowGraph` given the number of locals…",8,[[["u8"]],["borrowgraph"]]],[11,"fresh_partition","","Add a new partition to the graph containing nonce `n` This…",8,[[["self"]],[["string"],["result",["string"]]]]],[11,"partition_mutability","","Determine whether a partition is mutable, immutable, or…",8,[[["u16"],["self"]],[["string"],["mutability"],["result",["mutability","string"]]]]],[11,"partition_freezable","","Determine whether the given partition is freezable. This…",8,[[["u16"],["self"]],[["bool"],["string"],["result",["bool","string"]]]]],[11,"edges_consistent","","Determine whether two edges are consistent; i.e. whether…",8,[[["self"]],["bool"]]],[0,"bytecode_generator","test_generation","",null,null],[3,"FunctionGenerationContext","test_generation::bytecode_generator","Context containing information about a function",null,null],[12,"function_handle_index","","",9,null],[12,"starting_call_height","","",9,null],[12,"locals_len","","",9,null],[12,"bytecode_len","","",9,null],[3,"BytecodeGenerator","","Generates a sequence of bytecode instructions. This…",null,null],[11,"new","","",9,[[["functionhandleindex"],["usize"],["u64"]],["self"]]],[11,"incr_instruction_count","","",9,[[["self"]],["option"]]],[11,"new","","The `BytecodeGenerator` is instantiated with a seed to use…",10,[[["stdrng"]],["self"]]],[11,"apply_instruction","","Transition an abstract state, `state` to the next state…",10,[[["bytecode"],["functiongenerationcontext"],["abstractstate"],["vec"],["self"],["bool"]],[["abstractstate"],["option",["abstractstate"]]]]],[11,"generate_block","","Given a valid starting state `abstract_state_in`, generate…",10,[[["functiongenerationcontext"],["abstractstate"],["self"],["compiledmodulemut"]],["option"]]],[11,"generate","","Generate the body of a function definition given a set of…",10,[[["functionhandle"],["callgraph"],["functiongenerationcontext"],["self"],["compiledmodulemut"]],[["vec",["bytecode"]],["option",["vec"]]]]],[11,"generate_module","","",10,[[["self"],["compiledmodulemut"]],[["compiledmodulemut"],["option",["compiledmodulemut"]]]]],[11,"inhabit_with_bytecode_seq","","Generate a sequence of instructions whose overall effect…",10,[[["instantiablemodule"],["signaturetoken"]],[["vec",["bytecode"]],["bytecode"]]]],[0,"config","test_generation","",null,null],[3,"Args","test_generation::config","Command line arguments for the tool",null,null],[12,"num_iterations","","The optional number of programs that will be generated. If…",11,null],[12,"output_path","","Path where a serialized module should be saved. If `None`,…",11,null],[12,"seed","","The optional seed used for test generation.",11,null],[12,"num_threads","","The optional number of threads to use for test generation.",11,null],[5,"module_generation_settings","","The module generation settings that are used for…",null,[[],["modulegeneratoroptions"]]],[17,"MUTATION_TOLERANCE","","This defines how tolerant the generator will be about…",null,null],[17,"MAX_CFG_BLOCKS","","This defines the maximum number of blocks that will be…",null,null],[17,"NEGATE_PRECONDITIONS","","Whether preconditions will be negated to generate invalid…",null,null],[17,"NEGATION_PROBABILITY","","The probability that preconditions will be negated for a…",null,null],[17,"ALLOW_MEMORY_UNSAFE","","Whether generation of instructions that require borrow…",null,null],[17,"RUN_ON_VM","","Whether the generated programs should be run on the VM…",null,null],[17,"EXECUTE_UNVERIFIED_MODULE","","Whether generated modules will be executed even if they…",null,null],[17,"GAS_METERING","","Whether gas will be metered when running generated…",null,null],[17,"CALL_STACK_LIMIT","","Call stack height limit. This is defined in the VM, and is…",null,null],[17,"VALUE_STACK_LIMIT","","The value stack size limit. This is defined in the VM and…",null,null],[17,"INHABITATION_INSTRUCTION_LIMIT","","Certain randomly generated types can lead to extremely…",null,null],[0,"control_flow_graph","test_generation","",null,null],[3,"BasicBlock","test_generation::control_flow_graph","This represents a basic block in a control flow graph",null,null],[3,"CFG","","A control flow graph",null,null],[11,"new","","",12,[[],["basicblock"]]],[11,"get_locals_in","","Get the locals coming into the block",12,[[["self"]],["hashmap"]]],[11,"get_locals_out","","Get the locals going out of the block",12,[[["self"]],["hashmap"]]],[11,"set_instructions","","Set the list of instructions that comprise the block",12,[[["vec",["bytecode"]],["self"],["bytecode"]]]],[11,"new","","Construct a control flow graph that contains empty basic…",13,[[["u16"],["signature"],["stdrng"]],["cfg"]]],[11,"get_basic_blocks","","Get a reference to all of the basic blocks of the CFG",13,[[["self"]],["hashmap"]]],[11,"get_basic_blocks_mut","","Get a mutable reference to all of the basic blocks of the…",13,[[["self"]],["hashmap"]]],[11,"get_children_ids","","Retrieve the block IDs of all children of the given basic…",13,[[["u16"],["self"]],[["u16"],["vec",["u16"]]]]],[11,"num_children","","Retrieve the number of children the given basic block…",13,[[["u16"],["self"]],["u8"]]],[11,"get_parent_ids","","Retrieve the block IDs of all parents of the given basic…",13,[[["u16"],["self"]],[["u16"],["vec",["u16"]]]]],[11,"num_parents","","Retrieve the number of parents the given basic block…",13,[[["u16"],["self"]],["u8"]]],[11,"serialize_block_order","","Decide the serialization order of the blocks in the CFG",13,[[["self"]],[["u16"],["vec",["u16"]]]]],[11,"serialize","","Serialize the control flow graph into a sequence of…",13,[[["self"]],[["vec",["bytecode"]],["bytecode"]]]],[0,"error","test_generation","",null,null],[3,"VMError","test_generation::error","This struct represents an error that is returned during…",null,null],[11,"new","","",14,[[["string"]],["vmerror"]]],[0,"summaries","test_generation","",null,null],[3,"Summary","test_generation::summaries","The `Summary` of a bytecode instruction contains a list of…",null,null],[12,"preconditions","","",15,null],[12,"effects","","",15,null],[4,"Effects","","",null,null],[13,"NoTyParams","","",16,null],[13,"TyParams","","",16,null],[13,"TyParamsCall","","",16,null],[5,"instruction_summary","","Return the `Summary` for a bytecode instruction,…",null,[[["bytecode"],["bool"]],["summary"]]],[6,"Precondition","","A `Precondition` is a boolean predicate on an…",null,null],[6,"NonInstantiableEffect","","A `Effect` is a function that transforms on…",null,null],[6,"InstantiableEffect","","",null,null],[6,"FunctionInstantiableEffect","","",null,null],[0,"transitions","test_generation","",null,null],[3,"Subst","test_generation::transitions","A substitution is a mapping from type formal index to the…",null,null],[12,"subst","","",17,null],[4,"StackBinOpResult","","",null,null],[13,"Left","","",18,null],[13,"Right","","",18,null],[13,"Other","","",18,null],[5,"kind_for_token","","Given a signature token, returns the kind of this token in…",null,[[["abstractstate"],["signaturetoken"]],["kind"]]],[5,"kinds_for_instantiation","","Given a locals signature index, determine the kind for…",null,[[["abstractstate"]],[["kind"],["vec",["kind"]]]]],[5,"stack_has_integer","","Determine whether the stack contains an integer value at…",null,[[["abstractstate"],["usize"]],["bool"]]],[5,"stack_top_is_castable_to","","",null,[[["signaturetoken"],["abstractstate"]],["bool"]]],[5,"stack_kind_is","","Determine the abstract value at `index` is of the given…",null,[[["kind"],["abstractstate"],["usize"]],["bool"]]],[5,"stack_kind_is_subkind","","Determine if the abstract value at `index` has a kind that…",null,[[["kind"],["abstractstate"],["usize"]],["bool"]]],[5,"local_kind_is","","Check whether the local at `index` is of the given kind",null,[[["kind"],["abstractstate"],["u8"]],["bool"]]],[5,"stack_has","","Determine whether the stack is at least of size `index`.…",null,[[["abstractvalue"],["usize"],["option",["abstractvalue"]],["abstractstate"]],["bool"]]],[5,"stack_has_polymorphic_eq","","Determine whether two tokens on the stack have the same type",null,[[["abstractstate"],["usize"]],["bool"]]],[5,"stack_local_polymorphic_eq","","Determine whether an abstract value on the stack and a…",null,[[["abstractstate"],["usize"]],["bool"]]],[5,"local_exists","","Check whether the local at `index` exists",null,[[["abstractstate"],["u8"]],["bool"]]],[5,"local_availability_is","","Check whether the local at `index` is of the given…",null,[[["borrowstate"],["abstractstate"],["u8"]],["bool"]]],[5,"stack_ref_polymorphic_eq","","Determine whether an abstract value on the stack that is a…",null,[[["abstractstate"],["usize"]],["bool"]]],[5,"stack_pop","","Pop from the top of the stack.",null,[[["abstractstate"]],[["abstractstate"],["result",["abstractstate","vmerror"]],["vmerror"]]]],[5,"stack_bin_op","","Perform a binary operation using the top two values on the…",null,[[["stackbinopresult"],["abstractstate"]],[["abstractstate"],["result",["abstractstate","vmerror"]],["vmerror"]]]],[5,"stack_push","","Push given abstract_value to the top of the stack.",null,[[["abstractvalue"],["abstractstate"]],[["abstractstate"],["result",["abstractstate","vmerror"]],["vmerror"]]]],[5,"stack_push_register","","Push to the top of the stack from the register.",null,[[["abstractstate"]],[["abstractstate"],["result",["abstractstate","vmerror"]],["vmerror"]]]],[5,"local_set","","Set the availability of local at `index`",null,[[["borrowstate"],["abstractstate"],["u8"]],[["abstractstate"],["result",["abstractstate","vmerror"]],["vmerror"]]]],[5,"local_take","","Put copy of the local at `index` in register",null,[[["abstractstate"],["u8"]],[["abstractstate"],["result",["abstractstate","vmerror"]],["vmerror"]]]],[5,"local_take_borrow","","Put reference to local at `index` in register",null,[[["mutability"],["abstractstate"],["u8"]],[["abstractstate"],["result",["abstractstate","vmerror"]],["vmerror"]]]],[5,"local_place","","Insert the register value into the locals at `index`",null,[[["abstractstate"],["u8"]],[["abstractstate"],["result",["abstractstate","vmerror"]],["vmerror"]]]],[5,"stack_satisfies_struct_instantiation","","",null,[[["structdefinstantiationindex"],["abstractstate"],["bool"]]]],[5,"stack_satisfies_struct_signature","","Determine whether the struct at the given index can be…",null,[[["signatureindex"],["structdefinitionindex"],["abstractstate"],["option",["signatureindex"]]]]],[5,"get_struct_instantiation_for_state","","",null,[[["structdefinstantiationindex"],["abstractstate"],["bool"]]]],[5,"stack_has_struct","","Determine if a struct (of the given signature) is at the…",null,[[["structdefinitionindex"],["abstractstate"]],["bool"]]],[5,"stack_has_struct_inst","","",null,[[["structdefinstantiationindex"],["abstractstate"]],["bool"]]],[5,"struct_is_resource","","Determine if a struct at the given index is a resource",null,[[["structdefinitionindex"],["abstractstate"]],["bool"]]],[5,"struct_inst_is_resource","","",null,[[["structdefinstantiationindex"],["abstractstate"]],["bool"]]],[5,"stack_struct_has_field_inst","","",null,[[["abstractstate"],["fieldinstantiationindex"]],["bool"]]],[5,"stack_struct_has_field","","",null,[[["fieldhandleindex"],["abstractstate"]],["bool"]]],[5,"stack_has_reference","","Determine whether the stack has a reference at `index`…",null,[[["mutability"],["abstractstate"],["usize"]],["bool"]]],[5,"stack_struct_inst_popn","","",null,[[["structdefinstantiationindex"],["abstractstate"]],[["abstractstate"],["result",["abstractstate","vmerror"]],["vmerror"]]]],[5,"stack_struct_popn","","Pop the number of stack values required to construct the…",null,[[["structdefinitionindex"],["abstractstate"]],[["abstractstate"],["result",["abstractstate","vmerror"]],["vmerror"]]]],[5,"create_struct_from_inst","","",null,[[["structdefinstantiationindex"],["abstractstate"]],[["abstractstate"],["result",["abstractstate","vmerror"]],["vmerror"]]]],[5,"create_struct","","Construct a struct from abstract values on the stack The…",null,[[["signatureindex"],["structdefinitionindex"],["abstractstate"],["option",["signatureindex"]]],[["abstractstate"],["result",["abstractstate","vmerror"]],["vmerror"]]]],[5,"stack_unpack_struct_instantiation","","",null,[[["abstractstate"]]]],[5,"stack_unpack_struct_inst","","",null,[[["structdefinstantiationindex"],["abstractstate"]],[["abstractstate"],["result",["abstractstate","vmerror"]],["vmerror"]]]],[5,"stack_unpack_struct","","Push the fields of a struct as `AbstractValue`s to the stack",null,[[["signatureindex"],["structdefinitionindex"],["abstractstate"],["option",["signatureindex"]]],[["abstractstate"],["result",["abstractstate","vmerror"]],["vmerror"]]]],[5,"struct_ref_instantiation","","",null,[[["abstractstate"]],[["result",["vec","vmerror"]],["vmerror"],["vec",["signaturetoken"]]]]],[5,"stack_struct_borrow_field","","Push the field at `field_index` of a struct as an…",null,[[["fieldhandleindex"],["abstractstate"]],[["abstractstate"],["result",["abstractstate","vmerror"]],["vmerror"]]]],[5,"stack_struct_borrow_field_inst","","",null,[[["abstractstate"],["fieldinstantiationindex"]],[["abstractstate"],["result",["abstractstate","vmerror"]],["vmerror"]]]],[5,"register_dereference","","Dereference the value stored in the register. If the value…",null,[[["abstractstate"]],[["abstractstate"],["result",["abstractstate","vmerror"]],["vmerror"]]]],[5,"stack_push_register_borrow","","Push a reference to a register value with the given…",null,[[["mutability"],["abstractstate"]],[["abstractstate"],["result",["abstractstate","vmerror"]],["vmerror"]]]],[5,"stack_satisfies_function_signature","","Determine whether the function at the given index can be…",null,[[["functionhandleindex"],["abstractstate"]]]],[5,"stack_satisfies_function_inst_signature","","",null,[[["abstractstate"],["functioninstantiationindex"]]]],[5,"function_can_acquire_resource","","Whether the function acquires any global resources or not",null,[[["abstractstate"]],["bool"]]],[5,"stack_function_call","","Simulate calling the function at `function_index`",null,[[["functionhandleindex"],["option",["signatureindex"]],["abstractstate"],["signatureindex"]],[["abstractstate"],["result",["abstractstate","vmerror"]],["vmerror"]]]],[5,"stack_function_inst_call","","",null,[[["abstractstate"],["functioninstantiationindex"]],[["abstractstate"],["result",["abstractstate","vmerror"]],["vmerror"]]]],[5,"get_function_instantiation_for_state","","",null,[[["abstractstate"],["functioninstantiationindex"]]]],[5,"stack_function_popn","","Pop the number of stack values required to call the…",null,[[["functionhandleindex"],["abstractstate"]],[["abstractstate"],["result",["abstractstate","vmerror"]],["vmerror"]]]],[5,"stack_function_inst_popn","","",null,[[["abstractstate"],["functioninstantiationindex"]],[["abstractstate"],["result",["abstractstate","vmerror"]],["vmerror"]]]],[5,"memory_safe","","TODO: This is a temporary function that represents memory…",null,[[["option",["usize"]],["abstractstate"],["usize"]],["bool"]]],[11,"new","","",17,[[],["self"]]],[11,"check_and_add","","NB that the position of arguments here matters. We can…",17,[[["signaturetoken"],["self"],["abstractstate"]],["bool"]]],[11,"instantiation","","Return the instantiation from the substitution that has…",17,[[],[["signaturetoken"],["vec",["signaturetoken"]]]]],[14,"state_stack_has","test_generation","Wrapper for enclosing the arguments of `stack_has` so that…",null,null],[14,"state_stack_is_castable","","Determines if the type at the top of the abstract stack is…",null,null],[14,"state_stack_has_integer","","Wrapper for enclosing the arguments of `stack_has_integer`…",null,null],[14,"state_stack_kind_is","","Wrapper for enclosing the arguments of `stack_kind_is` so…",null,null],[14,"state_stack_has_polymorphic_eq","","Wrapper for for enclosing the arguments of…",null,null],[14,"state_stack_pop","","Wrapper for enclosing the arguments of `stack_pop` so that…",null,null],[14,"state_stack_push","","Wrapper for enclosing the arguments of `stack_push` so…",null,null],[14,"state_stack_push_register","","Wrapper for enclosing the arguments of…",null,null],[14,"state_stack_local_polymorphic_eq","","Wrapper for enclosing the arguments of…",null,null],[14,"state_local_exists","","Wrapper for enclosing the arguments of `local_exists` so…",null,null],[14,"state_local_availability_is","","Wrapper for enclosing the arguments of…",null,null],[14,"state_local_kind_is","","Wrapper for enclosing the arguments of `local_kind_is` so…",null,null],[14,"state_local_set","","Wrapper for enclosing the arguments of `local_set` so that…",null,null],[14,"state_local_take","","Wrapper for enclosing the arguments of `local_take` so…",null,null],[14,"state_local_take_borrow","","Wrapper for enclosing the arguments of `local_take_borrow`…",null,null],[14,"state_local_place","","Wrapper for enclosing the arguments of `local_palce` so…",null,null],[14,"state_stack_ref_polymorphic_eq","","Wrapper for enclosing the arguments of…",null,null],[14,"state_stack_satisfies_struct_signature","","Wrapper for enclosing the arguments of…",null,null],[14,"state_stack_struct_inst_popn","","Wrapper for enclosing the arguments of…",null,null],[14,"state_stack_struct_popn","","Wrapper for enclosing the arguments of `stack_struct_popn`…",null,null],[14,"state_create_struct","","Wrapper for enclosing the arguments of `stack_pack_struct`…",null,null],[14,"state_create_struct_from_inst","","",null,null],[14,"state_stack_has_struct","","Wrapper for enclosing the arguments of `stack_has_struct`…",null,null],[14,"state_stack_has_struct_inst","","",null,null],[14,"state_stack_unpack_struct","","Wrapper for enclosing the arguments of…",null,null],[14,"state_stack_unpack_struct_inst","","",null,null],[14,"state_struct_is_resource","","Wrapper for enclosing the arguments of…",null,null],[14,"state_struct_inst_is_resource","","",null,null],[14,"state_stack_struct_has_field","","Wrapper for enclosing the arguments of `struct_has_field`…",null,null],[14,"state_stack_struct_has_field_inst","","",null,null],[14,"state_stack_struct_borrow_field","","Wrapper for enclosing the arguments of…",null,null],[14,"state_stack_struct_borrow_field_inst","","",null,null],[14,"state_stack_has_reference","","Wrapper for enclosing the arguments of…",null,null],[14,"state_register_dereference","","Wrapper for enclosing the arguments of…",null,null],[14,"state_stack_push_register_borrow","","Wrapper for enclosing the arguments of…",null,null],[14,"state_stack_satisfies_function_signature","","Wrapper for enclosing the arguments of…",null,null],[14,"state_stack_satisfies_function_inst_signature","","",null,null],[14,"state_stack_function_popn","","Wrapper for enclosing the arguments of…",null,null],[14,"state_stack_function_inst_popn","","",null,null],[14,"state_stack_function_call","","Wrapper for enclosing the arguments of…",null,null],[14,"state_stack_function_inst_call","","",null,null],[14,"function_instantiation_for_state","","Determine the proper type instantiation for function call…",null,null],[14,"state_function_can_acquire_resource","","Wrapper for enclosing the arguments of…",null,null],[14,"state_memory_safe","","Wrapper for enclosing the arguments of `memory_safe` so…",null,null],[14,"state_never","","Predicate that is false for every state.",null,null],[14,"state_stack_bin_op","","",null,null],[14,"state_control_flow","","Predicate that is false for every state, unless control…",null,null],[14,"struct_instantiation_for_state","","Determine the proper type instantiation for struct in the…",null,null],[14,"unpack_instantiation_for_state","","Determine the proper type instantiation for struct in the…",null,null],[14,"with_ty_param","","A wrapper around type instantiation, that allows…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"into_request","","",0,[[],["request"]]],[11,"from","test_generation::abstract_state","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"into_request","","",1,[[],["request"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"into_request","","",6,[[],["request"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"into_request","","",2,[[],["request"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"clear","","",3,[[["self"]]]],[11,"initialize","","",3,[[]]],[11,"into_request","","",3,[[],["request"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"into_request","","",4,[[],["request"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"into_request","","",5,[[],["request"]]],[11,"from","test_generation::borrow_graph","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"into_request","","",8,[[],["request"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"into_request","","",7,[[],["request"]]],[11,"from","test_generation::bytecode_generator","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"into_request","","",9,[[],["request"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"into_request","","",10,[[],["request"]]],[11,"from","test_generation::config","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"into_request","","",11,[[],["request"]]],[11,"from","test_generation::control_flow_graph","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"clear","","",12,[[["self"]]]],[11,"initialize","","",12,[[]]],[11,"into_request","","",12,[[],["request"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"into_request","","",13,[[],["request"]]],[11,"from","test_generation::error","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_string","","",14,[[["self"]],["string"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"into_request","","",14,[[],["request"]]],[11,"from","test_generation::summaries","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"into_request","","",15,[[],["request"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"into_request","","",16,[[],["request"]]],[11,"from","test_generation::transitions","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"clear","","",17,[[["self"]]]],[11,"initialize","","",17,[[]]],[11,"into_request","","",17,[[],["request"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"vzip","","",18,[[],["v"]]],[11,"into_request","","",18,[[],["request"]]],[11,"clone","test_generation::abstract_state","",4,[[["self"]],["borrowstate"]]],[11,"clone","","",1,[[["self"]],["abstractvalue"]]],[11,"clone","","",5,[[["self"]],["mutability"]]],[11,"clone","","",6,[[["self"]],["callgraph"]]],[11,"clone","","",2,[[["self"]],["instantiablemodule"]]],[11,"clone","","",3,[[["self"]],["abstractstate"]]],[11,"clone","test_generation::borrow_graph","",7,[[["self"]],["edgetype"]]],[11,"clone","","",8,[[["self"]],["borrowgraph"]]],[11,"clone","test_generation::bytecode_generator","",9,[[["self"]],["functiongenerationcontext"]]],[11,"clone","test_generation::control_flow_graph","",12,[[["self"]],["basicblock"]]],[11,"clone","","",13,[[["self"]],["cfg"]]],[11,"clone","test_generation","",0,[[["self"]],["status"]]],[11,"default","test_generation::abstract_state","",3,[[],["self"]]],[11,"default","test_generation::control_flow_graph","",12,[[],["basicblock"]]],[11,"default","test_generation::transitions","",17,[[],["subst"]]],[11,"eq","test_generation::abstract_state","",4,[[["self"],["borrowstate"]],["bool"]]],[11,"eq","","",1,[[["self"],["abstractvalue"]],["bool"]]],[11,"ne","","",1,[[["self"],["abstractvalue"]],["bool"]]],[11,"eq","","",5,[[["self"],["mutability"]],["bool"]]],[11,"eq","","",6,[[["callgraph"],["self"]],["bool"]]],[11,"ne","","",6,[[["callgraph"],["self"]],["bool"]]],[11,"eq","test_generation::borrow_graph","",7,[[["edgetype"],["self"]],["bool"]]],[11,"eq","","",8,[[["self"],["borrowgraph"]],["bool"]]],[11,"ne","","",8,[[["self"],["borrowgraph"]],["bool"]]],[11,"eq","test_generation::bytecode_generator","",9,[[["functiongenerationcontext"],["self"]],["bool"]]],[11,"ne","","",9,[[["functiongenerationcontext"],["self"]],["bool"]]],[11,"eq","test_generation","",0,[[["status"],["self"]],["bool"]]],[11,"fmt","test_generation::abstract_state","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","test_generation::borrow_graph","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","test_generation::bytecode_generator","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","test_generation::config","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","test_generation::control_flow_graph","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","test_generation::error","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","test_generation","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","test_generation::abstract_state","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","test_generation::error","",14,[[["formatter"],["self"]],["result"]]],[11,"clap","test_generation::config","",11,[[],["app"]]],[11,"from_clap","","",11,[[["argmatches"]],["self"]]],[11,"augment_clap","","",11,[[["app"]],["app"]]],[11,"is_subcommand","","",11,[[],["bool"]]]],"p":[[4,"Status"],[3,"AbstractValue"],[3,"InstantiableModule"],[3,"AbstractState"],[4,"BorrowState"],[4,"Mutability"],[3,"CallGraph"],[4,"EdgeType"],[3,"BorrowGraph"],[3,"FunctionGenerationContext"],[3,"BytecodeGenerator"],[3,"Args"],[3,"BasicBlock"],[3,"CFG"],[3,"VMError"],[3,"Summary"],[4,"Effects"],[3,"Subst"],[4,"StackBinOpResult"]]};
searchIndex["test_utils"] = {"doc":"","i":[[5,"read_env_var","test_utils","",null,[[["str"]],["string"]]],[5,"read_bool_env_var","","",null,[[["str"]],["bool"]]],[5,"extract_test_directives","","",null,[[["str"],["path"]],[["vec",["string"]],["result",["vec"]]]]],[0,"baseline_test","","A module supporting baseline (golden) tests.",null,null],[5,"verify_or_update_baseline","test_utils::baseline_test","Verifies or updates baseline file for the given generated…",null,[[["str"],["path"]],["result"]]],[17,"DEFAULT_SENDER","test_utils","",null,null]],"p":[]};
searchIndex["testsuite"] = {"doc":"","i":[],"p":[]};
searchIndex["transaction_builder"] = {"doc":"","i":[[5,"encode_stdlib_script","transaction_builder","Encode `stdlib_script` with arguments `args`. Note: this…",null,[[["vec",["transactionargument"]],["transactionargument"],["typetag"],["stdlibscript"],["vec",["typetag"]]],["script"]]],[5,"encode_add_validator_script","","Encode a program adding `new_validator` to the pending…",null,[[["accountaddress"]],["script"]]],[5,"encode_approved_payment_script","","Encode a program that deposits `amount` LBR in `payee`'s…",null,[[["vec",["u8"]],["u8"],["typetag"],["accountaddress"],["u64"]],["script"]]],[5,"encode_burn_script","","Permanently destroy the coins stored in the oldest burn…",null,[[["typetag"],["accountaddress"]],["script"]]],[5,"encode_cancel_burn_script","","Cancel the oldest burn request from `preburn_address` and…",null,[[["typetag"],["accountaddress"]],["script"]]],[5,"encode_transfer_with_metadata_script","","Encode a program transferring `amount` coins from `sender`…",null,[[["u8"],["u64"],["typetag"],["accountaddress"],["vec",["u8"]]],["script"]]],[5,"encode_transfer_script_with_padding","","Encode a program transferring `amount` coins from `sender`…",null,[[["accountaddress"],["u64"]],["script"]]],[5,"encode_preburn_script","","Preburn `amount` coins from the sender's account. This…",null,[[["typetag"],["u64"]],["script"]]],[5,"encode_create_account_script","","Encode a program creating a fresh account at…",null,[[["u8"],["u64"],["typetag"],["accountaddress"],["vec",["u8"]]],["script"]]],[5,"encode_create_empty_account_script","","Encode a program creating a fresh empty account at…",null,[[["u8"],["typetag"],["accountaddress"],["vec",["u8"]]],["script"]]],[5,"encode_publish_shared_ed25519_public_key_script","","(1) Rotate the authentication key of the sender to…",null,[[["vec",["u8"]],["u8"]],["script"]]],[5,"encode_register_approved_payment_script","","Publish a newly created `ApprovedPayment` resource under…",null,[[["vec",["u8"]],["u8"]],["script"]]],[5,"encode_add_currency_to_account_script","","Add the currency identified by the type `currency` to the…",null,[[["typetag"]],["script"]]],[5,"encode_register_preburner_script","","Publish a newly created `Preburn` resource under the…",null,[[["typetag"]],["script"]]],[5,"encode_register_validator_script","","Encode a program registering the sender as a candidate…",null,[[["vec",["u8"]],["u8"]],["script"]]],[5,"encode_remove_validator_script","","Encode a program adding `to_remove` to the set of pending…",null,[[["accountaddress"]],["script"]]],[5,"encode_rotate_consensus_pubkey_script","","Encode a program that rotates the sender's consensus…",null,[[["vec",["u8"]],["u8"]],["script"]]],[5,"rotate_authentication_key_script","","Encode a program that rotates the sender's authentication…",null,[[["vec",["u8"]],["u8"]],["script"]]],[5,"encode_rotate_shared_ed25519_public_key_script","","(1) rotate the public key stored in the sender's…",null,[[["vec",["u8"]],["u8"]],["script"]]],[5,"encode_mint_script","","Encode a program creating `amount` coins for sender",null,[[["u8"],["u64"],["typetag"],["accountaddress"],["vec",["u8"]]],["script"]]],[5,"encode_publishing_option_script","","",null,[[["vmpublishingoption"]],["script"]]],[5,"encode_update_libra_version","","",null,[[["libraversion"]],["script"]]],[5,"encode_block_prologue_script","","",null,[[["blockmetadata"]],["transaction"]]],[5,"get_transaction_name","","Returns a user friendly mnemonic for the transaction type…",null,[[],["string"]]],[5,"encode_mint_lbr","","Mints `amount_lbr` LBR from the sending account's…",null,[[["u64"]],["script"]]],[5,"encode_unmint_lbr","","Unmints `amount_lbr` LBR from the sending account into the…",null,[[["u64"]],["script"]]],[5,"encode_add_currency","","Add a new currency of type `type_` to the system with…",null,[[["vec",["u8"]],["u8"],["typetag"],["u64"],["bool"]],["script"]]],[5,"encode_apply_for_association_address","","Applies for the sending account to be added to the set of…",null,[[],["script"]]],[5,"encode_apply_for_association_privilege","","Applies for the sending account to have the association…",null,[[["typetag"]],["script"]]],[5,"encode_grant_association_address","","Grants the address at `addr` association privileges.…",null,[[["accountaddress"]],["script"]]],[5,"encode_remove_association_address","","Removes the address at `addr` from the set of association…",null,[[["accountaddress"]],["script"]]],[5,"encode_grant_association_privilege","","Grants the address at `addr` the specific privilege given…",null,[[["typetag"],["accountaddress"]],["script"]]],[5,"encode_remove_association_privilege","","Removes the association privilege given by `privilege`…",null,[[["typetag"],["accountaddress"]],["script"]]],[5,"encode_update_exchange_rate","","Updates the on-chain exchange rate to LBR for the given…",null,[[["typetag"],["u64"]],["script"]]],[5,"encode_update_minting_ability","","Allows--true--or disallows--false--minting of `currency`…",null,[[["typetag"],["bool"]],["script"]]],[5,"encode_apply_for_child_vasp_credential","","Applies for the sending account to be added as a child…",null,[[["accountaddress"]],["script"]]],[5,"encode_apply_for_parent_capability","","Applies for the sending account to be added as a parent…",null,[[],["script"]]],[5,"encode_apply_for_root_vasp","","Applies for the sending account to be added as a root VASP…",null,[[["vec",["u8"]],["u8"]],["script"]]],[5,"encode_allow_child_accounts","","Allows child accounts to be created for the calling…",null,[[],["script"]]],[5,"encode_grant_child_account","","Grants the account at `child_address` application to be a…",null,[[["accountaddress"]],["script"]]],[5,"encode_recertify_child_account","","Recertifies the child account at `child_address` if it has…",null,[[["accountaddress"]],["script"]]],[5,"encode_remove_child_account","","Removes the child account at `child_address`. It can be…",null,[[["accountaddress"]],["script"]]],[5,"encode_grant_parent_account","","Grants the account at `parent_address` application to be a…",null,[[["accountaddress"]],["script"]]],[5,"encode_grant_vasp_account","","Grants the account's application at `root_address` to be a…",null,[[["accountaddress"]],["script"]]],[5,"encode_remove_parent_account","","Removes the parent account at `parent_address`. It can be…",null,[[["accountaddress"]],["script"]]]],"p":[]};
searchIndex["utils"] = {"doc":"","i":[[0,"module_generation","utils","",null,null],[3,"ModuleGenerator","utils::module_generation","",null,null],[3,"ModuleGeneratorOptions","","",null,null],[12,"max_locals","","The maximum number of locals that can be defined within a…",0,null],[12,"max_fields","","The maximum number of fields that will be generated for…",0,null],[12,"min_fields","","",0,null],[12,"max_structs","","The maximum number of structs that can be generated for a…",0,null],[12,"max_functions","","The maximum number of functions that can be generated for…",0,null],[12,"max_ty_params","","The maximum number of type parameters functions and structs.",0,null],[12,"byte_array_max_size","","The maximum size that generated byte arrays can be.",0,null],[12,"max_string_size","","The maximum size that a generated string can be.",0,null],[12,"max_function_call_size","","The maximum number of arguments to generated function…",0,null],[12,"max_ret_types_size","","The maximum number of return types of generated function…",0,null],[12,"simple_types_only","","Whether or not generate modules should only contain simple…",0,null],[12,"references_allowed","","Whether references are allowed to be generated for e.g.…",0,null],[12,"add_resources","","Whether the generated modules should have any resources…",0,null],[12,"min_table_size","","The minimum number of entries in any table",0,null],[12,"args_for_ty_params","","If set, all functions with type parameters will have…",0,null],[3,"Pad","","",null,null],[5,"generate_module","","",null,[[["modulegeneratoroptions"],["stdrng"]],["compiledmodule"]]],[5,"generate_modules","","Generate a `number - 1` modules. Then generate a root…",null,[[["modulegeneratoroptions"],["usize"],["stdrng"]]]],[5,"generate_verified_modules","","",null,[[["modulegeneratoroptions"],["usize"],["stdrng"]]]],[11,"create","","",1,[[["btreeset"],["stdrng"],["modulegeneratoroptions"]],["moduledefinition"]]],[11,"pad","","",2,[[["modulegeneratoroptions"],["usize"],["compiledmodulemut"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"clear","","",0,[[["self"]]]],[11,"initialize","","",0,[[]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"clone","","",0,[[["self"]],["modulegeneratoroptions"]]],[11,"default","","",0,[[],["self"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[3,"ModuleGeneratorOptions"],[3,"ModuleGenerator"],[3,"Pad"]]};
searchIndex["vm"] = {"doc":"","i":[[4,"IndexKind","vm","Represents a kind of index -- useful for error messages.",null,null],[13,"ModuleHandle","","",0,null],[13,"StructHandle","","",0,null],[13,"FunctionHandle","","",0,null],[13,"FieldHandle","","",0,null],[13,"FunctionInstantiation","","",0,null],[13,"FieldInstantiation","","",0,null],[13,"StructDefinition","","",0,null],[13,"StructDefInstantiation","","",0,null],[13,"FunctionDefinition","","",0,null],[13,"FieldDefinition","","",0,null],[13,"Signature","","",0,null],[13,"Identifier","","",0,null],[13,"AddressIdentifier","","",0,null],[13,"ConstantPool","","",0,null],[13,"LocalPool","","",0,null],[13,"CodeDefinition","","",0,null],[13,"TypeParameter","","",0,null],[13,"MemberCount","","",0,null],[4,"SignatureTokenKind","","Represents the kind of a signature token.",null,null],[13,"Value","","Any sort of owned value that isn't an array (Integer,…",1,null],[13,"Reference","","A reference.",1,null],[13,"MutableReference","","A mutable reference.",1,null],[0,"access","","Defines accessors for compiled modules.",null,null],[8,"ModuleAccess","vm::access","Represents accessors for a compiled module.",null,null],[10,"as_module","","Returns the `CompiledModule` that will be used for accesses.",2,[[["self"]],["compiledmodule"]]],[11,"self_handle","","Returns the `ModuleHandle` for `self`.",2,[[["self"]],["modulehandle"]]],[11,"name","","Returns the name of the module.",2,[[["self"]],["identstr"]]],[11,"address","","Returns the address of the module.",2,[[["self"]],["accountaddress"]]],[11,"module_handle_at","","",2,[[["self"],["modulehandleindex"]],["modulehandle"]]],[11,"struct_handle_at","","",2,[[["self"],["structhandleindex"]],["structhandle"]]],[11,"function_handle_at","","",2,[[["self"],["functionhandleindex"]],["functionhandle"]]],[11,"field_handle_at","","",2,[[["self"],["fieldhandleindex"]],["fieldhandle"]]],[11,"struct_instantiation_at","","",2,[[["structdefinstantiationindex"],["self"]],["structdefinstantiation"]]],[11,"function_instantiation_at","","",2,[[["self"],["functioninstantiationindex"]],["functioninstantiation"]]],[11,"field_instantiation_at","","",2,[[["fieldinstantiationindex"],["self"]],["fieldinstantiation"]]],[11,"signature_at","","",2,[[["signatureindex"],["self"]],["signature"]]],[11,"identifier_at","","",2,[[["self"],["identifierindex"]],["identstr"]]],[11,"address_identifier_at","","",2,[[["self"],["addressidentifierindex"]],["accountaddress"]]],[11,"constant_at","","",2,[[["constantpoolindex"],["self"]],["constant"]]],[11,"struct_def_at","","",2,[[["self"],["structdefinitionindex"]],["structdefinition"]]],[11,"function_def_at","","",2,[[["self"],["functiondefinitionindex"]],["functiondefinition"]]],[11,"module_handles","","",2,[[["self"]]]],[11,"struct_handles","","",2,[[["self"]]]],[11,"function_handles","","",2,[[["self"]]]],[11,"field_handles","","",2,[[["self"]]]],[11,"struct_instantiations","","",2,[[["self"]]]],[11,"function_instantiations","","",2,[[["self"]]]],[11,"field_instantiations","","",2,[[["self"]]]],[11,"signatures","","",2,[[["self"]]]],[11,"constant_pool","","",2,[[["self"]]]],[11,"identifiers","","",2,[[["self"]]]],[11,"address_identifiers","","",2,[[["self"]]]],[11,"struct_defs","","",2,[[["self"]]]],[11,"function_defs","","",2,[[["self"]]]],[11,"module_id_for_handle","","",2,[[["modulehandle"],["self"]],["moduleid"]]],[11,"self_id","","",2,[[["self"]],["moduleid"]]],[8,"ScriptAccess","","Represents accessors for a compiled script.",null,null],[10,"as_script","","Returns the `CompiledScript` that will be used for accesses.",3,[[["self"]],["compiledscript"]]],[11,"self_handle","","Returns the `ModuleHandle` for `self`.",3,[[["self"]],["modulehandle"]]],[11,"module_handle_at","","",3,[[["self"],["modulehandleindex"]],["modulehandle"]]],[11,"struct_handle_at","","",3,[[["self"],["structhandleindex"]],["structhandle"]]],[11,"function_handle_at","","",3,[[["self"],["functionhandleindex"]],["functionhandle"]]],[11,"signature_at","","",3,[[["signatureindex"],["self"]],["signature"]]],[11,"identifier_at","","",3,[[["self"],["identifierindex"]],["identstr"]]],[11,"address_identifier_at","","",3,[[["self"],["addressidentifierindex"]],["accountaddress"]]],[11,"constant_at","","",3,[[["constantpoolindex"],["self"]],["constant"]]],[11,"function_instantiation_at","","",3,[[["self"],["functioninstantiationindex"]],["functioninstantiation"]]],[11,"module_handles","","",3,[[["self"]]]],[11,"struct_handles","","",3,[[["self"]]]],[11,"function_handles","","",3,[[["self"]]]],[11,"function_instantiations","","",3,[[["self"]]]],[11,"signatures","","",3,[[["self"]]]],[11,"constant_pool","","",3,[[["self"]]]],[11,"identifiers","","",3,[[["self"]]]],[11,"address_identifiers","","",3,[[["self"]]]],[11,"code","","",3,[[["self"]],["codeunit"]]],[0,"check_bounds","vm","",null,null],[3,"BoundsChecker","vm::check_bounds","",null,null],[11,"new","","",4,[[["compiledmodulemut"]],["self"]]],[11,"verify","","",4,[[],["vmresult"]]],[0,"errors","vm","",null,null],[3,"Location","vm::errors","",null,null],[5,"vm_result_to_transaction_status","","",null,[[["vmresult"]],["transactionstatus"]]],[5,"vm_status_of_result","","Conversion functions from internal VM statuses into…",null,[[["vmresult"]],["vmstatus"]]],[5,"convert_prologue_runtime_error","","",null,[[["accountaddress"],["vmstatus"]],["vmstatus"]]],[5,"vm_error","","",null,[[["location"],["statuscode"]],["vmstatus"]]],[5,"bytecode_offset_err","","",null,[[["statuscode"],["usize"],["indexkind"]],["vmstatus"]]],[5,"bounds_error","","",null,[[["statuscode"],["usize"],["indexkind"]],["vmstatus"]]],[5,"verification_error","","",null,[[["statuscode"],["usize"],["indexkind"]],["vmstatus"]]],[5,"append_err_info","","",null,[[["vmstatus"],["usize"],["indexkind"]],["vmstatus"]]],[5,"err_at_offset","","",null,[[["statuscode"],["usize"]],["vmstatus"]]],[6,"VMResult","","",null,null],[6,"BinaryLoaderResult","","",null,null],[17,"EACCOUNT_FROZEN","","Error codes that can be emitted by the prologue. These…",null,null],[17,"EBAD_SIGNATURE","","",null,null],[17,"EBAD_ACCOUNT_AUTHENTICATION_KEY","","",null,null],[17,"ESEQUENCE_NUMBER_TOO_OLD","","",null,null],[17,"ESEQUENCE_NUMBER_TOO_NEW","","",null,null],[17,"EACCOUNT_DOES_NOT_EXIST","","",null,null],[17,"ECANT_PAY_GAS_DEPOSIT","","",null,null],[17,"ETRANSACTION_EXPIRED","","",null,null],[17,"EINSUFFICIENT_BALANCE","","Generic error codes. These codes don't have any special…",null,null],[17,"EINSUFFICIENT_PRIVILEGES","","",null,null],[17,"EASSERT_ERROR","","",null,null],[11,"new","","",5,[[],["self"]]],[0,"deserializer","vm","",null,null],[0,"file_format","","Binary format for transactions and modules.",null,null],[3,"ModuleHandleIndex","vm::file_format","Index into the `ModuleHandle` table.",null,null],[12,"0","","",6,null],[3,"StructHandleIndex","","Index into the `StructHandle` table.",null,null],[12,"0","","",7,null],[3,"FunctionHandleIndex","","Index into the `FunctionHandle` table.",null,null],[12,"0","","",8,null],[3,"FieldHandleIndex","","Index into the `FieldHandle` table.",null,null],[12,"0","","",9,null],[3,"StructDefInstantiationIndex","","Index into the `StructInstantiation` table.",null,null],[12,"0","","",10,null],[3,"FunctionInstantiationIndex","","Index into the `FunctionInstantiation` table.",null,null],[12,"0","","",11,null],[3,"FieldInstantiationIndex","","Index into the `FieldInstantiation` table.",null,null],[12,"0","","",12,null],[3,"IdentifierIndex","","Index into the `Identifier` table.",null,null],[12,"0","","",13,null],[3,"AddressIdentifierIndex","","Index into the `AddressIdentifier` table.",null,null],[12,"0","","",14,null],[3,"ConstantPoolIndex","","Index into the `ConstantPool` table.",null,null],[12,"0","","",15,null],[3,"SignatureIndex","","Index into the `Signature` table.",null,null],[12,"0","","",16,null],[3,"StructDefinitionIndex","","Index into the `StructDefinition` table.",null,null],[12,"0","","",17,null],[3,"FunctionDefinitionIndex","","Index into the `FunctionDefinition` table.",null,null],[12,"0","","",18,null],[3,"ModuleHandle","","A `ModuleHandle` is a reference to a MOVE module. It is…",null,null],[12,"address","","Index into the `AddressIdentifierIndex`. Identifies…",19,null],[12,"name","","The name of the module published in the code section for…",19,null],[3,"StructHandle","","A `StructHandle` is a reference to a user defined type. It…",null,null],[12,"module","","The module that defines the type.",20,null],[12,"name","","The name of the type.",20,null],[12,"is_nominal_resource","","There are two ways for a type to have the Kind resource 1)…",20,null],[12,"type_parameters","","The type formals (identified by their index into the vec)…",20,null],[3,"FunctionHandle","","A `FunctionHandle` is a reference to a function. It is…",null,null],[12,"module","","The module that defines the function.",21,null],[12,"name","","The name of the function.",21,null],[12,"parameters","","The list of arguments to the function.",21,null],[12,"return_","","The list of return types.",21,null],[12,"type_parameters","","The type formals (identified by their index into the vec)…",21,null],[3,"FieldHandle","","A field access info (owner type and offset)",null,null],[12,"owner","","",22,null],[12,"field","","",22,null],[3,"StructDefInstantiation","","A complete or partial instantiation of a generic struct",null,null],[12,"def","","",23,null],[12,"type_parameters","","",23,null],[3,"FunctionInstantiation","","A complete or partial instantiation of a function",null,null],[12,"handle","","",24,null],[12,"type_parameters","","",24,null],[3,"FieldInstantiation","","A complete or partial instantiation of a field (or the…",null,null],[12,"handle","","",25,null],[12,"type_parameters","","",25,null],[3,"StructDefinition","","A `StructDefinition` is a type definition. It either…",null,null],[12,"struct_handle","","The `StructHandle` for this `StructDefinition`. This has…",26,null],[12,"field_information","","Contains either - Information indicating the struct is…",26,null],[3,"FieldDefinition","","A `FieldDefinition` is the definition of a field: its name…",null,null],[12,"name","","The name of the field.",27,null],[12,"signature","","The type of the field.",27,null],[3,"FunctionDefinition","","A `FunctionDefinition` is the implementation of a…",null,null],[12,"function","","The prototype of the function (module, name, signature).",28,null],[12,"is_public","","Flag to indicate if this function is public.",28,null],[12,"acquires_global_resources","","List of nominal resources (declared in this module) that…",28,null],[12,"code","","Code for this function.",28,null],[3,"TypeSignature","","A type definition. `SignatureToken` allows the definition…",null,null],[12,"0","","",29,null],[3,"FunctionSignature","","A `FunctionSignature` in internally used to create a…",null,null],[12,"return_","","The list of return types.",30,null],[12,"parameters","","The list of arguments to the function.",30,null],[12,"type_parameters","","The type formals (identified by their index into the vec)…",30,null],[3,"Signature","","A `Signature` is the list of locals used by a function.",null,null],[12,"0","","",31,null],[3,"SignatureTokenPreorderTraversalIter","","An iterator to help traverse the `SignatureToken` in a…",null,null],[3,"Constant","","A `Constant` is a serialized value along with it's type.…",null,null],[12,"type_","","",32,null],[12,"data","","",32,null],[3,"CodeUnit","","A `CodeUnit` is the body of a function. It has the…",null,null],[12,"locals","","List of locals type. All locals are typed.",33,null],[12,"code","","Code stream, function body.",33,null],[3,"CompiledScript","","Contains the main function to execute and its dependencies.",null,null],[3,"CompiledScriptMut","","A mutable version of `CompiledScript`. Converting to a…",null,null],[12,"module_handles","","Handles to all modules referenced.",34,null],[12,"struct_handles","","Handles to external/imported types.",34,null],[12,"function_handles","","Handles to external/imported functions.",34,null],[12,"function_instantiations","","Function instantiations.",34,null],[12,"signatures","","",34,null],[12,"identifiers","","All identifiers used in this transaction.",34,null],[12,"address_identifiers","","All address identifiers used in this transaction.",34,null],[12,"constant_pool","","Constant pool. The constant values used in the transaction.",34,null],[12,"type_parameters","","",34,null],[12,"parameters","","",34,null],[12,"code","","",34,null],[3,"ScriptConversionInfo","","",null,null],[3,"CompiledModule","","A `CompiledModule` defines the structure of a module which…",null,null],[3,"CompiledModuleMut","","A mutable version of `CompiledModule`. Converting to a…",null,null],[12,"module_handles","","Handles to external modules and self at position 0.",35,null],[12,"struct_handles","","Handles to external and internal types.",35,null],[12,"function_handles","","Handles to external and internal functions.",35,null],[12,"field_handles","","Handles to fields.",35,null],[12,"struct_def_instantiations","","Struct instantiations.",35,null],[12,"function_instantiations","","Function instantiations.",35,null],[12,"field_instantiations","","Field instantiations.",35,null],[12,"signatures","","Locals signature pool. The signature for all locals of the…",35,null],[12,"identifiers","","All identifiers used in this module.",35,null],[12,"address_identifiers","","All address identifiers used in this module.",35,null],[12,"constant_pool","","Constant pool. The constant values used in the module.",35,null],[12,"struct_defs","","Types defined in this module.",35,null],[12,"function_defs","","Function defined in this module.",35,null],[4,"StructFieldInformation","","`StructFieldInformation` indicates whether a struct is…",null,null],[13,"Native","","",36,null],[13,"Declared","","",36,null],[4,"Kind","","A `Kind` classifies types into sets with rules each set…",null,null],[13,"All","","Represents the super set of all types. The type might…",37,null],[13,"Resource","","`Resource` types must follow move semantics and various…",37,null],[13,"Copyable","","`Copyable` types do not need to follow the `Resource`…",37,null],[4,"SignatureToken","","A `SignatureToken` is a type declaration for a location.",null,null],[13,"Bool","","Boolean, `true` or `false`.",38,null],[13,"U8","","Unsigned integers, 8 bits length.",38,null],[13,"U64","","Unsigned integers, 64 bits length.",38,null],[13,"U128","","Unsigned integers, 128 bits length.",38,null],[13,"Address","","Address, a 16 bytes immutable type.",38,null],[13,"Vector","","Vector",38,null],[13,"Struct","","MOVE user type, resource or copyable",38,null],[13,"StructInstantiation","","",38,null],[13,"Reference","","Reference to a type.",38,null],[13,"MutableReference","","Mutable reference to a type.",38,null],[13,"TypeParameter","","Type parameter.",38,null],[4,"Bytecode","","`Bytecode` is a VM instruction of variable size. The type…",null,null],[13,"Pop","","Pop and discard the value at the top of the stack. The…",39,null],[13,"Ret","","Return from function, possibly with values according to…",39,null],[13,"BrTrue","","Branch to the instruction at position `CodeOffset` if the…",39,null],[13,"BrFalse","","Branch to the instruction at position `CodeOffset` if the…",39,null],[13,"Branch","","Branch unconditionally to the instruction at position…",39,null],[13,"LdU8","","Push a U8 constant onto the stack.",39,null],[13,"LdU64","","Push a U64 constant onto the stack.",39,null],[13,"LdU128","","Push a U128 constant onto the stack.",39,null],[13,"CastU8","","Convert the value at the top of the stack into u8.",39,null],[13,"CastU64","","Convert the value at the top of the stack into u64.",39,null],[13,"CastU128","","Convert the value at the top of the stack into u128.",39,null],[13,"LdConst","","Push a `Constant` onto the stack. The value is loaded and…",39,null],[13,"LdTrue","","Push `true` onto the stack.",39,null],[13,"LdFalse","","Push `false` onto the stack.",39,null],[13,"CopyLoc","","Push the local identified by `LocalIndex` onto the stack.…",39,null],[13,"MoveLoc","","Push the local identified by `LocalIndex` onto the stack.…",39,null],[13,"StLoc","","Pop value from the top of the stack and store it into the…",39,null],[13,"Call","","Call a function. The stack has the arguments pushed first…",39,null],[13,"CallGeneric","","",39,null],[13,"Pack","","Create an instance of the type specified via…",39,null],[13,"PackGeneric","","",39,null],[13,"Unpack","","Destroy an instance of a type and push the values bound to…",39,null],[13,"UnpackGeneric","","",39,null],[13,"ReadRef","","Read a reference. The reference is on the stack, it is…",39,null],[13,"WriteRef","","Write to a reference. The reference and the value are on…",39,null],[13,"FreezeRef","","Convert a mutable reference to an immutable reference.",39,null],[13,"MutBorrowLoc","","Load a mutable reference to a local identified by…",39,null],[13,"ImmBorrowLoc","","Load an immutable reference to a local identified by…",39,null],[13,"MutBorrowField","","Load a mutable reference to a field identified by…",39,null],[13,"MutBorrowFieldGeneric","","Load a mutable reference to a field identified by…",39,null],[13,"ImmBorrowField","","Load an immutable reference to a field identified by…",39,null],[13,"ImmBorrowFieldGeneric","","Load an immutable reference to a field identified by…",39,null],[13,"MutBorrowGlobal","","Return a mutable reference to an instance of type…",39,null],[13,"MutBorrowGlobalGeneric","","",39,null],[13,"ImmBorrowGlobal","","Return an immutable reference to an instance of type…",39,null],[13,"ImmBorrowGlobalGeneric","","",39,null],[13,"Add","","Add the 2 u64 at the top of the stack and pushes the…",39,null],[13,"Sub","","Subtract the 2 u64 at the top of the stack and pushes the…",39,null],[13,"Mul","","Multiply the 2 u64 at the top of the stack and pushes the…",39,null],[13,"Mod","","Perform a modulo operation on the 2 u64 at the top of the…",39,null],[13,"Div","","Divide the 2 u64 at the top of the stack and pushes the…",39,null],[13,"BitOr","","Bitwise OR the 2 u64 at the top of the stack and pushes…",39,null],[13,"BitAnd","","Bitwise AND the 2 u64 at the top of the stack and pushes…",39,null],[13,"Xor","","Bitwise XOR the 2 u64 at the top of the stack and pushes…",39,null],[13,"Or","","Logical OR the 2 bool at the top of the stack and pushes…",39,null],[13,"And","","Logical AND the 2 bool at the top of the stack and pushes…",39,null],[13,"Not","","Logical NOT the bool at the top of the stack and pushes…",39,null],[13,"Eq","","Compare for equality the 2 value at the top of the stack…",39,null],[13,"Neq","","Compare for inequality the 2 value at the top of the stack…",39,null],[13,"Lt","","Perform a \"less than\" operation of the 2 u64 at the top of…",39,null],[13,"Gt","","Perform a \"greater than\" operation of the 2 u64 at the top…",39,null],[13,"Le","","Perform a \"less than or equal\" operation of the 2 u64 at…",39,null],[13,"Ge","","Perform a \"greater than or equal\" than operation of the 2…",39,null],[13,"Abort","","Abort execution with errorcode",39,null],[13,"GetTxnSenderAddress","","Get the sender address from the transaction and pushes it…",39,null],[13,"Exists","","Returns whether or not a given address has an object of…",39,null],[13,"ExistsGeneric","","",39,null],[13,"MoveFrom","","Move the instance of type StructDefinitionIndex, at the…",39,null],[13,"MoveFromGeneric","","",39,null],[13,"MoveToSender","","Move the instance at the top of the stack to the address…",39,null],[13,"MoveToSenderGeneric","","",39,null],[13,"Shl","","Shift the (second top value) left (top value) bits and…",39,null],[13,"Shr","","Shift the (second top value) right (top value) bits and…",39,null],[13,"Nop","","No operation.",39,null],[5,"self_module_name","","",null,[[],["identstr"]]],[5,"empty_module","","Return the simplest module that will pass the bounds checker",null,[[],["compiledmodulemut"]]],[5,"basic_test_module","","Create the following module which is convenient in tests:…",null,[[],["compiledmodulemut"]]],[5,"dummy_procedure_module","","Create a dummy module to wrap the bytecode program in…",null,[[["vec",["bytecode"]],["bytecode"]],["compiledmodule"]]],[5,"empty_script","","Return a simple script that contains only a return in the…",null,[[],["compiledscriptmut"]]],[6,"TableIndex","","Generic index into one of the tables in the binary format.",null,null],[6,"LocalIndex","","Index of a local variable in a function.",null,null],[6,"MemberCount","","Max number of fields in a `StructDefinition`.",null,null],[6,"CodeOffset","","Index into the code stream for a jump. The offset is…",null,null],[6,"IdentifierPool","","The pool of identifiers.",null,null],[6,"AddressIdentifierPool","","The pool of address identifiers (addresses used in…",null,null],[6,"ConstantPool","","The pool of `Constant` values",null,null],[6,"TypeSignaturePool","","The pool of `TypeSignature` instances. Those are system…",null,null],[6,"SignaturePool","","The pool of `Signature` instances. Every function…",null,null],[6,"TypeParameterIndex","","Type parameters are encoded as indices. This index can…",null,null],[17,"NO_TYPE_ARGUMENTS","","Index 0 into the LocalsSignaturePool, which is guaranteed…",null,null],[17,"NUMBER_OF_NATIVE_FUNCTIONS","","",null,null],[11,"new","","",6,[[["tableindex"]],["self"]]],[11,"new","","",7,[[["tableindex"]],["self"]]],[11,"new","","",8,[[["tableindex"]],["self"]]],[11,"new","","",9,[[["tableindex"]],["self"]]],[11,"new","","",10,[[["tableindex"]],["self"]]],[11,"new","","",11,[[["tableindex"]],["self"]]],[11,"new","","",12,[[["tableindex"]],["self"]]],[11,"new","","",13,[[["tableindex"]],["self"]]],[11,"new","","",14,[[["tableindex"]],["self"]]],[11,"new","","",15,[[["tableindex"]],["self"]]],[11,"new","","",16,[[["tableindex"]],["self"]]],[11,"new","","",17,[[["tableindex"]],["self"]]],[11,"new","","",18,[[["tableindex"]],["self"]]],[11,"declared_field_count","","",26,[[["self"]],[["result",["membercount","vmstatus"]],["membercount"],["vmstatus"]]]],[11,"is_public","","Returns whether the FunctionDefinition is public.",28,[[["self"]],["bool"]]],[11,"is_native","","Returns whether the FunctionDefinition is native.",28,[[["self"]],["bool"]]],[18,"PUBLIC","","Function can be invoked outside of its declaring module.",28,null],[18,"NATIVE","","A native function implemented in Rust.",28,null],[11,"len","","Length of the `Signature`.",31,[[["self"]],["usize"]]],[11,"is_empty","","Whether the function has no locals (both arguments or…",31,[[["self"]],["bool"]]],[11,"is_sub_kind_of","","Checks if the given kind is a sub-kind of another.",37,[[["kind"]],["bool"]]],[11,"join","","Helper function to determine the kind of a struct instance…",37,[[["kind"]],["kind"]]],[11,"signature_token_kind","","Returns the \"value kind\" for the `SignatureToken`",38,[[["self"]],["signaturetokenkind"]]],[11,"is_primitive","","Returns `true` if the `SignatureToken` is a primitive type.",38,[[["self"]],["bool"]]],[11,"is_integer","","",38,[[["self"]],["bool"]]],[11,"is_reference","","Returns true if the `SignatureToken` is any kind of…",38,[[["self"]],["bool"]]],[11,"is_mutable_reference","","Returns true if the `SignatureToken` is a mutable reference.",38,[[["self"]],["bool"]]],[11,"debug_set_sh_idx","","Set the index to this one. Useful for random testing.",38,[[["self"],["structhandleindex"]]]],[11,"preorder_traversal","","",38,[[["self"]],["signaturetokenpreordertraversaliter"]]],[18,"NUM_INSTRUCTIONS","","The number of variants in this enum.",39,null],[11,"is_unconditional_branch","","Return true if this bytecode instruction always branches",39,[[["self"]],["bool"]]],[11,"is_conditional_branch","","Return true if the branching behavior of this bytecode…",39,[[["self"]],["bool"]]],[11,"is_branch","","Returns true if this bytecode instruction is either a…",39,[[["self"]],["bool"]]],[11,"offset","","Returns the offset that this bytecode instruction branches…",39,[[["self"]],[["codeoffset"],["option",["codeoffset"]]]]],[11,"get_successors","","Return the successor offsets of this bytecode instruction.",39,[[["codeoffset"]],[["codeoffset"],["vec",["codeoffset"]]]]],[18,"MAIN_INDEX","","Returns the index of `main` in case a script is converted…",40,null],[11,"as_inner","","Returns a reference to the inner `CompiledScriptMut`.",40,[[["self"]],["compiledscriptmut"]]],[11,"into_inner","","Converts this instance into the inner `CompiledScriptMut`.…",40,[[],["compiledscriptmut"]]],[11,"into_module","","Converts a `CompiledScript` into a `CompiledModule` for…",40,[[]]],[11,"freeze","","Converts this instance into `CompiledScript` after…",34,[[],[["compiledscript"],["vmresult",["compiledscript"]]]]],[11,"into_module","","Converts a `CompiledScriptMut` to a `CompiledModule` for…",34,[[]]],[11,"kind_count","","Returns the count of a specific `IndexKind`",35,[[["self"],["indexkind"]],["usize"]]],[11,"freeze","","Converts this instance into `CompiledModule` after…",35,[[],[["vmresult",["compiledmodule"]],["compiledmodule"]]]],[18,"IMPLEMENTED_MODULE_INDEX","","By convention, the index of the module being implemented…",41,null],[11,"as_inner","","Returns a reference to the inner `CompiledModuleMut`.",41,[[["self"]],["compiledmodulemut"]]],[11,"into_inner","","Converts this instance into the inner `CompiledModuleMut`.…",41,[[],["compiledmodulemut"]]],[11,"kind_count","","Returns the number of items of a specific `IndexKind`.",41,[[["self"],["indexkind"]],["usize"]]],[11,"module_id_for_handle","","Returns the code key of `module_handle`",41,[[["modulehandle"],["self"]],["moduleid"]]],[11,"self_id","","Returns the code key of `self`",41,[[["self"]],["moduleid"]]],[11,"into_script","","This function should only be called on an instance of…",41,[[["scriptconversioninfo"]],["compiledscript"]]],[0,"file_format_common","vm","Constants for the binary format.",null,null],[3,"BinaryData","vm::file_format_common","A wrapper for the binary vector",null,null],[4,"BinaryConstants","","Constant values for the binary format header.",null,null],[4,"TableType","","Constants for table types in the binary.",null,null],[13,"MODULE_HANDLES","","",42,null],[13,"STRUCT_HANDLES","","",42,null],[13,"FUNCTION_HANDLES","","",42,null],[13,"FUNCTION_INST","","",42,null],[13,"SIGNATURES","","",42,null],[13,"CONSTANT_POOL","","",42,null],[13,"IDENTIFIERS","","",42,null],[13,"ADDRESS_IDENTIFIERS","","",42,null],[13,"MAIN","","",42,null],[13,"STRUCT_DEFS","","",42,null],[13,"STRUCT_DEF_INST","","",42,null],[13,"FUNCTION_DEFS","","",42,null],[13,"FIELD_HANDLE","","",42,null],[13,"FIELD_INST","","",42,null],[4,"SerializedType","","Constants for signature blob values.",null,null],[13,"BOOL","","",43,null],[13,"U8","","",43,null],[13,"U64","","",43,null],[13,"U128","","",43,null],[13,"ADDRESS","","",43,null],[13,"REFERENCE","","",43,null],[13,"MUTABLE_REFERENCE","","",43,null],[13,"STRUCT","","",43,null],[13,"TYPE_PARAMETER","","",43,null],[13,"VECTOR","","",43,null],[13,"STRUCT_INST","","",43,null],[4,"SerializedNominalResourceFlag","","",null,null],[13,"NOMINAL_RESOURCE","","",44,null],[13,"NORMAL_STRUCT","","",44,null],[4,"SerializedKind","","",null,null],[13,"ALL","","",45,null],[13,"COPYABLE","","",45,null],[13,"RESOURCE","","",45,null],[4,"SerializedNativeStructFlag","","",null,null],[13,"NATIVE","","",46,null],[13,"DECLARED","","",46,null],[4,"Opcodes","","List of opcodes constants.",null,null],[13,"POP","","",47,null],[13,"RET","","",47,null],[13,"BR_TRUE","","",47,null],[13,"BR_FALSE","","",47,null],[13,"BRANCH","","",47,null],[13,"LD_U64","","",47,null],[13,"LD_CONST","","",47,null],[13,"LD_TRUE","","",47,null],[13,"LD_FALSE","","",47,null],[13,"COPY_LOC","","",47,null],[13,"MOVE_LOC","","",47,null],[13,"ST_LOC","","",47,null],[13,"MUT_BORROW_LOC","","",47,null],[13,"IMM_BORROW_LOC","","",47,null],[13,"MUT_BORROW_FIELD","","",47,null],[13,"IMM_BORROW_FIELD","","",47,null],[13,"CALL","","",47,null],[13,"PACK","","",47,null],[13,"UNPACK","","",47,null],[13,"READ_REF","","",47,null],[13,"WRITE_REF","","",47,null],[13,"ADD","","",47,null],[13,"SUB","","",47,null],[13,"MUL","","",47,null],[13,"MOD","","",47,null],[13,"DIV","","",47,null],[13,"BIT_OR","","",47,null],[13,"BIT_AND","","",47,null],[13,"XOR","","",47,null],[13,"OR","","",47,null],[13,"AND","","",47,null],[13,"NOT","","",47,null],[13,"EQ","","",47,null],[13,"NEQ","","",47,null],[13,"LT","","",47,null],[13,"GT","","",47,null],[13,"LE","","",47,null],[13,"GE","","",47,null],[13,"ABORT","","",47,null],[13,"GET_TXN_SENDER","","",47,null],[13,"EXISTS","","",47,null],[13,"MUT_BORROW_GLOBAL","","",47,null],[13,"IMM_BORROW_GLOBAL","","",47,null],[13,"MOVE_FROM","","",47,null],[13,"MOVE_TO","","",47,null],[13,"FREEZE_REF","","",47,null],[13,"SHL","","",47,null],[13,"SHR","","",47,null],[13,"LD_U8","","",47,null],[13,"LD_U128","","",47,null],[13,"CAST_U8","","",47,null],[13,"CAST_U64","","",47,null],[13,"CAST_U128","","",47,null],[13,"MUT_BORROW_FIELD_GENERIC","","",47,null],[13,"IMM_BORROW_FIELD_GENERIC","","",47,null],[13,"CALL_GENERIC","","",47,null],[13,"PACK_GENERIC","","",47,null],[13,"UNPACK_GENERIC","","",47,null],[13,"EXISTS_GENERIC","","",47,null],[13,"MUT_BORROW_GLOBAL_GENERIC","","",47,null],[13,"IMM_BORROW_GLOBAL_GENERIC","","",47,null],[13,"MOVE_FROM_GENERIC","","",47,null],[13,"MOVE_TO_GENERIC","","",47,null],[13,"NOP","","",47,null],[5,"write_u16_as_uleb128","","Take a `Vec<u8>` and a value to write to that vector and…",null,[[["u16"],["binarydata"]],["result"]]],[5,"write_u32_as_uleb128","","Take a `Vec<u8>` and a value to write to that vector and…",null,[[["u32"],["binarydata"]],["result"]]],[5,"write_u16","","Write a `u16` in Little Endian format.",null,[[["u16"],["binarydata"]],["result"]]],[5,"write_u32","","Write a `u32` in Little Endian format.",null,[[["u32"],["binarydata"]],["result"]]],[5,"write_u64","","Write a `u64` in Little Endian format.",null,[[["u64"],["binarydata"]],["result"]]],[5,"write_u128","","Write a `u128` in Little Endian format.",null,[[["u128"],["binarydata"]],["result"]]],[5,"read_uleb128_as_u16","","Reads a `u16` in ULEB128 format from a `binary`.",null,[[["cursor"]],[["u16"],["result",["u16"]]]]],[5,"read_uleb128_as_u32","","Reads a `u32` in ULEB128 format from a `binary`.",null,[[["cursor"]],[["result",["u32"]],["u32"]]]],[5,"instruction_key","","The encoding of the instruction is the serialized form of…",null,[[["bytecode"]],["u8"]]],[17,"BINARY_SIZE_LIMIT","","Upper limit on the binary size",null,null],[18,"LIBRA_MAGIC_SIZE","","The blob that must start a binary.",48,null],[18,"LIBRA_MAGIC","","",48,null],[18,"HEADER_SIZE","","The `LIBRA_MAGIC` size, 1 byte for major version, 1 byte…",48,null],[18,"TABLE_HEADER_SIZE","","A (Table Type, Start Offset, Byte Count) size, which is 1…",48,null],[11,"new","","",49,[[],["self"]]],[11,"as_inner","","",49,[[["self"]]]],[11,"into_inner","","",49,[[],[["vec",["u8"]],["u8"]]]],[11,"push","","",49,[[["self"],["u8"]],["result"]]],[11,"extend","","",49,[[["self"]],["result"]]],[11,"len","","",49,[[["self"]],["usize"]]],[11,"is_empty","","",49,[[["self"]],["bool"]]],[11,"clear","","",49,[[["self"]]]],[0,"internals","vm","Types meant for use by other parts of this crate, and by…",null,null],[8,"ModuleIndex","vm::internals","Represents a module index.",null,null],[18,"KIND","","",50,null],[10,"into_index","","",50,[[],["usize"]]],[0,"proptest_types","vm","Utilities for property-based testing.",null,null],[3,"CompiledModuleStrategyGen","vm::proptest_types","Contains configuration to generate [`CompiledModule`]…",null,null],[6,"TableSize","","Represents how large [`CompiledModule`] tables can be.",null,null],[11,"valid_strategy","vm::file_format","Convenience wrapper around…",41,[[["usize"]]]],[11,"new","vm::proptest_types","Create a new configuration for randomly generating…",51,[[["tablesize"]],["self"]]],[11,"zeros_all","","Zero out all fields, type parameters, arguments and return…",51,[[["self"]],["self"]]],[11,"generate","","Create a `proptest` strategy for `CompiledModule`…",51,[[]]],[0,"serializer","vm","Serialization of transactions and modules.",null,null],[11,"serialize","vm::file_format","Serializes a `CompiledScript` into a binary. The mutable…",40,[[["vec"],["self"]],["result"]]],[11,"serialize","","Serializes this into a binary format.",34,[[["vec"],["self"]],["result"]]],[11,"serialize","","Serializes a `CompiledModule` into a binary. The mutable…",41,[[["vec"],["self"]],["result"]]],[11,"serialize","","Serializes this into a binary format.",35,[[["vec"],["self"]],["result"]]],[0,"views","vm","An alternate representation of the file format built on…",null,null],[3,"ModuleView","vm::views","Represents a lazily evaluated abstraction over a module.",null,null],[3,"ModuleHandleView","","",null,null],[3,"StructHandleView","","",null,null],[3,"FunctionHandleView","","",null,null],[3,"StructDefinitionView","","",null,null],[3,"FieldDefinitionView","","",null,null],[3,"LocalsSignatureView","","",null,null],[3,"FunctionDefinitionView","","",null,null],[3,"StructInstantiationView","","",null,null],[3,"FieldHandleView","","",null,null],[3,"FunctionInstantiationView","","",null,null],[3,"FieldInstantiationView","","",null,null],[3,"TypeSignatureView","","",null,null],[3,"SignatureView","","",null,null],[3,"SignatureTokenView","","",null,null],[8,"ViewInternals","","This is used to expose some view internals to checks and…",null,null],[16,"ModuleType","","",52,null],[16,"Inner","","",52,null],[10,"module","","",52,[[["self"]]]],[10,"as_inner","","",52,[[["self"]]]],[11,"new","","",53,[[["t"]],["self"]]],[11,"module_handles","","",53,[[["self"]]]],[11,"struct_handles","","",53,[[["self"]]]],[11,"function_handles","","",53,[[["self"]]]],[11,"field_handles","","",53,[[["self"]]]],[11,"struct_instantiations","","",53,[[["self"]]]],[11,"function_instantiations","","",53,[[["self"]]]],[11,"field_instantiations","","",53,[[["self"]]]],[11,"signatures","","",53,[[["self"]]]],[11,"structs","","",53,[[["self"]]]],[11,"functions","","",53,[[["self"]]]],[11,"function_definition","","",53,[[["identstr"],["self"]],[["functiondefinitionview"],["option",["functiondefinitionview"]]]]],[11,"struct_definition","","",53,[[["identstr"],["self"]],[["option",["structdefinitionview"]],["structdefinitionview"]]]],[11,"function_acquired_resources","","",53,[[["self"],["functionhandle"]],[["btreeset",["structdefinitionindex"]],["structdefinitionindex"]]]],[11,"id","","",53,[[["self"]],["moduleid"]]],[11,"new","","",54,[[["modulehandle"],["t"]],["self"]]],[11,"module_id","","",54,[[["self"]],["moduleid"]]],[11,"new","","",55,[[["structhandle"],["t"]],["self"]]],[11,"handle","","",55,[[["self"]],["structhandle"]]],[11,"is_nominal_resource","","",55,[[["self"]],["bool"]]],[11,"type_parameters","","",55,[[["self"]],["vec"]]],[11,"module_handle","","",55,[[["self"]],["modulehandle"]]],[11,"name","","",55,[[["self"]],["identstr"]]],[11,"module_id","","",55,[[["self"]],["moduleid"]]],[11,"handle_idx","","Return the StructHandleIndex of this handle in the…",55,[[["self"]],["structhandleindex"]]],[11,"new","","",56,[[["functionhandle"],["t"]],["self"]]],[11,"module_handle","","",56,[[["self"]],["modulehandle"]]],[11,"name","","",56,[[["self"]],["identstr"]]],[11,"parameters","","",56,[[["self"]],["signature"]]],[11,"return_","","",56,[[["self"]],["signature"]]],[11,"return_tokens","","",56,[[["self"]]]],[11,"arg_tokens","","",56,[[["self"]]]],[11,"type_parameters","","",56,[[["self"]],["vec"]]],[11,"return_count","","",56,[[["self"]],["usize"]]],[11,"arg_count","","",56,[[["self"]],["usize"]]],[11,"module_id","","",56,[[["self"]],["moduleid"]]],[11,"new","","",57,[[["structdefinition"],["t"]],["self"]]],[11,"is_nominal_resource","","",57,[[["self"]],["bool"]]],[11,"is_native","","",57,[[["self"]],["bool"]]],[11,"type_parameters","","",57,[[["self"]],["vec"]]],[11,"fields","","",57,[[["self"]],["option"]]],[11,"name","","",57,[[["self"]],["identstr"]]],[11,"new","","",58,[[["fielddefinition"],["t"]],["self"]]],[11,"name","","",58,[[["self"]],["identstr"]]],[11,"type_signature","","",58,[[["self"]],["typesignatureview"]]],[11,"signature_token","","",58,[[["self"]],["signaturetoken"]]],[11,"signature_token_view","","",58,[[["self"]],["signaturetokenview"]]],[11,"is_empty","","",59,[[["self"]],["bool"]]],[11,"len","","",59,[[["self"]],["usize"]]],[11,"token_at","","",59,[[["self"],["localindex"]],["signaturetokenview"]]],[11,"new","","",60,[[["functiondefinition"],["t"]],["self"]]],[11,"is_public","","",60,[[["self"]],["bool"]]],[11,"is_native","","",60,[[["self"]],["bool"]]],[11,"locals_signature","","",60,[[["self"]],[["option",["localssignatureview"]],["localssignatureview"]]]],[11,"name","","",60,[[["self"]],["identstr"]]],[11,"parameters","","",60,[[["self"]],["signature"]]],[11,"return_","","",60,[[["self"]],["signature"]]],[11,"type_parameters","","",60,[[["self"]],["vec"]]],[11,"return_tokens","","",60,[[["self"]]]],[11,"arg_tokens","","",60,[[["self"]]]],[11,"return_count","","",60,[[["self"]],["usize"]]],[11,"arg_count","","",60,[[["self"]],["usize"]]],[11,"code","","",60,[[["self"]],[["option",["codeunit"]],["codeunit"]]]],[11,"new","","",61,[[["structdefinstantiation"],["t"]],["self"]]],[11,"new","","",62,[[["fieldhandle"],["t"]],["self"]]],[11,"new","","",63,[[["functioninstantiation"],["t"]],["self"]]],[11,"new","","",64,[[["fieldinstantiation"],["t"]],["self"]]],[11,"new","","",65,[[["typesignature"],["t"]],["self"]]],[11,"token","","",65,[[["self"]],["signaturetokenview"]]],[11,"new","","",66,[[["signature"],["t"]],["self"]]],[11,"len","","",66,[[["self"]],["usize"]]],[11,"is_empty","","",66,[[["self"]],["bool"]]],[11,"tokens","","",66,[[["self"]]]],[11,"token_at","","",66,[[["self"],["localindex"]],["signaturetokenview"]]],[11,"new","","",67,[[["signaturetoken"],["t"]],["self"]]],[11,"signature_token","","",67,[[["self"]],["signaturetoken"]]],[11,"signature_token_kind","","",67,[[["self"]],["signaturetokenkind"]]],[11,"is_reference","","",67,[[["self"]],["bool"]]],[11,"is_mutable_reference","","",67,[[["self"]],["bool"]]],[11,"variants","vm","",0,[[]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","vm::check_bounds","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","vm::errors","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"clear","","",5,[[["self"]]]],[11,"initialize","","",5,[[]]],[11,"from","vm::file_format","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"clear","","",6,[[["self"]]]],[11,"initialize","","",6,[[]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"clear","","",7,[[["self"]]]],[11,"initialize","","",7,[[]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"clear","","",8,[[["self"]]]],[11,"initialize","","",8,[[]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"clear","","",9,[[["self"]]]],[11,"initialize","","",9,[[]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"clear","","",10,[[["self"]]]],[11,"initialize","","",10,[[]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"clear","","",11,[[["self"]]]],[11,"initialize","","",11,[[]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"clear","","",12,[[["self"]]]],[11,"initialize","","",12,[[]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"clear","","",13,[[["self"]]]],[11,"initialize","","",13,[[]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"to_string","","",14,[[["self"]],["string"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"clear","","",14,[[["self"]]]],[11,"initialize","","",14,[[]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"to_string","","",15,[[["self"]],["string"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"clear","","",15,[[["self"]]]],[11,"initialize","","",15,[[]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"to_string","","",16,[[["self"]],["string"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"clear","","",16,[[["self"]]]],[11,"initialize","","",16,[[]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"to_string","","",17,[[["self"]],["string"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"clear","","",17,[[["self"]]]],[11,"initialize","","",17,[[]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"to_string","","",18,[[["self"]],["string"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"vzip","","",18,[[],["v"]]],[11,"clear","","",18,[[["self"]]]],[11,"initialize","","",18,[[]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"vzip","","",19,[[],["v"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"vzip","","",20,[[],["v"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"vzip","","",21,[[],["v"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"vzip","","",22,[[],["v"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"vzip","","",23,[[],["v"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"vzip","","",24,[[],["v"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"vzip","","",25,[[],["v"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"vzip","","",26,[[],["v"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"vzip","","",27,[[],["v"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"vzip","","",28,[[],["v"]]],[11,"clear","","",28,[[["self"]]]],[11,"initialize","","",28,[[]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"vzip","","",29,[[],["v"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"vzip","","",30,[[],["v"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"vzip","","",31,[[],["v"]]],[11,"clear","","",31,[[["self"]]]],[11,"initialize","","",31,[[]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"into_iter","","",68,[[],["i"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"vzip","","",68,[[],["v"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"vzip","","",32,[[],["v"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"vzip","","",33,[[],["v"]]],[11,"clear","","",33,[[["self"]]]],[11,"initialize","","",33,[[]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"vzip","","",40,[[],["v"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"vzip","","",34,[[],["v"]]],[11,"clear","","",34,[[["self"]]]],[11,"initialize","","",34,[[]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"vzip","","",69,[[],["v"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"vzip","","",41,[[],["v"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"vzip","","",35,[[],["v"]]],[11,"clear","","",35,[[["self"]]]],[11,"initialize","","",35,[[]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"vzip","","",36,[[],["v"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"vzip","","",37,[[],["v"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"vzip","","",38,[[],["v"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"vzip","","",39,[[],["v"]]],[11,"from","vm::file_format_common","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"vzip","","",49,[[],["v"]]],[11,"clear","","",49,[[["self"]]]],[11,"initialize","","",49,[[]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"vzip","","",48,[[],["v"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"vzip","","",42,[[],["v"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"vzip","","",43,[[],["v"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"vzip","","",44,[[],["v"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"vzip","","",45,[[],["v"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"vzip","","",46,[[],["v"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"vzip","","",47,[[],["v"]]],[11,"from","vm::proptest_types","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"vzip","","",51,[[],["v"]]],[11,"from","vm::views","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"vzip","","",53,[[],["v"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"vzip","","",54,[[],["v"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"vzip","","",55,[[],["v"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"vzip","","",56,[[],["v"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"vzip","","",57,[[],["v"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"vzip","","",58,[[],["v"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"vzip","","",59,[[],["v"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"vzip","","",60,[[],["v"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"vzip","","",61,[[],["v"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"vzip","","",62,[[],["v"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"vzip","","",63,[[],["v"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"vzip","","",64,[[],["v"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"vzip","","",65,[[],["v"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"vzip","","",66,[[],["v"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"vzip","","",67,[[],["v"]]],[11,"as_module","vm::file_format","",41,[[["self"]],["compiledmodule"]]],[11,"as_script","","",40,[[["self"]],["compiledscript"]]],[11,"into_index","","",6,[[],["usize"]]],[11,"into_index","","",7,[[],["usize"]]],[11,"into_index","","",8,[[],["usize"]]],[11,"into_index","","",9,[[],["usize"]]],[11,"into_index","","",10,[[],["usize"]]],[11,"into_index","","",11,[[],["usize"]]],[11,"into_index","","",12,[[],["usize"]]],[11,"into_index","","",13,[[],["usize"]]],[11,"into_index","","",14,[[],["usize"]]],[11,"into_index","","",15,[[],["usize"]]],[11,"into_index","","",16,[[],["usize"]]],[11,"into_index","","",17,[[],["usize"]]],[11,"into_index","","",18,[[],["usize"]]],[11,"module","vm::views","",53,[[["self"]]]],[11,"as_inner","","",53,[[["self"]]]],[11,"module","","",54,[[["self"]]]],[11,"as_inner","","",54,[[["self"]]]],[11,"module","","",55,[[["self"]]]],[11,"as_inner","","",55,[[["self"]]]],[11,"module","","",56,[[["self"]]]],[11,"as_inner","","",56,[[["self"]]]],[11,"module","","",57,[[["self"]]]],[11,"as_inner","","",57,[[["self"]]]],[11,"module","","",60,[[["self"]]]],[11,"as_inner","","",60,[[["self"]]]],[11,"module","","",58,[[["self"]]]],[11,"as_inner","","",58,[[["self"]]]],[11,"module","","",65,[[["self"]]]],[11,"as_inner","","",65,[[["self"]]]],[11,"module","","",66,[[["self"]]]],[11,"as_inner","","",66,[[["self"]]]],[11,"module","","",67,[[["self"]]]],[11,"as_inner","","",67,[[["self"]]]],[11,"from","vm::file_format_common","",49,[[["vec",["u8"]],["u8"]],["self"]]],[11,"next","vm::file_format","",68,[[["self"]],["option"]]],[11,"clone","","",6,[[["self"]],["modulehandleindex"]]],[11,"clone","","",7,[[["self"]],["structhandleindex"]]],[11,"clone","","",8,[[["self"]],["functionhandleindex"]]],[11,"clone","","",9,[[["self"]],["fieldhandleindex"]]],[11,"clone","","",10,[[["self"]],["structdefinstantiationindex"]]],[11,"clone","","",11,[[["self"]],["functioninstantiationindex"]]],[11,"clone","","",12,[[["self"]],["fieldinstantiationindex"]]],[11,"clone","","",13,[[["self"]],["identifierindex"]]],[11,"clone","","",14,[[["self"]],["addressidentifierindex"]]],[11,"clone","","",15,[[["self"]],["constantpoolindex"]]],[11,"clone","","",16,[[["self"]],["signatureindex"]]],[11,"clone","","",17,[[["self"]],["structdefinitionindex"]]],[11,"clone","","",18,[[["self"]],["functiondefinitionindex"]]],[11,"clone","","",19,[[["self"]],["modulehandle"]]],[11,"clone","","",20,[[["self"]],["structhandle"]]],[11,"clone","","",21,[[["self"]],["functionhandle"]]],[11,"clone","","",22,[[["self"]],["fieldhandle"]]],[11,"clone","","",36,[[["self"]],["structfieldinformation"]]],[11,"clone","","",23,[[["self"]],["structdefinstantiation"]]],[11,"clone","","",24,[[["self"]],["functioninstantiation"]]],[11,"clone","","",25,[[["self"]],["fieldinstantiation"]]],[11,"clone","","",26,[[["self"]],["structdefinition"]]],[11,"clone","","",27,[[["self"]],["fielddefinition"]]],[11,"clone","","",28,[[["self"]],["functiondefinition"]]],[11,"clone","","",29,[[["self"]],["typesignature"]]],[11,"clone","","",30,[[["self"]],["functionsignature"]]],[11,"clone","","",31,[[["self"]],["signature"]]],[11,"clone","","",37,[[["self"]],["kind"]]],[11,"clone","","",38,[[["self"]],["signaturetoken"]]],[11,"clone","","",32,[[["self"]],["constant"]]],[11,"clone","","",33,[[["self"]],["codeunit"]]],[11,"clone","","",39,[[["self"]],["bytecode"]]],[11,"clone","","",40,[[["self"]],["compiledscript"]]],[11,"clone","","",34,[[["self"]],["compiledscriptmut"]]],[11,"clone","","",41,[[["self"]],["compiledmodule"]]],[11,"clone","","",35,[[["self"]],["compiledmodulemut"]]],[11,"clone","vm::file_format_common","",42,[[["self"]],["tabletype"]]],[11,"clone","","",43,[[["self"]],["serializedtype"]]],[11,"clone","","",44,[[["self"]],["serializednominalresourceflag"]]],[11,"clone","","",45,[[["self"]],["serializedkind"]]],[11,"clone","","",46,[[["self"]],["serializednativestructflag"]]],[11,"clone","","",47,[[["self"]],["opcodes"]]],[11,"clone","vm::proptest_types","",51,[[["self"]],["compiledmodulestrategygen"]]],[11,"clone","vm::views","",56,[[["self"]],["self"]]],[11,"clone","","",60,[[["self"]],["self"]]],[11,"clone","vm","",0,[[["self"]],["indexkind"]]],[11,"clone","","",1,[[["self"]],["signaturetokenkind"]]],[11,"default","vm::errors","",5,[[],["location"]]],[11,"default","vm::file_format","",6,[[],["modulehandleindex"]]],[11,"default","","",7,[[],["structhandleindex"]]],[11,"default","","",8,[[],["functionhandleindex"]]],[11,"default","","",9,[[],["fieldhandleindex"]]],[11,"default","","",10,[[],["structdefinstantiationindex"]]],[11,"default","","",11,[[],["functioninstantiationindex"]]],[11,"default","","",12,[[],["fieldinstantiationindex"]]],[11,"default","","",13,[[],["identifierindex"]]],[11,"default","","",14,[[],["addressidentifierindex"]]],[11,"default","","",15,[[],["constantpoolindex"]]],[11,"default","","",16,[[],["signatureindex"]]],[11,"default","","",17,[[],["structdefinitionindex"]]],[11,"default","","",18,[[],["functiondefinitionindex"]]],[11,"default","","",28,[[],["functiondefinition"]]],[11,"default","","",31,[[],["signature"]]],[11,"default","","",33,[[],["codeunit"]]],[11,"default","","",34,[[],["compiledscriptmut"]]],[11,"default","","",35,[[],["compiledmodulemut"]]],[11,"default","vm::file_format_common","",49,[[],["binarydata"]]],[11,"cmp","vm::file_format","",6,[[["modulehandleindex"],["self"]],["ordering"]]],[11,"cmp","","",7,[[["structhandleindex"],["self"]],["ordering"]]],[11,"cmp","","",8,[[["self"],["functionhandleindex"]],["ordering"]]],[11,"cmp","","",9,[[["fieldhandleindex"],["self"]],["ordering"]]],[11,"cmp","","",10,[[["self"],["structdefinstantiationindex"]],["ordering"]]],[11,"cmp","","",11,[[["functioninstantiationindex"],["self"]],["ordering"]]],[11,"cmp","","",12,[[["self"],["fieldinstantiationindex"]],["ordering"]]],[11,"cmp","","",13,[[["self"],["identifierindex"]],["ordering"]]],[11,"cmp","","",14,[[["addressidentifierindex"],["self"]],["ordering"]]],[11,"cmp","","",15,[[["self"],["constantpoolindex"]],["ordering"]]],[11,"cmp","","",16,[[["signatureindex"],["self"]],["ordering"]]],[11,"cmp","","",17,[[["structdefinitionindex"],["self"]],["ordering"]]],[11,"cmp","","",18,[[["self"],["functiondefinitionindex"]],["ordering"]]],[11,"cmp","","",19,[[["modulehandle"],["self"]],["ordering"]]],[11,"cmp","","",20,[[["structhandle"],["self"]],["ordering"]]],[11,"cmp","","",37,[[["self"],["kind"]],["ordering"]]],[11,"cmp","","",38,[[["signaturetoken"],["self"]],["ordering"]]],[11,"cmp","vm","",0,[[["self"],["indexkind"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["signaturetokenkind"]],["ordering"]]],[11,"eq","vm::file_format","",6,[[["modulehandleindex"],["self"]],["bool"]]],[11,"ne","","",6,[[["modulehandleindex"],["self"]],["bool"]]],[11,"eq","","",7,[[["structhandleindex"],["self"]],["bool"]]],[11,"ne","","",7,[[["structhandleindex"],["self"]],["bool"]]],[11,"eq","","",8,[[["self"],["functionhandleindex"]],["bool"]]],[11,"ne","","",8,[[["self"],["functionhandleindex"]],["bool"]]],[11,"eq","","",9,[[["fieldhandleindex"],["self"]],["bool"]]],[11,"ne","","",9,[[["fieldhandleindex"],["self"]],["bool"]]],[11,"eq","","",10,[[["self"],["structdefinstantiationindex"]],["bool"]]],[11,"ne","","",10,[[["self"],["structdefinstantiationindex"]],["bool"]]],[11,"eq","","",11,[[["functioninstantiationindex"],["self"]],["bool"]]],[11,"ne","","",11,[[["functioninstantiationindex"],["self"]],["bool"]]],[11,"eq","","",12,[[["self"],["fieldinstantiationindex"]],["bool"]]],[11,"ne","","",12,[[["self"],["fieldinstantiationindex"]],["bool"]]],[11,"eq","","",13,[[["self"],["identifierindex"]],["bool"]]],[11,"ne","","",13,[[["self"],["identifierindex"]],["bool"]]],[11,"eq","","",14,[[["addressidentifierindex"],["self"]],["bool"]]],[11,"ne","","",14,[[["addressidentifierindex"],["self"]],["bool"]]],[11,"eq","","",15,[[["self"],["constantpoolindex"]],["bool"]]],[11,"ne","","",15,[[["self"],["constantpoolindex"]],["bool"]]],[11,"eq","","",16,[[["signatureindex"],["self"]],["bool"]]],[11,"ne","","",16,[[["signatureindex"],["self"]],["bool"]]],[11,"eq","","",17,[[["structdefinitionindex"],["self"]],["bool"]]],[11,"ne","","",17,[[["structdefinitionindex"],["self"]],["bool"]]],[11,"eq","","",18,[[["self"],["functiondefinitionindex"]],["bool"]]],[11,"ne","","",18,[[["self"],["functiondefinitionindex"]],["bool"]]],[11,"eq","","",19,[[["modulehandle"],["self"]],["bool"]]],[11,"ne","","",19,[[["modulehandle"],["self"]],["bool"]]],[11,"eq","","",20,[[["structhandle"],["self"]],["bool"]]],[11,"ne","","",20,[[["structhandle"],["self"]],["bool"]]],[11,"eq","","",21,[[["self"],["functionhandle"]],["bool"]]],[11,"ne","","",21,[[["self"],["functionhandle"]],["bool"]]],[11,"eq","","",22,[[["self"],["fieldhandle"]],["bool"]]],[11,"ne","","",22,[[["self"],["fieldhandle"]],["bool"]]],[11,"eq","","",36,[[["self"],["structfieldinformation"]],["bool"]]],[11,"ne","","",36,[[["self"],["structfieldinformation"]],["bool"]]],[11,"eq","","",23,[[["structdefinstantiation"],["self"]],["bool"]]],[11,"ne","","",23,[[["structdefinstantiation"],["self"]],["bool"]]],[11,"eq","","",24,[[["functioninstantiation"],["self"]],["bool"]]],[11,"ne","","",24,[[["functioninstantiation"],["self"]],["bool"]]],[11,"eq","","",25,[[["fieldinstantiation"],["self"]],["bool"]]],[11,"ne","","",25,[[["fieldinstantiation"],["self"]],["bool"]]],[11,"eq","","",26,[[["structdefinition"],["self"]],["bool"]]],[11,"ne","","",26,[[["structdefinition"],["self"]],["bool"]]],[11,"eq","","",27,[[["fielddefinition"],["self"]],["bool"]]],[11,"ne","","",27,[[["fielddefinition"],["self"]],["bool"]]],[11,"eq","","",28,[[["self"],["functiondefinition"]],["bool"]]],[11,"ne","","",28,[[["self"],["functiondefinition"]],["bool"]]],[11,"eq","","",29,[[["typesignature"],["self"]],["bool"]]],[11,"ne","","",29,[[["typesignature"],["self"]],["bool"]]],[11,"eq","","",30,[[["self"],["functionsignature"]],["bool"]]],[11,"ne","","",30,[[["self"],["functionsignature"]],["bool"]]],[11,"eq","","",31,[[["signature"],["self"]],["bool"]]],[11,"ne","","",31,[[["signature"],["self"]],["bool"]]],[11,"eq","","",37,[[["self"],["kind"]],["bool"]]],[11,"eq","","",38,[[["signaturetoken"],["self"]],["bool"]]],[11,"ne","","",38,[[["signaturetoken"],["self"]],["bool"]]],[11,"eq","","",32,[[["constant"],["self"]],["bool"]]],[11,"ne","","",32,[[["constant"],["self"]],["bool"]]],[11,"eq","","",33,[[["self"],["codeunit"]],["bool"]]],[11,"ne","","",33,[[["self"],["codeunit"]],["bool"]]],[11,"eq","","",39,[[["bytecode"],["self"]],["bool"]]],[11,"ne","","",39,[[["bytecode"],["self"]],["bool"]]],[11,"eq","","",40,[[["self"],["compiledscript"]],["bool"]]],[11,"ne","","",40,[[["self"],["compiledscript"]],["bool"]]],[11,"eq","","",34,[[["compiledscriptmut"],["self"]],["bool"]]],[11,"ne","","",34,[[["compiledscriptmut"],["self"]],["bool"]]],[11,"eq","","",41,[[["compiledmodule"],["self"]],["bool"]]],[11,"ne","","",41,[[["compiledmodule"],["self"]],["bool"]]],[11,"eq","","",35,[[["self"],["compiledmodulemut"]],["bool"]]],[11,"ne","","",35,[[["self"],["compiledmodulemut"]],["bool"]]],[11,"eq","vm::file_format_common","",42,[[["self"],["tabletype"]],["bool"]]],[11,"eq","vm","",0,[[["self"],["indexkind"]],["bool"]]],[11,"eq","","",1,[[["self"],["signaturetokenkind"]],["bool"]]],[11,"partial_cmp","vm::file_format","",6,[[["modulehandleindex"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",6,[[["modulehandleindex"],["self"]],["bool"]]],[11,"le","","",6,[[["modulehandleindex"],["self"]],["bool"]]],[11,"gt","","",6,[[["modulehandleindex"],["self"]],["bool"]]],[11,"ge","","",6,[[["modulehandleindex"],["self"]],["bool"]]],[11,"partial_cmp","","",7,[[["structhandleindex"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",7,[[["structhandleindex"],["self"]],["bool"]]],[11,"le","","",7,[[["structhandleindex"],["self"]],["bool"]]],[11,"gt","","",7,[[["structhandleindex"],["self"]],["bool"]]],[11,"ge","","",7,[[["structhandleindex"],["self"]],["bool"]]],[11,"partial_cmp","","",8,[[["self"],["functionhandleindex"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",8,[[["self"],["functionhandleindex"]],["bool"]]],[11,"le","","",8,[[["self"],["functionhandleindex"]],["bool"]]],[11,"gt","","",8,[[["self"],["functionhandleindex"]],["bool"]]],[11,"ge","","",8,[[["self"],["functionhandleindex"]],["bool"]]],[11,"partial_cmp","","",9,[[["fieldhandleindex"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",9,[[["fieldhandleindex"],["self"]],["bool"]]],[11,"le","","",9,[[["fieldhandleindex"],["self"]],["bool"]]],[11,"gt","","",9,[[["fieldhandleindex"],["self"]],["bool"]]],[11,"ge","","",9,[[["fieldhandleindex"],["self"]],["bool"]]],[11,"partial_cmp","","",10,[[["self"],["structdefinstantiationindex"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",10,[[["self"],["structdefinstantiationindex"]],["bool"]]],[11,"le","","",10,[[["self"],["structdefinstantiationindex"]],["bool"]]],[11,"gt","","",10,[[["self"],["structdefinstantiationindex"]],["bool"]]],[11,"ge","","",10,[[["self"],["structdefinstantiationindex"]],["bool"]]],[11,"partial_cmp","","",11,[[["functioninstantiationindex"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",11,[[["functioninstantiationindex"],["self"]],["bool"]]],[11,"le","","",11,[[["functioninstantiationindex"],["self"]],["bool"]]],[11,"gt","","",11,[[["functioninstantiationindex"],["self"]],["bool"]]],[11,"ge","","",11,[[["functioninstantiationindex"],["self"]],["bool"]]],[11,"partial_cmp","","",12,[[["self"],["fieldinstantiationindex"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",12,[[["self"],["fieldinstantiationindex"]],["bool"]]],[11,"le","","",12,[[["self"],["fieldinstantiationindex"]],["bool"]]],[11,"gt","","",12,[[["self"],["fieldinstantiationindex"]],["bool"]]],[11,"ge","","",12,[[["self"],["fieldinstantiationindex"]],["bool"]]],[11,"partial_cmp","","",13,[[["self"],["identifierindex"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",13,[[["self"],["identifierindex"]],["bool"]]],[11,"le","","",13,[[["self"],["identifierindex"]],["bool"]]],[11,"gt","","",13,[[["self"],["identifierindex"]],["bool"]]],[11,"ge","","",13,[[["self"],["identifierindex"]],["bool"]]],[11,"partial_cmp","","",14,[[["addressidentifierindex"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",14,[[["addressidentifierindex"],["self"]],["bool"]]],[11,"le","","",14,[[["addressidentifierindex"],["self"]],["bool"]]],[11,"gt","","",14,[[["addressidentifierindex"],["self"]],["bool"]]],[11,"ge","","",14,[[["addressidentifierindex"],["self"]],["bool"]]],[11,"partial_cmp","","",15,[[["self"],["constantpoolindex"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",15,[[["self"],["constantpoolindex"]],["bool"]]],[11,"le","","",15,[[["self"],["constantpoolindex"]],["bool"]]],[11,"gt","","",15,[[["self"],["constantpoolindex"]],["bool"]]],[11,"ge","","",15,[[["self"],["constantpoolindex"]],["bool"]]],[11,"partial_cmp","","",16,[[["signatureindex"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",16,[[["signatureindex"],["self"]],["bool"]]],[11,"le","","",16,[[["signatureindex"],["self"]],["bool"]]],[11,"gt","","",16,[[["signatureindex"],["self"]],["bool"]]],[11,"ge","","",16,[[["signatureindex"],["self"]],["bool"]]],[11,"partial_cmp","","",17,[[["structdefinitionindex"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",17,[[["structdefinitionindex"],["self"]],["bool"]]],[11,"le","","",17,[[["structdefinitionindex"],["self"]],["bool"]]],[11,"gt","","",17,[[["structdefinitionindex"],["self"]],["bool"]]],[11,"ge","","",17,[[["structdefinitionindex"],["self"]],["bool"]]],[11,"partial_cmp","","",18,[[["self"],["functiondefinitionindex"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",18,[[["self"],["functiondefinitionindex"]],["bool"]]],[11,"le","","",18,[[["self"],["functiondefinitionindex"]],["bool"]]],[11,"gt","","",18,[[["self"],["functiondefinitionindex"]],["bool"]]],[11,"ge","","",18,[[["self"],["functiondefinitionindex"]],["bool"]]],[11,"partial_cmp","","",19,[[["modulehandle"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",19,[[["modulehandle"],["self"]],["bool"]]],[11,"le","","",19,[[["modulehandle"],["self"]],["bool"]]],[11,"gt","","",19,[[["modulehandle"],["self"]],["bool"]]],[11,"ge","","",19,[[["modulehandle"],["self"]],["bool"]]],[11,"partial_cmp","","",20,[[["structhandle"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",20,[[["structhandle"],["self"]],["bool"]]],[11,"le","","",20,[[["structhandle"],["self"]],["bool"]]],[11,"gt","","",20,[[["structhandle"],["self"]],["bool"]]],[11,"ge","","",20,[[["structhandle"],["self"]],["bool"]]],[11,"partial_cmp","","",37,[[["self"],["kind"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",38,[[["signaturetoken"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",38,[[["signaturetoken"],["self"]],["bool"]]],[11,"le","","",38,[[["signaturetoken"],["self"]],["bool"]]],[11,"gt","","",38,[[["signaturetoken"],["self"]],["bool"]]],[11,"ge","","",38,[[["signaturetoken"],["self"]],["bool"]]],[11,"partial_cmp","vm","",0,[[["self"],["indexkind"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",1,[[["self"],["signaturetokenkind"]],[["option",["ordering"]],["ordering"]]]],[11,"fmt","vm::errors","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","vm::file_format","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","vm::file_format_common","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","vm::proptest_types","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","vm","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","vm::file_format","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","vm","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"hash","vm::file_format","",6,[[["self"],["__h"]]]],[11,"hash","","",7,[[["self"],["__h"]]]],[11,"hash","","",8,[[["self"],["__h"]]]],[11,"hash","","",9,[[["self"],["__h"]]]],[11,"hash","","",10,[[["self"],["__h"]]]],[11,"hash","","",11,[[["self"],["__h"]]]],[11,"hash","","",12,[[["self"],["__h"]]]],[11,"hash","","",13,[[["self"],["__h"]]]],[11,"hash","","",14,[[["self"],["__h"]]]],[11,"hash","","",15,[[["self"],["__h"]]]],[11,"hash","","",16,[[["self"],["__h"]]]],[11,"hash","","",17,[[["self"],["__h"]]]],[11,"hash","","",18,[[["self"],["__h"]]]],[11,"hash","","",19,[[["self"],["__h"]]]],[11,"hash","","",20,[[["self"],["__h"]]]],[11,"hash","","",21,[[["self"],["__h"]]]],[11,"hash","","",22,[[["self"],["__h"]]]],[11,"hash","","",23,[[["self"],["__h"]]]],[11,"hash","","",24,[[["self"],["__h"]]]],[11,"hash","","",25,[[["self"],["__h"]]]],[11,"hash","","",29,[[["self"],["__h"]]]],[11,"hash","","",30,[[["self"],["__h"]]]],[11,"hash","","",31,[[["self"],["__h"]]]],[11,"hash","","",37,[[["self"],["__h"]]]],[11,"hash","","",38,[[["self"],["__h"]]]],[11,"hash","","",32,[[["self"],["__h"]]]],[11,"hash","","",39,[[["self"],["__h"]]]],[11,"hash","vm::file_format_common","",42,[[["self"],["__h"]]]],[11,"hash","vm","",0,[[["self"],["__h"]]]],[11,"arbitrary_with","vm::file_format","",6,[[]]],[11,"arbitrary_with","","",7,[[]]],[11,"arbitrary_with","","",8,[[]]],[11,"arbitrary_with","","",9,[[]]],[11,"arbitrary_with","","",10,[[]]],[11,"arbitrary_with","","",11,[[]]],[11,"arbitrary_with","","",12,[[]]],[11,"arbitrary_with","","",13,[[]]],[11,"arbitrary_with","","",14,[[]]],[11,"arbitrary_with","","",15,[[]]],[11,"arbitrary_with","","",16,[[]]],[11,"arbitrary_with","","",17,[[]]],[11,"arbitrary_with","","",18,[[]]],[11,"arbitrary_with","","",19,[[]]],[11,"arbitrary_with","","",20,[[]]],[11,"arbitrary_with","","",21,[[]]],[11,"arbitrary_with","","",22,[[]]],[11,"arbitrary_with","","",36,[[]]],[11,"arbitrary_with","","",23,[[]]],[11,"arbitrary_with","","",24,[[]]],[11,"arbitrary_with","","",25,[[]]],[11,"arbitrary_with","","",26,[[]]],[11,"arbitrary_with","","",27,[[]]],[11,"arbitrary_with","","",28,[[]]],[11,"arbitrary_with","","",29,[[]]],[11,"arbitrary_with","","",30,[[]]],[11,"arbitrary_with","","",31,[[]]],[11,"arbitrary_with","","",37,[[]]],[11,"arbitrary_with","","",38,[[]]],[11,"arbitrary_with","","",33,[[]]],[11,"arbitrary_with","","",39,[[]]],[11,"arbitrary_with","","",34,[[]]],[11,"arbitrary_with","","",35,[[]]],[11,"deserialize","","Deserializes a &[u8] slice into a `CompiledScript` instance.",40,[[],["binaryloaderresult"]]],[11,"deserialize","","Deserialize a &[u8] slice into a `CompiledModule` instance.",41,[[],["binaryloaderresult"]]],[11,"deserialize_no_check_bounds","","",35,[[],["binaryloaderresult"]]]],"p":[[4,"IndexKind"],[4,"SignatureTokenKind"],[8,"ModuleAccess"],[8,"ScriptAccess"],[3,"BoundsChecker"],[3,"Location"],[3,"ModuleHandleIndex"],[3,"StructHandleIndex"],[3,"FunctionHandleIndex"],[3,"FieldHandleIndex"],[3,"StructDefInstantiationIndex"],[3,"FunctionInstantiationIndex"],[3,"FieldInstantiationIndex"],[3,"IdentifierIndex"],[3,"AddressIdentifierIndex"],[3,"ConstantPoolIndex"],[3,"SignatureIndex"],[3,"StructDefinitionIndex"],[3,"FunctionDefinitionIndex"],[3,"ModuleHandle"],[3,"StructHandle"],[3,"FunctionHandle"],[3,"FieldHandle"],[3,"StructDefInstantiation"],[3,"FunctionInstantiation"],[3,"FieldInstantiation"],[3,"StructDefinition"],[3,"FieldDefinition"],[3,"FunctionDefinition"],[3,"TypeSignature"],[3,"FunctionSignature"],[3,"Signature"],[3,"Constant"],[3,"CodeUnit"],[3,"CompiledScriptMut"],[3,"CompiledModuleMut"],[4,"StructFieldInformation"],[4,"Kind"],[4,"SignatureToken"],[4,"Bytecode"],[3,"CompiledScript"],[3,"CompiledModule"],[4,"TableType"],[4,"SerializedType"],[4,"SerializedNominalResourceFlag"],[4,"SerializedKind"],[4,"SerializedNativeStructFlag"],[4,"Opcodes"],[4,"BinaryConstants"],[3,"BinaryData"],[8,"ModuleIndex"],[3,"CompiledModuleStrategyGen"],[8,"ViewInternals"],[3,"ModuleView"],[3,"ModuleHandleView"],[3,"StructHandleView"],[3,"FunctionHandleView"],[3,"StructDefinitionView"],[3,"FieldDefinitionView"],[3,"LocalsSignatureView"],[3,"FunctionDefinitionView"],[3,"StructInstantiationView"],[3,"FieldHandleView"],[3,"FunctionInstantiationView"],[3,"FieldInstantiationView"],[3,"TypeSignatureView"],[3,"SignatureView"],[3,"SignatureTokenView"],[3,"SignatureTokenPreorderTraversalIter"],[3,"ScriptConversionInfo"]]};
searchIndex["vm_genesis"] = {"doc":"","i":[[5,"encode_genesis_transaction_with_validator","vm_genesis","",null,[[["option",["vmpublishingoption"]],["vmpublishingoption"],["ed25519publickey"]],["transaction"]]],[5,"encode_genesis_change_set","","",null,[[["ed25519publickey"],["vmpublishingoption"]]]],[5,"encode_genesis_transaction","","",null,[[["vmpublishingoption"],["ed25519publickey"]],["transaction"]]],[5,"generate_genesis_change_set_for_testing","","Generate an artificial genesis `ChangeSet` for testing",null,[[["stdliboptions"]],["changeset"]]],[5,"generate_genesis_type_mapping","","Generate an artificial genesis `ChangeSet` for testing",null,[[],[["fatstructtype"],["btreemap",["vec","fatstructtype"]],["vec",["u8"]]]]],[5,"validator_registrations","","",null,[[],[["vec",["validatorregistration"]],["validatorregistration"]]]],[6,"ValidatorRegistration","","",null,null],[7,"GENESIS_KEYPAIR","","",null,null]],"p":[]};
searchIndex["vm_validator"] = {"doc":"","i":[[0,"mocks","vm_validator","",null,null],[0,"mock_vm_validator","vm_validator::mocks","",null,null],[3,"MockVMValidator","vm_validator::mocks::mock_vm_validator","",null,null],[0,"vm_validator","vm_validator","",null,null],[3,"VMValidator","vm_validator::vm_validator","",null,null],[5,"get_account_sequence_number","","returns account's sequence number from storage",null,[[["dbreader"],["accountaddress"]],[["result",["u64"]],["u64"]]]],[8,"TransactionValidation","","",null,null],[16,"ValidationInstance","","",0,null],[10,"validate_transaction","","Validate a txn from client",0,[[["self"],["signedtransaction"]],[["vmvalidatorresult"],["result",["vmvalidatorresult"]]]]],[10,"restart","","Restart the transaction validation instance",0,[[["self"],["onchainconfigpayload"]],["result"]]],[11,"new","","",1,[[["dbreader"],["arc",["dbreader"]]],["self"]]],[11,"from","vm_validator::mocks::mock_vm_validator","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"into_request","","",2,[[],["request"]]],[11,"from","vm_validator::vm_validator","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"into_request","","",1,[[],["request"]]],[11,"validate_transaction","vm_validator::mocks::mock_vm_validator","",2,[[["self"],["signedtransaction"]],[["vmvalidatorresult"],["result",["vmvalidatorresult"]]]]],[11,"restart","","",2,[[["self"],["onchainconfigpayload"]],["result"]]],[11,"validate_transaction","vm_validator::vm_validator","",1,[[["self"],["signedtransaction"]],[["vmvalidatorresult"],["result",["vmvalidatorresult"]]]]],[11,"restart","","",1,[[["self"],["onchainconfigpayload"]],["result"]]],[11,"clone","vm_validator::mocks::mock_vm_validator","",2,[[["self"]],["mockvmvalidator"]]],[11,"clone","vm_validator::vm_validator","",1,[[["self"]],["vmvalidator"]]],[11,"validate_transaction","vm_validator::mocks::mock_vm_validator","",2,[[["stateview"],["self"],["signedtransaction"]],["vmvalidatorresult"]]]],"p":[[8,"TransactionValidation"],[3,"VMValidator"],[3,"MockVMValidator"]]};
searchIndex["workspace_builder"] = {"doc":"","i":[[5,"workspace_root","workspace_builder","",null,[[],["pathbuf"]]],[5,"get_bin","","",null,[[["str"],["asref",["str"]]],["pathbuf"]]]],"p":[]};
searchIndex["x_core"] = {"doc":"","i":[[3,"XCoreContext","x_core","Core context shared across all of x.",null,null],[11,"new","","Creates a new XCoreContext.",0,[[["path"]],["self"]]],[11,"project_root","","Returns the project root for this workspace.",0,[[["self"]],["path"]]],[11,"package_graph","","Returns the package graph for this workspace.",0,[[["self"]],[["packagegraph"],["result",["packagegraph","error"]],["error"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[3,"XCoreContext"]]};
searchIndex["x_lint"] = {"doc":"Lint engine.","i":[[3,"LintEngineConfig","x_lint","Configuration for the lint engine.",null,null],[3,"LintEngine","","Executor for linters.",null,null],[3,"LintResults","","",null,null],[12,"skipped","","",0,null],[12,"messages","","",0,null],[3,"LintFormatter","","A lint formatter.",null,null],[3,"LintMessage","","A message raised by a lint.",null,null],[3,"LintSource","","Message source for lints.",null,null],[4,"SystemError","","A system error that happened while running a lint.",null,null],[13,"Exec","","",1,null],[12,"cmd","x_lint::SystemError","",2,null],[12,"status","","",2,null],[13,"Guppy","x_lint","",1,null],[13,"Io","","",1,null],[12,"context","x_lint::SystemError","",3,null],[12,"err","","",3,null],[13,"Serde","x_lint","",1,null],[12,"context","x_lint::SystemError","",4,null],[12,"err","","",4,null],[4,"RunStatus","x_lint","The run status of a lint.",null,null],[13,"Executed","","This lint run was successful, with messages possibly…",5,null],[13,"Skipped","","This lint was skipped.",5,null],[4,"SkipReason","","The reason for why this lint was skipped.",null,null],[13,"NonUtf8","","This file was not valid UTF-8.",6,null],[13,"UnsupportedExtension","","This extension was unsupported.",6,null],[13,"UnsupportedFile","","The given file was unsupported by this linter.",6,null],[13,"UnsupportedPackage","","The given package was unsupported by this linter.",6,null],[4,"LintLevel","","",null,null],[13,"Error","","",7,null],[13,"Warning","","",7,null],[4,"LintKind","","",null,null],[13,"Project","","",8,null],[13,"Package","","",8,null],[12,"name","x_lint::LintKind","",9,null],[12,"workspace_path","","",9,null],[13,"File","x_lint","",8,null],[13,"Content","","",8,null],[0,"content","","",null,null],[3,"ContentContext","x_lint::content","",null,null],[8,"ContentLinter","","Represents a linter that checks file contents.",null,null],[11,"pre_run","","Pre-run step -- avoids loading the contents if possible.",10,[[["filecontext"],["self"]],[["result",["runstatus"]],["runstatus"]]]],[10,"run","","Executes the lint against the given content context.",10,[[["lintformatter"],["self"],["contentcontext"]],[["result",["runstatus"]],["runstatus"]]]],[18,"BINARY_FILE_CUTOFF","","The number of bytes that will be searched for null bytes…",11,null],[11,"file_ctx","","Returns the file context.",11,[[["self"]],["filecontext"]]],[11,"content","","Returns the content, or `None` if this is a non-UTF-8 file.",11,[[["self"]],[["str"],["option",["str"]]]]],[11,"content_bytes","","Returns the raw bytes for the content.",11,[[["self"]]]],[11,"is_binary","","Returns true if this is a binary file.",11,[[["self"]],["bool"]]],[11,"io","x_lint","",1,[[["error"]],["self"]]],[11,"de","","",1,[[],["self"]]],[11,"ser","","",1,[[],["self"]]],[0,"file","","",null,null],[3,"FileContext","x_lint::file","Contains information for a single file.",null,null],[11,"new","","",12,[[["projectcontext"],["path"]],["self"]]],[11,"project_ctx","","Returns the project context.",12,[[["self"]],["projectcontext"]]],[11,"file_path","","Returns the path of this file, relative to the root of the…",12,[[["self"]],["path"]]],[11,"extension","","Returns the extension of the file. Returns `None` if…",12,[[["self"]],[["option",["str"]],["str"]]]],[0,"package","x_lint","",null,null],[3,"PackageContext","x_lint::package","Lint context for an individual package.",null,null],[8,"PackageLinter","","Represents a linter that runs once per package.",null,null],[10,"run","","",13,[[["packagecontext"],["self"],["lintformatter"]],[["result",["runstatus"]],["runstatus"]]]],[11,"new","","",14,[[["packagegraph"],["projectcontext"],["packagemetadata"],["path"]],["result"]]],[11,"project_ctx","","Returns the project context.",14,[[["self"]],["projectcontext"]]],[11,"package_graph","","Returns the package graph.",14,[[["self"]],["packagegraph"]]],[11,"workspace_path","","Returns the relative path for this package in the workspace.",14,[[["self"]],["path"]]],[11,"metadata","","Returns the metadata for this package.",14,[[["self"]],["packagemetadata"]]],[11,"is_default_member","","Returns true if this is a default member of this workspace.",14,[[["self"]],["bool"]]],[0,"project","x_lint","",null,null],[3,"ProjectContext","x_lint::project","Overall linter context for a project.",null,null],[8,"ProjectLinter","","Represents a linter that checks some property for the…",null,null],[10,"run","","Executes the lint against the given project context.",15,[[["lintformatter"],["self"],["projectcontext"]],[["result",["runstatus"]],["runstatus"]]]],[11,"new","","",16,[[["xcorecontext"]],["self"]]],[11,"project_root","","Returns the project root.",16,[[["self"]],["path"]]],[11,"package_graph","","Returns the package graph, computing it for the first time…",16,[[["self"]],[["packagegraph"],["result",["packagegraph"]]]]],[11,"full_path","","Returns the absolute path from the project root.",16,[[["self"]],["pathbuf"]]],[11,"default_workspace_members","","Returns the default workspace members as a list of paths.",16,[[["self"]],[["hashset"],["result",["hashset"]]]]],[11,"new","x_lint","",17,[[["xcorecontext"]],["self"]]],[11,"with_project_linters","","",17,[[["self"]],["self"]]],[11,"with_package_linters","","",17,[[["self"]],["self"]]],[11,"with_content_linters","","",17,[[["self"]],["self"]]],[11,"fail_fast","","",17,[[["self"],["bool"]],["self"]]],[11,"build","","",17,[[["self"]],["lintengine"]]],[11,"new","","",18,[[["lintengineconfig"]],["self"]]],[11,"run","","",18,[[["self"]],[["result",["lintresults"]],["lintresults"]]]],[0,"prelude","","",null,null],[4,"SystemError","x_lint::prelude","A system error that happened while running a lint.",null,null],[13,"Exec","","",1,null],[12,"cmd","x_lint::prelude::SystemError","",2,null],[12,"status","","",2,null],[13,"Guppy","x_lint::prelude","",1,null],[13,"Io","","",1,null],[12,"context","x_lint::prelude::SystemError","",3,null],[12,"err","","",3,null],[13,"Serde","x_lint::prelude","",1,null],[12,"context","x_lint::prelude::SystemError","",4,null],[12,"err","","",4,null],[6,"Result","x_lint::prelude","Type alias for the return type for `run` methods.",null,null],[6,"Result","x_lint","Type alias for the return type for `run` methods.",null,null],[8,"Linter","","Represents a linter.",null,null],[10,"name","","Returns the name of the linter.",19,[[["self"]],["str"]]],[11,"new","","",20,[[["lintsource"],["vec"]],["self"]]],[11,"write","","Writes a new lint message to this formatter.",20,[[["self"],["lintlevel"]]]],[11,"write_kind","","Writes a new lint message to this formatter with a custom…",20,[[["lintkind"],["lintlevel"],["self"]]]],[11,"new","","",21,[[["lintlevel"]],["self"]]],[11,"level","","",21,[[["self"]],["lintlevel"]]],[11,"message","","",21,[[["self"]],["str"]]],[11,"name","","",22,[[["self"]],["str"]]],[11,"kind","","",22,[[["self"]],["lintkind"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"equivalent","","",5,[[["k"],["self"]],["bool"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"equivalent","","",6,[[["k"],["self"]],["bool"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"equivalent","","",7,[[["k"],["self"]],["bool"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"equivalent","","",8,[[["k"],["self"]],["bool"]]],[11,"from","x_lint::content","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","x_lint::file","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","x_lint::package","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","x_lint::project","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","x_lint","",1,[[["error"]],["self"]]],[11,"clone","x_lint::file","",12,[[["self"]],["filecontext"]]],[11,"clone","x_lint::package","",14,[[["self"]],["packagecontext"]]],[11,"clone","x_lint","",17,[[["self"]],["lintengineconfig"]]],[11,"clone","","",5,[[["self"]],["runstatus"]]],[11,"clone","","",6,[[["self"]],["skipreason"]]],[11,"clone","","",7,[[["self"]],["lintlevel"]]],[11,"clone","","",22,[[["self"]],["lintsource"]]],[11,"clone","","",8,[[["self"]],["lintkind"]]],[11,"eq","","",5,[[["runstatus"],["self"]],["bool"]]],[11,"ne","","",5,[[["runstatus"],["self"]],["bool"]]],[11,"eq","","",6,[[["skipreason"],["self"]],["bool"]]],[11,"ne","","",6,[[["skipreason"],["self"]],["bool"]]],[11,"eq","","",7,[[["lintlevel"],["self"]],["bool"]]],[11,"eq","","",8,[[["lintkind"],["self"]],["bool"]]],[11,"ne","","",8,[[["lintkind"],["self"]],["bool"]]],[11,"fmt","x_lint::content","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","x_lint","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","x_lint::file","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","x_lint::package","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","x_lint::project","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","x_lint","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"source","","",1,[[["self"]],[["error"],["option",["error"]]]]]],"p":[[3,"LintResults"],[4,"SystemError"],[13,"Exec"],[13,"Io"],[13,"Serde"],[4,"RunStatus"],[4,"SkipReason"],[4,"LintLevel"],[4,"LintKind"],[13,"Package"],[8,"ContentLinter"],[3,"ContentContext"],[3,"FileContext"],[8,"PackageLinter"],[3,"PackageContext"],[8,"ProjectLinter"],[3,"ProjectContext"],[3,"LintEngineConfig"],[3,"LintEngine"],[8,"Linter"],[3,"LintFormatter"],[3,"LintMessage"],[3,"LintSource"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);