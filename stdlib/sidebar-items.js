initSidebarItems({"constant":[["DEBUG_MODULE_FILE_NAME","The file name of the debug module"],["MOVE_EXTENSION",""],["NO_USE_STAGED",""],["STAGED_EXTENSION","The extension for staged files"],["STAGED_OUTPUT_PATH","The output path under which staged files will be put"],["STAGED_STDLIB_BYTES","The staged library needs to be included in the Rust binary due to Docker deployment issues. This is why we include it here."],["STAGED_STDLIB_NAME","The file name for the staged stdlib"],["STD_LIB_DIR",""],["TRANSACTION_SCRIPTS",""]],"enum":[["StdLibOptions","An enum specifying whether the staged stdlib/scripts should be used or freshly built versions should be used."]],"fn":[["build_stdlib",""],["compile_script",""],["env_stdlib_modules","Returns a reference to the standard library built by move-lang compiler, compiled with the default address."],["filter_move_files",""],["stdlib_files",""],["stdlib_modules","Returns a reference to the standard library. Depending upon the `option` flag passed in either a staged version of the standard library will be returned or a new freshly built stdlib will be used."],["use_staged","A predicate detailing whether the staged versions of scripts and the stdlib should be used or not. The default is that the staged versions of the stdlib and transaction scripts should be used."]],"mod":[["transaction_scripts","Rust representation of a Move transaction script that can be executed on the Libra blockchain. Libra does not allow arbitrary transaction scripts; only scripts whose hashes are present in the on-chain script whitelist. The genesis whitelist is derived from this file, and the `Stdlib` script enum will be modified to reflect changes in the on-chain whitelist as time goes on."]]});